// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: citadel_gcmessages_client.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_citadel_5fgcmessages_5fclient_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_citadel_5fgcmessages_5fclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
#include "gcsdk_gcmessages.pb.h"
#include "citadel_gcmessages_common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_citadel_5fgcmessages_5fclient_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_citadel_5fgcmessages_5fclient_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_citadel_5fgcmessages_5fclient_2eproto;
class CMsgAccountBook;
struct CMsgAccountBookDefaultTypeInternal;
extern CMsgAccountBookDefaultTypeInternal _CMsgAccountBook_default_instance_;
class CMsgAccountBook_Unlock;
struct CMsgAccountBook_UnlockDefaultTypeInternal;
extern CMsgAccountBook_UnlockDefaultTypeInternal _CMsgAccountBook_Unlock_default_instance_;
class CMsgCitadelClientHello;
struct CMsgCitadelClientHelloDefaultTypeInternal;
extern CMsgCitadelClientHelloDefaultTypeInternal _CMsgCitadelClientHello_default_instance_;
class CMsgCitadelProfileCard;
struct CMsgCitadelProfileCardDefaultTypeInternal;
extern CMsgCitadelProfileCardDefaultTypeInternal _CMsgCitadelProfileCard_default_instance_;
class CMsgCitadelProfileCard_Slot;
struct CMsgCitadelProfileCard_SlotDefaultTypeInternal;
extern CMsgCitadelProfileCard_SlotDefaultTypeInternal _CMsgCitadelProfileCard_Slot_default_instance_;
class CMsgCitadelProfileCard_Slot_Hero;
struct CMsgCitadelProfileCard_Slot_HeroDefaultTypeInternal;
extern CMsgCitadelProfileCard_Slot_HeroDefaultTypeInternal _CMsgCitadelProfileCard_Slot_Hero_default_instance_;
class CMsgCitadelProfileCard_Slot_Stat;
struct CMsgCitadelProfileCard_Slot_StatDefaultTypeInternal;
extern CMsgCitadelProfileCard_Slot_StatDefaultTypeInternal _CMsgCitadelProfileCard_Slot_Stat_default_instance_;
class CMsgClientToGCBookUnlock;
struct CMsgClientToGCBookUnlockDefaultTypeInternal;
extern CMsgClientToGCBookUnlockDefaultTypeInternal _CMsgClientToGCBookUnlock_default_instance_;
class CMsgClientToGCBookUnlockResponse;
struct CMsgClientToGCBookUnlockResponseDefaultTypeInternal;
extern CMsgClientToGCBookUnlockResponseDefaultTypeInternal _CMsgClientToGCBookUnlockResponse_default_instance_;
class CMsgClientToGCCommendPlayerFromMatch;
struct CMsgClientToGCCommendPlayerFromMatchDefaultTypeInternal;
extern CMsgClientToGCCommendPlayerFromMatchDefaultTypeInternal _CMsgClientToGCCommendPlayerFromMatch_default_instance_;
class CMsgClientToGCCommendPlayerFromMatchResponse;
struct CMsgClientToGCCommendPlayerFromMatchResponseDefaultTypeInternal;
extern CMsgClientToGCCommendPlayerFromMatchResponseDefaultTypeInternal _CMsgClientToGCCommendPlayerFromMatchResponse_default_instance_;
class CMsgClientToGCDeleteHeroBuild;
struct CMsgClientToGCDeleteHeroBuildDefaultTypeInternal;
extern CMsgClientToGCDeleteHeroBuildDefaultTypeInternal _CMsgClientToGCDeleteHeroBuild_default_instance_;
class CMsgClientToGCDeleteHeroBuildResponse;
struct CMsgClientToGCDeleteHeroBuildResponseDefaultTypeInternal;
extern CMsgClientToGCDeleteHeroBuildResponseDefaultTypeInternal _CMsgClientToGCDeleteHeroBuildResponse_default_instance_;
class CMsgClientToGCDevAction;
struct CMsgClientToGCDevActionDefaultTypeInternal;
extern CMsgClientToGCDevActionDefaultTypeInternal _CMsgClientToGCDevAction_default_instance_;
class CMsgClientToGCDevActionResponse;
struct CMsgClientToGCDevActionResponseDefaultTypeInternal;
extern CMsgClientToGCDevActionResponseDefaultTypeInternal _CMsgClientToGCDevActionResponse_default_instance_;
class CMsgClientToGCDevSetMMBias;
struct CMsgClientToGCDevSetMMBiasDefaultTypeInternal;
extern CMsgClientToGCDevSetMMBiasDefaultTypeInternal _CMsgClientToGCDevSetMMBias_default_instance_;
class CMsgClientToGCFindHeroBuilds;
struct CMsgClientToGCFindHeroBuildsDefaultTypeInternal;
extern CMsgClientToGCFindHeroBuildsDefaultTypeInternal _CMsgClientToGCFindHeroBuilds_default_instance_;
class CMsgClientToGCFindHeroBuildsResponse;
struct CMsgClientToGCFindHeroBuildsResponseDefaultTypeInternal;
extern CMsgClientToGCFindHeroBuildsResponseDefaultTypeInternal _CMsgClientToGCFindHeroBuildsResponse_default_instance_;
class CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult;
struct CMsgClientToGCFindHeroBuildsResponse_HeroBuildResultDefaultTypeInternal;
extern CMsgClientToGCFindHeroBuildsResponse_HeroBuildResultDefaultTypeInternal _CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult_default_instance_;
class CMsgClientToGCGetAccountLeaderboards;
struct CMsgClientToGCGetAccountLeaderboardsDefaultTypeInternal;
extern CMsgClientToGCGetAccountLeaderboardsDefaultTypeInternal _CMsgClientToGCGetAccountLeaderboards_default_instance_;
class CMsgClientToGCGetAccountLeaderboardsResponse;
struct CMsgClientToGCGetAccountLeaderboardsResponseDefaultTypeInternal;
extern CMsgClientToGCGetAccountLeaderboardsResponseDefaultTypeInternal _CMsgClientToGCGetAccountLeaderboardsResponse_default_instance_;
class CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry;
struct CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntryDefaultTypeInternal;
extern CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntryDefaultTypeInternal _CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry_default_instance_;
class CMsgClientToGCGetAccountMatchReports;
struct CMsgClientToGCGetAccountMatchReportsDefaultTypeInternal;
extern CMsgClientToGCGetAccountMatchReportsDefaultTypeInternal _CMsgClientToGCGetAccountMatchReports_default_instance_;
class CMsgClientToGCGetAccountMatchReportsResponse;
struct CMsgClientToGCGetAccountMatchReportsResponseDefaultTypeInternal;
extern CMsgClientToGCGetAccountMatchReportsResponseDefaultTypeInternal _CMsgClientToGCGetAccountMatchReportsResponse_default_instance_;
class CMsgClientToGCGetAccountMatchReportsResponse_Commend;
struct CMsgClientToGCGetAccountMatchReportsResponse_CommendDefaultTypeInternal;
extern CMsgClientToGCGetAccountMatchReportsResponse_CommendDefaultTypeInternal _CMsgClientToGCGetAccountMatchReportsResponse_Commend_default_instance_;
class CMsgClientToGCGetAccountMatchReportsResponse_Report;
struct CMsgClientToGCGetAccountMatchReportsResponse_ReportDefaultTypeInternal;
extern CMsgClientToGCGetAccountMatchReportsResponse_ReportDefaultTypeInternal _CMsgClientToGCGetAccountMatchReportsResponse_Report_default_instance_;
class CMsgClientToGCGetAccountStats;
struct CMsgClientToGCGetAccountStatsDefaultTypeInternal;
extern CMsgClientToGCGetAccountStatsDefaultTypeInternal _CMsgClientToGCGetAccountStats_default_instance_;
class CMsgClientToGCGetAccountStatsResponse;
struct CMsgClientToGCGetAccountStatsResponseDefaultTypeInternal;
extern CMsgClientToGCGetAccountStatsResponseDefaultTypeInternal _CMsgClientToGCGetAccountStatsResponse_default_instance_;
class CMsgClientToGCGetActiveMatches;
struct CMsgClientToGCGetActiveMatchesDefaultTypeInternal;
extern CMsgClientToGCGetActiveMatchesDefaultTypeInternal _CMsgClientToGCGetActiveMatches_default_instance_;
class CMsgClientToGCGetActiveMatchesResponse;
struct CMsgClientToGCGetActiveMatchesResponseDefaultTypeInternal;
extern CMsgClientToGCGetActiveMatchesResponseDefaultTypeInternal _CMsgClientToGCGetActiveMatchesResponse_default_instance_;
class CMsgClientToGCGetBook;
struct CMsgClientToGCGetBookDefaultTypeInternal;
extern CMsgClientToGCGetBookDefaultTypeInternal _CMsgClientToGCGetBook_default_instance_;
class CMsgClientToGCGetBookResponse;
struct CMsgClientToGCGetBookResponseDefaultTypeInternal;
extern CMsgClientToGCGetBookResponseDefaultTypeInternal _CMsgClientToGCGetBookResponse_default_instance_;
class CMsgClientToGCGetDiscordLink;
struct CMsgClientToGCGetDiscordLinkDefaultTypeInternal;
extern CMsgClientToGCGetDiscordLinkDefaultTypeInternal _CMsgClientToGCGetDiscordLink_default_instance_;
class CMsgClientToGCGetDiscordLinkResponse;
struct CMsgClientToGCGetDiscordLinkResponseDefaultTypeInternal;
extern CMsgClientToGCGetDiscordLinkResponseDefaultTypeInternal _CMsgClientToGCGetDiscordLinkResponse_default_instance_;
class CMsgClientToGCGetFriendGameStatus;
struct CMsgClientToGCGetFriendGameStatusDefaultTypeInternal;
extern CMsgClientToGCGetFriendGameStatusDefaultTypeInternal _CMsgClientToGCGetFriendGameStatus_default_instance_;
class CMsgClientToGCGetFriendGameStatusResponse;
struct CMsgClientToGCGetFriendGameStatusResponseDefaultTypeInternal;
extern CMsgClientToGCGetFriendGameStatusResponseDefaultTypeInternal _CMsgClientToGCGetFriendGameStatusResponse_default_instance_;
class CMsgClientToGCGetHeroChoice;
struct CMsgClientToGCGetHeroChoiceDefaultTypeInternal;
extern CMsgClientToGCGetHeroChoiceDefaultTypeInternal _CMsgClientToGCGetHeroChoice_default_instance_;
class CMsgClientToGCGetHeroChoiceResponse;
struct CMsgClientToGCGetHeroChoiceResponseDefaultTypeInternal;
extern CMsgClientToGCGetHeroChoiceResponseDefaultTypeInternal _CMsgClientToGCGetHeroChoiceResponse_default_instance_;
class CMsgClientToGCGetHeroChoiceResponse_Hero;
struct CMsgClientToGCGetHeroChoiceResponse_HeroDefaultTypeInternal;
extern CMsgClientToGCGetHeroChoiceResponse_HeroDefaultTypeInternal _CMsgClientToGCGetHeroChoiceResponse_Hero_default_instance_;
class CMsgClientToGCGetHeroMMRRankings;
struct CMsgClientToGCGetHeroMMRRankingsDefaultTypeInternal;
extern CMsgClientToGCGetHeroMMRRankingsDefaultTypeInternal _CMsgClientToGCGetHeroMMRRankings_default_instance_;
class CMsgClientToGCGetHeroMMRRankingsResponse;
struct CMsgClientToGCGetHeroMMRRankingsResponseDefaultTypeInternal;
extern CMsgClientToGCGetHeroMMRRankingsResponseDefaultTypeInternal _CMsgClientToGCGetHeroMMRRankingsResponse_default_instance_;
class CMsgClientToGCGetHeroMMRRankingsResponse_Hero;
struct CMsgClientToGCGetHeroMMRRankingsResponse_HeroDefaultTypeInternal;
extern CMsgClientToGCGetHeroMMRRankingsResponse_HeroDefaultTypeInternal _CMsgClientToGCGetHeroMMRRankingsResponse_Hero_default_instance_;
class CMsgClientToGCGetLeaderboard;
struct CMsgClientToGCGetLeaderboardDefaultTypeInternal;
extern CMsgClientToGCGetLeaderboardDefaultTypeInternal _CMsgClientToGCGetLeaderboard_default_instance_;
class CMsgClientToGCGetLeaderboardResponse;
struct CMsgClientToGCGetLeaderboardResponseDefaultTypeInternal;
extern CMsgClientToGCGetLeaderboardResponseDefaultTypeInternal _CMsgClientToGCGetLeaderboardResponse_default_instance_;
class CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry;
struct CMsgClientToGCGetLeaderboardResponse_LeaderboardEntryDefaultTypeInternal;
extern CMsgClientToGCGetLeaderboardResponse_LeaderboardEntryDefaultTypeInternal _CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry_default_instance_;
class CMsgClientToGCGetMatchHistory;
struct CMsgClientToGCGetMatchHistoryDefaultTypeInternal;
extern CMsgClientToGCGetMatchHistoryDefaultTypeInternal _CMsgClientToGCGetMatchHistory_default_instance_;
class CMsgClientToGCGetMatchHistoryResponse;
struct CMsgClientToGCGetMatchHistoryResponseDefaultTypeInternal;
extern CMsgClientToGCGetMatchHistoryResponseDefaultTypeInternal _CMsgClientToGCGetMatchHistoryResponse_default_instance_;
class CMsgClientToGCGetMatchHistoryResponse_Match;
struct CMsgClientToGCGetMatchHistoryResponse_MatchDefaultTypeInternal;
extern CMsgClientToGCGetMatchHistoryResponse_MatchDefaultTypeInternal _CMsgClientToGCGetMatchHistoryResponse_Match_default_instance_;
class CMsgClientToGCGetMatchMetaData;
struct CMsgClientToGCGetMatchMetaDataDefaultTypeInternal;
extern CMsgClientToGCGetMatchMetaDataDefaultTypeInternal _CMsgClientToGCGetMatchMetaData_default_instance_;
class CMsgClientToGCGetMatchMetaDataResponse;
struct CMsgClientToGCGetMatchMetaDataResponseDefaultTypeInternal;
extern CMsgClientToGCGetMatchMetaDataResponseDefaultTypeInternal _CMsgClientToGCGetMatchMetaDataResponse_default_instance_;
class CMsgClientToGCGetOldHeroBuildData;
struct CMsgClientToGCGetOldHeroBuildDataDefaultTypeInternal;
extern CMsgClientToGCGetOldHeroBuildDataDefaultTypeInternal _CMsgClientToGCGetOldHeroBuildData_default_instance_;
class CMsgClientToGCGetOldHeroBuildDataResponse;
struct CMsgClientToGCGetOldHeroBuildDataResponseDefaultTypeInternal;
extern CMsgClientToGCGetOldHeroBuildDataResponseDefaultTypeInternal _CMsgClientToGCGetOldHeroBuildDataResponse_default_instance_;
class CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild;
struct CMsgClientToGCGetOldHeroBuildDataResponse_OldBuildDefaultTypeInternal;
extern CMsgClientToGCGetOldHeroBuildDataResponse_OldBuildDefaultTypeInternal _CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild_default_instance_;
class CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0;
struct CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0DefaultTypeInternal;
extern CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0DefaultTypeInternal _CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0_default_instance_;
class CMsgClientToGCGetProfileCard;
struct CMsgClientToGCGetProfileCardDefaultTypeInternal;
extern CMsgClientToGCGetProfileCardDefaultTypeInternal _CMsgClientToGCGetProfileCard_default_instance_;
class CMsgClientToGCGrantForumAccess;
struct CMsgClientToGCGrantForumAccessDefaultTypeInternal;
extern CMsgClientToGCGrantForumAccessDefaultTypeInternal _CMsgClientToGCGrantForumAccess_default_instance_;
class CMsgClientToGCGrantForumAccessResponse;
struct CMsgClientToGCGrantForumAccessResponseDefaultTypeInternal;
extern CMsgClientToGCGrantForumAccessResponseDefaultTypeInternal _CMsgClientToGCGrantForumAccessResponse_default_instance_;
class CMsgClientToGCIsInMatchmaking;
struct CMsgClientToGCIsInMatchmakingDefaultTypeInternal;
extern CMsgClientToGCIsInMatchmakingDefaultTypeInternal _CMsgClientToGCIsInMatchmaking_default_instance_;
class CMsgClientToGCIsInMatchmakingResponse;
struct CMsgClientToGCIsInMatchmakingResponseDefaultTypeInternal;
extern CMsgClientToGCIsInMatchmakingResponseDefaultTypeInternal _CMsgClientToGCIsInMatchmakingResponse_default_instance_;
class CMsgClientToGCLeaveLobby;
struct CMsgClientToGCLeaveLobbyDefaultTypeInternal;
extern CMsgClientToGCLeaveLobbyDefaultTypeInternal _CMsgClientToGCLeaveLobby_default_instance_;
class CMsgClientToGCLeaveLobbyResponse;
struct CMsgClientToGCLeaveLobbyResponseDefaultTypeInternal;
extern CMsgClientToGCLeaveLobbyResponseDefaultTypeInternal _CMsgClientToGCLeaveLobbyResponse_default_instance_;
class CMsgClientToGCModeratorRequest;
struct CMsgClientToGCModeratorRequestDefaultTypeInternal;
extern CMsgClientToGCModeratorRequestDefaultTypeInternal _CMsgClientToGCModeratorRequest_default_instance_;
class CMsgClientToGCModeratorRequestResponse;
struct CMsgClientToGCModeratorRequestResponseDefaultTypeInternal;
extern CMsgClientToGCModeratorRequestResponseDefaultTypeInternal _CMsgClientToGCModeratorRequestResponse_default_instance_;
class CMsgClientToGCModifyDevAnnouncements;
struct CMsgClientToGCModifyDevAnnouncementsDefaultTypeInternal;
extern CMsgClientToGCModifyDevAnnouncementsDefaultTypeInternal _CMsgClientToGCModifyDevAnnouncements_default_instance_;
class CMsgClientToGCModifyDevAnnouncementsResponse;
struct CMsgClientToGCModifyDevAnnouncementsResponseDefaultTypeInternal;
extern CMsgClientToGCModifyDevAnnouncementsResponseDefaultTypeInternal _CMsgClientToGCModifyDevAnnouncementsResponse_default_instance_;
class CMsgClientToGCPartyAction;
struct CMsgClientToGCPartyActionDefaultTypeInternal;
extern CMsgClientToGCPartyActionDefaultTypeInternal _CMsgClientToGCPartyAction_default_instance_;
class CMsgClientToGCPartyActionResponse;
struct CMsgClientToGCPartyActionResponseDefaultTypeInternal;
extern CMsgClientToGCPartyActionResponseDefaultTypeInternal _CMsgClientToGCPartyActionResponse_default_instance_;
class CMsgClientToGCPartyCreate;
struct CMsgClientToGCPartyCreateDefaultTypeInternal;
extern CMsgClientToGCPartyCreateDefaultTypeInternal _CMsgClientToGCPartyCreate_default_instance_;
class CMsgClientToGCPartyCreateResponse;
struct CMsgClientToGCPartyCreateResponseDefaultTypeInternal;
extern CMsgClientToGCPartyCreateResponseDefaultTypeInternal _CMsgClientToGCPartyCreateResponse_default_instance_;
class CMsgClientToGCPartyInviteUser;
struct CMsgClientToGCPartyInviteUserDefaultTypeInternal;
extern CMsgClientToGCPartyInviteUserDefaultTypeInternal _CMsgClientToGCPartyInviteUser_default_instance_;
class CMsgClientToGCPartyInviteUserResponse;
struct CMsgClientToGCPartyInviteUserResponseDefaultTypeInternal;
extern CMsgClientToGCPartyInviteUserResponseDefaultTypeInternal _CMsgClientToGCPartyInviteUserResponse_default_instance_;
class CMsgClientToGCPartyJoin;
struct CMsgClientToGCPartyJoinDefaultTypeInternal;
extern CMsgClientToGCPartyJoinDefaultTypeInternal _CMsgClientToGCPartyJoin_default_instance_;
class CMsgClientToGCPartyJoinResponse;
struct CMsgClientToGCPartyJoinResponseDefaultTypeInternal;
extern CMsgClientToGCPartyJoinResponseDefaultTypeInternal _CMsgClientToGCPartyJoinResponse_default_instance_;
class CMsgClientToGCPartyJoinViaCode;
struct CMsgClientToGCPartyJoinViaCodeDefaultTypeInternal;
extern CMsgClientToGCPartyJoinViaCodeDefaultTypeInternal _CMsgClientToGCPartyJoinViaCode_default_instance_;
class CMsgClientToGCPartyJoinViaCodeResponse;
struct CMsgClientToGCPartyJoinViaCodeResponseDefaultTypeInternal;
extern CMsgClientToGCPartyJoinViaCodeResponseDefaultTypeInternal _CMsgClientToGCPartyJoinViaCodeResponse_default_instance_;
class CMsgClientToGCPartyLeave;
struct CMsgClientToGCPartyLeaveDefaultTypeInternal;
extern CMsgClientToGCPartyLeaveDefaultTypeInternal _CMsgClientToGCPartyLeave_default_instance_;
class CMsgClientToGCPartyLeaveResponse;
struct CMsgClientToGCPartyLeaveResponseDefaultTypeInternal;
extern CMsgClientToGCPartyLeaveResponseDefaultTypeInternal _CMsgClientToGCPartyLeaveResponse_default_instance_;
class CMsgClientToGCPartySetMode;
struct CMsgClientToGCPartySetModeDefaultTypeInternal;
extern CMsgClientToGCPartySetModeDefaultTypeInternal _CMsgClientToGCPartySetMode_default_instance_;
class CMsgClientToGCPartySetModeResponse;
struct CMsgClientToGCPartySetModeResponseDefaultTypeInternal;
extern CMsgClientToGCPartySetModeResponseDefaultTypeInternal _CMsgClientToGCPartySetModeResponse_default_instance_;
class CMsgClientToGCPartySetReadyState;
struct CMsgClientToGCPartySetReadyStateDefaultTypeInternal;
extern CMsgClientToGCPartySetReadyStateDefaultTypeInternal _CMsgClientToGCPartySetReadyState_default_instance_;
class CMsgClientToGCPartySetReadyStateResponse;
struct CMsgClientToGCPartySetReadyStateResponseDefaultTypeInternal;
extern CMsgClientToGCPartySetReadyStateResponseDefaultTypeInternal _CMsgClientToGCPartySetReadyStateResponse_default_instance_;
class CMsgClientToGCPartyStartMatch;
struct CMsgClientToGCPartyStartMatchDefaultTypeInternal;
extern CMsgClientToGCPartyStartMatchDefaultTypeInternal _CMsgClientToGCPartyStartMatch_default_instance_;
class CMsgClientToGCPartyStartMatchResponse;
struct CMsgClientToGCPartyStartMatchResponseDefaultTypeInternal;
extern CMsgClientToGCPartyStartMatchResponseDefaultTypeInternal _CMsgClientToGCPartyStartMatchResponse_default_instance_;
class CMsgClientToGCPostMatchSurveyResponse;
struct CMsgClientToGCPostMatchSurveyResponseDefaultTypeInternal;
extern CMsgClientToGCPostMatchSurveyResponseDefaultTypeInternal _CMsgClientToGCPostMatchSurveyResponse_default_instance_;
class CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey;
struct CMsgClientToGCPostMatchSurveyResponse_PostMatchSurveyDefaultTypeInternal;
extern CMsgClientToGCPostMatchSurveyResponse_PostMatchSurveyDefaultTypeInternal _CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey_default_instance_;
class CMsgClientToGCRecordClientEvents;
struct CMsgClientToGCRecordClientEventsDefaultTypeInternal;
extern CMsgClientToGCRecordClientEventsDefaultTypeInternal _CMsgClientToGCRecordClientEvents_default_instance_;
class CMsgClientToGCRecordClientEventsResponse;
struct CMsgClientToGCRecordClientEventsResponseDefaultTypeInternal;
extern CMsgClientToGCRecordClientEventsResponseDefaultTypeInternal _CMsgClientToGCRecordClientEventsResponse_default_instance_;
class CMsgClientToGCRecordClientEvents_Event;
struct CMsgClientToGCRecordClientEvents_EventDefaultTypeInternal;
extern CMsgClientToGCRecordClientEvents_EventDefaultTypeInternal _CMsgClientToGCRecordClientEvents_Event_default_instance_;
class CMsgClientToGCReplacementSDRTicket;
struct CMsgClientToGCReplacementSDRTicketDefaultTypeInternal;
extern CMsgClientToGCReplacementSDRTicketDefaultTypeInternal _CMsgClientToGCReplacementSDRTicket_default_instance_;
class CMsgClientToGCReplacementSDRTicketResponse;
struct CMsgClientToGCReplacementSDRTicketResponseDefaultTypeInternal;
extern CMsgClientToGCReplacementSDRTicketResponseDefaultTypeInternal _CMsgClientToGCReplacementSDRTicketResponse_default_instance_;
class CMsgClientToGCReportPlayerFromMatch;
struct CMsgClientToGCReportPlayerFromMatchDefaultTypeInternal;
extern CMsgClientToGCReportPlayerFromMatchDefaultTypeInternal _CMsgClientToGCReportPlayerFromMatch_default_instance_;
class CMsgClientToGCReportPlayerFromMatchResponse;
struct CMsgClientToGCReportPlayerFromMatchResponseDefaultTypeInternal;
extern CMsgClientToGCReportPlayerFromMatchResponseDefaultTypeInternal _CMsgClientToGCReportPlayerFromMatchResponse_default_instance_;
class CMsgClientToGCRequestCheatReports;
struct CMsgClientToGCRequestCheatReportsDefaultTypeInternal;
extern CMsgClientToGCRequestCheatReportsDefaultTypeInternal _CMsgClientToGCRequestCheatReports_default_instance_;
class CMsgClientToGCRequestCheatReportsResponse;
struct CMsgClientToGCRequestCheatReportsResponseDefaultTypeInternal;
extern CMsgClientToGCRequestCheatReportsResponseDefaultTypeInternal _CMsgClientToGCRequestCheatReportsResponse_default_instance_;
class CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport;
struct CMsgClientToGCRequestCheatReportsResponse_RecentCheatReportDefaultTypeInternal;
extern CMsgClientToGCRequestCheatReportsResponse_RecentCheatReportDefaultTypeInternal _CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport_default_instance_;
class CMsgClientToGCSetHideHolidayModels;
struct CMsgClientToGCSetHideHolidayModelsDefaultTypeInternal;
extern CMsgClientToGCSetHideHolidayModelsDefaultTypeInternal _CMsgClientToGCSetHideHolidayModels_default_instance_;
class CMsgClientToGCSetHideHolidayModelsResponse;
struct CMsgClientToGCSetHideHolidayModelsResponseDefaultTypeInternal;
extern CMsgClientToGCSetHideHolidayModelsResponseDefaultTypeInternal _CMsgClientToGCSetHideHolidayModelsResponse_default_instance_;
class CMsgClientToGCSetNewPlayerProgress;
struct CMsgClientToGCSetNewPlayerProgressDefaultTypeInternal;
extern CMsgClientToGCSetNewPlayerProgressDefaultTypeInternal _CMsgClientToGCSetNewPlayerProgress_default_instance_;
class CMsgClientToGCSetNewPlayerProgressResponse;
struct CMsgClientToGCSetNewPlayerProgressResponseDefaultTypeInternal;
extern CMsgClientToGCSetNewPlayerProgressResponseDefaultTypeInternal _CMsgClientToGCSetNewPlayerProgressResponse_default_instance_;
class CMsgClientToGCSetServerConVar;
struct CMsgClientToGCSetServerConVarDefaultTypeInternal;
extern CMsgClientToGCSetServerConVarDefaultTypeInternal _CMsgClientToGCSetServerConVar_default_instance_;
class CMsgClientToGCSetServerConVarResponse;
struct CMsgClientToGCSetServerConVarResponseDefaultTypeInternal;
extern CMsgClientToGCSetServerConVarResponseDefaultTypeInternal _CMsgClientToGCSetServerConVarResponse_default_instance_;
class CMsgClientToGCSpectateLobby;
struct CMsgClientToGCSpectateLobbyDefaultTypeInternal;
extern CMsgClientToGCSpectateLobbyDefaultTypeInternal _CMsgClientToGCSpectateLobby_default_instance_;
class CMsgClientToGCSpectateLobbyResponse;
struct CMsgClientToGCSpectateLobbyResponseDefaultTypeInternal;
extern CMsgClientToGCSpectateLobbyResponseDefaultTypeInternal _CMsgClientToGCSpectateLobbyResponse_default_instance_;
class CMsgClientToGCSpectateUser;
struct CMsgClientToGCSpectateUserDefaultTypeInternal;
extern CMsgClientToGCSpectateUserDefaultTypeInternal _CMsgClientToGCSpectateUser_default_instance_;
class CMsgClientToGCSpectateUserResponse;
struct CMsgClientToGCSpectateUserResponseDefaultTypeInternal;
extern CMsgClientToGCSpectateUserResponseDefaultTypeInternal _CMsgClientToGCSpectateUserResponse_default_instance_;
class CMsgClientToGCStartMatchmaking;
struct CMsgClientToGCStartMatchmakingDefaultTypeInternal;
extern CMsgClientToGCStartMatchmakingDefaultTypeInternal _CMsgClientToGCStartMatchmaking_default_instance_;
class CMsgClientToGCStartMatchmakingResponse;
struct CMsgClientToGCStartMatchmakingResponseDefaultTypeInternal;
extern CMsgClientToGCStartMatchmakingResponseDefaultTypeInternal _CMsgClientToGCStartMatchmakingResponse_default_instance_;
class CMsgClientToGCStopMatchmaking;
struct CMsgClientToGCStopMatchmakingDefaultTypeInternal;
extern CMsgClientToGCStopMatchmakingDefaultTypeInternal _CMsgClientToGCStopMatchmaking_default_instance_;
class CMsgClientToGCStopMatchmakingResponse;
struct CMsgClientToGCStopMatchmakingResponseDefaultTypeInternal;
extern CMsgClientToGCStopMatchmakingResponseDefaultTypeInternal _CMsgClientToGCStopMatchmakingResponse_default_instance_;
class CMsgClientToGCSubmitPlaytestUser;
struct CMsgClientToGCSubmitPlaytestUserDefaultTypeInternal;
extern CMsgClientToGCSubmitPlaytestUserDefaultTypeInternal _CMsgClientToGCSubmitPlaytestUser_default_instance_;
class CMsgClientToGCSubmitPlaytestUserResponse;
struct CMsgClientToGCSubmitPlaytestUserResponseDefaultTypeInternal;
extern CMsgClientToGCSubmitPlaytestUserResponseDefaultTypeInternal _CMsgClientToGCSubmitPlaytestUserResponse_default_instance_;
class CMsgClientToGCUnlockHero;
struct CMsgClientToGCUnlockHeroDefaultTypeInternal;
extern CMsgClientToGCUnlockHeroDefaultTypeInternal _CMsgClientToGCUnlockHero_default_instance_;
class CMsgClientToGCUnlockHeroResponse;
struct CMsgClientToGCUnlockHeroResponseDefaultTypeInternal;
extern CMsgClientToGCUnlockHeroResponseDefaultTypeInternal _CMsgClientToGCUnlockHeroResponse_default_instance_;
class CMsgClientToGCUpdateAccountSync;
struct CMsgClientToGCUpdateAccountSyncDefaultTypeInternal;
extern CMsgClientToGCUpdateAccountSyncDefaultTypeInternal _CMsgClientToGCUpdateAccountSync_default_instance_;
class CMsgClientToGCUpdateAccountSyncResponse;
struct CMsgClientToGCUpdateAccountSyncResponseDefaultTypeInternal;
extern CMsgClientToGCUpdateAccountSyncResponseDefaultTypeInternal _CMsgClientToGCUpdateAccountSyncResponse_default_instance_;
class CMsgClientToGCUpdateHeroBuild;
struct CMsgClientToGCUpdateHeroBuildDefaultTypeInternal;
extern CMsgClientToGCUpdateHeroBuildDefaultTypeInternal _CMsgClientToGCUpdateHeroBuild_default_instance_;
class CMsgClientToGCUpdateHeroBuildPreference;
struct CMsgClientToGCUpdateHeroBuildPreferenceDefaultTypeInternal;
extern CMsgClientToGCUpdateHeroBuildPreferenceDefaultTypeInternal _CMsgClientToGCUpdateHeroBuildPreference_default_instance_;
class CMsgClientToGCUpdateHeroBuildPreferenceResponse;
struct CMsgClientToGCUpdateHeroBuildPreferenceResponseDefaultTypeInternal;
extern CMsgClientToGCUpdateHeroBuildPreferenceResponseDefaultTypeInternal _CMsgClientToGCUpdateHeroBuildPreferenceResponse_default_instance_;
class CMsgClientToGCUpdateHeroBuildResponse;
struct CMsgClientToGCUpdateHeroBuildResponseDefaultTypeInternal;
extern CMsgClientToGCUpdateHeroBuildResponseDefaultTypeInternal _CMsgClientToGCUpdateHeroBuildResponse_default_instance_;
class CMsgClientToGCUpdateRoster;
struct CMsgClientToGCUpdateRosterDefaultTypeInternal;
extern CMsgClientToGCUpdateRosterDefaultTypeInternal _CMsgClientToGCUpdateRoster_default_instance_;
class CMsgClientToGCUpdateRosterResponse;
struct CMsgClientToGCUpdateRosterResponseDefaultTypeInternal;
extern CMsgClientToGCUpdateRosterResponseDefaultTypeInternal _CMsgClientToGCUpdateRosterResponse_default_instance_;
class CMsgClientToGCUpdateSpectatorStatus;
struct CMsgClientToGCUpdateSpectatorStatusDefaultTypeInternal;
extern CMsgClientToGCUpdateSpectatorStatusDefaultTypeInternal _CMsgClientToGCUpdateSpectatorStatus_default_instance_;
class CMsgClientWelcomeCitadel;
struct CMsgClientWelcomeCitadelDefaultTypeInternal;
extern CMsgClientWelcomeCitadelDefaultTypeInternal _CMsgClientWelcomeCitadel_default_instance_;
class CMsgDevMatchInfo;
struct CMsgDevMatchInfoDefaultTypeInternal;
extern CMsgDevMatchInfoDefaultTypeInternal _CMsgDevMatchInfo_default_instance_;
class CMsgDevMatchInfo_MatchPlayer;
struct CMsgDevMatchInfo_MatchPlayerDefaultTypeInternal;
extern CMsgDevMatchInfo_MatchPlayerDefaultTypeInternal _CMsgDevMatchInfo_MatchPlayer_default_instance_;
class CMsgGCToClientBookUpdated;
struct CMsgGCToClientBookUpdatedDefaultTypeInternal;
extern CMsgGCToClientBookUpdatedDefaultTypeInternal _CMsgGCToClientBookUpdated_default_instance_;
class CMsgGCToClientCanRejoinParty;
struct CMsgGCToClientCanRejoinPartyDefaultTypeInternal;
extern CMsgGCToClientCanRejoinPartyDefaultTypeInternal _CMsgGCToClientCanRejoinParty_default_instance_;
class CMsgGCToClientCommendNotification;
struct CMsgGCToClientCommendNotificationDefaultTypeInternal;
extern CMsgGCToClientCommendNotificationDefaultTypeInternal _CMsgGCToClientCommendNotification_default_instance_;
class CMsgGCToClientDevAnnouncements;
struct CMsgGCToClientDevAnnouncementsDefaultTypeInternal;
extern CMsgGCToClientDevAnnouncementsDefaultTypeInternal _CMsgGCToClientDevAnnouncements_default_instance_;
class CMsgGCToClientDevAnnouncements_Announcement;
struct CMsgGCToClientDevAnnouncements_AnnouncementDefaultTypeInternal;
extern CMsgGCToClientDevAnnouncements_AnnouncementDefaultTypeInternal _CMsgGCToClientDevAnnouncements_Announcement_default_instance_;
class CMsgGCToClientDevPlaytestStatus;
struct CMsgGCToClientDevPlaytestStatusDefaultTypeInternal;
extern CMsgGCToClientDevPlaytestStatusDefaultTypeInternal _CMsgGCToClientDevPlaytestStatus_default_instance_;
class CMsgGCToClientDevPlaytestStatus_DevQueueSize;
struct CMsgGCToClientDevPlaytestStatus_DevQueueSizeDefaultTypeInternal;
extern CMsgGCToClientDevPlaytestStatus_DevQueueSizeDefaultTypeInternal _CMsgGCToClientDevPlaytestStatus_DevQueueSize_default_instance_;
class CMsgGCToClientDevPlaytestStatus_HeroWhitelist;
struct CMsgGCToClientDevPlaytestStatus_HeroWhitelistDefaultTypeInternal;
extern CMsgGCToClientDevPlaytestStatus_HeroWhitelistDefaultTypeInternal _CMsgGCToClientDevPlaytestStatus_HeroWhitelist_default_instance_;
class CMsgGCToClientHeroLabsSchedule;
struct CMsgGCToClientHeroLabsScheduleDefaultTypeInternal;
extern CMsgGCToClientHeroLabsScheduleDefaultTypeInternal _CMsgGCToClientHeroLabsSchedule_default_instance_;
class CMsgGCToClientHeroLabsSchedule_Schedule;
struct CMsgGCToClientHeroLabsSchedule_ScheduleDefaultTypeInternal;
extern CMsgGCToClientHeroLabsSchedule_ScheduleDefaultTypeInternal _CMsgGCToClientHeroLabsSchedule_Schedule_default_instance_;
class CMsgGCToClientHeroLabsSchedule_TimeRange;
struct CMsgGCToClientHeroLabsSchedule_TimeRangeDefaultTypeInternal;
extern CMsgGCToClientHeroLabsSchedule_TimeRangeDefaultTypeInternal _CMsgGCToClientHeroLabsSchedule_TimeRange_default_instance_;
class CMsgGCToClientMatchmakingStopped;
struct CMsgGCToClientMatchmakingStoppedDefaultTypeInternal;
extern CMsgGCToClientMatchmakingStoppedDefaultTypeInternal _CMsgGCToClientMatchmakingStopped_default_instance_;
class CMsgGCToClientPartyEvent;
struct CMsgGCToClientPartyEventDefaultTypeInternal;
extern CMsgGCToClientPartyEventDefaultTypeInternal _CMsgGCToClientPartyEvent_default_instance_;
class CMsgGCToClientSDRTicket;
struct CMsgGCToClientSDRTicketDefaultTypeInternal;
extern CMsgGCToClientSDRTicketDefaultTypeInternal _CMsgGCToClientSDRTicket_default_instance_;
class CMsgHeroBuild;
struct CMsgHeroBuildDefaultTypeInternal;
extern CMsgHeroBuildDefaultTypeInternal _CMsgHeroBuild_default_instance_;
class CMsgHeroBuildPreference;
struct CMsgHeroBuildPreferenceDefaultTypeInternal;
extern CMsgHeroBuildPreferenceDefaultTypeInternal _CMsgHeroBuildPreference_default_instance_;
class CMsgHeroBuild_AbilityOrder;
struct CMsgHeroBuild_AbilityOrderDefaultTypeInternal;
extern CMsgHeroBuild_AbilityOrderDefaultTypeInternal _CMsgHeroBuild_AbilityOrder_default_instance_;
class CMsgHeroBuild_BuildModCategory;
struct CMsgHeroBuild_BuildModCategoryDefaultTypeInternal;
extern CMsgHeroBuild_BuildModCategoryDefaultTypeInternal _CMsgHeroBuild_BuildModCategory_default_instance_;
class CMsgHeroBuild_BuildModEntry;
struct CMsgHeroBuild_BuildModEntryDefaultTypeInternal;
extern CMsgHeroBuild_BuildModEntryDefaultTypeInternal _CMsgHeroBuild_BuildModEntry_default_instance_;
class CMsgHeroBuild_CurrencyChange;
struct CMsgHeroBuild_CurrencyChangeDefaultTypeInternal;
extern CMsgHeroBuild_CurrencyChangeDefaultTypeInternal _CMsgHeroBuild_CurrencyChange_default_instance_;
class CMsgHeroBuild_Details_V0;
struct CMsgHeroBuild_Details_V0DefaultTypeInternal;
extern CMsgHeroBuild_Details_V0DefaultTypeInternal _CMsgHeroBuild_Details_V0_default_instance_;
class CMsgPartyMMInfo;
struct CMsgPartyMMInfoDefaultTypeInternal;
extern CMsgPartyMMInfoDefaultTypeInternal _CMsgPartyMMInfo_default_instance_;
class CSOAccountHeroInfo;
struct CSOAccountHeroInfoDefaultTypeInternal;
extern CSOAccountHeroInfoDefaultTypeInternal _CSOAccountHeroInfo_default_instance_;
class CSOAccountSyncStorage;
struct CSOAccountSyncStorageDefaultTypeInternal;
extern CSOAccountSyncStorageDefaultTypeInternal _CSOAccountSyncStorage_default_instance_;
class CSOGameAccountClient;
struct CSOGameAccountClientDefaultTypeInternal;
extern CSOGameAccountClientDefaultTypeInternal _CSOGameAccountClient_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CMsgAccountBook* Arena::CreateMaybeMessage<::CMsgAccountBook>(Arena*);
template<> ::CMsgAccountBook_Unlock* Arena::CreateMaybeMessage<::CMsgAccountBook_Unlock>(Arena*);
template<> ::CMsgCitadelClientHello* Arena::CreateMaybeMessage<::CMsgCitadelClientHello>(Arena*);
template<> ::CMsgCitadelProfileCard* Arena::CreateMaybeMessage<::CMsgCitadelProfileCard>(Arena*);
template<> ::CMsgCitadelProfileCard_Slot* Arena::CreateMaybeMessage<::CMsgCitadelProfileCard_Slot>(Arena*);
template<> ::CMsgCitadelProfileCard_Slot_Hero* Arena::CreateMaybeMessage<::CMsgCitadelProfileCard_Slot_Hero>(Arena*);
template<> ::CMsgCitadelProfileCard_Slot_Stat* Arena::CreateMaybeMessage<::CMsgCitadelProfileCard_Slot_Stat>(Arena*);
template<> ::CMsgClientToGCBookUnlock* Arena::CreateMaybeMessage<::CMsgClientToGCBookUnlock>(Arena*);
template<> ::CMsgClientToGCBookUnlockResponse* Arena::CreateMaybeMessage<::CMsgClientToGCBookUnlockResponse>(Arena*);
template<> ::CMsgClientToGCCommendPlayerFromMatch* Arena::CreateMaybeMessage<::CMsgClientToGCCommendPlayerFromMatch>(Arena*);
template<> ::CMsgClientToGCCommendPlayerFromMatchResponse* Arena::CreateMaybeMessage<::CMsgClientToGCCommendPlayerFromMatchResponse>(Arena*);
template<> ::CMsgClientToGCDeleteHeroBuild* Arena::CreateMaybeMessage<::CMsgClientToGCDeleteHeroBuild>(Arena*);
template<> ::CMsgClientToGCDeleteHeroBuildResponse* Arena::CreateMaybeMessage<::CMsgClientToGCDeleteHeroBuildResponse>(Arena*);
template<> ::CMsgClientToGCDevAction* Arena::CreateMaybeMessage<::CMsgClientToGCDevAction>(Arena*);
template<> ::CMsgClientToGCDevActionResponse* Arena::CreateMaybeMessage<::CMsgClientToGCDevActionResponse>(Arena*);
template<> ::CMsgClientToGCDevSetMMBias* Arena::CreateMaybeMessage<::CMsgClientToGCDevSetMMBias>(Arena*);
template<> ::CMsgClientToGCFindHeroBuilds* Arena::CreateMaybeMessage<::CMsgClientToGCFindHeroBuilds>(Arena*);
template<> ::CMsgClientToGCFindHeroBuildsResponse* Arena::CreateMaybeMessage<::CMsgClientToGCFindHeroBuildsResponse>(Arena*);
template<> ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* Arena::CreateMaybeMessage<::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult>(Arena*);
template<> ::CMsgClientToGCGetAccountLeaderboards* Arena::CreateMaybeMessage<::CMsgClientToGCGetAccountLeaderboards>(Arena*);
template<> ::CMsgClientToGCGetAccountLeaderboardsResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetAccountLeaderboardsResponse>(Arena*);
template<> ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* Arena::CreateMaybeMessage<::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry>(Arena*);
template<> ::CMsgClientToGCGetAccountMatchReports* Arena::CreateMaybeMessage<::CMsgClientToGCGetAccountMatchReports>(Arena*);
template<> ::CMsgClientToGCGetAccountMatchReportsResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetAccountMatchReportsResponse>(Arena*);
template<> ::CMsgClientToGCGetAccountMatchReportsResponse_Commend* Arena::CreateMaybeMessage<::CMsgClientToGCGetAccountMatchReportsResponse_Commend>(Arena*);
template<> ::CMsgClientToGCGetAccountMatchReportsResponse_Report* Arena::CreateMaybeMessage<::CMsgClientToGCGetAccountMatchReportsResponse_Report>(Arena*);
template<> ::CMsgClientToGCGetAccountStats* Arena::CreateMaybeMessage<::CMsgClientToGCGetAccountStats>(Arena*);
template<> ::CMsgClientToGCGetAccountStatsResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetAccountStatsResponse>(Arena*);
template<> ::CMsgClientToGCGetActiveMatches* Arena::CreateMaybeMessage<::CMsgClientToGCGetActiveMatches>(Arena*);
template<> ::CMsgClientToGCGetActiveMatchesResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetActiveMatchesResponse>(Arena*);
template<> ::CMsgClientToGCGetBook* Arena::CreateMaybeMessage<::CMsgClientToGCGetBook>(Arena*);
template<> ::CMsgClientToGCGetBookResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetBookResponse>(Arena*);
template<> ::CMsgClientToGCGetDiscordLink* Arena::CreateMaybeMessage<::CMsgClientToGCGetDiscordLink>(Arena*);
template<> ::CMsgClientToGCGetDiscordLinkResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetDiscordLinkResponse>(Arena*);
template<> ::CMsgClientToGCGetFriendGameStatus* Arena::CreateMaybeMessage<::CMsgClientToGCGetFriendGameStatus>(Arena*);
template<> ::CMsgClientToGCGetFriendGameStatusResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetFriendGameStatusResponse>(Arena*);
template<> ::CMsgClientToGCGetHeroChoice* Arena::CreateMaybeMessage<::CMsgClientToGCGetHeroChoice>(Arena*);
template<> ::CMsgClientToGCGetHeroChoiceResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetHeroChoiceResponse>(Arena*);
template<> ::CMsgClientToGCGetHeroChoiceResponse_Hero* Arena::CreateMaybeMessage<::CMsgClientToGCGetHeroChoiceResponse_Hero>(Arena*);
template<> ::CMsgClientToGCGetHeroMMRRankings* Arena::CreateMaybeMessage<::CMsgClientToGCGetHeroMMRRankings>(Arena*);
template<> ::CMsgClientToGCGetHeroMMRRankingsResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetHeroMMRRankingsResponse>(Arena*);
template<> ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero* Arena::CreateMaybeMessage<::CMsgClientToGCGetHeroMMRRankingsResponse_Hero>(Arena*);
template<> ::CMsgClientToGCGetLeaderboard* Arena::CreateMaybeMessage<::CMsgClientToGCGetLeaderboard>(Arena*);
template<> ::CMsgClientToGCGetLeaderboardResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetLeaderboardResponse>(Arena*);
template<> ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* Arena::CreateMaybeMessage<::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry>(Arena*);
template<> ::CMsgClientToGCGetMatchHistory* Arena::CreateMaybeMessage<::CMsgClientToGCGetMatchHistory>(Arena*);
template<> ::CMsgClientToGCGetMatchHistoryResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetMatchHistoryResponse>(Arena*);
template<> ::CMsgClientToGCGetMatchHistoryResponse_Match* Arena::CreateMaybeMessage<::CMsgClientToGCGetMatchHistoryResponse_Match>(Arena*);
template<> ::CMsgClientToGCGetMatchMetaData* Arena::CreateMaybeMessage<::CMsgClientToGCGetMatchMetaData>(Arena*);
template<> ::CMsgClientToGCGetMatchMetaDataResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetMatchMetaDataResponse>(Arena*);
template<> ::CMsgClientToGCGetOldHeroBuildData* Arena::CreateMaybeMessage<::CMsgClientToGCGetOldHeroBuildData>(Arena*);
template<> ::CMsgClientToGCGetOldHeroBuildDataResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetOldHeroBuildDataResponse>(Arena*);
template<> ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* Arena::CreateMaybeMessage<::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild>(Arena*);
template<> ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* Arena::CreateMaybeMessage<::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0>(Arena*);
template<> ::CMsgClientToGCGetProfileCard* Arena::CreateMaybeMessage<::CMsgClientToGCGetProfileCard>(Arena*);
template<> ::CMsgClientToGCGrantForumAccess* Arena::CreateMaybeMessage<::CMsgClientToGCGrantForumAccess>(Arena*);
template<> ::CMsgClientToGCGrantForumAccessResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGrantForumAccessResponse>(Arena*);
template<> ::CMsgClientToGCIsInMatchmaking* Arena::CreateMaybeMessage<::CMsgClientToGCIsInMatchmaking>(Arena*);
template<> ::CMsgClientToGCIsInMatchmakingResponse* Arena::CreateMaybeMessage<::CMsgClientToGCIsInMatchmakingResponse>(Arena*);
template<> ::CMsgClientToGCLeaveLobby* Arena::CreateMaybeMessage<::CMsgClientToGCLeaveLobby>(Arena*);
template<> ::CMsgClientToGCLeaveLobbyResponse* Arena::CreateMaybeMessage<::CMsgClientToGCLeaveLobbyResponse>(Arena*);
template<> ::CMsgClientToGCModeratorRequest* Arena::CreateMaybeMessage<::CMsgClientToGCModeratorRequest>(Arena*);
template<> ::CMsgClientToGCModeratorRequestResponse* Arena::CreateMaybeMessage<::CMsgClientToGCModeratorRequestResponse>(Arena*);
template<> ::CMsgClientToGCModifyDevAnnouncements* Arena::CreateMaybeMessage<::CMsgClientToGCModifyDevAnnouncements>(Arena*);
template<> ::CMsgClientToGCModifyDevAnnouncementsResponse* Arena::CreateMaybeMessage<::CMsgClientToGCModifyDevAnnouncementsResponse>(Arena*);
template<> ::CMsgClientToGCPartyAction* Arena::CreateMaybeMessage<::CMsgClientToGCPartyAction>(Arena*);
template<> ::CMsgClientToGCPartyActionResponse* Arena::CreateMaybeMessage<::CMsgClientToGCPartyActionResponse>(Arena*);
template<> ::CMsgClientToGCPartyCreate* Arena::CreateMaybeMessage<::CMsgClientToGCPartyCreate>(Arena*);
template<> ::CMsgClientToGCPartyCreateResponse* Arena::CreateMaybeMessage<::CMsgClientToGCPartyCreateResponse>(Arena*);
template<> ::CMsgClientToGCPartyInviteUser* Arena::CreateMaybeMessage<::CMsgClientToGCPartyInviteUser>(Arena*);
template<> ::CMsgClientToGCPartyInviteUserResponse* Arena::CreateMaybeMessage<::CMsgClientToGCPartyInviteUserResponse>(Arena*);
template<> ::CMsgClientToGCPartyJoin* Arena::CreateMaybeMessage<::CMsgClientToGCPartyJoin>(Arena*);
template<> ::CMsgClientToGCPartyJoinResponse* Arena::CreateMaybeMessage<::CMsgClientToGCPartyJoinResponse>(Arena*);
template<> ::CMsgClientToGCPartyJoinViaCode* Arena::CreateMaybeMessage<::CMsgClientToGCPartyJoinViaCode>(Arena*);
template<> ::CMsgClientToGCPartyJoinViaCodeResponse* Arena::CreateMaybeMessage<::CMsgClientToGCPartyJoinViaCodeResponse>(Arena*);
template<> ::CMsgClientToGCPartyLeave* Arena::CreateMaybeMessage<::CMsgClientToGCPartyLeave>(Arena*);
template<> ::CMsgClientToGCPartyLeaveResponse* Arena::CreateMaybeMessage<::CMsgClientToGCPartyLeaveResponse>(Arena*);
template<> ::CMsgClientToGCPartySetMode* Arena::CreateMaybeMessage<::CMsgClientToGCPartySetMode>(Arena*);
template<> ::CMsgClientToGCPartySetModeResponse* Arena::CreateMaybeMessage<::CMsgClientToGCPartySetModeResponse>(Arena*);
template<> ::CMsgClientToGCPartySetReadyState* Arena::CreateMaybeMessage<::CMsgClientToGCPartySetReadyState>(Arena*);
template<> ::CMsgClientToGCPartySetReadyStateResponse* Arena::CreateMaybeMessage<::CMsgClientToGCPartySetReadyStateResponse>(Arena*);
template<> ::CMsgClientToGCPartyStartMatch* Arena::CreateMaybeMessage<::CMsgClientToGCPartyStartMatch>(Arena*);
template<> ::CMsgClientToGCPartyStartMatchResponse* Arena::CreateMaybeMessage<::CMsgClientToGCPartyStartMatchResponse>(Arena*);
template<> ::CMsgClientToGCPostMatchSurveyResponse* Arena::CreateMaybeMessage<::CMsgClientToGCPostMatchSurveyResponse>(Arena*);
template<> ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* Arena::CreateMaybeMessage<::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey>(Arena*);
template<> ::CMsgClientToGCRecordClientEvents* Arena::CreateMaybeMessage<::CMsgClientToGCRecordClientEvents>(Arena*);
template<> ::CMsgClientToGCRecordClientEventsResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRecordClientEventsResponse>(Arena*);
template<> ::CMsgClientToGCRecordClientEvents_Event* Arena::CreateMaybeMessage<::CMsgClientToGCRecordClientEvents_Event>(Arena*);
template<> ::CMsgClientToGCReplacementSDRTicket* Arena::CreateMaybeMessage<::CMsgClientToGCReplacementSDRTicket>(Arena*);
template<> ::CMsgClientToGCReplacementSDRTicketResponse* Arena::CreateMaybeMessage<::CMsgClientToGCReplacementSDRTicketResponse>(Arena*);
template<> ::CMsgClientToGCReportPlayerFromMatch* Arena::CreateMaybeMessage<::CMsgClientToGCReportPlayerFromMatch>(Arena*);
template<> ::CMsgClientToGCReportPlayerFromMatchResponse* Arena::CreateMaybeMessage<::CMsgClientToGCReportPlayerFromMatchResponse>(Arena*);
template<> ::CMsgClientToGCRequestCheatReports* Arena::CreateMaybeMessage<::CMsgClientToGCRequestCheatReports>(Arena*);
template<> ::CMsgClientToGCRequestCheatReportsResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRequestCheatReportsResponse>(Arena*);
template<> ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* Arena::CreateMaybeMessage<::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport>(Arena*);
template<> ::CMsgClientToGCSetHideHolidayModels* Arena::CreateMaybeMessage<::CMsgClientToGCSetHideHolidayModels>(Arena*);
template<> ::CMsgClientToGCSetHideHolidayModelsResponse* Arena::CreateMaybeMessage<::CMsgClientToGCSetHideHolidayModelsResponse>(Arena*);
template<> ::CMsgClientToGCSetNewPlayerProgress* Arena::CreateMaybeMessage<::CMsgClientToGCSetNewPlayerProgress>(Arena*);
template<> ::CMsgClientToGCSetNewPlayerProgressResponse* Arena::CreateMaybeMessage<::CMsgClientToGCSetNewPlayerProgressResponse>(Arena*);
template<> ::CMsgClientToGCSetServerConVar* Arena::CreateMaybeMessage<::CMsgClientToGCSetServerConVar>(Arena*);
template<> ::CMsgClientToGCSetServerConVarResponse* Arena::CreateMaybeMessage<::CMsgClientToGCSetServerConVarResponse>(Arena*);
template<> ::CMsgClientToGCSpectateLobby* Arena::CreateMaybeMessage<::CMsgClientToGCSpectateLobby>(Arena*);
template<> ::CMsgClientToGCSpectateLobbyResponse* Arena::CreateMaybeMessage<::CMsgClientToGCSpectateLobbyResponse>(Arena*);
template<> ::CMsgClientToGCSpectateUser* Arena::CreateMaybeMessage<::CMsgClientToGCSpectateUser>(Arena*);
template<> ::CMsgClientToGCSpectateUserResponse* Arena::CreateMaybeMessage<::CMsgClientToGCSpectateUserResponse>(Arena*);
template<> ::CMsgClientToGCStartMatchmaking* Arena::CreateMaybeMessage<::CMsgClientToGCStartMatchmaking>(Arena*);
template<> ::CMsgClientToGCStartMatchmakingResponse* Arena::CreateMaybeMessage<::CMsgClientToGCStartMatchmakingResponse>(Arena*);
template<> ::CMsgClientToGCStopMatchmaking* Arena::CreateMaybeMessage<::CMsgClientToGCStopMatchmaking>(Arena*);
template<> ::CMsgClientToGCStopMatchmakingResponse* Arena::CreateMaybeMessage<::CMsgClientToGCStopMatchmakingResponse>(Arena*);
template<> ::CMsgClientToGCSubmitPlaytestUser* Arena::CreateMaybeMessage<::CMsgClientToGCSubmitPlaytestUser>(Arena*);
template<> ::CMsgClientToGCSubmitPlaytestUserResponse* Arena::CreateMaybeMessage<::CMsgClientToGCSubmitPlaytestUserResponse>(Arena*);
template<> ::CMsgClientToGCUnlockHero* Arena::CreateMaybeMessage<::CMsgClientToGCUnlockHero>(Arena*);
template<> ::CMsgClientToGCUnlockHeroResponse* Arena::CreateMaybeMessage<::CMsgClientToGCUnlockHeroResponse>(Arena*);
template<> ::CMsgClientToGCUpdateAccountSync* Arena::CreateMaybeMessage<::CMsgClientToGCUpdateAccountSync>(Arena*);
template<> ::CMsgClientToGCUpdateAccountSyncResponse* Arena::CreateMaybeMessage<::CMsgClientToGCUpdateAccountSyncResponse>(Arena*);
template<> ::CMsgClientToGCUpdateHeroBuild* Arena::CreateMaybeMessage<::CMsgClientToGCUpdateHeroBuild>(Arena*);
template<> ::CMsgClientToGCUpdateHeroBuildPreference* Arena::CreateMaybeMessage<::CMsgClientToGCUpdateHeroBuildPreference>(Arena*);
template<> ::CMsgClientToGCUpdateHeroBuildPreferenceResponse* Arena::CreateMaybeMessage<::CMsgClientToGCUpdateHeroBuildPreferenceResponse>(Arena*);
template<> ::CMsgClientToGCUpdateHeroBuildResponse* Arena::CreateMaybeMessage<::CMsgClientToGCUpdateHeroBuildResponse>(Arena*);
template<> ::CMsgClientToGCUpdateRoster* Arena::CreateMaybeMessage<::CMsgClientToGCUpdateRoster>(Arena*);
template<> ::CMsgClientToGCUpdateRosterResponse* Arena::CreateMaybeMessage<::CMsgClientToGCUpdateRosterResponse>(Arena*);
template<> ::CMsgClientToGCUpdateSpectatorStatus* Arena::CreateMaybeMessage<::CMsgClientToGCUpdateSpectatorStatus>(Arena*);
template<> ::CMsgClientWelcomeCitadel* Arena::CreateMaybeMessage<::CMsgClientWelcomeCitadel>(Arena*);
template<> ::CMsgDevMatchInfo* Arena::CreateMaybeMessage<::CMsgDevMatchInfo>(Arena*);
template<> ::CMsgDevMatchInfo_MatchPlayer* Arena::CreateMaybeMessage<::CMsgDevMatchInfo_MatchPlayer>(Arena*);
template<> ::CMsgGCToClientBookUpdated* Arena::CreateMaybeMessage<::CMsgGCToClientBookUpdated>(Arena*);
template<> ::CMsgGCToClientCanRejoinParty* Arena::CreateMaybeMessage<::CMsgGCToClientCanRejoinParty>(Arena*);
template<> ::CMsgGCToClientCommendNotification* Arena::CreateMaybeMessage<::CMsgGCToClientCommendNotification>(Arena*);
template<> ::CMsgGCToClientDevAnnouncements* Arena::CreateMaybeMessage<::CMsgGCToClientDevAnnouncements>(Arena*);
template<> ::CMsgGCToClientDevAnnouncements_Announcement* Arena::CreateMaybeMessage<::CMsgGCToClientDevAnnouncements_Announcement>(Arena*);
template<> ::CMsgGCToClientDevPlaytestStatus* Arena::CreateMaybeMessage<::CMsgGCToClientDevPlaytestStatus>(Arena*);
template<> ::CMsgGCToClientDevPlaytestStatus_DevQueueSize* Arena::CreateMaybeMessage<::CMsgGCToClientDevPlaytestStatus_DevQueueSize>(Arena*);
template<> ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist* Arena::CreateMaybeMessage<::CMsgGCToClientDevPlaytestStatus_HeroWhitelist>(Arena*);
template<> ::CMsgGCToClientHeroLabsSchedule* Arena::CreateMaybeMessage<::CMsgGCToClientHeroLabsSchedule>(Arena*);
template<> ::CMsgGCToClientHeroLabsSchedule_Schedule* Arena::CreateMaybeMessage<::CMsgGCToClientHeroLabsSchedule_Schedule>(Arena*);
template<> ::CMsgGCToClientHeroLabsSchedule_TimeRange* Arena::CreateMaybeMessage<::CMsgGCToClientHeroLabsSchedule_TimeRange>(Arena*);
template<> ::CMsgGCToClientMatchmakingStopped* Arena::CreateMaybeMessage<::CMsgGCToClientMatchmakingStopped>(Arena*);
template<> ::CMsgGCToClientPartyEvent* Arena::CreateMaybeMessage<::CMsgGCToClientPartyEvent>(Arena*);
template<> ::CMsgGCToClientSDRTicket* Arena::CreateMaybeMessage<::CMsgGCToClientSDRTicket>(Arena*);
template<> ::CMsgHeroBuild* Arena::CreateMaybeMessage<::CMsgHeroBuild>(Arena*);
template<> ::CMsgHeroBuildPreference* Arena::CreateMaybeMessage<::CMsgHeroBuildPreference>(Arena*);
template<> ::CMsgHeroBuild_AbilityOrder* Arena::CreateMaybeMessage<::CMsgHeroBuild_AbilityOrder>(Arena*);
template<> ::CMsgHeroBuild_BuildModCategory* Arena::CreateMaybeMessage<::CMsgHeroBuild_BuildModCategory>(Arena*);
template<> ::CMsgHeroBuild_BuildModEntry* Arena::CreateMaybeMessage<::CMsgHeroBuild_BuildModEntry>(Arena*);
template<> ::CMsgHeroBuild_CurrencyChange* Arena::CreateMaybeMessage<::CMsgHeroBuild_CurrencyChange>(Arena*);
template<> ::CMsgHeroBuild_Details_V0* Arena::CreateMaybeMessage<::CMsgHeroBuild_Details_V0>(Arena*);
template<> ::CMsgPartyMMInfo* Arena::CreateMaybeMessage<::CMsgPartyMMInfo>(Arena*);
template<> ::CSOAccountHeroInfo* Arena::CreateMaybeMessage<::CSOAccountHeroInfo>(Arena*);
template<> ::CSOAccountSyncStorage* Arena::CreateMaybeMessage<::CSOAccountSyncStorage>(Arena*);
template<> ::CSOGameAccountClient* Arena::CreateMaybeMessage<::CSOGameAccountClient>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum CSOGameAccountClient_EFlags : int {
  CSOGameAccountClient_EFlags_k_eDeveloper = 1,
  CSOGameAccountClient_EFlags_k_eExternalModerator = 2,
  CSOGameAccountClient_EFlags_k_eGotInitialHeroes = 4,
  CSOGameAccountClient_EFlags_k_eHideHolidayModels = 8,
  CSOGameAccountClient_EFlags_k_eClaimedDiscordLink = 16,
  CSOGameAccountClient_EFlags_k_eClaimedForum = 32,
  CSOGameAccountClient_EFlags_k_eAccountBanned = 64
};
bool CSOGameAccountClient_EFlags_IsValid(int value);
constexpr CSOGameAccountClient_EFlags CSOGameAccountClient_EFlags_EFlags_MIN = CSOGameAccountClient_EFlags_k_eDeveloper;
constexpr CSOGameAccountClient_EFlags CSOGameAccountClient_EFlags_EFlags_MAX = CSOGameAccountClient_EFlags_k_eAccountBanned;
constexpr int CSOGameAccountClient_EFlags_EFlags_ARRAYSIZE = CSOGameAccountClient_EFlags_EFlags_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CSOGameAccountClient_EFlags_descriptor();
template<typename T>
inline const std::string& CSOGameAccountClient_EFlags_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CSOGameAccountClient_EFlags>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CSOGameAccountClient_EFlags_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CSOGameAccountClient_EFlags_descriptor(), enum_t_value);
}
inline bool CSOGameAccountClient_EFlags_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CSOGameAccountClient_EFlags* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CSOGameAccountClient_EFlags>(
    CSOGameAccountClient_EFlags_descriptor(), name, value);
}
enum CSOAccountHeroInfo_EHeroStatus : int {
  CSOAccountHeroInfo_EHeroStatus_k_eLocked = 0,
  CSOAccountHeroInfo_EHeroStatus_k_eOwned = 1
};
bool CSOAccountHeroInfo_EHeroStatus_IsValid(int value);
constexpr CSOAccountHeroInfo_EHeroStatus CSOAccountHeroInfo_EHeroStatus_EHeroStatus_MIN = CSOAccountHeroInfo_EHeroStatus_k_eLocked;
constexpr CSOAccountHeroInfo_EHeroStatus CSOAccountHeroInfo_EHeroStatus_EHeroStatus_MAX = CSOAccountHeroInfo_EHeroStatus_k_eOwned;
constexpr int CSOAccountHeroInfo_EHeroStatus_EHeroStatus_ARRAYSIZE = CSOAccountHeroInfo_EHeroStatus_EHeroStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CSOAccountHeroInfo_EHeroStatus_descriptor();
template<typename T>
inline const std::string& CSOAccountHeroInfo_EHeroStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CSOAccountHeroInfo_EHeroStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CSOAccountHeroInfo_EHeroStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CSOAccountHeroInfo_EHeroStatus_descriptor(), enum_t_value);
}
inline bool CSOAccountHeroInfo_EHeroStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CSOAccountHeroInfo_EHeroStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CSOAccountHeroInfo_EHeroStatus>(
    CSOAccountHeroInfo_EHeroStatus_descriptor(), name, value);
}
enum CMsgClientToGCStartMatchmakingResponse_EResultCode : int {
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_OK = 0,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_AlreadyFindingMatch = 1,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_PartyMemberInLobby = 2,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_InvalidClientVersion = 3,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_MatchmakingDisabled = 4,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_MatchmakingTooBusy = 5,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_InternalError = 6,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_NoRegionPings = 7,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_InParty = 8,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_ModeLocked = 9,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_ModeBanned = 10,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_RegionInfoNotProvided = 11,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_DurationControlBlocked = 12,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_InvalidHeroSelection = 13,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_HeroesNotUnlocked = 14,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_PermanentBan = 15,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_RankedMMNotOpen = 16,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_RankedNotUnlocked = 17,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_NoRankedWhileInLowPri = 18,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_NoRankedWhileCommsBanned = 19,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_NoRankedWhileReportBanned = 20,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_HeroLabsMMNotOpen = 21,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_HeroLabsNotUnlocked = 22,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_NoHeroLabsWhileInLowPri = 23,
  CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_AccountLocked = 24
};
bool CMsgClientToGCStartMatchmakingResponse_EResultCode_IsValid(int value);
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse_EResultCode_EResultCode_MIN = CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_OK;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse_EResultCode_EResultCode_MAX = CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_AccountLocked;
constexpr int CMsgClientToGCStartMatchmakingResponse_EResultCode_EResultCode_ARRAYSIZE = CMsgClientToGCStartMatchmakingResponse_EResultCode_EResultCode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCStartMatchmakingResponse_EResultCode_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCStartMatchmakingResponse_EResultCode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCStartMatchmakingResponse_EResultCode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCStartMatchmakingResponse_EResultCode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCStartMatchmakingResponse_EResultCode_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCStartMatchmakingResponse_EResultCode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCStartMatchmakingResponse_EResultCode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCStartMatchmakingResponse_EResultCode>(
    CMsgClientToGCStartMatchmakingResponse_EResultCode_descriptor(), name, value);
}
enum CMsgGCToClientMatchmakingStopped_EReason : int {
  CMsgGCToClientMatchmakingStopped_EReason_k_EResult_Unspecified = 0,
  CMsgGCToClientMatchmakingStopped_EReason_k_EResult_VersionUpdated = 1,
  CMsgGCToClientMatchmakingStopped_EReason_k_EResult_RankedClosed = 2,
  CMsgGCToClientMatchmakingStopped_EReason_k_EResult_HeroLabsClosed = 3
};
bool CMsgGCToClientMatchmakingStopped_EReason_IsValid(int value);
constexpr CMsgGCToClientMatchmakingStopped_EReason CMsgGCToClientMatchmakingStopped_EReason_EReason_MIN = CMsgGCToClientMatchmakingStopped_EReason_k_EResult_Unspecified;
constexpr CMsgGCToClientMatchmakingStopped_EReason CMsgGCToClientMatchmakingStopped_EReason_EReason_MAX = CMsgGCToClientMatchmakingStopped_EReason_k_EResult_HeroLabsClosed;
constexpr int CMsgGCToClientMatchmakingStopped_EReason_EReason_ARRAYSIZE = CMsgGCToClientMatchmakingStopped_EReason_EReason_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgGCToClientMatchmakingStopped_EReason_descriptor();
template<typename T>
inline const std::string& CMsgGCToClientMatchmakingStopped_EReason_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgGCToClientMatchmakingStopped_EReason>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgGCToClientMatchmakingStopped_EReason_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgGCToClientMatchmakingStopped_EReason_descriptor(), enum_t_value);
}
inline bool CMsgGCToClientMatchmakingStopped_EReason_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgGCToClientMatchmakingStopped_EReason* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgGCToClientMatchmakingStopped_EReason>(
    CMsgGCToClientMatchmakingStopped_EReason_descriptor(), name, value);
}
enum CMsgClientToGCPartyCreateResponse_EResponse : int {
  CMsgClientToGCPartyCreateResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCPartyCreateResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCPartyCreateResponse_EResponse_k_eAlreadyInParty = 2,
  CMsgClientToGCPartyCreateResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCPartyCreateResponse_EResponse_k_eInvalidVersion = 4,
  CMsgClientToGCPartyCreateResponse_EResponse_k_eNoRegionPings = 5,
  CMsgClientToGCPartyCreateResponse_EResponse_k_eTooBusy = 6,
  CMsgClientToGCPartyCreateResponse_EResponse_k_eRateLimited = 7,
  CMsgClientToGCPartyCreateResponse_EResponse_k_eNotFriends = 8,
  CMsgClientToGCPartyCreateResponse_EResponse_k_eRegionInfoNotProvided = 9,
  CMsgClientToGCPartyCreateResponse_EResponse_k_eDurationControlBlocked = 10,
  CMsgClientToGCPartyCreateResponse_EResponse_k_eInMatchmaking = 11,
  CMsgClientToGCPartyCreateResponse_EResponse_k_ePlayerDoesntHaveGame = 12
};
bool CMsgClientToGCPartyCreateResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse_EResponse_EResponse_MIN = CMsgClientToGCPartyCreateResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse_EResponse_EResponse_MAX = CMsgClientToGCPartyCreateResponse_EResponse_k_ePlayerDoesntHaveGame;
constexpr int CMsgClientToGCPartyCreateResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCPartyCreateResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartyCreateResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCPartyCreateResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCPartyCreateResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCPartyCreateResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCPartyCreateResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCPartyCreateResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCPartyCreateResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCPartyCreateResponse_EResponse>(
    CMsgClientToGCPartyCreateResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCPartyLeaveResponse_EResponse : int {
  CMsgClientToGCPartyLeaveResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCPartyLeaveResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCPartyLeaveResponse_EResponse_k_eNotInParty = 2,
  CMsgClientToGCPartyLeaveResponse_EResponse_k_eInMatchMaking = 3
};
bool CMsgClientToGCPartyLeaveResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCPartyLeaveResponse_EResponse CMsgClientToGCPartyLeaveResponse_EResponse_EResponse_MIN = CMsgClientToGCPartyLeaveResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCPartyLeaveResponse_EResponse CMsgClientToGCPartyLeaveResponse_EResponse_EResponse_MAX = CMsgClientToGCPartyLeaveResponse_EResponse_k_eInMatchMaking;
constexpr int CMsgClientToGCPartyLeaveResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCPartyLeaveResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartyLeaveResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCPartyLeaveResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCPartyLeaveResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCPartyLeaveResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCPartyLeaveResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCPartyLeaveResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCPartyLeaveResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCPartyLeaveResponse_EResponse>(
    CMsgClientToGCPartyLeaveResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCPartyJoinResponse_EResponse : int {
  CMsgClientToGCPartyJoinResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCPartyJoinResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCPartyJoinResponse_EResponse_k_eAlreadyInParty = 2,
  CMsgClientToGCPartyJoinResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCPartyJoinResponse_EResponse_k_eInvalidPartyID = 4,
  CMsgClientToGCPartyJoinResponse_EResponse_k_eInvalidPermissions = 5,
  CMsgClientToGCPartyJoinResponse_EResponse_k_eInvalidVersion = 6,
  CMsgClientToGCPartyJoinResponse_EResponse_k_eNoRegionPings = 7,
  CMsgClientToGCPartyJoinResponse_EResponse_k_eTooBusy = 8,
  CMsgClientToGCPartyJoinResponse_EResponse_k_eInvalidCode = 9,
  CMsgClientToGCPartyJoinResponse_EResponse_k_eRateLimited = 10,
  CMsgClientToGCPartyJoinResponse_EResponse_k_eRegionInfoNotProvided = 11,
  CMsgClientToGCPartyJoinResponse_EResponse_k_eDurationControlBlocked = 12,
  CMsgClientToGCPartyJoinResponse_EResponse_k_ePartyInMatchMaking = 13,
  CMsgClientToGCPartyJoinResponse_EResponse_k_eInMatchmaking = 14,
  CMsgClientToGCPartyJoinResponse_EResponse_k_ePartyFull = 15
};
bool CMsgClientToGCPartyJoinResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse_EResponse_EResponse_MIN = CMsgClientToGCPartyJoinResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse_EResponse_EResponse_MAX = CMsgClientToGCPartyJoinResponse_EResponse_k_ePartyFull;
constexpr int CMsgClientToGCPartyJoinResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCPartyJoinResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartyJoinResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCPartyJoinResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCPartyJoinResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCPartyJoinResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCPartyJoinResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCPartyJoinResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCPartyJoinResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCPartyJoinResponse_EResponse>(
    CMsgClientToGCPartyJoinResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCPartyAction_EAction : int {
  CMsgClientToGCPartyAction_EAction_k_eKickUser = 1,
  CMsgClientToGCPartyAction_EAction_k_eCancelInvite = 2,
  CMsgClientToGCPartyAction_EAction_k_eCancelFindMatch = 3,
  CMsgClientToGCPartyAction_EAction_k_eSetPlayerType = 5,
  CMsgClientToGCPartyAction_EAction_k_eEnablePartyCode = 7,
  CMsgClientToGCPartyAction_EAction_k_eSetMemberTeam = 8,
  CMsgClientToGCPartyAction_EAction_k_eSetChatMode = 9,
  CMsgClientToGCPartyAction_EAction_k_eSetPlayerSlot = 10,
  CMsgClientToGCPartyAction_EAction_k_eSetRegionMode = 11,
  CMsgClientToGCPartyAction_EAction_k_eSetSearchKey = 12,
  CMsgClientToGCPartyAction_EAction_k_eSetBotDifficulty = 13,
  CMsgClientToGCPartyAction_EAction_k_eSetRandomizedLanes = 14,
  CMsgClientToGCPartyAction_EAction_k_eSetServerRegion = 15,
  CMsgClientToGCPartyAction_EAction_k_eSetPubliclyVisible = 16,
  CMsgClientToGCPartyAction_EAction_k_eSetCheatsEnabled = 17,
  CMsgClientToGCPartyAction_EAction_k_eSwapTeams = 18,
  CMsgClientToGCPartyAction_EAction_k_eShuffleLobby = 19,
  CMsgClientToGCPartyAction_EAction_k_eShuffleLanes = 20,
  CMsgClientToGCPartyAction_EAction_k_eSetDuplicateHeroesEnabled = 21,
  CMsgClientToGCPartyAction_EAction_k_eSetExperimentalHeroesEnabled = 22,
  CMsgClientToGCPartyAction_EAction_k_eSetDesiresLaningTogether = 23,
  CMsgClientToGCPartyAction_EAction_k_eSetMMPreference = 24
};
bool CMsgClientToGCPartyAction_EAction_IsValid(int value);
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction_EAction_EAction_MIN = CMsgClientToGCPartyAction_EAction_k_eKickUser;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction_EAction_EAction_MAX = CMsgClientToGCPartyAction_EAction_k_eSetMMPreference;
constexpr int CMsgClientToGCPartyAction_EAction_EAction_ARRAYSIZE = CMsgClientToGCPartyAction_EAction_EAction_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartyAction_EAction_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCPartyAction_EAction_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCPartyAction_EAction>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCPartyAction_EAction_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCPartyAction_EAction_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCPartyAction_EAction_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCPartyAction_EAction* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCPartyAction_EAction>(
    CMsgClientToGCPartyAction_EAction_descriptor(), name, value);
}
enum CMsgClientToGCPartyActionResponse_EResponse : int {
  CMsgClientToGCPartyActionResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCPartyActionResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCPartyActionResponse_EResponse_k_eInvalidPartyID = 2,
  CMsgClientToGCPartyActionResponse_EResponse_k_eInvalidPermissions = 3,
  CMsgClientToGCPartyActionResponse_EResponse_k_eInvalidTarget = 4,
  CMsgClientToGCPartyActionResponse_EResponse_k_eInvalidValue = 5,
  CMsgClientToGCPartyActionResponse_EResponse_k_eInMatchMaking = 6,
  CMsgClientToGCPartyActionResponse_EResponse_k_eInMatch = 7,
  CMsgClientToGCPartyActionResponse_EResponse_k_eDisabled = 8,
  CMsgClientToGCPartyActionResponse_EResponse_k_eTooBusy = 9,
  CMsgClientToGCPartyActionResponse_EResponse_k_eRateLimited = 10,
  CMsgClientToGCPartyActionResponse_EResponse_k_eCannotChangeWhileReady = 12,
  CMsgClientToGCPartyActionResponse_EResponse_k_eSlotTaken = 13
};
bool CMsgClientToGCPartyActionResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse_EResponse_EResponse_MIN = CMsgClientToGCPartyActionResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse_EResponse_EResponse_MAX = CMsgClientToGCPartyActionResponse_EResponse_k_eSlotTaken;
constexpr int CMsgClientToGCPartyActionResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCPartyActionResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartyActionResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCPartyActionResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCPartyActionResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCPartyActionResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCPartyActionResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCPartyActionResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCPartyActionResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCPartyActionResponse_EResponse>(
    CMsgClientToGCPartyActionResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCPartySetModeResponse_EResponse : int {
  CMsgClientToGCPartySetModeResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eInvalidPartyID = 2,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eInvalidPermissions = 3,
  CMsgClientToGCPartySetModeResponse_EResponse_k_ePlayerPermanentBanned = 4,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eInvalidValue = 5,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eInMatchMaking = 6,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eInMatch = 7,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eDisabled = 8,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eTooBusy = 9,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eRateLimited = 10,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eAlreadyDrafting = 11,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eCannotChangeWhileReady = 12,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eTooFewPlayers = 13,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eTooManyPlayers = 14,
  CMsgClientToGCPartySetModeResponse_EResponse_k_ePlayerBanned = 15,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eTooManyHighMMR = 16,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eFiveStacksNotAllowed = 18,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eRankedMMNotOpen = 19,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eRankedNotunlocked = 20,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eHeroLabsMMNotOpen = 21,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eHeroLabsNotUnlocked = 22,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eNoHeroLabsWhileInLowPri = 23,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eNoHighRangeFiveStack = 24,
  CMsgClientToGCPartySetModeResponse_EResponse_k_eAccountLocked = 25
};
bool CMsgClientToGCPartySetModeResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse_EResponse_EResponse_MIN = CMsgClientToGCPartySetModeResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse_EResponse_EResponse_MAX = CMsgClientToGCPartySetModeResponse_EResponse_k_eAccountLocked;
constexpr int CMsgClientToGCPartySetModeResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCPartySetModeResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartySetModeResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCPartySetModeResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCPartySetModeResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCPartySetModeResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCPartySetModeResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCPartySetModeResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCPartySetModeResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCPartySetModeResponse_EResponse>(
    CMsgClientToGCPartySetModeResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCPartyStartMatchResponse_EResponse : int {
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eDisabled = 2,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInvalidPartyID = 3,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInvalidPermissions = 4,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooBusy = 5,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInMatchmaking = 6,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInMatch = 7,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInvalidVersion = 10,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_ePlayersNotReady = 11,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eCannotSelectRegion = 12,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eNotAllPlayersAvailable = 13,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooManyPlayersForMM = 14,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooManyPlayersForPrivate = 15,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooManySpectatorsForMM = 16,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooManySpectatorsForPrivate = 17,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooFewPlayersForMM = 18,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooFewPlayersForPrivate = 19,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eMismatchedVersions = 20,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInvalidPartyMatchMode = 21,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_ePlayerBannedFromMode = 22,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooManyPlayersOnTeam = 23,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInvalidTeam = 24,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInvalidHeroLineup = 25,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInvalidGroupHeroLineup = 26,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eUnassignedPlayers = 27,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eRankedMMNotOpen = 28,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eHeroLabsMMNotOpen = 29,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eHeroLabsNotUnlocked = 30,
  CMsgClientToGCPartyStartMatchResponse_EResponse_k_eNoHeroLabsWhileInLowPri = 31
};
bool CMsgClientToGCPartyStartMatchResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse_EResponse_EResponse_MIN = CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse_EResponse_EResponse_MAX = CMsgClientToGCPartyStartMatchResponse_EResponse_k_eNoHeroLabsWhileInLowPri;
constexpr int CMsgClientToGCPartyStartMatchResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCPartyStartMatchResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartyStartMatchResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCPartyStartMatchResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCPartyStartMatchResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCPartyStartMatchResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCPartyStartMatchResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCPartyStartMatchResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCPartyStartMatchResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCPartyStartMatchResponse_EResponse>(
    CMsgClientToGCPartyStartMatchResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCPartyInviteUserResponse_EResponse : int {
  CMsgClientToGCPartyInviteUserResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCPartyInviteUserResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCPartyInviteUserResponse_EResponse_k_eAlreadyInvited = 2,
  CMsgClientToGCPartyInviteUserResponse_EResponse_k_eInvalidPermissions = 3,
  CMsgClientToGCPartyInviteUserResponse_EResponse_k_eInvalidPartyID = 4,
  CMsgClientToGCPartyInviteUserResponse_EResponse_k_eDisabled = 5,
  CMsgClientToGCPartyInviteUserResponse_EResponse_k_eTooManyInvites = 6,
  CMsgClientToGCPartyInviteUserResponse_EResponse_k_eNotFriends = 7,
  CMsgClientToGCPartyInviteUserResponse_EResponse_k_eTooBusy = 8,
  CMsgClientToGCPartyInviteUserResponse_EResponse_k_eRateLimited = 9,
  CMsgClientToGCPartyInviteUserResponse_EResponse_k_eInvalidPartyMode = 10,
  CMsgClientToGCPartyInviteUserResponse_EResponse_k_ePlayerDoesntHaveGame = 11
};
bool CMsgClientToGCPartyInviteUserResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse_EResponse_EResponse_MIN = CMsgClientToGCPartyInviteUserResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse_EResponse_EResponse_MAX = CMsgClientToGCPartyInviteUserResponse_EResponse_k_ePlayerDoesntHaveGame;
constexpr int CMsgClientToGCPartyInviteUserResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCPartyInviteUserResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartyInviteUserResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCPartyInviteUserResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCPartyInviteUserResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCPartyInviteUserResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCPartyInviteUserResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCPartyInviteUserResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCPartyInviteUserResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCPartyInviteUserResponse_EResponse>(
    CMsgClientToGCPartyInviteUserResponse_EResponse_descriptor(), name, value);
}
enum CMsgGCToClientPartyEvent_EEvent : int {
  CMsgGCToClientPartyEvent_EEvent_k_ePlayerKicked = 1,
  CMsgGCToClientPartyEvent_EEvent_k_eJoinedParty = 3,
  CMsgGCToClientPartyEvent_EEvent_k_eMatchCompleted = 4,
  CMsgGCToClientPartyEvent_EEvent_k_eMatchMakingStopped_User = 5,
  CMsgGCToClientPartyEvent_EEvent_k_eMatchMakingStopped_Version = 6,
  CMsgGCToClientPartyEvent_EEvent_k_eMatchMakingStopped_NoServerRegion = 7,
  CMsgGCToClientPartyEvent_EEvent_k_eLeftParty = 8,
  CMsgGCToClientPartyEvent_EEvent_k_eDeclinedInvite = 9,
  CMsgGCToClientPartyEvent_EEvent_k_eMatchMakingStopped_FailedOther = 10,
  CMsgGCToClientPartyEvent_EEvent_k_eDraftEnded_User = 11,
  CMsgGCToClientPartyEvent_EEvent_k_eStartDraftMMFailed = 12,
  CMsgGCToClientPartyEvent_EEvent_k_eMatchMakingStopped_Cancelled = 13
};
bool CMsgGCToClientPartyEvent_EEvent_IsValid(int value);
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent_EEvent_EEvent_MIN = CMsgGCToClientPartyEvent_EEvent_k_ePlayerKicked;
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent_EEvent_EEvent_MAX = CMsgGCToClientPartyEvent_EEvent_k_eMatchMakingStopped_Cancelled;
constexpr int CMsgGCToClientPartyEvent_EEvent_EEvent_ARRAYSIZE = CMsgGCToClientPartyEvent_EEvent_EEvent_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgGCToClientPartyEvent_EEvent_descriptor();
template<typename T>
inline const std::string& CMsgGCToClientPartyEvent_EEvent_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgGCToClientPartyEvent_EEvent>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgGCToClientPartyEvent_EEvent_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgGCToClientPartyEvent_EEvent_descriptor(), enum_t_value);
}
inline bool CMsgGCToClientPartyEvent_EEvent_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgGCToClientPartyEvent_EEvent* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgGCToClientPartyEvent_EEvent>(
    CMsgGCToClientPartyEvent_EEvent_descriptor(), name, value);
}
enum CMsgClientToGCPartySetReadyStateResponse_EResponse : int {
  CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eInvalidPermissions = 2,
  CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eTooBusy = 4,
  CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eRateLimited = 5,
  CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eInvalidRoster = 6,
  CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eMatchForming = 7,
  CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eInvalidGroupRoster = 8,
  CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eInMatch = 9,
  CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eHeroesNotUnlocked = 10,
  CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eModeLocked = 11,
  CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eModeBanned = 12
};
bool CMsgClientToGCPartySetReadyStateResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse_EResponse_EResponse_MIN = CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse_EResponse_EResponse_MAX = CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eModeBanned;
constexpr int CMsgClientToGCPartySetReadyStateResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCPartySetReadyStateResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartySetReadyStateResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCPartySetReadyStateResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCPartySetReadyStateResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCPartySetReadyStateResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCPartySetReadyStateResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCPartySetReadyStateResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCPartySetReadyStateResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCPartySetReadyStateResponse_EResponse>(
    CMsgClientToGCPartySetReadyStateResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCGetMatchHistoryResponse_EResult : int {
  CMsgClientToGCGetMatchHistoryResponse_EResult_k_eResult_InternalError = 0,
  CMsgClientToGCGetMatchHistoryResponse_EResult_k_eResult_Success = 1,
  CMsgClientToGCGetMatchHistoryResponse_EResult_k_eResult_InvalidPermission = 2,
  CMsgClientToGCGetMatchHistoryResponse_EResult_k_eResult_TemporarilyDisabled = 3,
  CMsgClientToGCGetMatchHistoryResponse_EResult_k_eResult_TooBusy = 4,
  CMsgClientToGCGetMatchHistoryResponse_EResult_k_eResult_RateLimited = 5
};
bool CMsgClientToGCGetMatchHistoryResponse_EResult_IsValid(int value);
constexpr CMsgClientToGCGetMatchHistoryResponse_EResult CMsgClientToGCGetMatchHistoryResponse_EResult_EResult_MIN = CMsgClientToGCGetMatchHistoryResponse_EResult_k_eResult_InternalError;
constexpr CMsgClientToGCGetMatchHistoryResponse_EResult CMsgClientToGCGetMatchHistoryResponse_EResult_EResult_MAX = CMsgClientToGCGetMatchHistoryResponse_EResult_k_eResult_RateLimited;
constexpr int CMsgClientToGCGetMatchHistoryResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCGetMatchHistoryResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetMatchHistoryResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetMatchHistoryResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetMatchHistoryResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetMatchHistoryResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetMatchHistoryResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetMatchHistoryResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetMatchHistoryResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetMatchHistoryResponse_EResult>(
    CMsgClientToGCGetMatchHistoryResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCSpectateUserResponse_EResponse : int {
  CMsgClientToGCSpectateUserResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCSpectateUserResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCSpectateUserResponse_EResponse_k_eDisabled = 2,
  CMsgClientToGCSpectateUserResponse_EResponse_k_eTooBusy = 3,
  CMsgClientToGCSpectateUserResponse_EResponse_k_eRateLimited = 4,
  CMsgClientToGCSpectateUserResponse_EResponse_k_eNotInGame = 5,
  CMsgClientToGCSpectateUserResponse_EResponse_k_eDisabledForGame = 6,
  CMsgClientToGCSpectateUserResponse_EResponse_k_eServerFull = 7,
  CMsgClientToGCSpectateUserResponse_EResponse_k_eNotFriends = 8,
  CMsgClientToGCSpectateUserResponse_EResponse_k_eRegionInfoNotProvided = 9,
  CMsgClientToGCSpectateUserResponse_EResponse_k_eDurationControlBlocked = 10,
  CMsgClientToGCSpectateUserResponse_EResponse_k_eInvalidClientVersion = 11,
  CMsgClientToGCSpectateUserResponse_EResponse_k_eInvalidRegion = 12
};
bool CMsgClientToGCSpectateUserResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse_EResponse_EResponse_MIN = CMsgClientToGCSpectateUserResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse_EResponse_EResponse_MAX = CMsgClientToGCSpectateUserResponse_EResponse_k_eInvalidRegion;
constexpr int CMsgClientToGCSpectateUserResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCSpectateUserResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSpectateUserResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCSpectateUserResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCSpectateUserResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCSpectateUserResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCSpectateUserResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCSpectateUserResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCSpectateUserResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCSpectateUserResponse_EResponse>(
    CMsgClientToGCSpectateUserResponse_EResponse_descriptor(), name, value);
}
enum CMsgCitadelProfileCard_EStatID : int {
  CMsgCitadelProfileCard_EStatID_k_eStat_Invalid = 0,
  CMsgCitadelProfileCard_EStatID_k_eStat_Wins = 1,
  CMsgCitadelProfileCard_EStatID_k_eStat_Kills = 2,
  CMsgCitadelProfileCard_EStatID_k_eStat_GamesPlayed = 3
};
bool CMsgCitadelProfileCard_EStatID_IsValid(int value);
constexpr CMsgCitadelProfileCard_EStatID CMsgCitadelProfileCard_EStatID_EStatID_MIN = CMsgCitadelProfileCard_EStatID_k_eStat_Invalid;
constexpr CMsgCitadelProfileCard_EStatID CMsgCitadelProfileCard_EStatID_EStatID_MAX = CMsgCitadelProfileCard_EStatID_k_eStat_GamesPlayed;
constexpr int CMsgCitadelProfileCard_EStatID_EStatID_ARRAYSIZE = CMsgCitadelProfileCard_EStatID_EStatID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgCitadelProfileCard_EStatID_descriptor();
template<typename T>
inline const std::string& CMsgCitadelProfileCard_EStatID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgCitadelProfileCard_EStatID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgCitadelProfileCard_EStatID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgCitadelProfileCard_EStatID_descriptor(), enum_t_value);
}
inline bool CMsgCitadelProfileCard_EStatID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgCitadelProfileCard_EStatID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgCitadelProfileCard_EStatID>(
    CMsgCitadelProfileCard_EStatID_descriptor(), name, value);
}
enum CMsgClientToGCUpdateRosterResponse_EResponse : int {
  CMsgClientToGCUpdateRosterResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCUpdateRosterResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCUpdateRosterResponse_EResponse_k_eDisabled = 2,
  CMsgClientToGCUpdateRosterResponse_EResponse_k_eTooBusy = 3,
  CMsgClientToGCUpdateRosterResponse_EResponse_k_eRateLimited = 4,
  CMsgClientToGCUpdateRosterResponse_EResponse_k_eMMBusy = 5,
  CMsgClientToGCUpdateRosterResponse_EResponse_k_eInvalidHeroSelection = 6,
  CMsgClientToGCUpdateRosterResponse_EResponse_k_eHeroesNotUnlocked = 7
};
bool CMsgClientToGCUpdateRosterResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCUpdateRosterResponse_EResponse CMsgClientToGCUpdateRosterResponse_EResponse_EResponse_MIN = CMsgClientToGCUpdateRosterResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCUpdateRosterResponse_EResponse CMsgClientToGCUpdateRosterResponse_EResponse_EResponse_MAX = CMsgClientToGCUpdateRosterResponse_EResponse_k_eHeroesNotUnlocked;
constexpr int CMsgClientToGCUpdateRosterResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCUpdateRosterResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCUpdateRosterResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCUpdateRosterResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCUpdateRosterResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCUpdateRosterResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCUpdateRosterResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCUpdateRosterResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCUpdateRosterResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCUpdateRosterResponse_EResponse>(
    CMsgClientToGCUpdateRosterResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCGetAccountStatsResponse_EResult : int {
  CMsgClientToGCGetAccountStatsResponse_EResult_k_eInternalError = 0,
  CMsgClientToGCGetAccountStatsResponse_EResult_k_eSuccess = 1,
  CMsgClientToGCGetAccountStatsResponse_EResult_k_eDisabled = 2,
  CMsgClientToGCGetAccountStatsResponse_EResult_k_eTooBusy = 3,
  CMsgClientToGCGetAccountStatsResponse_EResult_k_eRateLimited = 4,
  CMsgClientToGCGetAccountStatsResponse_EResult_k_eInvalidPermissions = 5
};
bool CMsgClientToGCGetAccountStatsResponse_EResult_IsValid(int value);
constexpr CMsgClientToGCGetAccountStatsResponse_EResult CMsgClientToGCGetAccountStatsResponse_EResult_EResult_MIN = CMsgClientToGCGetAccountStatsResponse_EResult_k_eInternalError;
constexpr CMsgClientToGCGetAccountStatsResponse_EResult CMsgClientToGCGetAccountStatsResponse_EResult_EResult_MAX = CMsgClientToGCGetAccountStatsResponse_EResult_k_eInvalidPermissions;
constexpr int CMsgClientToGCGetAccountStatsResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCGetAccountStatsResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetAccountStatsResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetAccountStatsResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetAccountStatsResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetAccountStatsResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetAccountStatsResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetAccountStatsResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetAccountStatsResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetAccountStatsResponse_EResult>(
    CMsgClientToGCGetAccountStatsResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCGetMatchMetaDataResponse_EResult : int {
  CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_InternalError = 0,
  CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_Success = 1,
  CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_InvalidPermission = 2,
  CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_TemporarilyDisabled = 3,
  CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_TooBusy = 4,
  CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_RateLimited = 5,
  CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_InvalidMatch = 6,
  CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_MatchInFlight = 7
};
bool CMsgClientToGCGetMatchMetaDataResponse_EResult_IsValid(int value);
constexpr CMsgClientToGCGetMatchMetaDataResponse_EResult CMsgClientToGCGetMatchMetaDataResponse_EResult_EResult_MIN = CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_InternalError;
constexpr CMsgClientToGCGetMatchMetaDataResponse_EResult CMsgClientToGCGetMatchMetaDataResponse_EResult_EResult_MAX = CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_MatchInFlight;
constexpr int CMsgClientToGCGetMatchMetaDataResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCGetMatchMetaDataResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetMatchMetaDataResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetMatchMetaDataResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetMatchMetaDataResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetMatchMetaDataResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetMatchMetaDataResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetMatchMetaDataResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetMatchMetaDataResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetMatchMetaDataResponse_EResult>(
    CMsgClientToGCGetMatchMetaDataResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCModifyDevAnnouncements_EOperation : int {
  CMsgClientToGCModifyDevAnnouncements_EOperation_k_eCreate = 0,
  CMsgClientToGCModifyDevAnnouncements_EOperation_k_eUpdate = 1,
  CMsgClientToGCModifyDevAnnouncements_EOperation_k_eDelete = 2
};
bool CMsgClientToGCModifyDevAnnouncements_EOperation_IsValid(int value);
constexpr CMsgClientToGCModifyDevAnnouncements_EOperation CMsgClientToGCModifyDevAnnouncements_EOperation_EOperation_MIN = CMsgClientToGCModifyDevAnnouncements_EOperation_k_eCreate;
constexpr CMsgClientToGCModifyDevAnnouncements_EOperation CMsgClientToGCModifyDevAnnouncements_EOperation_EOperation_MAX = CMsgClientToGCModifyDevAnnouncements_EOperation_k_eDelete;
constexpr int CMsgClientToGCModifyDevAnnouncements_EOperation_EOperation_ARRAYSIZE = CMsgClientToGCModifyDevAnnouncements_EOperation_EOperation_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCModifyDevAnnouncements_EOperation_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCModifyDevAnnouncements_EOperation_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCModifyDevAnnouncements_EOperation>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCModifyDevAnnouncements_EOperation_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCModifyDevAnnouncements_EOperation_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCModifyDevAnnouncements_EOperation_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCModifyDevAnnouncements_EOperation* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCModifyDevAnnouncements_EOperation>(
    CMsgClientToGCModifyDevAnnouncements_EOperation_descriptor(), name, value);
}
enum CMsgClientToGCModifyDevAnnouncementsResponse_EResult : int {
  CMsgClientToGCModifyDevAnnouncementsResponse_EResult_k_eSuccess = 0,
  CMsgClientToGCModifyDevAnnouncementsResponse_EResult_k_eInvalidPermission = 1,
  CMsgClientToGCModifyDevAnnouncementsResponse_EResult_k_eInvalidTarget = 2,
  CMsgClientToGCModifyDevAnnouncementsResponse_EResult_k_eInternalError = 3
};
bool CMsgClientToGCModifyDevAnnouncementsResponse_EResult_IsValid(int value);
constexpr CMsgClientToGCModifyDevAnnouncementsResponse_EResult CMsgClientToGCModifyDevAnnouncementsResponse_EResult_EResult_MIN = CMsgClientToGCModifyDevAnnouncementsResponse_EResult_k_eSuccess;
constexpr CMsgClientToGCModifyDevAnnouncementsResponse_EResult CMsgClientToGCModifyDevAnnouncementsResponse_EResult_EResult_MAX = CMsgClientToGCModifyDevAnnouncementsResponse_EResult_k_eInternalError;
constexpr int CMsgClientToGCModifyDevAnnouncementsResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCModifyDevAnnouncementsResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCModifyDevAnnouncementsResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCModifyDevAnnouncementsResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCModifyDevAnnouncementsResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCModifyDevAnnouncementsResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCModifyDevAnnouncementsResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCModifyDevAnnouncementsResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCModifyDevAnnouncementsResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCModifyDevAnnouncementsResponse_EResult>(
    CMsgClientToGCModifyDevAnnouncementsResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCDevAction_EAction : int {
  CMsgClientToGCDevAction_EAction_k_eSetDeveloper = 1,
  CMsgClientToGCDevAction_EAction_k_eSetMMR = 2,
  CMsgClientToGCDevAction_EAction_k_eSetMMRUncertainty = 3,
  CMsgClientToGCDevAction_EAction_k_eSetHeroStatus = 4,
  CMsgClientToGCDevAction_EAction_k_eSetPermission = 5,
  CMsgClientToGCDevAction_EAction_k_eSetNewPlayerProgress = 6,
  CMsgClientToGCDevAction_EAction_k_eForceAccountStorage = 7,
  CMsgClientToGCDevAction_EAction_k_eBookReset = 9,
  CMsgClientToGCDevAction_EAction_k_eBookXPGrant = 10,
  CMsgClientToGCDevAction_EAction_k_eBanAccount = 11,
  CMsgClientToGCDevAction_EAction_k_eExonerateAccount = 12,
  CMsgClientToGCDevAction_EAction_k_eRequireAccountInMM = 13
};
bool CMsgClientToGCDevAction_EAction_IsValid(int value);
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction_EAction_EAction_MIN = CMsgClientToGCDevAction_EAction_k_eSetDeveloper;
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction_EAction_EAction_MAX = CMsgClientToGCDevAction_EAction_k_eRequireAccountInMM;
constexpr int CMsgClientToGCDevAction_EAction_EAction_ARRAYSIZE = CMsgClientToGCDevAction_EAction_EAction_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCDevAction_EAction_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCDevAction_EAction_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCDevAction_EAction>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCDevAction_EAction_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCDevAction_EAction_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCDevAction_EAction_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCDevAction_EAction* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCDevAction_EAction>(
    CMsgClientToGCDevAction_EAction_descriptor(), name, value);
}
enum CMsgClientToGCDevActionResponse_EResult : int {
  CMsgClientToGCDevActionResponse_EResult_k_eSuccess = 0,
  CMsgClientToGCDevActionResponse_EResult_k_eInvalidPermission = 1,
  CMsgClientToGCDevActionResponse_EResult_k_eInvalidTarget = 2,
  CMsgClientToGCDevActionResponse_EResult_k_eInternalError = 3
};
bool CMsgClientToGCDevActionResponse_EResult_IsValid(int value);
constexpr CMsgClientToGCDevActionResponse_EResult CMsgClientToGCDevActionResponse_EResult_EResult_MIN = CMsgClientToGCDevActionResponse_EResult_k_eSuccess;
constexpr CMsgClientToGCDevActionResponse_EResult CMsgClientToGCDevActionResponse_EResult_EResult_MAX = CMsgClientToGCDevActionResponse_EResult_k_eInternalError;
constexpr int CMsgClientToGCDevActionResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCDevActionResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCDevActionResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCDevActionResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCDevActionResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCDevActionResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCDevActionResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCDevActionResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCDevActionResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCDevActionResponse_EResult>(
    CMsgClientToGCDevActionResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCUpdateAccountSyncResponse_EResponse : int {
  CMsgClientToGCUpdateAccountSyncResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCUpdateAccountSyncResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCUpdateAccountSyncResponse_EResponse_k_eDisabled = 2,
  CMsgClientToGCUpdateAccountSyncResponse_EResponse_k_eTooBusy = 3,
  CMsgClientToGCUpdateAccountSyncResponse_EResponse_k_eInvalidMessage = 4
};
bool CMsgClientToGCUpdateAccountSyncResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCUpdateAccountSyncResponse_EResponse CMsgClientToGCUpdateAccountSyncResponse_EResponse_EResponse_MIN = CMsgClientToGCUpdateAccountSyncResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCUpdateAccountSyncResponse_EResponse CMsgClientToGCUpdateAccountSyncResponse_EResponse_EResponse_MAX = CMsgClientToGCUpdateAccountSyncResponse_EResponse_k_eInvalidMessage;
constexpr int CMsgClientToGCUpdateAccountSyncResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCUpdateAccountSyncResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCUpdateAccountSyncResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCUpdateAccountSyncResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCUpdateAccountSyncResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCUpdateAccountSyncResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCUpdateAccountSyncResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCUpdateAccountSyncResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCUpdateAccountSyncResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCUpdateAccountSyncResponse_EResponse>(
    CMsgClientToGCUpdateAccountSyncResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCGetHeroChoiceResponse_EResult : int {
  CMsgClientToGCGetHeroChoiceResponse_EResult_k_eSuccess = 0,
  CMsgClientToGCGetHeroChoiceResponse_EResult_k_eNoChoices = 1,
  CMsgClientToGCGetHeroChoiceResponse_EResult_k_eInvalidTarget = 2,
  CMsgClientToGCGetHeroChoiceResponse_EResult_k_eInternalError = 3,
  CMsgClientToGCGetHeroChoiceResponse_EResult_k_eDisabled = 4,
  CMsgClientToGCGetHeroChoiceResponse_EResult_k_eTooBusy = 5,
  CMsgClientToGCGetHeroChoiceResponse_EResult_k_eChoiceClosed = 6
};
bool CMsgClientToGCGetHeroChoiceResponse_EResult_IsValid(int value);
constexpr CMsgClientToGCGetHeroChoiceResponse_EResult CMsgClientToGCGetHeroChoiceResponse_EResult_EResult_MIN = CMsgClientToGCGetHeroChoiceResponse_EResult_k_eSuccess;
constexpr CMsgClientToGCGetHeroChoiceResponse_EResult CMsgClientToGCGetHeroChoiceResponse_EResult_EResult_MAX = CMsgClientToGCGetHeroChoiceResponse_EResult_k_eChoiceClosed;
constexpr int CMsgClientToGCGetHeroChoiceResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCGetHeroChoiceResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetHeroChoiceResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetHeroChoiceResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetHeroChoiceResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetHeroChoiceResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetHeroChoiceResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetHeroChoiceResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetHeroChoiceResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetHeroChoiceResponse_EResult>(
    CMsgClientToGCGetHeroChoiceResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCUnlockHeroResponse_EResult : int {
  CMsgClientToGCUnlockHeroResponse_EResult_k_eSuccess = 0,
  CMsgClientToGCUnlockHeroResponse_EResult_k_eInternalError = 1,
  CMsgClientToGCUnlockHeroResponse_EResult_k_eInvalidHero = 2,
  CMsgClientToGCUnlockHeroResponse_EResult_k_eOutOfSync = 3,
  CMsgClientToGCUnlockHeroResponse_EResult_k_eDisabled = 4,
  CMsgClientToGCUnlockHeroResponse_EResult_k_eTooBusy = 5
};
bool CMsgClientToGCUnlockHeroResponse_EResult_IsValid(int value);
constexpr CMsgClientToGCUnlockHeroResponse_EResult CMsgClientToGCUnlockHeroResponse_EResult_EResult_MIN = CMsgClientToGCUnlockHeroResponse_EResult_k_eSuccess;
constexpr CMsgClientToGCUnlockHeroResponse_EResult CMsgClientToGCUnlockHeroResponse_EResult_EResult_MAX = CMsgClientToGCUnlockHeroResponse_EResult_k_eTooBusy;
constexpr int CMsgClientToGCUnlockHeroResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCUnlockHeroResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCUnlockHeroResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCUnlockHeroResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCUnlockHeroResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCUnlockHeroResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCUnlockHeroResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCUnlockHeroResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCUnlockHeroResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCUnlockHeroResponse_EResult>(
    CMsgClientToGCUnlockHeroResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCBookUnlockResponse_EResult : int {
  CMsgClientToGCBookUnlockResponse_EResult_k_eSuccess = 0,
  CMsgClientToGCBookUnlockResponse_EResult_k_eInternalError = 1,
  CMsgClientToGCBookUnlockResponse_EResult_k_eOutOfDateClient = 2,
  CMsgClientToGCBookUnlockResponse_EResult_k_eInvalidFunds = 3,
  CMsgClientToGCBookUnlockResponse_EResult_k_eDisabled = 4,
  CMsgClientToGCBookUnlockResponse_EResult_k_eTooBusy = 5,
  CMsgClientToGCBookUnlockResponse_EResult_k_eAlreadyUnlocked = 6
};
bool CMsgClientToGCBookUnlockResponse_EResult_IsValid(int value);
constexpr CMsgClientToGCBookUnlockResponse_EResult CMsgClientToGCBookUnlockResponse_EResult_EResult_MIN = CMsgClientToGCBookUnlockResponse_EResult_k_eSuccess;
constexpr CMsgClientToGCBookUnlockResponse_EResult CMsgClientToGCBookUnlockResponse_EResult_EResult_MAX = CMsgClientToGCBookUnlockResponse_EResult_k_eAlreadyUnlocked;
constexpr int CMsgClientToGCBookUnlockResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCBookUnlockResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCBookUnlockResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCBookUnlockResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCBookUnlockResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCBookUnlockResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCBookUnlockResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCBookUnlockResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCBookUnlockResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCBookUnlockResponse_EResult>(
    CMsgClientToGCBookUnlockResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCGetBookResponse_EResult : int {
  CMsgClientToGCGetBookResponse_EResult_k_eSuccess = 0,
  CMsgClientToGCGetBookResponse_EResult_k_eInternalError = 1,
  CMsgClientToGCGetBookResponse_EResult_k_eInvalidBook = 2,
  CMsgClientToGCGetBookResponse_EResult_k_eDisabled = 3,
  CMsgClientToGCGetBookResponse_EResult_k_eTooBusy = 4
};
bool CMsgClientToGCGetBookResponse_EResult_IsValid(int value);
constexpr CMsgClientToGCGetBookResponse_EResult CMsgClientToGCGetBookResponse_EResult_EResult_MIN = CMsgClientToGCGetBookResponse_EResult_k_eSuccess;
constexpr CMsgClientToGCGetBookResponse_EResult CMsgClientToGCGetBookResponse_EResult_EResult_MAX = CMsgClientToGCGetBookResponse_EResult_k_eTooBusy;
constexpr int CMsgClientToGCGetBookResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCGetBookResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetBookResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetBookResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetBookResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetBookResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetBookResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetBookResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetBookResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetBookResponse_EResult>(
    CMsgClientToGCGetBookResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCSubmitPlaytestUserResponse_EResponse : int {
  CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_Success = 0,
  CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_InternalError = 1,
  CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_InvalidFriend = 3,
  CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_NotFriendsLongEnough = 4,
  CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_AlreadyHasGame = 5,
  CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_LimitedUser = 6,
  CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_InviteLimitReached = 7
};
bool CMsgClientToGCSubmitPlaytestUserResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCSubmitPlaytestUserResponse_EResponse CMsgClientToGCSubmitPlaytestUserResponse_EResponse_EResponse_MIN = CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_Success;
constexpr CMsgClientToGCSubmitPlaytestUserResponse_EResponse CMsgClientToGCSubmitPlaytestUserResponse_EResponse_EResponse_MAX = CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_InviteLimitReached;
constexpr int CMsgClientToGCSubmitPlaytestUserResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCSubmitPlaytestUserResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSubmitPlaytestUserResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCSubmitPlaytestUserResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCSubmitPlaytestUserResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCSubmitPlaytestUserResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCSubmitPlaytestUserResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCSubmitPlaytestUserResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCSubmitPlaytestUserResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCSubmitPlaytestUserResponse_EResponse>(
    CMsgClientToGCSubmitPlaytestUserResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCUpdateHeroBuildResponse_EResponse : int {
  CMsgClientToGCUpdateHeroBuildResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCUpdateHeroBuildResponse_EResponse_k_eSuccess = 1
};
bool CMsgClientToGCUpdateHeroBuildResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCUpdateHeroBuildResponse_EResponse CMsgClientToGCUpdateHeroBuildResponse_EResponse_EResponse_MIN = CMsgClientToGCUpdateHeroBuildResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCUpdateHeroBuildResponse_EResponse CMsgClientToGCUpdateHeroBuildResponse_EResponse_EResponse_MAX = CMsgClientToGCUpdateHeroBuildResponse_EResponse_k_eSuccess;
constexpr int CMsgClientToGCUpdateHeroBuildResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCUpdateHeroBuildResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCUpdateHeroBuildResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCUpdateHeroBuildResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCUpdateHeroBuildResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCUpdateHeroBuildResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCUpdateHeroBuildResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCUpdateHeroBuildResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCUpdateHeroBuildResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCUpdateHeroBuildResponse_EResponse>(
    CMsgClientToGCUpdateHeroBuildResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCFindHeroBuildsResponse_EResponse : int {
  CMsgClientToGCFindHeroBuildsResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCFindHeroBuildsResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCFindHeroBuildsResponse_EResponse_k_eTooBusy = 2
};
bool CMsgClientToGCFindHeroBuildsResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCFindHeroBuildsResponse_EResponse CMsgClientToGCFindHeroBuildsResponse_EResponse_EResponse_MIN = CMsgClientToGCFindHeroBuildsResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCFindHeroBuildsResponse_EResponse CMsgClientToGCFindHeroBuildsResponse_EResponse_EResponse_MAX = CMsgClientToGCFindHeroBuildsResponse_EResponse_k_eTooBusy;
constexpr int CMsgClientToGCFindHeroBuildsResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCFindHeroBuildsResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCFindHeroBuildsResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCFindHeroBuildsResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCFindHeroBuildsResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCFindHeroBuildsResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCFindHeroBuildsResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCFindHeroBuildsResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCFindHeroBuildsResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCFindHeroBuildsResponse_EResponse>(
    CMsgClientToGCFindHeroBuildsResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse : int {
  CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_k_eSuccess = 1
};
bool CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_EResponse_MIN = CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_EResponse_MAX = CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_k_eSuccess;
constexpr int CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse>(
    CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCGetOldHeroBuildDataResponse_EResponse : int {
  CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_k_eSuccess = 1
};
bool CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCGetOldHeroBuildDataResponse_EResponse CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_EResponse_MIN = CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCGetOldHeroBuildDataResponse_EResponse CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_EResponse_MAX = CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_k_eSuccess;
constexpr int CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetOldHeroBuildDataResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetOldHeroBuildDataResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetOldHeroBuildDataResponse_EResponse>(
    CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCReportPlayerFromMatch_EReportType : int {
  CMsgClientToGCReportPlayerFromMatch_EReportType_k_eReport_None = 0,
  CMsgClientToGCReportPlayerFromMatch_EReportType_k_eReport_VoiceChat = 1,
  CMsgClientToGCReportPlayerFromMatch_EReportType_k_eReport_Griefing = 2,
  CMsgClientToGCReportPlayerFromMatch_EReportType_k_eReport_LeftMatch = 3,
  CMsgClientToGCReportPlayerFromMatch_EReportType_k_eReport_Matchmaking = 4,
  CMsgClientToGCReportPlayerFromMatch_EReportType_k_eReport_Cheating = 5
};
bool CMsgClientToGCReportPlayerFromMatch_EReportType_IsValid(int value);
constexpr CMsgClientToGCReportPlayerFromMatch_EReportType CMsgClientToGCReportPlayerFromMatch_EReportType_EReportType_MIN = CMsgClientToGCReportPlayerFromMatch_EReportType_k_eReport_None;
constexpr CMsgClientToGCReportPlayerFromMatch_EReportType CMsgClientToGCReportPlayerFromMatch_EReportType_EReportType_MAX = CMsgClientToGCReportPlayerFromMatch_EReportType_k_eReport_Cheating;
constexpr int CMsgClientToGCReportPlayerFromMatch_EReportType_EReportType_ARRAYSIZE = CMsgClientToGCReportPlayerFromMatch_EReportType_EReportType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCReportPlayerFromMatch_EReportType_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCReportPlayerFromMatch_EReportType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCReportPlayerFromMatch_EReportType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCReportPlayerFromMatch_EReportType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCReportPlayerFromMatch_EReportType_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCReportPlayerFromMatch_EReportType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCReportPlayerFromMatch_EReportType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCReportPlayerFromMatch_EReportType>(
    CMsgClientToGCReportPlayerFromMatch_EReportType_descriptor(), name, value);
}
enum CMsgClientToGCReportPlayerFromMatchResponse_EResponse : int {
  CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eRateLimited = 2,
  CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eAlreadyReported = 3,
  CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eDisabled = 4,
  CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eInvalidPermissions = 5,
  CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eReportingWindowExpired = 6,
  CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eTooBusy = 7,
  CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eBannedFromReporting = 8
};
bool CMsgClientToGCReportPlayerFromMatchResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse_EResponse_EResponse_MIN = CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse_EResponse_EResponse_MAX = CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eBannedFromReporting;
constexpr int CMsgClientToGCReportPlayerFromMatchResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCReportPlayerFromMatchResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCReportPlayerFromMatchResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCReportPlayerFromMatchResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCReportPlayerFromMatchResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCReportPlayerFromMatchResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCReportPlayerFromMatchResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCReportPlayerFromMatchResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCReportPlayerFromMatchResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCReportPlayerFromMatchResponse_EResponse>(
    CMsgClientToGCReportPlayerFromMatchResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCGetAccountMatchReportsResponse_EResponse : int {
  CMsgClientToGCGetAccountMatchReportsResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCGetAccountMatchReportsResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCGetAccountMatchReportsResponse_EResponse_k_eDisabled = 4,
  CMsgClientToGCGetAccountMatchReportsResponse_EResponse_k_eTooBusy = 7
};
bool CMsgClientToGCGetAccountMatchReportsResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCGetAccountMatchReportsResponse_EResponse CMsgClientToGCGetAccountMatchReportsResponse_EResponse_EResponse_MIN = CMsgClientToGCGetAccountMatchReportsResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCGetAccountMatchReportsResponse_EResponse CMsgClientToGCGetAccountMatchReportsResponse_EResponse_EResponse_MAX = CMsgClientToGCGetAccountMatchReportsResponse_EResponse_k_eTooBusy;
constexpr int CMsgClientToGCGetAccountMatchReportsResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCGetAccountMatchReportsResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetAccountMatchReportsResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetAccountMatchReportsResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetAccountMatchReportsResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetAccountMatchReportsResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetAccountMatchReportsResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetAccountMatchReportsResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetAccountMatchReportsResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetAccountMatchReportsResponse_EResponse>(
    CMsgClientToGCGetAccountMatchReportsResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCDeleteHeroBuildResponse_EResponse : int {
  CMsgClientToGCDeleteHeroBuildResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCDeleteHeroBuildResponse_EResponse_k_eSuccess = 1
};
bool CMsgClientToGCDeleteHeroBuildResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCDeleteHeroBuildResponse_EResponse CMsgClientToGCDeleteHeroBuildResponse_EResponse_EResponse_MIN = CMsgClientToGCDeleteHeroBuildResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCDeleteHeroBuildResponse_EResponse CMsgClientToGCDeleteHeroBuildResponse_EResponse_EResponse_MAX = CMsgClientToGCDeleteHeroBuildResponse_EResponse_k_eSuccess;
constexpr int CMsgClientToGCDeleteHeroBuildResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCDeleteHeroBuildResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCDeleteHeroBuildResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCDeleteHeroBuildResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCDeleteHeroBuildResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCDeleteHeroBuildResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCDeleteHeroBuildResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCDeleteHeroBuildResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCDeleteHeroBuildResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCDeleteHeroBuildResponse_EResponse>(
    CMsgClientToGCDeleteHeroBuildResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCGetDiscordLinkResponse_EResponse : int {
  CMsgClientToGCGetDiscordLinkResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCGetDiscordLinkResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCGetDiscordLinkResponse_EResponse_k_eDiscordTooBusy = 2,
  CMsgClientToGCGetDiscordLinkResponse_EResponse_k_eAlreadyClaimed = 3,
  CMsgClientToGCGetDiscordLinkResponse_EResponse_k_eDisabled = 4
};
bool CMsgClientToGCGetDiscordLinkResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCGetDiscordLinkResponse_EResponse CMsgClientToGCGetDiscordLinkResponse_EResponse_EResponse_MIN = CMsgClientToGCGetDiscordLinkResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCGetDiscordLinkResponse_EResponse CMsgClientToGCGetDiscordLinkResponse_EResponse_EResponse_MAX = CMsgClientToGCGetDiscordLinkResponse_EResponse_k_eDisabled;
constexpr int CMsgClientToGCGetDiscordLinkResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCGetDiscordLinkResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetDiscordLinkResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetDiscordLinkResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetDiscordLinkResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetDiscordLinkResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetDiscordLinkResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetDiscordLinkResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetDiscordLinkResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetDiscordLinkResponse_EResponse>(
    CMsgClientToGCGetDiscordLinkResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCGrantForumAccessResponse_EResponse : int {
  CMsgClientToGCGrantForumAccessResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCGrantForumAccessResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCGrantForumAccessResponse_EResponse_k_eAlreadyClaimed = 2,
  CMsgClientToGCGrantForumAccessResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCGrantForumAccessResponse_EResponse_k_eEmailUsed = 4
};
bool CMsgClientToGCGrantForumAccessResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCGrantForumAccessResponse_EResponse CMsgClientToGCGrantForumAccessResponse_EResponse_EResponse_MIN = CMsgClientToGCGrantForumAccessResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCGrantForumAccessResponse_EResponse CMsgClientToGCGrantForumAccessResponse_EResponse_EResponse_MAX = CMsgClientToGCGrantForumAccessResponse_EResponse_k_eEmailUsed;
constexpr int CMsgClientToGCGrantForumAccessResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCGrantForumAccessResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGrantForumAccessResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGrantForumAccessResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGrantForumAccessResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGrantForumAccessResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGrantForumAccessResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGrantForumAccessResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGrantForumAccessResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGrantForumAccessResponse_EResponse>(
    CMsgClientToGCGrantForumAccessResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCGetFriendGameStatusResponse_EResponse : int {
  CMsgClientToGCGetFriendGameStatusResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCGetFriendGameStatusResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCGetFriendGameStatusResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCGetFriendGameStatusResponse_EResponse_k_eDisabled = 3
};
bool CMsgClientToGCGetFriendGameStatusResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCGetFriendGameStatusResponse_EResponse CMsgClientToGCGetFriendGameStatusResponse_EResponse_EResponse_MIN = CMsgClientToGCGetFriendGameStatusResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCGetFriendGameStatusResponse_EResponse CMsgClientToGCGetFriendGameStatusResponse_EResponse_EResponse_MAX = CMsgClientToGCGetFriendGameStatusResponse_EResponse_k_eDisabled;
constexpr int CMsgClientToGCGetFriendGameStatusResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCGetFriendGameStatusResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetFriendGameStatusResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetFriendGameStatusResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetFriendGameStatusResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetFriendGameStatusResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetFriendGameStatusResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetFriendGameStatusResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetFriendGameStatusResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetFriendGameStatusResponse_EResponse>(
    CMsgClientToGCGetFriendGameStatusResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCCommendPlayerFromMatchResponse_EResponse : int {
  CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_k_eDisabled = 2,
  CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_k_eTooBusy = 3,
  CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_k_eRateLimited = 4
};
bool CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCCommendPlayerFromMatchResponse_EResponse CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_EResponse_MIN = CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCCommendPlayerFromMatchResponse_EResponse CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_EResponse_MAX = CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_k_eRateLimited;
constexpr int CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCCommendPlayerFromMatchResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCCommendPlayerFromMatchResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCCommendPlayerFromMatchResponse_EResponse>(
    CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCRequestCheatReportsResponse_EResult : int {
  CMsgClientToGCRequestCheatReportsResponse_EResult_k_eSuccess = 0,
  CMsgClientToGCRequestCheatReportsResponse_EResult_k_eInvalidPermission = 1,
  CMsgClientToGCRequestCheatReportsResponse_EResult_k_eInternalError = 2
};
bool CMsgClientToGCRequestCheatReportsResponse_EResult_IsValid(int value);
constexpr CMsgClientToGCRequestCheatReportsResponse_EResult CMsgClientToGCRequestCheatReportsResponse_EResult_EResult_MIN = CMsgClientToGCRequestCheatReportsResponse_EResult_k_eSuccess;
constexpr CMsgClientToGCRequestCheatReportsResponse_EResult CMsgClientToGCRequestCheatReportsResponse_EResult_EResult_MAX = CMsgClientToGCRequestCheatReportsResponse_EResult_k_eInternalError;
constexpr int CMsgClientToGCRequestCheatReportsResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCRequestCheatReportsResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestCheatReportsResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRequestCheatReportsResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRequestCheatReportsResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRequestCheatReportsResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRequestCheatReportsResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRequestCheatReportsResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRequestCheatReportsResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRequestCheatReportsResponse_EResult>(
    CMsgClientToGCRequestCheatReportsResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCGetHeroMMRRankingsResponse_EResult : int {
  CMsgClientToGCGetHeroMMRRankingsResponse_EResult_k_eSuccess = 0,
  CMsgClientToGCGetHeroMMRRankingsResponse_EResult_k_eInvalidPermission = 1,
  CMsgClientToGCGetHeroMMRRankingsResponse_EResult_k_eInternalError = 2,
  CMsgClientToGCGetHeroMMRRankingsResponse_EResult_k_eTooBusy = 3
};
bool CMsgClientToGCGetHeroMMRRankingsResponse_EResult_IsValid(int value);
constexpr CMsgClientToGCGetHeroMMRRankingsResponse_EResult CMsgClientToGCGetHeroMMRRankingsResponse_EResult_EResult_MIN = CMsgClientToGCGetHeroMMRRankingsResponse_EResult_k_eSuccess;
constexpr CMsgClientToGCGetHeroMMRRankingsResponse_EResult CMsgClientToGCGetHeroMMRRankingsResponse_EResult_EResult_MAX = CMsgClientToGCGetHeroMMRRankingsResponse_EResult_k_eTooBusy;
constexpr int CMsgClientToGCGetHeroMMRRankingsResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCGetHeroMMRRankingsResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetHeroMMRRankingsResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetHeroMMRRankingsResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetHeroMMRRankingsResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetHeroMMRRankingsResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetHeroMMRRankingsResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetHeroMMRRankingsResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetHeroMMRRankingsResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetHeroMMRRankingsResponse_EResult>(
    CMsgClientToGCGetHeroMMRRankingsResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCGetLeaderboardResponse_EResult : int {
  CMsgClientToGCGetLeaderboardResponse_EResult_k_eSuccess = 0,
  CMsgClientToGCGetLeaderboardResponse_EResult_k_eInvalidArguments = 1,
  CMsgClientToGCGetLeaderboardResponse_EResult_k_eInternalError = 2,
  CMsgClientToGCGetLeaderboardResponse_EResult_k_eTooBusy = 3
};
bool CMsgClientToGCGetLeaderboardResponse_EResult_IsValid(int value);
constexpr CMsgClientToGCGetLeaderboardResponse_EResult CMsgClientToGCGetLeaderboardResponse_EResult_EResult_MIN = CMsgClientToGCGetLeaderboardResponse_EResult_k_eSuccess;
constexpr CMsgClientToGCGetLeaderboardResponse_EResult CMsgClientToGCGetLeaderboardResponse_EResult_EResult_MAX = CMsgClientToGCGetLeaderboardResponse_EResult_k_eTooBusy;
constexpr int CMsgClientToGCGetLeaderboardResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCGetLeaderboardResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetLeaderboardResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetLeaderboardResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetLeaderboardResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetLeaderboardResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetLeaderboardResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetLeaderboardResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetLeaderboardResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetLeaderboardResponse_EResult>(
    CMsgClientToGCGetLeaderboardResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCGetAccountLeaderboardsResponse_EResult : int {
  CMsgClientToGCGetAccountLeaderboardsResponse_EResult_k_eSuccess = 0,
  CMsgClientToGCGetAccountLeaderboardsResponse_EResult_k_eInvalidPermission = 1,
  CMsgClientToGCGetAccountLeaderboardsResponse_EResult_k_eInternalError = 2,
  CMsgClientToGCGetAccountLeaderboardsResponse_EResult_k_eTooBusy = 3
};
bool CMsgClientToGCGetAccountLeaderboardsResponse_EResult_IsValid(int value);
constexpr CMsgClientToGCGetAccountLeaderboardsResponse_EResult CMsgClientToGCGetAccountLeaderboardsResponse_EResult_EResult_MIN = CMsgClientToGCGetAccountLeaderboardsResponse_EResult_k_eSuccess;
constexpr CMsgClientToGCGetAccountLeaderboardsResponse_EResult CMsgClientToGCGetAccountLeaderboardsResponse_EResult_EResult_MAX = CMsgClientToGCGetAccountLeaderboardsResponse_EResult_k_eTooBusy;
constexpr int CMsgClientToGCGetAccountLeaderboardsResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCGetAccountLeaderboardsResponse_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetAccountLeaderboardsResponse_EResult_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetAccountLeaderboardsResponse_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetAccountLeaderboardsResponse_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetAccountLeaderboardsResponse_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetAccountLeaderboardsResponse_EResult_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetAccountLeaderboardsResponse_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetAccountLeaderboardsResponse_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetAccountLeaderboardsResponse_EResult>(
    CMsgClientToGCGetAccountLeaderboardsResponse_EResult_descriptor(), name, value);
}
enum EGCCitadelClientMessages : int {
  k_EMsgClientToGCStartMatchmaking = 9010,
  k_EMsgClientToGCStartMatchmakingResponse = 9011,
  k_EMsgClientToGCStopMatchmaking = 9012,
  k_EMsgClientToGCStopMatchmakingResponse = 9013,
  k_EMsgGCToClientMatchmakingStopped = 9014,
  k_EMsgClientToGCLeaveLobby = 9015,
  k_EMsgClientToGCLeaveLobbyResponse = 9016,
  k_EMsgClientToGCIsInMatchmaking = 9017,
  k_EMsgClientToGCIsInMatchmakingResponse = 9018,
  k_EMsgGCToClientDevPlaytestStatus = 9019,
  k_EMsgClientToGCDevSetMMBias = 9023,
  k_EMsgClientToGCGetProfileCard = 9024,
  k_EMsgClientToGCGetProfileCardResponse = 9025,
  k_EMsgClientToGCUpdateRoster = 9026,
  k_EMsgClientToGCUpdateRosterResponse = 9027,
  k_EMsgGCToClientProfileCardUpdated = 9028,
  k_EMsgGCToClientDevAnnouncements = 9029,
  k_EMsgClientToGCModifyDevAnnouncements = 9030,
  k_EMsgClientToGCModifyDevAnnouncementsResponse = 9031,
  k_EMsgGCToClientSDRTicket = 9100,
  k_EMsgClientToGCReplacementSDRTicket = 9101,
  k_EMsgClientToGCReplacementSDRTicketResponse = 9102,
  k_EMsgClientToGCSetServerConVar = 9107,
  k_EMsgClientToGCSetServerConVarResponse = 9108,
  k_EMsgClientToGCSpectateLobby = 9109,
  k_EMsgClientToGCSpectateLobbyResponse = 9110,
  k_EMsgClientToGCPostMatchSurveyResponse = 9111,
  k_EMsgClientToGCGetMatchHistory = 9112,
  k_EMsgClientToGCGetMatchHistoryResponse = 9113,
  k_EMsgClientToGCSpectateUser = 9116,
  k_EMsgClientToGCSpectateUserResponse = 9117,
  k_EMsgClientToGCPartyCreate = 9123,
  k_EMsgClientToGCPartyCreateResponse = 9124,
  k_EMsgClientToGCPartyLeave = 9125,
  k_EMsgClientToGCPartyLeaveResponse = 9126,
  k_EMsgClientToGCPartyJoin = 9127,
  k_EMsgClientToGCPartyJoinResponse = 9128,
  k_EMsgClientToGCPartyAction = 9129,
  k_EMsgClientToGCPartyActionResponse = 9130,
  k_EMsgClientToGCPartyStartMatch = 9131,
  k_EMsgClientToGCPartyStartMatchResponse = 9132,
  k_EMsgClientToGCPartyInviteUser = 9133,
  k_EMsgClientToGCPartyInviteUserResponse = 9134,
  k_EMsgGCToClientPartyEvent = 9135,
  k_EMsgGCToClientCanRejoinParty = 9137,
  k_EMsgClientToGCPartyJoinViaCode = 9138,
  k_EMsgClientToGCPartyJoinViaCodeResponse = 9139,
  k_EMsgClientToGCPartySetReadyState = 9142,
  k_EMsgClientToGCPartySetReadyStateResponse = 9143,
  k_EMsgClientToGCGetAccountStats = 9164,
  k_EMsgClientToGCGetAccountStatsResponse = 9165,
  k_EMsgGCToClientAccountStatsUpdated = 9166,
  k_EMsgClientToGCGetMatchMetaData = 9167,
  k_EMsgClientToGCGetMatchMetaDataResponse = 9168,
  k_EMsgClientToGCDevAction = 9172,
  k_EMsgClientToGCDevActionResponse = 9173,
  k_EMsgClientToGCRecordClientEvents = 9174,
  k_EMsgClientToGCRecordClientEventsResponse = 9175,
  k_EMsgClientToGCSetNewPlayerProgress = 9176,
  k_EMsgClientToGCSetNewPlayerProgressResponse = 9177,
  k_EMsgClientToGCUpdateAccountSync = 9178,
  k_EMsgClientToGCUpdateAccountSyncResponse = 9179,
  k_EMsgClientToGCGetHeroChoice = 9180,
  k_EMsgClientToGCGetHeroChoiceResponse = 9181,
  k_EMsgClientToGCUnlockHero = 9182,
  k_EMsgClientToGCUnlockHeroResponse = 9183,
  k_EMsgClientToGCBookUnlock = 9184,
  k_EMsgClientToGCBookUnlockResponse = 9185,
  k_EMsgClientToGCGetBook = 9186,
  k_EMsgClientToGCGetBookResponse = 9187,
  k_EMsgGCToClientBookUpdated = 9188,
  k_EMsgClientToGCSubmitPlaytestUser = 9189,
  k_EMsgClientToGCSubmitPlaytestUserResponse = 9190,
  k_EMsgClientToGCUpdateHeroBuild = 9193,
  k_EMsgClientToGCUpdateHeroBuildResponse = 9194,
  k_EMsgClientToGCFindHeroBuilds = 9195,
  k_EMsgClientToGCFindHeroBuildsResponse = 9196,
  k_EMsgClientToGCReportPlayerFromMatch = 9197,
  k_EMsgClientToGCReportPlayerFromMatchResponse = 9198,
  k_EMsgClientToGCGetAccountMatchReports = 9199,
  k_EMsgClientToGCGetAccountMatchReportsResponse = 9200,
  k_EMsgClientToGCDeleteHeroBuild = 9201,
  k_EMsgClientToGCDeleteHeroBuildResponse = 9202,
  k_EMsgClientToGCGetActiveMatches = 9203,
  k_EMsgClientToGCGetActiveMatchesResponse = 9204,
  k_EMsgClientToGCGetDiscordLink = 9205,
  k_EMsgClientToGCGetDiscordLinkResponse = 9206,
  k_EMsgClientToGCPartySetMode = 9207,
  k_EMsgClientToGCPartySetModeResponse = 9208,
  k_EMsgClientToGCGrantForumAccess = 9209,
  k_EMsgClientToGCGrantForumAccessResponse = 9210,
  k_EMsgClientToGCModeratorRequest = 9211,
  k_EMsgClientToGCModeratorRequestResponse = 9212,
  k_EMsgClientToGCGetFriendGameStatus = 9213,
  k_EMsgClientToGCGetFriendGameStatusResponse = 9214,
  k_EMsgClientToGCUpdateHeroBuildPreference = 9215,
  k_EMsgClientToGCUpdateHeroBuildPreferenceResponse = 9216,
  k_EMsgClientToGCGetOldHeroBuildData = 9217,
  k_EMsgClientToGCGetOldHeroBuildDataResponse = 9218,
  k_EMsgClientToGCUpdateSpectatorStatus = 9219,
  k_EMsgClientToGCCommendPlayerFromMatch = 9223,
  k_EMsgClientToGCCommendPlayerFromMatchResponse = 9224,
  k_EMsgGCToClientCommendNotification = 9225,
  k_EMsgGCToClientHeroLabsSchedule = 9228,
  k_EMsgClientToGCDevRequestCheatReports = 9230,
  k_EMsgClientToGCDevRequestCheatReportsResponse = 9231,
  k_EMsgClientToGCDevBan = 9232,
  k_EMsgClientToGCDevBanResponse = 9233,
  k_EMsgClientToGCGetHeroMMRRankings = 9234,
  k_EMsgClientToGCGetHeroMMRRankingsResponse = 9235,
  k_EMsgClientToGCGetLeaderboard = 9236,
  k_EMsgClientToGCGetLeaderboardResponse = 9237,
  k_EMsgClientToGCGetAccountLeaderboards = 9238,
  k_EMsgClientToGCGetAccountLeaderboardsResponse = 9239,
  k_EMsgClientToGCSetHideHolidayModels = 9240,
  k_EMsgClientToGCSetHideHolidayModelsResponse = 9241
};
bool EGCCitadelClientMessages_IsValid(int value);
constexpr EGCCitadelClientMessages EGCCitadelClientMessages_MIN = k_EMsgClientToGCStartMatchmaking;
constexpr EGCCitadelClientMessages EGCCitadelClientMessages_MAX = k_EMsgClientToGCSetHideHolidayModelsResponse;
constexpr int EGCCitadelClientMessages_ARRAYSIZE = EGCCitadelClientMessages_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGCCitadelClientMessages_descriptor();
template<typename T>
inline const std::string& EGCCitadelClientMessages_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGCCitadelClientMessages>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGCCitadelClientMessages_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGCCitadelClientMessages_descriptor(), enum_t_value);
}
inline bool EGCCitadelClientMessages_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGCCitadelClientMessages* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGCCitadelClientMessages>(
    EGCCitadelClientMessages_descriptor(), name, value);
}
enum ECitadelAccountPermissionFlag : int {
  k_eAccountPermission_Ranked = 1
};
bool ECitadelAccountPermissionFlag_IsValid(int value);
constexpr ECitadelAccountPermissionFlag ECitadelAccountPermissionFlag_MIN = k_eAccountPermission_Ranked;
constexpr ECitadelAccountPermissionFlag ECitadelAccountPermissionFlag_MAX = k_eAccountPermission_Ranked;
constexpr int ECitadelAccountPermissionFlag_ARRAYSIZE = ECitadelAccountPermissionFlag_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelAccountPermissionFlag_descriptor();
template<typename T>
inline const std::string& ECitadelAccountPermissionFlag_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECitadelAccountPermissionFlag>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECitadelAccountPermissionFlag_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECitadelAccountPermissionFlag_descriptor(), enum_t_value);
}
inline bool ECitadelAccountPermissionFlag_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECitadelAccountPermissionFlag* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECitadelAccountPermissionFlag>(
    ECitadelAccountPermissionFlag_descriptor(), name, value);
}
enum ECitadelNewPlayerProgressFlag : int {
  k_eNewPlayerProgress_GettingStarted = 1,
  k_eNewPlayerProgress_HeroTraining = 2,
  k_eNewPlayerProgress_LaneTraining = 3
};
bool ECitadelNewPlayerProgressFlag_IsValid(int value);
constexpr ECitadelNewPlayerProgressFlag ECitadelNewPlayerProgressFlag_MIN = k_eNewPlayerProgress_GettingStarted;
constexpr ECitadelNewPlayerProgressFlag ECitadelNewPlayerProgressFlag_MAX = k_eNewPlayerProgress_LaneTraining;
constexpr int ECitadelNewPlayerProgressFlag_ARRAYSIZE = ECitadelNewPlayerProgressFlag_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelNewPlayerProgressFlag_descriptor();
template<typename T>
inline const std::string& ECitadelNewPlayerProgressFlag_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECitadelNewPlayerProgressFlag>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECitadelNewPlayerProgressFlag_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECitadelNewPlayerProgressFlag_descriptor(), enum_t_value);
}
inline bool ECitadelNewPlayerProgressFlag_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECitadelNewPlayerProgressFlag* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECitadelNewPlayerProgressFlag>(
    ECitadelNewPlayerProgressFlag_descriptor(), name, value);
}
enum EProfileCardSlotType : int {
  k_EProfileCardSlotType_Empty = 0,
  k_EProfileCardSlotType_Stat = 1,
  k_EProfileCardSlotType_Hero = 2
};
bool EProfileCardSlotType_IsValid(int value);
constexpr EProfileCardSlotType EProfileCardSlotType_MIN = k_EProfileCardSlotType_Empty;
constexpr EProfileCardSlotType EProfileCardSlotType_MAX = k_EProfileCardSlotType_Hero;
constexpr int EProfileCardSlotType_ARRAYSIZE = EProfileCardSlotType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EProfileCardSlotType_descriptor();
template<typename T>
inline const std::string& EProfileCardSlotType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EProfileCardSlotType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EProfileCardSlotType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EProfileCardSlotType_descriptor(), enum_t_value);
}
inline bool EProfileCardSlotType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EProfileCardSlotType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EProfileCardSlotType>(
    EProfileCardSlotType_descriptor(), name, value);
}
enum EDevBanReason : int {
  k_eDevBanReason_Unspecified = 0,
  k_eDevBanReason_AimAssist = 1,
  k_eDevBanReason_VisionAssist = 2,
  k_eDevBanReason_MovementAssist = 3
};
bool EDevBanReason_IsValid(int value);
constexpr EDevBanReason EDevBanReason_MIN = k_eDevBanReason_Unspecified;
constexpr EDevBanReason EDevBanReason_MAX = k_eDevBanReason_MovementAssist;
constexpr int EDevBanReason_ARRAYSIZE = EDevBanReason_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EDevBanReason_descriptor();
template<typename T>
inline const std::string& EDevBanReason_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EDevBanReason>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EDevBanReason_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EDevBanReason_descriptor(), enum_t_value);
}
inline bool EDevBanReason_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EDevBanReason* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EDevBanReason>(
    EDevBanReason_descriptor(), name, value);
}
enum ECitadelClientAccountEvent : int {
  k_eLaunchedHeroTest = 1,
  k_eViewedProfile = 2,
  k_eViewedSocial = 3,
  k_eViewedHeroes = 4,
  k_eViewedHeroDetails = 5,
  k_eViewedPatchNotes = 6,
  k_eViewedEvents = 7,
  k_eViewedGettingStarted = 8,
  k_eViewedGuidePage = 9,
  k_eLaunchedClient = 10,
  k_eEditRoster = 11,
  k_eViewedWatch = 12,
  k_eCreatedParty = 13,
  k_eCreatedPartyWithInvite = 14,
  k_eViewedSelfProfile = 15,
  k_eJoinedPartyCode = 16,
  k_eSentPartyInvite = 17,
  k_eAcceptPartyInvite = 18,
  k_eRejectPartyInvite = 19,
  k_eSpectateUser = 20,
  k_eSpectateMatch = 21,
  k_eEnteredMatchMaking = 22,
  k_eLeftMatchMaking = 23,
  k_eEnteredPartyMatchMaking = 24,
  k_eLeftPartyMatchMaking = 25,
  k_eDownloadedReplay = 26,
  k_eWatchedReplay = 27,
  k_eViewMatchDetails = 28,
  k_eMatchDetailsTab = 29,
  k_eDeleteReplay = 30,
  k_eBotMatch_Guided = 31,
  k_eBotMatch_Easy = 32,
  k_eBotMatch_Hard = 33,
  k_eLiveUpdatedRoster = 34,
  k_eMatchMakingIdle_Displayed = 35,
  k_eMatchMakingIdle_Stopped = 36,
  k_eConnectReacquireTicket = 37,
  k_eConnectAttemptReconnect = 38,
  k_eDisconnectPresentedPrompt = 39,
  k_eDisconnectConfirmed = 40,
  k_eViewedSettings_Options = 41,
  k_eViewedSettings_Video = 42,
  k_eViewedSettings_Audio = 43,
  k_eViewedSettings_HotKey = 44,
  k_eViewedSettings_ChatWheel = 45,
  k_eViewedSettings_About = 46,
  k_eOpenedSubmitFeedback = 47,
  k_eTutorialSkip_Pressed = 48,
  k_eTutorialSkip_Confirmed = 49,
  k_eViewedGuidePage_5s = 50,
  k_eViewedGuidePage_15s = 51,
  k_eViewedGuidePage_30s = 52,
  k_eViewedGuidePage_60s = 53,
  k_eOpenedBookTest = 54,
  k_eSandboxViaHeroPage = 55,
  k_eViewedSettings_SteamInput = 56,
  k_eViewedSettings_Social = 57
};
bool ECitadelClientAccountEvent_IsValid(int value);
constexpr ECitadelClientAccountEvent ECitadelClientAccountEvent_MIN = k_eLaunchedHeroTest;
constexpr ECitadelClientAccountEvent ECitadelClientAccountEvent_MAX = k_eViewedSettings_Social;
constexpr int ECitadelClientAccountEvent_ARRAYSIZE = ECitadelClientAccountEvent_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelClientAccountEvent_descriptor();
template<typename T>
inline const std::string& ECitadelClientAccountEvent_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECitadelClientAccountEvent>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECitadelClientAccountEvent_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECitadelClientAccountEvent_descriptor(), enum_t_value);
}
inline bool ECitadelClientAccountEvent_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECitadelClientAccountEvent* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECitadelClientAccountEvent>(
    ECitadelClientAccountEvent_descriptor(), name, value);
}
enum ECommendType : int {
  k_eInvalid = 0,
  k_eGeneric = 1,
  k_eFriendly = 2,
  k_eTeamwork = 3,
  k_eSkilled = 4
};
bool ECommendType_IsValid(int value);
constexpr ECommendType ECommendType_MIN = k_eInvalid;
constexpr ECommendType ECommendType_MAX = k_eSkilled;
constexpr int ECommendType_ARRAYSIZE = ECommendType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECommendType_descriptor();
template<typename T>
inline const std::string& ECommendType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECommendType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECommendType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECommendType_descriptor(), enum_t_value);
}
inline bool ECommendType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECommendType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECommendType>(
    ECommendType_descriptor(), name, value);
}
// ===================================================================

class CSOGameAccountClient final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOGameAccountClient) */ {
 public:
  inline CSOGameAccountClient() : CSOGameAccountClient(nullptr) {}
  ~CSOGameAccountClient() override;
  explicit PROTOBUF_CONSTEXPR CSOGameAccountClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOGameAccountClient(const CSOGameAccountClient& from);
  CSOGameAccountClient(CSOGameAccountClient&& from) noexcept
    : CSOGameAccountClient() {
    *this = ::std::move(from);
  }

  inline CSOGameAccountClient& operator=(const CSOGameAccountClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOGameAccountClient& operator=(CSOGameAccountClient&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOGameAccountClient& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOGameAccountClient* internal_default_instance() {
    return reinterpret_cast<const CSOGameAccountClient*>(
               &_CSOGameAccountClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CSOGameAccountClient& a, CSOGameAccountClient& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOGameAccountClient* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOGameAccountClient* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CSOGameAccountClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CSOGameAccountClient>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CSOGameAccountClient& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CSOGameAccountClient& from) {
    CSOGameAccountClient::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOGameAccountClient* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOGameAccountClient";
  }
  protected:
  explicit CSOGameAccountClient(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CSOGameAccountClient_EFlags EFlags;
  static constexpr EFlags k_eDeveloper =
    CSOGameAccountClient_EFlags_k_eDeveloper;
  static constexpr EFlags k_eExternalModerator =
    CSOGameAccountClient_EFlags_k_eExternalModerator;
  static constexpr EFlags k_eGotInitialHeroes =
    CSOGameAccountClient_EFlags_k_eGotInitialHeroes;
  static constexpr EFlags k_eHideHolidayModels =
    CSOGameAccountClient_EFlags_k_eHideHolidayModels;
  static constexpr EFlags k_eClaimedDiscordLink =
    CSOGameAccountClient_EFlags_k_eClaimedDiscordLink;
  static constexpr EFlags k_eClaimedForum =
    CSOGameAccountClient_EFlags_k_eClaimedForum;
  static constexpr EFlags k_eAccountBanned =
    CSOGameAccountClient_EFlags_k_eAccountBanned;
  static inline bool EFlags_IsValid(int value) {
    return CSOGameAccountClient_EFlags_IsValid(value);
  }
  static constexpr EFlags EFlags_MIN =
    CSOGameAccountClient_EFlags_EFlags_MIN;
  static constexpr EFlags EFlags_MAX =
    CSOGameAccountClient_EFlags_EFlags_MAX;
  static constexpr int EFlags_ARRAYSIZE =
    CSOGameAccountClient_EFlags_EFlags_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EFlags_descriptor() {
    return CSOGameAccountClient_EFlags_descriptor();
  }
  template<typename T>
  static inline const std::string& EFlags_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EFlags>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EFlags_Name.");
    return CSOGameAccountClient_EFlags_Name(enum_t_value);
  }
  static inline bool EFlags_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EFlags* value) {
    return CSOGameAccountClient_EFlags_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kFlagsFieldNumber = 2,
    kAccountIdFieldNumber = 1,
    kWinsFieldNumber = 3,
    kLossesFieldNumber = 4,
    kKillsFieldNumber = 5,
    kPermissionsFieldNumber = 7,
    kMostPlayedHeroIdFieldNumber = 6,
    kHeroUnlockCreditsFieldNumber = 9,
    kNewPlayerProgressFieldNumber = 8,
    kMmBanUntilFieldNumber = 10,
    kCommsBanUntilFieldNumber = 11,
    kLowPriorityGamesRemainingFieldNumber = 12,
    kReportBanUntilFieldNumber = 13,
    kRankedBadgeLevelFieldNumber = 14,
    kHeroLabsMatchesSinceTestHeroFieldNumber = 21,
  };
  // optional uint64 flags = 2;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  uint64_t flags() const;
  void set_flags(uint64_t value);
  private:
  uint64_t _internal_flags() const;
  void _internal_set_flags(uint64_t value);
  public:

  // optional uint32 account_id = 1 [(.key_field) = true];
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 wins = 3;
  bool has_wins() const;
  private:
  bool _internal_has_wins() const;
  public:
  void clear_wins();
  uint32_t wins() const;
  void set_wins(uint32_t value);
  private:
  uint32_t _internal_wins() const;
  void _internal_set_wins(uint32_t value);
  public:

  // optional uint32 losses = 4;
  bool has_losses() const;
  private:
  bool _internal_has_losses() const;
  public:
  void clear_losses();
  uint32_t losses() const;
  void set_losses(uint32_t value);
  private:
  uint32_t _internal_losses() const;
  void _internal_set_losses(uint32_t value);
  public:

  // optional uint32 kills = 5;
  bool has_kills() const;
  private:
  bool _internal_has_kills() const;
  public:
  void clear_kills();
  uint32_t kills() const;
  void set_kills(uint32_t value);
  private:
  uint32_t _internal_kills() const;
  void _internal_set_kills(uint32_t value);
  public:

  // optional uint64 permissions = 7;
  bool has_permissions() const;
  private:
  bool _internal_has_permissions() const;
  public:
  void clear_permissions();
  uint64_t permissions() const;
  void set_permissions(uint64_t value);
  private:
  uint64_t _internal_permissions() const;
  void _internal_set_permissions(uint64_t value);
  public:

  // optional uint32 most_played_hero_id = 6;
  bool has_most_played_hero_id() const;
  private:
  bool _internal_has_most_played_hero_id() const;
  public:
  void clear_most_played_hero_id();
  uint32_t most_played_hero_id() const;
  void set_most_played_hero_id(uint32_t value);
  private:
  uint32_t _internal_most_played_hero_id() const;
  void _internal_set_most_played_hero_id(uint32_t value);
  public:

  // optional uint32 hero_unlock_credits = 9;
  bool has_hero_unlock_credits() const;
  private:
  bool _internal_has_hero_unlock_credits() const;
  public:
  void clear_hero_unlock_credits();
  uint32_t hero_unlock_credits() const;
  void set_hero_unlock_credits(uint32_t value);
  private:
  uint32_t _internal_hero_unlock_credits() const;
  void _internal_set_hero_unlock_credits(uint32_t value);
  public:

  // optional uint64 new_player_progress = 8;
  bool has_new_player_progress() const;
  private:
  bool _internal_has_new_player_progress() const;
  public:
  void clear_new_player_progress();
  uint64_t new_player_progress() const;
  void set_new_player_progress(uint64_t value);
  private:
  uint64_t _internal_new_player_progress() const;
  void _internal_set_new_player_progress(uint64_t value);
  public:

  // optional uint32 mm_ban_until = 10;
  bool has_mm_ban_until() const;
  private:
  bool _internal_has_mm_ban_until() const;
  public:
  void clear_mm_ban_until();
  uint32_t mm_ban_until() const;
  void set_mm_ban_until(uint32_t value);
  private:
  uint32_t _internal_mm_ban_until() const;
  void _internal_set_mm_ban_until(uint32_t value);
  public:

  // optional uint32 comms_ban_until = 11;
  bool has_comms_ban_until() const;
  private:
  bool _internal_has_comms_ban_until() const;
  public:
  void clear_comms_ban_until();
  uint32_t comms_ban_until() const;
  void set_comms_ban_until(uint32_t value);
  private:
  uint32_t _internal_comms_ban_until() const;
  void _internal_set_comms_ban_until(uint32_t value);
  public:

  // optional uint32 low_priority_games_remaining = 12;
  bool has_low_priority_games_remaining() const;
  private:
  bool _internal_has_low_priority_games_remaining() const;
  public:
  void clear_low_priority_games_remaining();
  uint32_t low_priority_games_remaining() const;
  void set_low_priority_games_remaining(uint32_t value);
  private:
  uint32_t _internal_low_priority_games_remaining() const;
  void _internal_set_low_priority_games_remaining(uint32_t value);
  public:

  // optional uint32 report_ban_until = 13;
  bool has_report_ban_until() const;
  private:
  bool _internal_has_report_ban_until() const;
  public:
  void clear_report_ban_until();
  uint32_t report_ban_until() const;
  void set_report_ban_until(uint32_t value);
  private:
  uint32_t _internal_report_ban_until() const;
  void _internal_set_report_ban_until(uint32_t value);
  public:

  // optional uint32 ranked_badge_level = 14;
  bool has_ranked_badge_level() const;
  private:
  bool _internal_has_ranked_badge_level() const;
  public:
  void clear_ranked_badge_level();
  uint32_t ranked_badge_level() const;
  void set_ranked_badge_level(uint32_t value);
  private:
  uint32_t _internal_ranked_badge_level() const;
  void _internal_set_ranked_badge_level(uint32_t value);
  public:

  // optional uint32 hero_labs_matches_since_test_hero = 21;
  bool has_hero_labs_matches_since_test_hero() const;
  private:
  bool _internal_has_hero_labs_matches_since_test_hero() const;
  public:
  void clear_hero_labs_matches_since_test_hero();
  uint32_t hero_labs_matches_since_test_hero() const;
  void set_hero_labs_matches_since_test_hero(uint32_t value);
  private:
  uint32_t _internal_hero_labs_matches_since_test_hero() const;
  void _internal_set_hero_labs_matches_since_test_hero(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CSOGameAccountClient)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t flags_;
    uint32_t account_id_;
    uint32_t wins_;
    uint32_t losses_;
    uint32_t kills_;
    uint64_t permissions_;
    uint32_t most_played_hero_id_;
    uint32_t hero_unlock_credits_;
    uint64_t new_player_progress_;
    uint32_t mm_ban_until_;
    uint32_t comms_ban_until_;
    uint32_t low_priority_games_remaining_;
    uint32_t report_ban_until_;
    uint32_t ranked_badge_level_;
    uint32_t hero_labs_matches_since_test_hero_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CSOAccountSyncStorage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOAccountSyncStorage) */ {
 public:
  inline CSOAccountSyncStorage() : CSOAccountSyncStorage(nullptr) {}
  ~CSOAccountSyncStorage() override;
  explicit PROTOBUF_CONSTEXPR CSOAccountSyncStorage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOAccountSyncStorage(const CSOAccountSyncStorage& from);
  CSOAccountSyncStorage(CSOAccountSyncStorage&& from) noexcept
    : CSOAccountSyncStorage() {
    *this = ::std::move(from);
  }

  inline CSOAccountSyncStorage& operator=(const CSOAccountSyncStorage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOAccountSyncStorage& operator=(CSOAccountSyncStorage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOAccountSyncStorage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOAccountSyncStorage* internal_default_instance() {
    return reinterpret_cast<const CSOAccountSyncStorage*>(
               &_CSOAccountSyncStorage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CSOAccountSyncStorage& a, CSOAccountSyncStorage& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOAccountSyncStorage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOAccountSyncStorage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CSOAccountSyncStorage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CSOAccountSyncStorage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CSOAccountSyncStorage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CSOAccountSyncStorage& from) {
    CSOAccountSyncStorage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOAccountSyncStorage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOAccountSyncStorage";
  }
  protected:
  explicit CSOAccountSyncStorage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kIdFieldNumber = 2,
    kValueFieldNumber = 3,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  uint32_t id() const;
  void set_id(uint32_t value);
  private:
  uint32_t _internal_id() const;
  void _internal_set_id(uint32_t value);
  public:

  // optional uint32 value = 3;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  uint32_t value() const;
  void set_value(uint32_t value);
  private:
  uint32_t _internal_value() const;
  void _internal_set_value(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CSOAccountSyncStorage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    uint32_t id_;
    uint32_t value_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CSOAccountHeroInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOAccountHeroInfo) */ {
 public:
  inline CSOAccountHeroInfo() : CSOAccountHeroInfo(nullptr) {}
  ~CSOAccountHeroInfo() override;
  explicit PROTOBUF_CONSTEXPR CSOAccountHeroInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOAccountHeroInfo(const CSOAccountHeroInfo& from);
  CSOAccountHeroInfo(CSOAccountHeroInfo&& from) noexcept
    : CSOAccountHeroInfo() {
    *this = ::std::move(from);
  }

  inline CSOAccountHeroInfo& operator=(const CSOAccountHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOAccountHeroInfo& operator=(CSOAccountHeroInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOAccountHeroInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOAccountHeroInfo* internal_default_instance() {
    return reinterpret_cast<const CSOAccountHeroInfo*>(
               &_CSOAccountHeroInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CSOAccountHeroInfo& a, CSOAccountHeroInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOAccountHeroInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOAccountHeroInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CSOAccountHeroInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CSOAccountHeroInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CSOAccountHeroInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CSOAccountHeroInfo& from) {
    CSOAccountHeroInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSOAccountHeroInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOAccountHeroInfo";
  }
  protected:
  explicit CSOAccountHeroInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CSOAccountHeroInfo_EHeroStatus EHeroStatus;
  static constexpr EHeroStatus k_eLocked =
    CSOAccountHeroInfo_EHeroStatus_k_eLocked;
  static constexpr EHeroStatus k_eOwned =
    CSOAccountHeroInfo_EHeroStatus_k_eOwned;
  static inline bool EHeroStatus_IsValid(int value) {
    return CSOAccountHeroInfo_EHeroStatus_IsValid(value);
  }
  static constexpr EHeroStatus EHeroStatus_MIN =
    CSOAccountHeroInfo_EHeroStatus_EHeroStatus_MIN;
  static constexpr EHeroStatus EHeroStatus_MAX =
    CSOAccountHeroInfo_EHeroStatus_EHeroStatus_MAX;
  static constexpr int EHeroStatus_ARRAYSIZE =
    CSOAccountHeroInfo_EHeroStatus_EHeroStatus_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EHeroStatus_descriptor() {
    return CSOAccountHeroInfo_EHeroStatus_descriptor();
  }
  template<typename T>
  static inline const std::string& EHeroStatus_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EHeroStatus>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EHeroStatus_Name.");
    return CSOAccountHeroInfo_EHeroStatus_Name(enum_t_value);
  }
  static inline bool EHeroStatus_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EHeroStatus* value) {
    return CSOAccountHeroInfo_EHeroStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kHeroIdFieldNumber = 2,
    kStatusFieldNumber = 3,
    kWinsFieldNumber = 4,
    kKillsFieldNumber = 5,
  };
  // optional uint32 account_id = 1 [(.key_field) = true];
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // optional .CSOAccountHeroInfo.EHeroStatus status = 3 [default = k_eLocked];
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  ::CSOAccountHeroInfo_EHeroStatus status() const;
  void set_status(::CSOAccountHeroInfo_EHeroStatus value);
  private:
  ::CSOAccountHeroInfo_EHeroStatus _internal_status() const;
  void _internal_set_status(::CSOAccountHeroInfo_EHeroStatus value);
  public:

  // optional uint32 wins = 4;
  bool has_wins() const;
  private:
  bool _internal_has_wins() const;
  public:
  void clear_wins();
  uint32_t wins() const;
  void set_wins(uint32_t value);
  private:
  uint32_t _internal_wins() const;
  void _internal_set_wins(uint32_t value);
  public:

  // optional uint32 kills = 5;
  bool has_kills() const;
  private:
  bool _internal_has_kills() const;
  public:
  void clear_kills();
  uint32_t kills() const;
  void set_kills(uint32_t value);
  private:
  uint32_t _internal_kills() const;
  void _internal_set_kills(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CSOAccountHeroInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    uint32_t hero_id_;
    int status_;
    uint32_t wins_;
    uint32_t kills_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgCitadelClientHello final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgCitadelClientHello) */ {
 public:
  inline CMsgCitadelClientHello() : CMsgCitadelClientHello(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgCitadelClientHello(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCitadelClientHello(const CMsgCitadelClientHello& from);
  CMsgCitadelClientHello(CMsgCitadelClientHello&& from) noexcept
    : CMsgCitadelClientHello() {
    *this = ::std::move(from);
  }

  inline CMsgCitadelClientHello& operator=(const CMsgCitadelClientHello& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCitadelClientHello& operator=(CMsgCitadelClientHello&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgCitadelClientHello& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCitadelClientHello* internal_default_instance() {
    return reinterpret_cast<const CMsgCitadelClientHello*>(
               &_CMsgCitadelClientHello_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgCitadelClientHello& a, CMsgCitadelClientHello& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCitadelClientHello* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCitadelClientHello* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgCitadelClientHello* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgCitadelClientHello>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgCitadelClientHello& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgCitadelClientHello& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCitadelClientHello";
  }
  protected:
  explicit CMsgCitadelClientHello(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgCitadelClientHello)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCStartMatchmaking final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCStartMatchmaking) */ {
 public:
  inline CMsgClientToGCStartMatchmaking() : CMsgClientToGCStartMatchmaking(nullptr) {}
  ~CMsgClientToGCStartMatchmaking() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCStartMatchmaking(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCStartMatchmaking(const CMsgClientToGCStartMatchmaking& from);
  CMsgClientToGCStartMatchmaking(CMsgClientToGCStartMatchmaking&& from) noexcept
    : CMsgClientToGCStartMatchmaking() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCStartMatchmaking& operator=(const CMsgClientToGCStartMatchmaking& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCStartMatchmaking& operator=(CMsgClientToGCStartMatchmaking&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCStartMatchmaking& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCStartMatchmaking* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCStartMatchmaking*>(
               &_CMsgClientToGCStartMatchmaking_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgClientToGCStartMatchmaking& a, CMsgClientToGCStartMatchmaking& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCStartMatchmaking* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCStartMatchmaking* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCStartMatchmaking* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCStartMatchmaking>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCStartMatchmaking& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCStartMatchmaking& from) {
    CMsgClientToGCStartMatchmaking::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCStartMatchmaking* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCStartMatchmaking";
  }
  protected:
  explicit CMsgClientToGCStartMatchmaking(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatchInfoFieldNumber = 3,
    kPingTimesFieldNumber = 4,
    kHeroesFieldNumber = 5,
    kClientVersionFieldNumber = 1,
    kClientPlatformFieldNumber = 2,
  };
  // optional .CMsgStartFindingMatchInfo match_info = 3;
  bool has_match_info() const;
  private:
  bool _internal_has_match_info() const;
  public:
  void clear_match_info();
  const ::CMsgStartFindingMatchInfo& match_info() const;
  PROTOBUF_NODISCARD ::CMsgStartFindingMatchInfo* release_match_info();
  ::CMsgStartFindingMatchInfo* mutable_match_info();
  void set_allocated_match_info(::CMsgStartFindingMatchInfo* match_info);
  private:
  const ::CMsgStartFindingMatchInfo& _internal_match_info() const;
  ::CMsgStartFindingMatchInfo* _internal_mutable_match_info();
  public:
  void unsafe_arena_set_allocated_match_info(
      ::CMsgStartFindingMatchInfo* match_info);
  ::CMsgStartFindingMatchInfo* unsafe_arena_release_match_info();

  // optional .CMsgRegionPingTimesClient ping_times = 4;
  bool has_ping_times() const;
  private:
  bool _internal_has_ping_times() const;
  public:
  void clear_ping_times();
  const ::CMsgRegionPingTimesClient& ping_times() const;
  PROTOBUF_NODISCARD ::CMsgRegionPingTimesClient* release_ping_times();
  ::CMsgRegionPingTimesClient* mutable_ping_times();
  void set_allocated_ping_times(::CMsgRegionPingTimesClient* ping_times);
  private:
  const ::CMsgRegionPingTimesClient& _internal_ping_times() const;
  ::CMsgRegionPingTimesClient* _internal_mutable_ping_times();
  public:
  void unsafe_arena_set_allocated_ping_times(
      ::CMsgRegionPingTimesClient* ping_times);
  ::CMsgRegionPingTimesClient* unsafe_arena_release_ping_times();

  // optional .CMsgHeroSelectionMatchInfo heroes = 5;
  bool has_heroes() const;
  private:
  bool _internal_has_heroes() const;
  public:
  void clear_heroes();
  const ::CMsgHeroSelectionMatchInfo& heroes() const;
  PROTOBUF_NODISCARD ::CMsgHeroSelectionMatchInfo* release_heroes();
  ::CMsgHeroSelectionMatchInfo* mutable_heroes();
  void set_allocated_heroes(::CMsgHeroSelectionMatchInfo* heroes);
  private:
  const ::CMsgHeroSelectionMatchInfo& _internal_heroes() const;
  ::CMsgHeroSelectionMatchInfo* _internal_mutable_heroes();
  public:
  void unsafe_arena_set_allocated_heroes(
      ::CMsgHeroSelectionMatchInfo* heroes);
  ::CMsgHeroSelectionMatchInfo* unsafe_arena_release_heroes();

  // optional uint32 client_version = 1;
  bool has_client_version() const;
  private:
  bool _internal_has_client_version() const;
  public:
  void clear_client_version();
  uint32_t client_version() const;
  void set_client_version(uint32_t value);
  private:
  uint32_t _internal_client_version() const;
  void _internal_set_client_version(uint32_t value);
  public:

  // optional .EGCPlatform client_platform = 2 [default = k_eGCPlatform_None];
  bool has_client_platform() const;
  private:
  bool _internal_has_client_platform() const;
  public:
  void clear_client_platform();
  ::EGCPlatform client_platform() const;
  void set_client_platform(::EGCPlatform value);
  private:
  ::EGCPlatform _internal_client_platform() const;
  void _internal_set_client_platform(::EGCPlatform value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCStartMatchmaking)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgStartFindingMatchInfo* match_info_;
    ::CMsgRegionPingTimesClient* ping_times_;
    ::CMsgHeroSelectionMatchInfo* heroes_;
    uint32_t client_version_;
    int client_platform_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCStartMatchmakingResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCStartMatchmakingResponse) */ {
 public:
  inline CMsgClientToGCStartMatchmakingResponse() : CMsgClientToGCStartMatchmakingResponse(nullptr) {}
  ~CMsgClientToGCStartMatchmakingResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCStartMatchmakingResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCStartMatchmakingResponse(const CMsgClientToGCStartMatchmakingResponse& from);
  CMsgClientToGCStartMatchmakingResponse(CMsgClientToGCStartMatchmakingResponse&& from) noexcept
    : CMsgClientToGCStartMatchmakingResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCStartMatchmakingResponse& operator=(const CMsgClientToGCStartMatchmakingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCStartMatchmakingResponse& operator=(CMsgClientToGCStartMatchmakingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCStartMatchmakingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCStartMatchmakingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCStartMatchmakingResponse*>(
               &_CMsgClientToGCStartMatchmakingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgClientToGCStartMatchmakingResponse& a, CMsgClientToGCStartMatchmakingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCStartMatchmakingResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCStartMatchmakingResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCStartMatchmakingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCStartMatchmakingResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCStartMatchmakingResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCStartMatchmakingResponse& from) {
    CMsgClientToGCStartMatchmakingResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCStartMatchmakingResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCStartMatchmakingResponse";
  }
  protected:
  explicit CMsgClientToGCStartMatchmakingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCStartMatchmakingResponse_EResultCode EResultCode;
  static constexpr EResultCode k_EResult_OK =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_OK;
  static constexpr EResultCode k_EResult_AlreadyFindingMatch =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_AlreadyFindingMatch;
  static constexpr EResultCode k_EResult_PartyMemberInLobby =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_PartyMemberInLobby;
  static constexpr EResultCode k_EResult_InvalidClientVersion =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_InvalidClientVersion;
  static constexpr EResultCode k_EResult_MatchmakingDisabled =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_MatchmakingDisabled;
  static constexpr EResultCode k_EResult_MatchmakingTooBusy =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_MatchmakingTooBusy;
  static constexpr EResultCode k_EResult_InternalError =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_InternalError;
  static constexpr EResultCode k_EResult_NoRegionPings =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_NoRegionPings;
  static constexpr EResultCode k_EResult_InParty =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_InParty;
  static constexpr EResultCode k_EResult_ModeLocked =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_ModeLocked;
  static constexpr EResultCode k_EResult_ModeBanned =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_ModeBanned;
  static constexpr EResultCode k_EResult_RegionInfoNotProvided =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_RegionInfoNotProvided;
  static constexpr EResultCode k_EResult_DurationControlBlocked =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_DurationControlBlocked;
  static constexpr EResultCode k_EResult_InvalidHeroSelection =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_InvalidHeroSelection;
  static constexpr EResultCode k_EResult_HeroesNotUnlocked =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_HeroesNotUnlocked;
  static constexpr EResultCode k_EResult_PermanentBan =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_PermanentBan;
  static constexpr EResultCode k_EResult_RankedMMNotOpen =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_RankedMMNotOpen;
  static constexpr EResultCode k_EResult_RankedNotUnlocked =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_RankedNotUnlocked;
  static constexpr EResultCode k_EResult_NoRankedWhileInLowPri =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_NoRankedWhileInLowPri;
  static constexpr EResultCode k_EResult_NoRankedWhileCommsBanned =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_NoRankedWhileCommsBanned;
  static constexpr EResultCode k_EResult_NoRankedWhileReportBanned =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_NoRankedWhileReportBanned;
  static constexpr EResultCode k_EResult_HeroLabsMMNotOpen =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_HeroLabsMMNotOpen;
  static constexpr EResultCode k_EResult_HeroLabsNotUnlocked =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_HeroLabsNotUnlocked;
  static constexpr EResultCode k_EResult_NoHeroLabsWhileInLowPri =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_NoHeroLabsWhileInLowPri;
  static constexpr EResultCode k_EResult_AccountLocked =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_k_EResult_AccountLocked;
  static inline bool EResultCode_IsValid(int value) {
    return CMsgClientToGCStartMatchmakingResponse_EResultCode_IsValid(value);
  }
  static constexpr EResultCode EResultCode_MIN =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_EResultCode_MIN;
  static constexpr EResultCode EResultCode_MAX =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_EResultCode_MAX;
  static constexpr int EResultCode_ARRAYSIZE =
    CMsgClientToGCStartMatchmakingResponse_EResultCode_EResultCode_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResultCode_descriptor() {
    return CMsgClientToGCStartMatchmakingResponse_EResultCode_descriptor();
  }
  template<typename T>
  static inline const std::string& EResultCode_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResultCode>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResultCode_Name.");
    return CMsgClientToGCStartMatchmakingResponse_EResultCode_Name(enum_t_value);
  }
  static inline bool EResultCode_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResultCode* value) {
    return CMsgClientToGCStartMatchmakingResponse_EResultCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kDebugMessageFieldNumber = 3,
    kResultFieldNumber = 1,
    kTimeStampFieldNumber = 2,
  };
  // optional string debug_message = 3;
  bool has_debug_message() const;
  private:
  bool _internal_has_debug_message() const;
  public:
  void clear_debug_message();
  const std::string& debug_message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_debug_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_debug_message();
  PROTOBUF_NODISCARD std::string* release_debug_message();
  void set_allocated_debug_message(std::string* debug_message);
  private:
  const std::string& _internal_debug_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_debug_message(const std::string& value);
  std::string* _internal_mutable_debug_message();
  public:

  // optional .CMsgClientToGCStartMatchmakingResponse.EResultCode result = 1 [default = k_EResult_OK];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCStartMatchmakingResponse_EResultCode result() const;
  void set_result(::CMsgClientToGCStartMatchmakingResponse_EResultCode value);
  private:
  ::CMsgClientToGCStartMatchmakingResponse_EResultCode _internal_result() const;
  void _internal_set_result(::CMsgClientToGCStartMatchmakingResponse_EResultCode value);
  public:

  // optional uint32 time_stamp = 2;
  bool has_time_stamp() const;
  private:
  bool _internal_has_time_stamp() const;
  public:
  void clear_time_stamp();
  uint32_t time_stamp() const;
  void set_time_stamp(uint32_t value);
  private:
  uint32_t _internal_time_stamp() const;
  void _internal_set_time_stamp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCStartMatchmakingResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr debug_message_;
    int result_;
    uint32_t time_stamp_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCStopMatchmaking final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgClientToGCStopMatchmaking) */ {
 public:
  inline CMsgClientToGCStopMatchmaking() : CMsgClientToGCStopMatchmaking(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCStopMatchmaking(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCStopMatchmaking(const CMsgClientToGCStopMatchmaking& from);
  CMsgClientToGCStopMatchmaking(CMsgClientToGCStopMatchmaking&& from) noexcept
    : CMsgClientToGCStopMatchmaking() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCStopMatchmaking& operator=(const CMsgClientToGCStopMatchmaking& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCStopMatchmaking& operator=(CMsgClientToGCStopMatchmaking&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCStopMatchmaking& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCStopMatchmaking* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCStopMatchmaking*>(
               &_CMsgClientToGCStopMatchmaking_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgClientToGCStopMatchmaking& a, CMsgClientToGCStopMatchmaking& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCStopMatchmaking* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCStopMatchmaking* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCStopMatchmaking* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCStopMatchmaking>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgClientToGCStopMatchmaking& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgClientToGCStopMatchmaking& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCStopMatchmaking";
  }
  protected:
  explicit CMsgClientToGCStopMatchmaking(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCStopMatchmaking)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCStopMatchmakingResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCStopMatchmakingResponse) */ {
 public:
  inline CMsgClientToGCStopMatchmakingResponse() : CMsgClientToGCStopMatchmakingResponse(nullptr) {}
  ~CMsgClientToGCStopMatchmakingResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCStopMatchmakingResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCStopMatchmakingResponse(const CMsgClientToGCStopMatchmakingResponse& from);
  CMsgClientToGCStopMatchmakingResponse(CMsgClientToGCStopMatchmakingResponse&& from) noexcept
    : CMsgClientToGCStopMatchmakingResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCStopMatchmakingResponse& operator=(const CMsgClientToGCStopMatchmakingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCStopMatchmakingResponse& operator=(CMsgClientToGCStopMatchmakingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCStopMatchmakingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCStopMatchmakingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCStopMatchmakingResponse*>(
               &_CMsgClientToGCStopMatchmakingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgClientToGCStopMatchmakingResponse& a, CMsgClientToGCStopMatchmakingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCStopMatchmakingResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCStopMatchmakingResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCStopMatchmakingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCStopMatchmakingResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCStopMatchmakingResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCStopMatchmakingResponse& from) {
    CMsgClientToGCStopMatchmakingResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCStopMatchmakingResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCStopMatchmakingResponse";
  }
  protected:
  explicit CMsgClientToGCStopMatchmakingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // optional bool success = 1;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCStopMatchmakingResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool success_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientMatchmakingStopped final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientMatchmakingStopped) */ {
 public:
  inline CMsgGCToClientMatchmakingStopped() : CMsgGCToClientMatchmakingStopped(nullptr) {}
  ~CMsgGCToClientMatchmakingStopped() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientMatchmakingStopped(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientMatchmakingStopped(const CMsgGCToClientMatchmakingStopped& from);
  CMsgGCToClientMatchmakingStopped(CMsgGCToClientMatchmakingStopped&& from) noexcept
    : CMsgGCToClientMatchmakingStopped() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientMatchmakingStopped& operator=(const CMsgGCToClientMatchmakingStopped& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientMatchmakingStopped& operator=(CMsgGCToClientMatchmakingStopped&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientMatchmakingStopped& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientMatchmakingStopped* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientMatchmakingStopped*>(
               &_CMsgGCToClientMatchmakingStopped_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgGCToClientMatchmakingStopped& a, CMsgGCToClientMatchmakingStopped& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientMatchmakingStopped* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientMatchmakingStopped* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientMatchmakingStopped* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientMatchmakingStopped>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientMatchmakingStopped& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientMatchmakingStopped& from) {
    CMsgGCToClientMatchmakingStopped::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientMatchmakingStopped* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientMatchmakingStopped";
  }
  protected:
  explicit CMsgGCToClientMatchmakingStopped(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientMatchmakingStopped_EReason EReason;
  static constexpr EReason k_EResult_Unspecified =
    CMsgGCToClientMatchmakingStopped_EReason_k_EResult_Unspecified;
  static constexpr EReason k_EResult_VersionUpdated =
    CMsgGCToClientMatchmakingStopped_EReason_k_EResult_VersionUpdated;
  static constexpr EReason k_EResult_RankedClosed =
    CMsgGCToClientMatchmakingStopped_EReason_k_EResult_RankedClosed;
  static constexpr EReason k_EResult_HeroLabsClosed =
    CMsgGCToClientMatchmakingStopped_EReason_k_EResult_HeroLabsClosed;
  static inline bool EReason_IsValid(int value) {
    return CMsgGCToClientMatchmakingStopped_EReason_IsValid(value);
  }
  static constexpr EReason EReason_MIN =
    CMsgGCToClientMatchmakingStopped_EReason_EReason_MIN;
  static constexpr EReason EReason_MAX =
    CMsgGCToClientMatchmakingStopped_EReason_EReason_MAX;
  static constexpr int EReason_ARRAYSIZE =
    CMsgGCToClientMatchmakingStopped_EReason_EReason_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EReason_descriptor() {
    return CMsgGCToClientMatchmakingStopped_EReason_descriptor();
  }
  template<typename T>
  static inline const std::string& EReason_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EReason>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EReason_Name.");
    return CMsgGCToClientMatchmakingStopped_EReason_Name(enum_t_value);
  }
  static inline bool EReason_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EReason* value) {
    return CMsgGCToClientMatchmakingStopped_EReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kReasonFieldNumber = 1,
  };
  // optional .CMsgGCToClientMatchmakingStopped.EReason reason = 1 [default = k_EResult_Unspecified];
  bool has_reason() const;
  private:
  bool _internal_has_reason() const;
  public:
  void clear_reason();
  ::CMsgGCToClientMatchmakingStopped_EReason reason() const;
  void set_reason(::CMsgGCToClientMatchmakingStopped_EReason value);
  private:
  ::CMsgGCToClientMatchmakingStopped_EReason _internal_reason() const;
  void _internal_set_reason(::CMsgGCToClientMatchmakingStopped_EReason value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientMatchmakingStopped)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int reason_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCLeaveLobby final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCLeaveLobby) */ {
 public:
  inline CMsgClientToGCLeaveLobby() : CMsgClientToGCLeaveLobby(nullptr) {}
  ~CMsgClientToGCLeaveLobby() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCLeaveLobby(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCLeaveLobby(const CMsgClientToGCLeaveLobby& from);
  CMsgClientToGCLeaveLobby(CMsgClientToGCLeaveLobby&& from) noexcept
    : CMsgClientToGCLeaveLobby() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCLeaveLobby& operator=(const CMsgClientToGCLeaveLobby& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCLeaveLobby& operator=(CMsgClientToGCLeaveLobby&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCLeaveLobby& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCLeaveLobby* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCLeaveLobby*>(
               &_CMsgClientToGCLeaveLobby_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgClientToGCLeaveLobby& a, CMsgClientToGCLeaveLobby& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCLeaveLobby* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCLeaveLobby* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCLeaveLobby* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCLeaveLobby>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCLeaveLobby& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCLeaveLobby& from) {
    CMsgClientToGCLeaveLobby::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCLeaveLobby* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCLeaveLobby";
  }
  protected:
  explicit CMsgClientToGCLeaveLobby(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLobbyIdFieldNumber = 1,
  };
  // optional uint64 lobby_id = 1;
  bool has_lobby_id() const;
  private:
  bool _internal_has_lobby_id() const;
  public:
  void clear_lobby_id();
  uint64_t lobby_id() const;
  void set_lobby_id(uint64_t value);
  private:
  uint64_t _internal_lobby_id() const;
  void _internal_set_lobby_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCLeaveLobby)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t lobby_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCLeaveLobbyResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgClientToGCLeaveLobbyResponse) */ {
 public:
  inline CMsgClientToGCLeaveLobbyResponse() : CMsgClientToGCLeaveLobbyResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCLeaveLobbyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCLeaveLobbyResponse(const CMsgClientToGCLeaveLobbyResponse& from);
  CMsgClientToGCLeaveLobbyResponse(CMsgClientToGCLeaveLobbyResponse&& from) noexcept
    : CMsgClientToGCLeaveLobbyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCLeaveLobbyResponse& operator=(const CMsgClientToGCLeaveLobbyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCLeaveLobbyResponse& operator=(CMsgClientToGCLeaveLobbyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCLeaveLobbyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCLeaveLobbyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCLeaveLobbyResponse*>(
               &_CMsgClientToGCLeaveLobbyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMsgClientToGCLeaveLobbyResponse& a, CMsgClientToGCLeaveLobbyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCLeaveLobbyResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCLeaveLobbyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCLeaveLobbyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCLeaveLobbyResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgClientToGCLeaveLobbyResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgClientToGCLeaveLobbyResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCLeaveLobbyResponse";
  }
  protected:
  explicit CMsgClientToGCLeaveLobbyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCLeaveLobbyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientWelcomeCitadel final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientWelcomeCitadel) */ {
 public:
  inline CMsgClientWelcomeCitadel() : CMsgClientWelcomeCitadel(nullptr) {}
  ~CMsgClientWelcomeCitadel() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientWelcomeCitadel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientWelcomeCitadel(const CMsgClientWelcomeCitadel& from);
  CMsgClientWelcomeCitadel(CMsgClientWelcomeCitadel&& from) noexcept
    : CMsgClientWelcomeCitadel() {
    *this = ::std::move(from);
  }

  inline CMsgClientWelcomeCitadel& operator=(const CMsgClientWelcomeCitadel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientWelcomeCitadel& operator=(CMsgClientWelcomeCitadel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientWelcomeCitadel& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientWelcomeCitadel* internal_default_instance() {
    return reinterpret_cast<const CMsgClientWelcomeCitadel*>(
               &_CMsgClientWelcomeCitadel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMsgClientWelcomeCitadel& a, CMsgClientWelcomeCitadel& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientWelcomeCitadel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientWelcomeCitadel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientWelcomeCitadel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientWelcomeCitadel>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientWelcomeCitadel& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientWelcomeCitadel& from) {
    CMsgClientWelcomeCitadel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientWelcomeCitadel* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientWelcomeCitadel";
  }
  protected:
  explicit CMsgClientWelcomeCitadel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExtraMessagesFieldNumber = 2,
    kCurrencyFieldNumber = 1,
    kCompatibilityVersionFieldNumber = 3,
    kRegionModeFieldNumber = 4,
  };
  // repeated .CExtraMsgBlock extra_messages = 2;
  int extra_messages_size() const;
  private:
  int _internal_extra_messages_size() const;
  public:
  void clear_extra_messages();
  ::CExtraMsgBlock* mutable_extra_messages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock >*
      mutable_extra_messages();
  private:
  const ::CExtraMsgBlock& _internal_extra_messages(int index) const;
  ::CExtraMsgBlock* _internal_add_extra_messages();
  public:
  const ::CExtraMsgBlock& extra_messages(int index) const;
  ::CExtraMsgBlock* add_extra_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock >&
      extra_messages() const;

  // optional uint32 currency = 1;
  bool has_currency() const;
  private:
  bool _internal_has_currency() const;
  public:
  void clear_currency();
  uint32_t currency() const;
  void set_currency(uint32_t value);
  private:
  uint32_t _internal_currency() const;
  void _internal_set_currency(uint32_t value);
  public:

  // optional uint32 compatibility_version = 3;
  bool has_compatibility_version() const;
  private:
  bool _internal_has_compatibility_version() const;
  public:
  void clear_compatibility_version();
  uint32_t compatibility_version() const;
  void set_compatibility_version(uint32_t value);
  private:
  uint32_t _internal_compatibility_version() const;
  void _internal_set_compatibility_version(uint32_t value);
  public:

  // optional .ECitadelRegionMode region_mode = 4 [default = k_ECitadelRegionMode_ROW];
  bool has_region_mode() const;
  private:
  bool _internal_has_region_mode() const;
  public:
  void clear_region_mode();
  ::ECitadelRegionMode region_mode() const;
  void set_region_mode(::ECitadelRegionMode value);
  private:
  ::ECitadelRegionMode _internal_region_mode() const;
  void _internal_set_region_mode(::ECitadelRegionMode value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientWelcomeCitadel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock > extra_messages_;
    uint32_t currency_;
    uint32_t compatibility_version_;
    int region_mode_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCIsInMatchmaking final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgClientToGCIsInMatchmaking) */ {
 public:
  inline CMsgClientToGCIsInMatchmaking() : CMsgClientToGCIsInMatchmaking(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCIsInMatchmaking(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCIsInMatchmaking(const CMsgClientToGCIsInMatchmaking& from);
  CMsgClientToGCIsInMatchmaking(CMsgClientToGCIsInMatchmaking&& from) noexcept
    : CMsgClientToGCIsInMatchmaking() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCIsInMatchmaking& operator=(const CMsgClientToGCIsInMatchmaking& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCIsInMatchmaking& operator=(CMsgClientToGCIsInMatchmaking&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCIsInMatchmaking& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCIsInMatchmaking* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCIsInMatchmaking*>(
               &_CMsgClientToGCIsInMatchmaking_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CMsgClientToGCIsInMatchmaking& a, CMsgClientToGCIsInMatchmaking& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCIsInMatchmaking* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCIsInMatchmaking* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCIsInMatchmaking* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCIsInMatchmaking>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgClientToGCIsInMatchmaking& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgClientToGCIsInMatchmaking& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCIsInMatchmaking";
  }
  protected:
  explicit CMsgClientToGCIsInMatchmaking(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCIsInMatchmaking)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCIsInMatchmakingResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCIsInMatchmakingResponse) */ {
 public:
  inline CMsgClientToGCIsInMatchmakingResponse() : CMsgClientToGCIsInMatchmakingResponse(nullptr) {}
  ~CMsgClientToGCIsInMatchmakingResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCIsInMatchmakingResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCIsInMatchmakingResponse(const CMsgClientToGCIsInMatchmakingResponse& from);
  CMsgClientToGCIsInMatchmakingResponse(CMsgClientToGCIsInMatchmakingResponse&& from) noexcept
    : CMsgClientToGCIsInMatchmakingResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCIsInMatchmakingResponse& operator=(const CMsgClientToGCIsInMatchmakingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCIsInMatchmakingResponse& operator=(CMsgClientToGCIsInMatchmakingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCIsInMatchmakingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCIsInMatchmakingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCIsInMatchmakingResponse*>(
               &_CMsgClientToGCIsInMatchmakingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CMsgClientToGCIsInMatchmakingResponse& a, CMsgClientToGCIsInMatchmakingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCIsInMatchmakingResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCIsInMatchmakingResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCIsInMatchmakingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCIsInMatchmakingResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCIsInMatchmakingResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCIsInMatchmakingResponse& from) {
    CMsgClientToGCIsInMatchmakingResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCIsInMatchmakingResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCIsInMatchmakingResponse";
  }
  protected:
  explicit CMsgClientToGCIsInMatchmakingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInMatchmakingFieldNumber = 1,
  };
  // optional bool in_matchmaking = 1;
  bool has_in_matchmaking() const;
  private:
  bool _internal_has_in_matchmaking() const;
  public:
  void clear_in_matchmaking();
  bool in_matchmaking() const;
  void set_in_matchmaking(bool value);
  private:
  bool _internal_in_matchmaking() const;
  void _internal_set_in_matchmaking(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCIsInMatchmakingResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool in_matchmaking_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDevMatchInfo_MatchPlayer final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDevMatchInfo.MatchPlayer) */ {
 public:
  inline CMsgDevMatchInfo_MatchPlayer() : CMsgDevMatchInfo_MatchPlayer(nullptr) {}
  ~CMsgDevMatchInfo_MatchPlayer() override;
  explicit PROTOBUF_CONSTEXPR CMsgDevMatchInfo_MatchPlayer(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDevMatchInfo_MatchPlayer(const CMsgDevMatchInfo_MatchPlayer& from);
  CMsgDevMatchInfo_MatchPlayer(CMsgDevMatchInfo_MatchPlayer&& from) noexcept
    : CMsgDevMatchInfo_MatchPlayer() {
    *this = ::std::move(from);
  }

  inline CMsgDevMatchInfo_MatchPlayer& operator=(const CMsgDevMatchInfo_MatchPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDevMatchInfo_MatchPlayer& operator=(CMsgDevMatchInfo_MatchPlayer&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgDevMatchInfo_MatchPlayer& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDevMatchInfo_MatchPlayer* internal_default_instance() {
    return reinterpret_cast<const CMsgDevMatchInfo_MatchPlayer*>(
               &_CMsgDevMatchInfo_MatchPlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CMsgDevMatchInfo_MatchPlayer& a, CMsgDevMatchInfo_MatchPlayer& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDevMatchInfo_MatchPlayer* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDevMatchInfo_MatchPlayer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgDevMatchInfo_MatchPlayer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgDevMatchInfo_MatchPlayer>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgDevMatchInfo_MatchPlayer& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgDevMatchInfo_MatchPlayer& from) {
    CMsgDevMatchInfo_MatchPlayer::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDevMatchInfo_MatchPlayer* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDevMatchInfo.MatchPlayer";
  }
  protected:
  explicit CMsgDevMatchInfo_MatchPlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kTeamFieldNumber = 2,
    kAbandonedFieldNumber = 3,
    kHeroIdFieldNumber = 4,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional .ECitadelLobbyTeam team = 2 [default = k_ECitadelLobbyTeam_Team0];
  bool has_team() const;
  private:
  bool _internal_has_team() const;
  public:
  void clear_team();
  ::ECitadelLobbyTeam team() const;
  void set_team(::ECitadelLobbyTeam value);
  private:
  ::ECitadelLobbyTeam _internal_team() const;
  void _internal_set_team(::ECitadelLobbyTeam value);
  public:

  // optional bool abandoned = 3;
  bool has_abandoned() const;
  private:
  bool _internal_has_abandoned() const;
  public:
  void clear_abandoned();
  bool abandoned() const;
  void set_abandoned(bool value);
  private:
  bool _internal_abandoned() const;
  void _internal_set_abandoned(bool value);
  public:

  // optional uint32 hero_id = 4;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDevMatchInfo.MatchPlayer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    int team_;
    bool abandoned_;
    uint32_t hero_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDevMatchInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDevMatchInfo) */ {
 public:
  inline CMsgDevMatchInfo() : CMsgDevMatchInfo(nullptr) {}
  ~CMsgDevMatchInfo() override;
  explicit PROTOBUF_CONSTEXPR CMsgDevMatchInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDevMatchInfo(const CMsgDevMatchInfo& from);
  CMsgDevMatchInfo(CMsgDevMatchInfo&& from) noexcept
    : CMsgDevMatchInfo() {
    *this = ::std::move(from);
  }

  inline CMsgDevMatchInfo& operator=(const CMsgDevMatchInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDevMatchInfo& operator=(CMsgDevMatchInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgDevMatchInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDevMatchInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgDevMatchInfo*>(
               &_CMsgDevMatchInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CMsgDevMatchInfo& a, CMsgDevMatchInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDevMatchInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDevMatchInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgDevMatchInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgDevMatchInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgDevMatchInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgDevMatchInfo& from) {
    CMsgDevMatchInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDevMatchInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDevMatchInfo";
  }
  protected:
  explicit CMsgDevMatchInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDevMatchInfo_MatchPlayer MatchPlayer;

  // accessors -------------------------------------------------------

  enum : int {
    kPlayersFieldNumber = 4,
    kStartTimeFieldNumber = 1,
    kWinningTeamFieldNumber = 2,
    kMatchIdFieldNumber = 3,
    kLobbyIdFieldNumber = 5,
    kNetWorthTeam0FieldNumber = 9,
    kNetWorthTeam1FieldNumber = 10,
    kDurationSFieldNumber = 11,
    kSpectatorsFieldNumber = 12,
    kObjectivesMaskTeam0FieldNumber = 14,
    kOpenSpectatorSlotsFieldNumber = 13,
    kMatchModeFieldNumber = 16,
    kObjectivesMaskTeam1FieldNumber = 15,
    kGameModeFieldNumber = 17,
    kMatchScoreFieldNumber = 18,
    kRegionModeFieldNumber = 19,
    kCompatVersionFieldNumber = 20,
  };
  // repeated .CMsgDevMatchInfo.MatchPlayer players = 4;
  int players_size() const;
  private:
  int _internal_players_size() const;
  public:
  void clear_players();
  ::CMsgDevMatchInfo_MatchPlayer* mutable_players(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDevMatchInfo_MatchPlayer >*
      mutable_players();
  private:
  const ::CMsgDevMatchInfo_MatchPlayer& _internal_players(int index) const;
  ::CMsgDevMatchInfo_MatchPlayer* _internal_add_players();
  public:
  const ::CMsgDevMatchInfo_MatchPlayer& players(int index) const;
  ::CMsgDevMatchInfo_MatchPlayer* add_players();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDevMatchInfo_MatchPlayer >&
      players() const;

  // optional uint32 start_time = 1;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  uint32_t start_time() const;
  void set_start_time(uint32_t value);
  private:
  uint32_t _internal_start_time() const;
  void _internal_set_start_time(uint32_t value);
  public:

  // optional .ECitadelLobbyTeam winning_team = 2 [default = k_ECitadelLobbyTeam_Team0];
  bool has_winning_team() const;
  private:
  bool _internal_has_winning_team() const;
  public:
  void clear_winning_team();
  ::ECitadelLobbyTeam winning_team() const;
  void set_winning_team(::ECitadelLobbyTeam value);
  private:
  ::ECitadelLobbyTeam _internal_winning_team() const;
  void _internal_set_winning_team(::ECitadelLobbyTeam value);
  public:

  // optional uint64 match_id = 3;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // optional fixed64 lobby_id = 5;
  bool has_lobby_id() const;
  private:
  bool _internal_has_lobby_id() const;
  public:
  void clear_lobby_id();
  uint64_t lobby_id() const;
  void set_lobby_id(uint64_t value);
  private:
  uint64_t _internal_lobby_id() const;
  void _internal_set_lobby_id(uint64_t value);
  public:

  // optional uint32 net_worth_team_0 = 9;
  bool has_net_worth_team_0() const;
  private:
  bool _internal_has_net_worth_team_0() const;
  public:
  void clear_net_worth_team_0();
  uint32_t net_worth_team_0() const;
  void set_net_worth_team_0(uint32_t value);
  private:
  uint32_t _internal_net_worth_team_0() const;
  void _internal_set_net_worth_team_0(uint32_t value);
  public:

  // optional uint32 net_worth_team_1 = 10;
  bool has_net_worth_team_1() const;
  private:
  bool _internal_has_net_worth_team_1() const;
  public:
  void clear_net_worth_team_1();
  uint32_t net_worth_team_1() const;
  void set_net_worth_team_1(uint32_t value);
  private:
  uint32_t _internal_net_worth_team_1() const;
  void _internal_set_net_worth_team_1(uint32_t value);
  public:

  // optional uint32 duration_s = 11;
  bool has_duration_s() const;
  private:
  bool _internal_has_duration_s() const;
  public:
  void clear_duration_s();
  uint32_t duration_s() const;
  void set_duration_s(uint32_t value);
  private:
  uint32_t _internal_duration_s() const;
  void _internal_set_duration_s(uint32_t value);
  public:

  // optional uint32 spectators = 12;
  bool has_spectators() const;
  private:
  bool _internal_has_spectators() const;
  public:
  void clear_spectators();
  uint32_t spectators() const;
  void set_spectators(uint32_t value);
  private:
  uint32_t _internal_spectators() const;
  void _internal_set_spectators(uint32_t value);
  public:

  // optional uint64 objectives_mask_team0 = 14;
  bool has_objectives_mask_team0() const;
  private:
  bool _internal_has_objectives_mask_team0() const;
  public:
  void clear_objectives_mask_team0();
  uint64_t objectives_mask_team0() const;
  void set_objectives_mask_team0(uint64_t value);
  private:
  uint64_t _internal_objectives_mask_team0() const;
  void _internal_set_objectives_mask_team0(uint64_t value);
  public:

  // optional uint32 open_spectator_slots = 13;
  bool has_open_spectator_slots() const;
  private:
  bool _internal_has_open_spectator_slots() const;
  public:
  void clear_open_spectator_slots();
  uint32_t open_spectator_slots() const;
  void set_open_spectator_slots(uint32_t value);
  private:
  uint32_t _internal_open_spectator_slots() const;
  void _internal_set_open_spectator_slots(uint32_t value);
  public:

  // optional .ECitadelMatchMode match_mode = 16 [default = k_ECitadelMatchMode_Invalid];
  bool has_match_mode() const;
  private:
  bool _internal_has_match_mode() const;
  public:
  void clear_match_mode();
  ::ECitadelMatchMode match_mode() const;
  void set_match_mode(::ECitadelMatchMode value);
  private:
  ::ECitadelMatchMode _internal_match_mode() const;
  void _internal_set_match_mode(::ECitadelMatchMode value);
  public:

  // optional uint64 objectives_mask_team1 = 15;
  bool has_objectives_mask_team1() const;
  private:
  bool _internal_has_objectives_mask_team1() const;
  public:
  void clear_objectives_mask_team1();
  uint64_t objectives_mask_team1() const;
  void set_objectives_mask_team1(uint64_t value);
  private:
  uint64_t _internal_objectives_mask_team1() const;
  void _internal_set_objectives_mask_team1(uint64_t value);
  public:

  // optional .ECitadelGameMode game_mode = 17 [default = k_ECitadelGameMode_Invalid];
  bool has_game_mode() const;
  private:
  bool _internal_has_game_mode() const;
  public:
  void clear_game_mode();
  ::ECitadelGameMode game_mode() const;
  void set_game_mode(::ECitadelGameMode value);
  private:
  ::ECitadelGameMode _internal_game_mode() const;
  void _internal_set_game_mode(::ECitadelGameMode value);
  public:

  // optional uint32 match_score = 18;
  bool has_match_score() const;
  private:
  bool _internal_has_match_score() const;
  public:
  void clear_match_score();
  uint32_t match_score() const;
  void set_match_score(uint32_t value);
  private:
  uint32_t _internal_match_score() const;
  void _internal_set_match_score(uint32_t value);
  public:

  // optional .ECitadelRegionMode region_mode = 19 [default = k_ECitadelRegionMode_ROW];
  bool has_region_mode() const;
  private:
  bool _internal_has_region_mode() const;
  public:
  void clear_region_mode();
  ::ECitadelRegionMode region_mode() const;
  void set_region_mode(::ECitadelRegionMode value);
  private:
  ::ECitadelRegionMode _internal_region_mode() const;
  void _internal_set_region_mode(::ECitadelRegionMode value);
  public:

  // optional uint32 compat_version = 20;
  bool has_compat_version() const;
  private:
  bool _internal_has_compat_version() const;
  public:
  void clear_compat_version();
  uint32_t compat_version() const;
  void set_compat_version(uint32_t value);
  private:
  uint32_t _internal_compat_version() const;
  void _internal_set_compat_version(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDevMatchInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDevMatchInfo_MatchPlayer > players_;
    uint32_t start_time_;
    int winning_team_;
    uint64_t match_id_;
    uint64_t lobby_id_;
    uint32_t net_worth_team_0_;
    uint32_t net_worth_team_1_;
    uint32_t duration_s_;
    uint32_t spectators_;
    uint64_t objectives_mask_team0_;
    uint32_t open_spectator_slots_;
    int match_mode_;
    uint64_t objectives_mask_team1_;
    int game_mode_;
    uint32_t match_score_;
    int region_mode_;
    uint32_t compat_version_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientHeroLabsSchedule_TimeRange final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientHeroLabsSchedule.TimeRange) */ {
 public:
  inline CMsgGCToClientHeroLabsSchedule_TimeRange() : CMsgGCToClientHeroLabsSchedule_TimeRange(nullptr) {}
  ~CMsgGCToClientHeroLabsSchedule_TimeRange() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientHeroLabsSchedule_TimeRange(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientHeroLabsSchedule_TimeRange(const CMsgGCToClientHeroLabsSchedule_TimeRange& from);
  CMsgGCToClientHeroLabsSchedule_TimeRange(CMsgGCToClientHeroLabsSchedule_TimeRange&& from) noexcept
    : CMsgGCToClientHeroLabsSchedule_TimeRange() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientHeroLabsSchedule_TimeRange& operator=(const CMsgGCToClientHeroLabsSchedule_TimeRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientHeroLabsSchedule_TimeRange& operator=(CMsgGCToClientHeroLabsSchedule_TimeRange&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientHeroLabsSchedule_TimeRange& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientHeroLabsSchedule_TimeRange* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientHeroLabsSchedule_TimeRange*>(
               &_CMsgGCToClientHeroLabsSchedule_TimeRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CMsgGCToClientHeroLabsSchedule_TimeRange& a, CMsgGCToClientHeroLabsSchedule_TimeRange& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientHeroLabsSchedule_TimeRange* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientHeroLabsSchedule_TimeRange* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientHeroLabsSchedule_TimeRange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientHeroLabsSchedule_TimeRange>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientHeroLabsSchedule_TimeRange& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientHeroLabsSchedule_TimeRange& from) {
    CMsgGCToClientHeroLabsSchedule_TimeRange::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientHeroLabsSchedule_TimeRange* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientHeroLabsSchedule.TimeRange";
  }
  protected:
  explicit CMsgGCToClientHeroLabsSchedule_TimeRange(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartTimeFieldNumber = 1,
    kEndTimeFieldNumber = 2,
  };
  // optional int32 start_time = 1;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  int32_t start_time() const;
  void set_start_time(int32_t value);
  private:
  int32_t _internal_start_time() const;
  void _internal_set_start_time(int32_t value);
  public:

  // optional int32 end_time = 2;
  bool has_end_time() const;
  private:
  bool _internal_has_end_time() const;
  public:
  void clear_end_time();
  int32_t end_time() const;
  void set_end_time(int32_t value);
  private:
  int32_t _internal_end_time() const;
  void _internal_set_end_time(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientHeroLabsSchedule.TimeRange)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t start_time_;
    int32_t end_time_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientHeroLabsSchedule_Schedule final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientHeroLabsSchedule.Schedule) */ {
 public:
  inline CMsgGCToClientHeroLabsSchedule_Schedule() : CMsgGCToClientHeroLabsSchedule_Schedule(nullptr) {}
  ~CMsgGCToClientHeroLabsSchedule_Schedule() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientHeroLabsSchedule_Schedule(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientHeroLabsSchedule_Schedule(const CMsgGCToClientHeroLabsSchedule_Schedule& from);
  CMsgGCToClientHeroLabsSchedule_Schedule(CMsgGCToClientHeroLabsSchedule_Schedule&& from) noexcept
    : CMsgGCToClientHeroLabsSchedule_Schedule() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientHeroLabsSchedule_Schedule& operator=(const CMsgGCToClientHeroLabsSchedule_Schedule& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientHeroLabsSchedule_Schedule& operator=(CMsgGCToClientHeroLabsSchedule_Schedule&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientHeroLabsSchedule_Schedule& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientHeroLabsSchedule_Schedule* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientHeroLabsSchedule_Schedule*>(
               &_CMsgGCToClientHeroLabsSchedule_Schedule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CMsgGCToClientHeroLabsSchedule_Schedule& a, CMsgGCToClientHeroLabsSchedule_Schedule& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientHeroLabsSchedule_Schedule* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientHeroLabsSchedule_Schedule* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientHeroLabsSchedule_Schedule* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientHeroLabsSchedule_Schedule>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientHeroLabsSchedule_Schedule& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientHeroLabsSchedule_Schedule& from) {
    CMsgGCToClientHeroLabsSchedule_Schedule::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientHeroLabsSchedule_Schedule* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientHeroLabsSchedule.Schedule";
  }
  protected:
  explicit CMsgGCToClientHeroLabsSchedule_Schedule(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWeekendsFieldNumber = 2,
    kWeekdaysFieldNumber = 3,
    kRegionsFieldNumber = 5,
    kScheduleIdFieldNumber = 1,
    kIsOpenFieldNumber = 4,
  };
  // repeated .CMsgGCToClientHeroLabsSchedule.TimeRange weekends = 2;
  int weekends_size() const;
  private:
  int _internal_weekends_size() const;
  public:
  void clear_weekends();
  ::CMsgGCToClientHeroLabsSchedule_TimeRange* mutable_weekends(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_TimeRange >*
      mutable_weekends();
  private:
  const ::CMsgGCToClientHeroLabsSchedule_TimeRange& _internal_weekends(int index) const;
  ::CMsgGCToClientHeroLabsSchedule_TimeRange* _internal_add_weekends();
  public:
  const ::CMsgGCToClientHeroLabsSchedule_TimeRange& weekends(int index) const;
  ::CMsgGCToClientHeroLabsSchedule_TimeRange* add_weekends();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_TimeRange >&
      weekends() const;

  // repeated .CMsgGCToClientHeroLabsSchedule.TimeRange weekdays = 3;
  int weekdays_size() const;
  private:
  int _internal_weekdays_size() const;
  public:
  void clear_weekdays();
  ::CMsgGCToClientHeroLabsSchedule_TimeRange* mutable_weekdays(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_TimeRange >*
      mutable_weekdays();
  private:
  const ::CMsgGCToClientHeroLabsSchedule_TimeRange& _internal_weekdays(int index) const;
  ::CMsgGCToClientHeroLabsSchedule_TimeRange* _internal_add_weekdays();
  public:
  const ::CMsgGCToClientHeroLabsSchedule_TimeRange& weekdays(int index) const;
  ::CMsgGCToClientHeroLabsSchedule_TimeRange* add_weekdays();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_TimeRange >&
      weekdays() const;

  // repeated .ECitadelRegionMode regions = 5;
  int regions_size() const;
  private:
  int _internal_regions_size() const;
  public:
  void clear_regions();
  private:
  ::ECitadelRegionMode _internal_regions(int index) const;
  void _internal_add_regions(::ECitadelRegionMode value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_regions();
  public:
  ::ECitadelRegionMode regions(int index) const;
  void set_regions(int index, ::ECitadelRegionMode value);
  void add_regions(::ECitadelRegionMode value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& regions() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_regions();

  // optional uint32 schedule_id = 1;
  bool has_schedule_id() const;
  private:
  bool _internal_has_schedule_id() const;
  public:
  void clear_schedule_id();
  uint32_t schedule_id() const;
  void set_schedule_id(uint32_t value);
  private:
  uint32_t _internal_schedule_id() const;
  void _internal_set_schedule_id(uint32_t value);
  public:

  // optional bool is_open = 4;
  bool has_is_open() const;
  private:
  bool _internal_has_is_open() const;
  public:
  void clear_is_open();
  bool is_open() const;
  void set_is_open(bool value);
  private:
  bool _internal_is_open() const;
  void _internal_set_is_open(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientHeroLabsSchedule.Schedule)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_TimeRange > weekends_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_TimeRange > weekdays_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> regions_;
    uint32_t schedule_id_;
    bool is_open_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientHeroLabsSchedule final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientHeroLabsSchedule) */ {
 public:
  inline CMsgGCToClientHeroLabsSchedule() : CMsgGCToClientHeroLabsSchedule(nullptr) {}
  ~CMsgGCToClientHeroLabsSchedule() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientHeroLabsSchedule(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientHeroLabsSchedule(const CMsgGCToClientHeroLabsSchedule& from);
  CMsgGCToClientHeroLabsSchedule(CMsgGCToClientHeroLabsSchedule&& from) noexcept
    : CMsgGCToClientHeroLabsSchedule() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientHeroLabsSchedule& operator=(const CMsgGCToClientHeroLabsSchedule& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientHeroLabsSchedule& operator=(CMsgGCToClientHeroLabsSchedule&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientHeroLabsSchedule& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientHeroLabsSchedule* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientHeroLabsSchedule*>(
               &_CMsgGCToClientHeroLabsSchedule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CMsgGCToClientHeroLabsSchedule& a, CMsgGCToClientHeroLabsSchedule& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientHeroLabsSchedule* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientHeroLabsSchedule* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientHeroLabsSchedule* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientHeroLabsSchedule>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientHeroLabsSchedule& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientHeroLabsSchedule& from) {
    CMsgGCToClientHeroLabsSchedule::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientHeroLabsSchedule* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientHeroLabsSchedule";
  }
  protected:
  explicit CMsgGCToClientHeroLabsSchedule(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientHeroLabsSchedule_TimeRange TimeRange;
  typedef CMsgGCToClientHeroLabsSchedule_Schedule Schedule;

  // accessors -------------------------------------------------------

  enum : int {
    kSchedulesFieldNumber = 1,
  };
  // repeated .CMsgGCToClientHeroLabsSchedule.Schedule schedules = 1;
  int schedules_size() const;
  private:
  int _internal_schedules_size() const;
  public:
  void clear_schedules();
  ::CMsgGCToClientHeroLabsSchedule_Schedule* mutable_schedules(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_Schedule >*
      mutable_schedules();
  private:
  const ::CMsgGCToClientHeroLabsSchedule_Schedule& _internal_schedules(int index) const;
  ::CMsgGCToClientHeroLabsSchedule_Schedule* _internal_add_schedules();
  public:
  const ::CMsgGCToClientHeroLabsSchedule_Schedule& schedules(int index) const;
  ::CMsgGCToClientHeroLabsSchedule_Schedule* add_schedules();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_Schedule >&
      schedules() const;

  // @@protoc_insertion_point(class_scope:CMsgGCToClientHeroLabsSchedule)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_Schedule > schedules_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientDevPlaytestStatus_HeroWhitelist final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientDevPlaytestStatus.HeroWhitelist) */ {
 public:
  inline CMsgGCToClientDevPlaytestStatus_HeroWhitelist() : CMsgGCToClientDevPlaytestStatus_HeroWhitelist(nullptr) {}
  ~CMsgGCToClientDevPlaytestStatus_HeroWhitelist() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientDevPlaytestStatus_HeroWhitelist(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientDevPlaytestStatus_HeroWhitelist(const CMsgGCToClientDevPlaytestStatus_HeroWhitelist& from);
  CMsgGCToClientDevPlaytestStatus_HeroWhitelist(CMsgGCToClientDevPlaytestStatus_HeroWhitelist&& from) noexcept
    : CMsgGCToClientDevPlaytestStatus_HeroWhitelist() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientDevPlaytestStatus_HeroWhitelist& operator=(const CMsgGCToClientDevPlaytestStatus_HeroWhitelist& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientDevPlaytestStatus_HeroWhitelist& operator=(CMsgGCToClientDevPlaytestStatus_HeroWhitelist&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientDevPlaytestStatus_HeroWhitelist& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientDevPlaytestStatus_HeroWhitelist* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientDevPlaytestStatus_HeroWhitelist*>(
               &_CMsgGCToClientDevPlaytestStatus_HeroWhitelist_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CMsgGCToClientDevPlaytestStatus_HeroWhitelist& a, CMsgGCToClientDevPlaytestStatus_HeroWhitelist& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientDevPlaytestStatus_HeroWhitelist* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientDevPlaytestStatus_HeroWhitelist* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientDevPlaytestStatus_HeroWhitelist* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientDevPlaytestStatus_HeroWhitelist>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientDevPlaytestStatus_HeroWhitelist& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientDevPlaytestStatus_HeroWhitelist& from) {
    CMsgGCToClientDevPlaytestStatus_HeroWhitelist::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientDevPlaytestStatus_HeroWhitelist* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientDevPlaytestStatus.HeroWhitelist";
  }
  protected:
  explicit CMsgGCToClientDevPlaytestStatus_HeroWhitelist(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdsFieldNumber = 2,
    kHeroIdFieldNumber = 1,
  };
  // repeated uint32 account_ids = 2;
  int account_ids_size() const;
  private:
  int _internal_account_ids_size() const;
  public:
  void clear_account_ids();
  private:
  uint32_t _internal_account_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_account_ids() const;
  void _internal_add_account_ids(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_account_ids();
  public:
  uint32_t account_ids(int index) const;
  void set_account_ids(int index, uint32_t value);
  void add_account_ids(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      account_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_account_ids();

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientDevPlaytestStatus.HeroWhitelist)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > account_ids_;
    uint32_t hero_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientDevPlaytestStatus_DevQueueSize final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientDevPlaytestStatus.DevQueueSize) */ {
 public:
  inline CMsgGCToClientDevPlaytestStatus_DevQueueSize() : CMsgGCToClientDevPlaytestStatus_DevQueueSize(nullptr) {}
  ~CMsgGCToClientDevPlaytestStatus_DevQueueSize() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientDevPlaytestStatus_DevQueueSize(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientDevPlaytestStatus_DevQueueSize(const CMsgGCToClientDevPlaytestStatus_DevQueueSize& from);
  CMsgGCToClientDevPlaytestStatus_DevQueueSize(CMsgGCToClientDevPlaytestStatus_DevQueueSize&& from) noexcept
    : CMsgGCToClientDevPlaytestStatus_DevQueueSize() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientDevPlaytestStatus_DevQueueSize& operator=(const CMsgGCToClientDevPlaytestStatus_DevQueueSize& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientDevPlaytestStatus_DevQueueSize& operator=(CMsgGCToClientDevPlaytestStatus_DevQueueSize&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientDevPlaytestStatus_DevQueueSize& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientDevPlaytestStatus_DevQueueSize* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientDevPlaytestStatus_DevQueueSize*>(
               &_CMsgGCToClientDevPlaytestStatus_DevQueueSize_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CMsgGCToClientDevPlaytestStatus_DevQueueSize& a, CMsgGCToClientDevPlaytestStatus_DevQueueSize& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientDevPlaytestStatus_DevQueueSize* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientDevPlaytestStatus_DevQueueSize* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientDevPlaytestStatus_DevQueueSize* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientDevPlaytestStatus_DevQueueSize>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientDevPlaytestStatus_DevQueueSize& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientDevPlaytestStatus_DevQueueSize& from) {
    CMsgGCToClientDevPlaytestStatus_DevQueueSize::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientDevPlaytestStatus_DevQueueSize* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientDevPlaytestStatus.DevQueueSize";
  }
  protected:
  explicit CMsgGCToClientDevPlaytestStatus_DevQueueSize(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatchModeFieldNumber = 1,
    kQueueSizeFieldNumber = 2,
  };
  // optional .ECitadelMatchMode match_mode = 1 [default = k_ECitadelMatchMode_Invalid];
  bool has_match_mode() const;
  private:
  bool _internal_has_match_mode() const;
  public:
  void clear_match_mode();
  ::ECitadelMatchMode match_mode() const;
  void set_match_mode(::ECitadelMatchMode value);
  private:
  ::ECitadelMatchMode _internal_match_mode() const;
  void _internal_set_match_mode(::ECitadelMatchMode value);
  public:

  // optional uint32 queue_size = 2;
  bool has_queue_size() const;
  private:
  bool _internal_has_queue_size() const;
  public:
  void clear_queue_size();
  uint32_t queue_size() const;
  void set_queue_size(uint32_t value);
  private:
  uint32_t _internal_queue_size() const;
  void _internal_set_queue_size(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientDevPlaytestStatus.DevQueueSize)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int match_mode_;
    uint32_t queue_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientDevPlaytestStatus final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientDevPlaytestStatus) */ {
 public:
  inline CMsgGCToClientDevPlaytestStatus() : CMsgGCToClientDevPlaytestStatus(nullptr) {}
  ~CMsgGCToClientDevPlaytestStatus() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientDevPlaytestStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientDevPlaytestStatus(const CMsgGCToClientDevPlaytestStatus& from);
  CMsgGCToClientDevPlaytestStatus(CMsgGCToClientDevPlaytestStatus&& from) noexcept
    : CMsgGCToClientDevPlaytestStatus() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientDevPlaytestStatus& operator=(const CMsgGCToClientDevPlaytestStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientDevPlaytestStatus& operator=(CMsgGCToClientDevPlaytestStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientDevPlaytestStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientDevPlaytestStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientDevPlaytestStatus*>(
               &_CMsgGCToClientDevPlaytestStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CMsgGCToClientDevPlaytestStatus& a, CMsgGCToClientDevPlaytestStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientDevPlaytestStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientDevPlaytestStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientDevPlaytestStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientDevPlaytestStatus>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientDevPlaytestStatus& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientDevPlaytestStatus& from) {
    CMsgGCToClientDevPlaytestStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientDevPlaytestStatus* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientDevPlaytestStatus";
  }
  protected:
  explicit CMsgGCToClientDevPlaytestStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientDevPlaytestStatus_HeroWhitelist HeroWhitelist;
  typedef CMsgGCToClientDevPlaytestStatus_DevQueueSize DevQueueSize;

  // accessors -------------------------------------------------------

  enum : int {
    kDevQueueSizeFieldNumber = 1,
    kHeroWhitelistsFieldNumber = 10,
    kValidClientVersionsFieldNumber = 15,
    kDevAvailableServersFieldNumber = 2,
    kIsMmEnabledFieldNumber = 4,
    kLockedHeroesFieldNumber = 8,
    kPartySharedHeroesFieldNumber = 9,
    kMmPauseTimeFieldNumber = 14,
    kActiveMatchCountFieldNumber = 21,
  };
  // repeated .CMsgGCToClientDevPlaytestStatus.DevQueueSize dev_queue_size = 1;
  int dev_queue_size_size() const;
  private:
  int _internal_dev_queue_size_size() const;
  public:
  void clear_dev_queue_size();
  ::CMsgGCToClientDevPlaytestStatus_DevQueueSize* mutable_dev_queue_size(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevPlaytestStatus_DevQueueSize >*
      mutable_dev_queue_size();
  private:
  const ::CMsgGCToClientDevPlaytestStatus_DevQueueSize& _internal_dev_queue_size(int index) const;
  ::CMsgGCToClientDevPlaytestStatus_DevQueueSize* _internal_add_dev_queue_size();
  public:
  const ::CMsgGCToClientDevPlaytestStatus_DevQueueSize& dev_queue_size(int index) const;
  ::CMsgGCToClientDevPlaytestStatus_DevQueueSize* add_dev_queue_size();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevPlaytestStatus_DevQueueSize >&
      dev_queue_size() const;

  // repeated .CMsgGCToClientDevPlaytestStatus.HeroWhitelist hero_whitelists = 10;
  int hero_whitelists_size() const;
  private:
  int _internal_hero_whitelists_size() const;
  public:
  void clear_hero_whitelists();
  ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist* mutable_hero_whitelists(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist >*
      mutable_hero_whitelists();
  private:
  const ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist& _internal_hero_whitelists(int index) const;
  ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist* _internal_add_hero_whitelists();
  public:
  const ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist& hero_whitelists(int index) const;
  ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist* add_hero_whitelists();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist >&
      hero_whitelists() const;

  // repeated uint32 valid_client_versions = 15;
  int valid_client_versions_size() const;
  private:
  int _internal_valid_client_versions_size() const;
  public:
  void clear_valid_client_versions();
  private:
  uint32_t _internal_valid_client_versions(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_valid_client_versions() const;
  void _internal_add_valid_client_versions(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_valid_client_versions();
  public:
  uint32_t valid_client_versions(int index) const;
  void set_valid_client_versions(int index, uint32_t value);
  void add_valid_client_versions(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      valid_client_versions() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_valid_client_versions();

  // optional uint32 dev_available_servers = 2;
  bool has_dev_available_servers() const;
  private:
  bool _internal_has_dev_available_servers() const;
  public:
  void clear_dev_available_servers();
  uint32_t dev_available_servers() const;
  void set_dev_available_servers(uint32_t value);
  private:
  uint32_t _internal_dev_available_servers() const;
  void _internal_set_dev_available_servers(uint32_t value);
  public:

  // optional bool is_mm_enabled = 4;
  bool has_is_mm_enabled() const;
  private:
  bool _internal_has_is_mm_enabled() const;
  public:
  void clear_is_mm_enabled();
  bool is_mm_enabled() const;
  void set_is_mm_enabled(bool value);
  private:
  bool _internal_is_mm_enabled() const;
  void _internal_set_is_mm_enabled(bool value);
  public:

  // optional bool locked_heroes = 8;
  bool has_locked_heroes() const;
  private:
  bool _internal_has_locked_heroes() const;
  public:
  void clear_locked_heroes();
  bool locked_heroes() const;
  void set_locked_heroes(bool value);
  private:
  bool _internal_locked_heroes() const;
  void _internal_set_locked_heroes(bool value);
  public:

  // optional bool party_shared_heroes = 9;
  bool has_party_shared_heroes() const;
  private:
  bool _internal_has_party_shared_heroes() const;
  public:
  void clear_party_shared_heroes();
  bool party_shared_heroes() const;
  void set_party_shared_heroes(bool value);
  private:
  bool _internal_party_shared_heroes() const;
  void _internal_set_party_shared_heroes(bool value);
  public:

  // optional uint32 mm_pause_time = 14;
  bool has_mm_pause_time() const;
  private:
  bool _internal_has_mm_pause_time() const;
  public:
  void clear_mm_pause_time();
  uint32_t mm_pause_time() const;
  void set_mm_pause_time(uint32_t value);
  private:
  uint32_t _internal_mm_pause_time() const;
  void _internal_set_mm_pause_time(uint32_t value);
  public:

  // optional uint32 active_match_count = 21;
  bool has_active_match_count() const;
  private:
  bool _internal_has_active_match_count() const;
  public:
  void clear_active_match_count();
  uint32_t active_match_count() const;
  void set_active_match_count(uint32_t value);
  private:
  uint32_t _internal_active_match_count() const;
  void _internal_set_active_match_count(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientDevPlaytestStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevPlaytestStatus_DevQueueSize > dev_queue_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist > hero_whitelists_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > valid_client_versions_;
    uint32_t dev_available_servers_;
    bool is_mm_enabled_;
    bool locked_heroes_;
    bool party_shared_heroes_;
    uint32_t mm_pause_time_;
    uint32_t active_match_count_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientSDRTicket final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientSDRTicket) */ {
 public:
  inline CMsgGCToClientSDRTicket() : CMsgGCToClientSDRTicket(nullptr) {}
  ~CMsgGCToClientSDRTicket() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientSDRTicket(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientSDRTicket(const CMsgGCToClientSDRTicket& from);
  CMsgGCToClientSDRTicket(CMsgGCToClientSDRTicket&& from) noexcept
    : CMsgGCToClientSDRTicket() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientSDRTicket& operator=(const CMsgGCToClientSDRTicket& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientSDRTicket& operator=(CMsgGCToClientSDRTicket&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientSDRTicket& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientSDRTicket* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientSDRTicket*>(
               &_CMsgGCToClientSDRTicket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CMsgGCToClientSDRTicket& a, CMsgGCToClientSDRTicket& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientSDRTicket* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientSDRTicket* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientSDRTicket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientSDRTicket>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientSDRTicket& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientSDRTicket& from) {
    CMsgGCToClientSDRTicket::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientSDRTicket* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientSDRTicket";
  }
  protected:
  explicit CMsgGCToClientSDRTicket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTicketFieldNumber = 1,
  };
  // optional bytes ticket = 1;
  bool has_ticket() const;
  private:
  bool _internal_has_ticket() const;
  public:
  void clear_ticket();
  const std::string& ticket() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_ticket(ArgT0&& arg0, ArgT... args);
  std::string* mutable_ticket();
  PROTOBUF_NODISCARD std::string* release_ticket();
  void set_allocated_ticket(std::string* ticket);
  private:
  const std::string& _internal_ticket() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ticket(const std::string& value);
  std::string* _internal_mutable_ticket();
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientSDRTicket)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ticket_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCReplacementSDRTicket final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCReplacementSDRTicket) */ {
 public:
  inline CMsgClientToGCReplacementSDRTicket() : CMsgClientToGCReplacementSDRTicket(nullptr) {}
  ~CMsgClientToGCReplacementSDRTicket() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCReplacementSDRTicket(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCReplacementSDRTicket(const CMsgClientToGCReplacementSDRTicket& from);
  CMsgClientToGCReplacementSDRTicket(CMsgClientToGCReplacementSDRTicket&& from) noexcept
    : CMsgClientToGCReplacementSDRTicket() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCReplacementSDRTicket& operator=(const CMsgClientToGCReplacementSDRTicket& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCReplacementSDRTicket& operator=(CMsgClientToGCReplacementSDRTicket&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCReplacementSDRTicket& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCReplacementSDRTicket* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCReplacementSDRTicket*>(
               &_CMsgClientToGCReplacementSDRTicket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CMsgClientToGCReplacementSDRTicket& a, CMsgClientToGCReplacementSDRTicket& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCReplacementSDRTicket* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCReplacementSDRTicket* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCReplacementSDRTicket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCReplacementSDRTicket>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCReplacementSDRTicket& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCReplacementSDRTicket& from) {
    CMsgClientToGCReplacementSDRTicket::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCReplacementSDRTicket* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCReplacementSDRTicket";
  }
  protected:
  explicit CMsgClientToGCReplacementSDRTicket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLobbyIdFieldNumber = 1,
  };
  // optional fixed64 lobby_id = 1;
  bool has_lobby_id() const;
  private:
  bool _internal_has_lobby_id() const;
  public:
  void clear_lobby_id();
  uint64_t lobby_id() const;
  void set_lobby_id(uint64_t value);
  private:
  uint64_t _internal_lobby_id() const;
  void _internal_set_lobby_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCReplacementSDRTicket)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t lobby_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCReplacementSDRTicketResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCReplacementSDRTicketResponse) */ {
 public:
  inline CMsgClientToGCReplacementSDRTicketResponse() : CMsgClientToGCReplacementSDRTicketResponse(nullptr) {}
  ~CMsgClientToGCReplacementSDRTicketResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCReplacementSDRTicketResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCReplacementSDRTicketResponse(const CMsgClientToGCReplacementSDRTicketResponse& from);
  CMsgClientToGCReplacementSDRTicketResponse(CMsgClientToGCReplacementSDRTicketResponse&& from) noexcept
    : CMsgClientToGCReplacementSDRTicketResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCReplacementSDRTicketResponse& operator=(const CMsgClientToGCReplacementSDRTicketResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCReplacementSDRTicketResponse& operator=(CMsgClientToGCReplacementSDRTicketResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCReplacementSDRTicketResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCReplacementSDRTicketResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCReplacementSDRTicketResponse*>(
               &_CMsgClientToGCReplacementSDRTicketResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CMsgClientToGCReplacementSDRTicketResponse& a, CMsgClientToGCReplacementSDRTicketResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCReplacementSDRTicketResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCReplacementSDRTicketResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCReplacementSDRTicketResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCReplacementSDRTicketResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCReplacementSDRTicketResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCReplacementSDRTicketResponse& from) {
    CMsgClientToGCReplacementSDRTicketResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCReplacementSDRTicketResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCReplacementSDRTicketResponse";
  }
  protected:
  explicit CMsgClientToGCReplacementSDRTicketResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTicketFieldNumber = 1,
    kErrorMessageFieldNumber = 2,
  };
  // optional bytes ticket = 1;
  bool has_ticket() const;
  private:
  bool _internal_has_ticket() const;
  public:
  void clear_ticket();
  const std::string& ticket() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_ticket(ArgT0&& arg0, ArgT... args);
  std::string* mutable_ticket();
  PROTOBUF_NODISCARD std::string* release_ticket();
  void set_allocated_ticket(std::string* ticket);
  private:
  const std::string& _internal_ticket() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ticket(const std::string& value);
  std::string* _internal_mutable_ticket();
  public:

  // optional string error_message = 2;
  bool has_error_message() const;
  private:
  bool _internal_has_error_message() const;
  public:
  void clear_error_message();
  const std::string& error_message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_error_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* error_message);
  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(const std::string& value);
  std::string* _internal_mutable_error_message();
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCReplacementSDRTicketResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ticket_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr error_message_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetServerConVar final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetServerConVar) */ {
 public:
  inline CMsgClientToGCSetServerConVar() : CMsgClientToGCSetServerConVar(nullptr) {}
  ~CMsgClientToGCSetServerConVar() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetServerConVar(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetServerConVar(const CMsgClientToGCSetServerConVar& from);
  CMsgClientToGCSetServerConVar(CMsgClientToGCSetServerConVar&& from) noexcept
    : CMsgClientToGCSetServerConVar() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetServerConVar& operator=(const CMsgClientToGCSetServerConVar& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetServerConVar& operator=(CMsgClientToGCSetServerConVar&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetServerConVar& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetServerConVar* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetServerConVar*>(
               &_CMsgClientToGCSetServerConVar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CMsgClientToGCSetServerConVar& a, CMsgClientToGCSetServerConVar& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetServerConVar* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetServerConVar* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetServerConVar* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetServerConVar>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetServerConVar& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetServerConVar& from) {
    CMsgClientToGCSetServerConVar::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetServerConVar* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetServerConVar";
  }
  protected:
  explicit CMsgClientToGCSetServerConVar(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConvarNameFieldNumber = 1,
    kConvarValueFieldNumber = 2,
    kLobbyIdFieldNumber = 3,
  };
  // optional string convar_name = 1;
  bool has_convar_name() const;
  private:
  bool _internal_has_convar_name() const;
  public:
  void clear_convar_name();
  const std::string& convar_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_convar_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_convar_name();
  PROTOBUF_NODISCARD std::string* release_convar_name();
  void set_allocated_convar_name(std::string* convar_name);
  private:
  const std::string& _internal_convar_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_convar_name(const std::string& value);
  std::string* _internal_mutable_convar_name();
  public:

  // optional string convar_value = 2;
  bool has_convar_value() const;
  private:
  bool _internal_has_convar_value() const;
  public:
  void clear_convar_value();
  const std::string& convar_value() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_convar_value(ArgT0&& arg0, ArgT... args);
  std::string* mutable_convar_value();
  PROTOBUF_NODISCARD std::string* release_convar_value();
  void set_allocated_convar_value(std::string* convar_value);
  private:
  const std::string& _internal_convar_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_convar_value(const std::string& value);
  std::string* _internal_mutable_convar_value();
  public:

  // optional fixed64 lobby_id = 3;
  bool has_lobby_id() const;
  private:
  bool _internal_has_lobby_id() const;
  public:
  void clear_lobby_id();
  uint64_t lobby_id() const;
  void set_lobby_id(uint64_t value);
  private:
  uint64_t _internal_lobby_id() const;
  void _internal_set_lobby_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetServerConVar)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr convar_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr convar_value_;
    uint64_t lobby_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetServerConVarResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetServerConVarResponse) */ {
 public:
  inline CMsgClientToGCSetServerConVarResponse() : CMsgClientToGCSetServerConVarResponse(nullptr) {}
  ~CMsgClientToGCSetServerConVarResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetServerConVarResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetServerConVarResponse(const CMsgClientToGCSetServerConVarResponse& from);
  CMsgClientToGCSetServerConVarResponse(CMsgClientToGCSetServerConVarResponse&& from) noexcept
    : CMsgClientToGCSetServerConVarResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetServerConVarResponse& operator=(const CMsgClientToGCSetServerConVarResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetServerConVarResponse& operator=(CMsgClientToGCSetServerConVarResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetServerConVarResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetServerConVarResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetServerConVarResponse*>(
               &_CMsgClientToGCSetServerConVarResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CMsgClientToGCSetServerConVarResponse& a, CMsgClientToGCSetServerConVarResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetServerConVarResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetServerConVarResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetServerConVarResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetServerConVarResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetServerConVarResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetServerConVarResponse& from) {
    CMsgClientToGCSetServerConVarResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetServerConVarResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetServerConVarResponse";
  }
  protected:
  explicit CMsgClientToGCSetServerConVarResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
  };
  // optional string message = 1;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetServerConVarResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey) */ {
 public:
  inline CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey() : CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey(nullptr) {}
  ~CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey(const CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& from);
  CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey(CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey&& from) noexcept
    : CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& operator=(const CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& operator=(CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey*>(
               &_CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& a, CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& from) {
    CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey";
  }
  protected:
  explicit CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFreeformFieldNumber = 3,
    kQuestionIdFieldNumber = 1,
    kResponseValueFieldNumber = 2,
  };
  // optional string response_freeform = 3;
  bool has_response_freeform() const;
  private:
  bool _internal_has_response_freeform() const;
  public:
  void clear_response_freeform();
  const std::string& response_freeform() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_response_freeform(ArgT0&& arg0, ArgT... args);
  std::string* mutable_response_freeform();
  PROTOBUF_NODISCARD std::string* release_response_freeform();
  void set_allocated_response_freeform(std::string* response_freeform);
  private:
  const std::string& _internal_response_freeform() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_response_freeform(const std::string& value);
  std::string* _internal_mutable_response_freeform();
  public:

  // optional uint32 question_id = 1;
  bool has_question_id() const;
  private:
  bool _internal_has_question_id() const;
  public:
  void clear_question_id();
  uint32_t question_id() const;
  void set_question_id(uint32_t value);
  private:
  uint32_t _internal_question_id() const;
  void _internal_set_question_id(uint32_t value);
  public:

  // optional uint32 response_value = 2;
  bool has_response_value() const;
  private:
  bool _internal_has_response_value() const;
  public:
  void clear_response_value();
  uint32_t response_value() const;
  void set_response_value(uint32_t value);
  private:
  uint32_t _internal_response_value() const;
  void _internal_set_response_value(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr response_freeform_;
    uint32_t question_id_;
    uint32_t response_value_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPostMatchSurveyResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPostMatchSurveyResponse) */ {
 public:
  inline CMsgClientToGCPostMatchSurveyResponse() : CMsgClientToGCPostMatchSurveyResponse(nullptr) {}
  ~CMsgClientToGCPostMatchSurveyResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPostMatchSurveyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPostMatchSurveyResponse(const CMsgClientToGCPostMatchSurveyResponse& from);
  CMsgClientToGCPostMatchSurveyResponse(CMsgClientToGCPostMatchSurveyResponse&& from) noexcept
    : CMsgClientToGCPostMatchSurveyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPostMatchSurveyResponse& operator=(const CMsgClientToGCPostMatchSurveyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPostMatchSurveyResponse& operator=(CMsgClientToGCPostMatchSurveyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPostMatchSurveyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPostMatchSurveyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPostMatchSurveyResponse*>(
               &_CMsgClientToGCPostMatchSurveyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CMsgClientToGCPostMatchSurveyResponse& a, CMsgClientToGCPostMatchSurveyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPostMatchSurveyResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPostMatchSurveyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPostMatchSurveyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPostMatchSurveyResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPostMatchSurveyResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPostMatchSurveyResponse& from) {
    CMsgClientToGCPostMatchSurveyResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPostMatchSurveyResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPostMatchSurveyResponse";
  }
  protected:
  explicit CMsgClientToGCPostMatchSurveyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey PostMatchSurvey;

  // accessors -------------------------------------------------------

  enum : int {
    kPostMatchSurveyFieldNumber = 1,
    kMatchIdFieldNumber = 2,
  };
  // repeated .CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey post_match_survey = 1;
  int post_match_survey_size() const;
  private:
  int _internal_post_match_survey_size() const;
  public:
  void clear_post_match_survey();
  ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* mutable_post_match_survey(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey >*
      mutable_post_match_survey();
  private:
  const ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& _internal_post_match_survey(int index) const;
  ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* _internal_add_post_match_survey();
  public:
  const ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& post_match_survey(int index) const;
  ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* add_post_match_survey();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey >&
      post_match_survey() const;

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPostMatchSurveyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey > post_match_survey_;
    uint64_t match_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPartyMMInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgPartyMMInfo) */ {
 public:
  inline CMsgPartyMMInfo() : CMsgPartyMMInfo(nullptr) {}
  ~CMsgPartyMMInfo() override;
  explicit PROTOBUF_CONSTEXPR CMsgPartyMMInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgPartyMMInfo(const CMsgPartyMMInfo& from);
  CMsgPartyMMInfo(CMsgPartyMMInfo&& from) noexcept
    : CMsgPartyMMInfo() {
    *this = ::std::move(from);
  }

  inline CMsgPartyMMInfo& operator=(const CMsgPartyMMInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgPartyMMInfo& operator=(CMsgPartyMMInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgPartyMMInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgPartyMMInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgPartyMMInfo*>(
               &_CMsgPartyMMInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CMsgPartyMMInfo& a, CMsgPartyMMInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgPartyMMInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgPartyMMInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgPartyMMInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgPartyMMInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgPartyMMInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgPartyMMInfo& from) {
    CMsgPartyMMInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPartyMMInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgPartyMMInfo";
  }
  protected:
  explicit CMsgPartyMMInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPingTimesFieldNumber = 2,
    kPlatformFieldNumber = 1,
    kClientVersionFieldNumber = 3,
    kRegionModeFieldNumber = 4,
  };
  // optional .CMsgRegionPingTimesClient ping_times = 2;
  bool has_ping_times() const;
  private:
  bool _internal_has_ping_times() const;
  public:
  void clear_ping_times();
  const ::CMsgRegionPingTimesClient& ping_times() const;
  PROTOBUF_NODISCARD ::CMsgRegionPingTimesClient* release_ping_times();
  ::CMsgRegionPingTimesClient* mutable_ping_times();
  void set_allocated_ping_times(::CMsgRegionPingTimesClient* ping_times);
  private:
  const ::CMsgRegionPingTimesClient& _internal_ping_times() const;
  ::CMsgRegionPingTimesClient* _internal_mutable_ping_times();
  public:
  void unsafe_arena_set_allocated_ping_times(
      ::CMsgRegionPingTimesClient* ping_times);
  ::CMsgRegionPingTimesClient* unsafe_arena_release_ping_times();

  // optional .EGCPlatform platform = 1 [default = k_eGCPlatform_None];
  bool has_platform() const;
  private:
  bool _internal_has_platform() const;
  public:
  void clear_platform();
  ::EGCPlatform platform() const;
  void set_platform(::EGCPlatform value);
  private:
  ::EGCPlatform _internal_platform() const;
  void _internal_set_platform(::EGCPlatform value);
  public:

  // optional uint32 client_version = 3;
  bool has_client_version() const;
  private:
  bool _internal_has_client_version() const;
  public:
  void clear_client_version();
  uint32_t client_version() const;
  void set_client_version(uint32_t value);
  private:
  uint32_t _internal_client_version() const;
  void _internal_set_client_version(uint32_t value);
  public:

  // optional .ECitadelRegionMode region_mode = 4 [default = k_ECitadelRegionMode_ROW];
  bool has_region_mode() const;
  private:
  bool _internal_has_region_mode() const;
  public:
  void clear_region_mode();
  ::ECitadelRegionMode region_mode() const;
  void set_region_mode(::ECitadelRegionMode value);
  private:
  ::ECitadelRegionMode _internal_region_mode() const;
  void _internal_set_region_mode(::ECitadelRegionMode value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgPartyMMInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgRegionPingTimesClient* ping_times_;
    int platform_;
    uint32_t client_version_;
    int region_mode_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartyCreate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartyCreate) */ {
 public:
  inline CMsgClientToGCPartyCreate() : CMsgClientToGCPartyCreate(nullptr) {}
  ~CMsgClientToGCPartyCreate() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartyCreate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartyCreate(const CMsgClientToGCPartyCreate& from);
  CMsgClientToGCPartyCreate(CMsgClientToGCPartyCreate&& from) noexcept
    : CMsgClientToGCPartyCreate() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartyCreate& operator=(const CMsgClientToGCPartyCreate& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartyCreate& operator=(CMsgClientToGCPartyCreate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartyCreate& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartyCreate* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartyCreate*>(
               &_CMsgClientToGCPartyCreate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CMsgClientToGCPartyCreate& a, CMsgClientToGCPartyCreate& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartyCreate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartyCreate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartyCreate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartyCreate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartyCreate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartyCreate& from) {
    CMsgClientToGCPartyCreate::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartyCreate* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartyCreate";
  }
  protected:
  explicit CMsgClientToGCPartyCreate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerSearchKeyFieldNumber = 7,
    kPartyMmInfoFieldNumber = 1,
    kInviteAccountIdFieldNumber = 3,
    kDisablePartyCodeFieldNumber = 4,
    kIsPrivateLobbyFieldNumber = 5,
    kRegionModeFieldNumber = 6,
    kMmPreferenceFieldNumber = 8,
  };
  // optional string server_search_key = 7;
  bool has_server_search_key() const;
  private:
  bool _internal_has_server_search_key() const;
  public:
  void clear_server_search_key();
  const std::string& server_search_key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_server_search_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_server_search_key();
  PROTOBUF_NODISCARD std::string* release_server_search_key();
  void set_allocated_server_search_key(std::string* server_search_key);
  private:
  const std::string& _internal_server_search_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_server_search_key(const std::string& value);
  std::string* _internal_mutable_server_search_key();
  public:

  // optional .CMsgPartyMMInfo party_mm_info = 1;
  bool has_party_mm_info() const;
  private:
  bool _internal_has_party_mm_info() const;
  public:
  void clear_party_mm_info();
  const ::CMsgPartyMMInfo& party_mm_info() const;
  PROTOBUF_NODISCARD ::CMsgPartyMMInfo* release_party_mm_info();
  ::CMsgPartyMMInfo* mutable_party_mm_info();
  void set_allocated_party_mm_info(::CMsgPartyMMInfo* party_mm_info);
  private:
  const ::CMsgPartyMMInfo& _internal_party_mm_info() const;
  ::CMsgPartyMMInfo* _internal_mutable_party_mm_info();
  public:
  void unsafe_arena_set_allocated_party_mm_info(
      ::CMsgPartyMMInfo* party_mm_info);
  ::CMsgPartyMMInfo* unsafe_arena_release_party_mm_info();

  // optional uint32 invite_account_id = 3;
  bool has_invite_account_id() const;
  private:
  bool _internal_has_invite_account_id() const;
  public:
  void clear_invite_account_id();
  uint32_t invite_account_id() const;
  void set_invite_account_id(uint32_t value);
  private:
  uint32_t _internal_invite_account_id() const;
  void _internal_set_invite_account_id(uint32_t value);
  public:

  // optional bool disable_party_code = 4;
  bool has_disable_party_code() const;
  private:
  bool _internal_has_disable_party_code() const;
  public:
  void clear_disable_party_code();
  bool disable_party_code() const;
  void set_disable_party_code(bool value);
  private:
  bool _internal_disable_party_code() const;
  void _internal_set_disable_party_code(bool value);
  public:

  // optional bool is_private_lobby = 5;
  bool has_is_private_lobby() const;
  private:
  bool _internal_has_is_private_lobby() const;
  public:
  void clear_is_private_lobby();
  bool is_private_lobby() const;
  void set_is_private_lobby(bool value);
  private:
  bool _internal_is_private_lobby() const;
  void _internal_set_is_private_lobby(bool value);
  public:

  // optional .ECitadelRegionMode region_mode = 6 [default = k_ECitadelRegionMode_ROW];
  bool has_region_mode() const;
  private:
  bool _internal_has_region_mode() const;
  public:
  void clear_region_mode();
  ::ECitadelRegionMode region_mode() const;
  void set_region_mode(::ECitadelRegionMode value);
  private:
  ::ECitadelRegionMode _internal_region_mode() const;
  void _internal_set_region_mode(::ECitadelRegionMode value);
  public:

  // optional .ECitadelMMPreference mm_preference = 8 [default = k_ECitadelMMPreference_Invalid];
  bool has_mm_preference() const;
  private:
  bool _internal_has_mm_preference() const;
  public:
  void clear_mm_preference();
  ::ECitadelMMPreference mm_preference() const;
  void set_mm_preference(::ECitadelMMPreference value);
  private:
  ::ECitadelMMPreference _internal_mm_preference() const;
  void _internal_set_mm_preference(::ECitadelMMPreference value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartyCreate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr server_search_key_;
    ::CMsgPartyMMInfo* party_mm_info_;
    uint32_t invite_account_id_;
    bool disable_party_code_;
    bool is_private_lobby_;
    int region_mode_;
    int mm_preference_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartyCreateResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartyCreateResponse) */ {
 public:
  inline CMsgClientToGCPartyCreateResponse() : CMsgClientToGCPartyCreateResponse(nullptr) {}
  ~CMsgClientToGCPartyCreateResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartyCreateResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartyCreateResponse(const CMsgClientToGCPartyCreateResponse& from);
  CMsgClientToGCPartyCreateResponse(CMsgClientToGCPartyCreateResponse&& from) noexcept
    : CMsgClientToGCPartyCreateResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartyCreateResponse& operator=(const CMsgClientToGCPartyCreateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartyCreateResponse& operator=(CMsgClientToGCPartyCreateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartyCreateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartyCreateResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartyCreateResponse*>(
               &_CMsgClientToGCPartyCreateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CMsgClientToGCPartyCreateResponse& a, CMsgClientToGCPartyCreateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartyCreateResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartyCreateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartyCreateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartyCreateResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartyCreateResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartyCreateResponse& from) {
    CMsgClientToGCPartyCreateResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartyCreateResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartyCreateResponse";
  }
  protected:
  explicit CMsgClientToGCPartyCreateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCPartyCreateResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCPartyCreateResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCPartyCreateResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eAlreadyInParty =
    CMsgClientToGCPartyCreateResponse_EResponse_k_eAlreadyInParty;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCPartyCreateResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eInvalidVersion =
    CMsgClientToGCPartyCreateResponse_EResponse_k_eInvalidVersion;
  static constexpr EResponse k_eNoRegionPings =
    CMsgClientToGCPartyCreateResponse_EResponse_k_eNoRegionPings;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCPartyCreateResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eRateLimited =
    CMsgClientToGCPartyCreateResponse_EResponse_k_eRateLimited;
  static constexpr EResponse k_eNotFriends =
    CMsgClientToGCPartyCreateResponse_EResponse_k_eNotFriends;
  static constexpr EResponse k_eRegionInfoNotProvided =
    CMsgClientToGCPartyCreateResponse_EResponse_k_eRegionInfoNotProvided;
  static constexpr EResponse k_eDurationControlBlocked =
    CMsgClientToGCPartyCreateResponse_EResponse_k_eDurationControlBlocked;
  static constexpr EResponse k_eInMatchmaking =
    CMsgClientToGCPartyCreateResponse_EResponse_k_eInMatchmaking;
  static constexpr EResponse k_ePlayerDoesntHaveGame =
    CMsgClientToGCPartyCreateResponse_EResponse_k_ePlayerDoesntHaveGame;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCPartyCreateResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCPartyCreateResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCPartyCreateResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCPartyCreateResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCPartyCreateResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCPartyCreateResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCPartyCreateResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kPartyIdFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional fixed64 party_id = 2;
  bool has_party_id() const;
  private:
  bool _internal_has_party_id() const;
  public:
  void clear_party_id();
  uint64_t party_id() const;
  void set_party_id(uint64_t value);
  private:
  uint64_t _internal_party_id() const;
  void _internal_set_party_id(uint64_t value);
  public:

  // optional .CMsgClientToGCPartyCreateResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCPartyCreateResponse_EResponse result() const;
  void set_result(::CMsgClientToGCPartyCreateResponse_EResponse value);
  private:
  ::CMsgClientToGCPartyCreateResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCPartyCreateResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartyCreateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t party_id_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartyLeave final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartyLeave) */ {
 public:
  inline CMsgClientToGCPartyLeave() : CMsgClientToGCPartyLeave(nullptr) {}
  ~CMsgClientToGCPartyLeave() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartyLeave(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartyLeave(const CMsgClientToGCPartyLeave& from);
  CMsgClientToGCPartyLeave(CMsgClientToGCPartyLeave&& from) noexcept
    : CMsgClientToGCPartyLeave() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartyLeave& operator=(const CMsgClientToGCPartyLeave& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartyLeave& operator=(CMsgClientToGCPartyLeave&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartyLeave& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartyLeave* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartyLeave*>(
               &_CMsgClientToGCPartyLeave_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CMsgClientToGCPartyLeave& a, CMsgClientToGCPartyLeave& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartyLeave* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartyLeave* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartyLeave* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartyLeave>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartyLeave& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartyLeave& from) {
    CMsgClientToGCPartyLeave::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartyLeave* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartyLeave";
  }
  protected:
  explicit CMsgClientToGCPartyLeave(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPartyIdFieldNumber = 1,
  };
  // optional fixed64 party_id = 1;
  bool has_party_id() const;
  private:
  bool _internal_has_party_id() const;
  public:
  void clear_party_id();
  uint64_t party_id() const;
  void set_party_id(uint64_t value);
  private:
  uint64_t _internal_party_id() const;
  void _internal_set_party_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartyLeave)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t party_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartyLeaveResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartyLeaveResponse) */ {
 public:
  inline CMsgClientToGCPartyLeaveResponse() : CMsgClientToGCPartyLeaveResponse(nullptr) {}
  ~CMsgClientToGCPartyLeaveResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartyLeaveResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartyLeaveResponse(const CMsgClientToGCPartyLeaveResponse& from);
  CMsgClientToGCPartyLeaveResponse(CMsgClientToGCPartyLeaveResponse&& from) noexcept
    : CMsgClientToGCPartyLeaveResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartyLeaveResponse& operator=(const CMsgClientToGCPartyLeaveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartyLeaveResponse& operator=(CMsgClientToGCPartyLeaveResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartyLeaveResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartyLeaveResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartyLeaveResponse*>(
               &_CMsgClientToGCPartyLeaveResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CMsgClientToGCPartyLeaveResponse& a, CMsgClientToGCPartyLeaveResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartyLeaveResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartyLeaveResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartyLeaveResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartyLeaveResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartyLeaveResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartyLeaveResponse& from) {
    CMsgClientToGCPartyLeaveResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartyLeaveResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartyLeaveResponse";
  }
  protected:
  explicit CMsgClientToGCPartyLeaveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCPartyLeaveResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCPartyLeaveResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCPartyLeaveResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eNotInParty =
    CMsgClientToGCPartyLeaveResponse_EResponse_k_eNotInParty;
  static constexpr EResponse k_eInMatchMaking =
    CMsgClientToGCPartyLeaveResponse_EResponse_k_eInMatchMaking;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCPartyLeaveResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCPartyLeaveResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCPartyLeaveResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCPartyLeaveResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCPartyLeaveResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCPartyLeaveResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCPartyLeaveResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCPartyLeaveResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCPartyLeaveResponse_EResponse result() const;
  void set_result(::CMsgClientToGCPartyLeaveResponse_EResponse value);
  private:
  ::CMsgClientToGCPartyLeaveResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCPartyLeaveResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartyLeaveResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartyJoin final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartyJoin) */ {
 public:
  inline CMsgClientToGCPartyJoin() : CMsgClientToGCPartyJoin(nullptr) {}
  ~CMsgClientToGCPartyJoin() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartyJoin(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartyJoin(const CMsgClientToGCPartyJoin& from);
  CMsgClientToGCPartyJoin(CMsgClientToGCPartyJoin&& from) noexcept
    : CMsgClientToGCPartyJoin() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartyJoin& operator=(const CMsgClientToGCPartyJoin& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartyJoin& operator=(CMsgClientToGCPartyJoin&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartyJoin& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartyJoin* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartyJoin*>(
               &_CMsgClientToGCPartyJoin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CMsgClientToGCPartyJoin& a, CMsgClientToGCPartyJoin& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartyJoin* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartyJoin* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartyJoin* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartyJoin>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartyJoin& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartyJoin& from) {
    CMsgClientToGCPartyJoin::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartyJoin* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartyJoin";
  }
  protected:
  explicit CMsgClientToGCPartyJoin(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPartyMmInfoFieldNumber = 3,
    kPartyIdFieldNumber = 1,
    kIsRejoinFieldNumber = 2,
  };
  // optional .CMsgPartyMMInfo party_mm_info = 3;
  bool has_party_mm_info() const;
  private:
  bool _internal_has_party_mm_info() const;
  public:
  void clear_party_mm_info();
  const ::CMsgPartyMMInfo& party_mm_info() const;
  PROTOBUF_NODISCARD ::CMsgPartyMMInfo* release_party_mm_info();
  ::CMsgPartyMMInfo* mutable_party_mm_info();
  void set_allocated_party_mm_info(::CMsgPartyMMInfo* party_mm_info);
  private:
  const ::CMsgPartyMMInfo& _internal_party_mm_info() const;
  ::CMsgPartyMMInfo* _internal_mutable_party_mm_info();
  public:
  void unsafe_arena_set_allocated_party_mm_info(
      ::CMsgPartyMMInfo* party_mm_info);
  ::CMsgPartyMMInfo* unsafe_arena_release_party_mm_info();

  // optional fixed64 party_id = 1;
  bool has_party_id() const;
  private:
  bool _internal_has_party_id() const;
  public:
  void clear_party_id();
  uint64_t party_id() const;
  void set_party_id(uint64_t value);
  private:
  uint64_t _internal_party_id() const;
  void _internal_set_party_id(uint64_t value);
  public:

  // optional bool is_rejoin = 2;
  bool has_is_rejoin() const;
  private:
  bool _internal_has_is_rejoin() const;
  public:
  void clear_is_rejoin();
  bool is_rejoin() const;
  void set_is_rejoin(bool value);
  private:
  bool _internal_is_rejoin() const;
  void _internal_set_is_rejoin(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartyJoin)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgPartyMMInfo* party_mm_info_;
    uint64_t party_id_;
    bool is_rejoin_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartyJoinResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartyJoinResponse) */ {
 public:
  inline CMsgClientToGCPartyJoinResponse() : CMsgClientToGCPartyJoinResponse(nullptr) {}
  ~CMsgClientToGCPartyJoinResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartyJoinResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartyJoinResponse(const CMsgClientToGCPartyJoinResponse& from);
  CMsgClientToGCPartyJoinResponse(CMsgClientToGCPartyJoinResponse&& from) noexcept
    : CMsgClientToGCPartyJoinResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartyJoinResponse& operator=(const CMsgClientToGCPartyJoinResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartyJoinResponse& operator=(CMsgClientToGCPartyJoinResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartyJoinResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartyJoinResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartyJoinResponse*>(
               &_CMsgClientToGCPartyJoinResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CMsgClientToGCPartyJoinResponse& a, CMsgClientToGCPartyJoinResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartyJoinResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartyJoinResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartyJoinResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartyJoinResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartyJoinResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartyJoinResponse& from) {
    CMsgClientToGCPartyJoinResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartyJoinResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartyJoinResponse";
  }
  protected:
  explicit CMsgClientToGCPartyJoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCPartyJoinResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCPartyJoinResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCPartyJoinResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eAlreadyInParty =
    CMsgClientToGCPartyJoinResponse_EResponse_k_eAlreadyInParty;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCPartyJoinResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eInvalidPartyID =
    CMsgClientToGCPartyJoinResponse_EResponse_k_eInvalidPartyID;
  static constexpr EResponse k_eInvalidPermissions =
    CMsgClientToGCPartyJoinResponse_EResponse_k_eInvalidPermissions;
  static constexpr EResponse k_eInvalidVersion =
    CMsgClientToGCPartyJoinResponse_EResponse_k_eInvalidVersion;
  static constexpr EResponse k_eNoRegionPings =
    CMsgClientToGCPartyJoinResponse_EResponse_k_eNoRegionPings;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCPartyJoinResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eInvalidCode =
    CMsgClientToGCPartyJoinResponse_EResponse_k_eInvalidCode;
  static constexpr EResponse k_eRateLimited =
    CMsgClientToGCPartyJoinResponse_EResponse_k_eRateLimited;
  static constexpr EResponse k_eRegionInfoNotProvided =
    CMsgClientToGCPartyJoinResponse_EResponse_k_eRegionInfoNotProvided;
  static constexpr EResponse k_eDurationControlBlocked =
    CMsgClientToGCPartyJoinResponse_EResponse_k_eDurationControlBlocked;
  static constexpr EResponse k_ePartyInMatchMaking =
    CMsgClientToGCPartyJoinResponse_EResponse_k_ePartyInMatchMaking;
  static constexpr EResponse k_eInMatchmaking =
    CMsgClientToGCPartyJoinResponse_EResponse_k_eInMatchmaking;
  static constexpr EResponse k_ePartyFull =
    CMsgClientToGCPartyJoinResponse_EResponse_k_ePartyFull;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCPartyJoinResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCPartyJoinResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCPartyJoinResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCPartyJoinResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCPartyJoinResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCPartyJoinResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCPartyJoinResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCPartyJoinResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCPartyJoinResponse_EResponse result() const;
  void set_result(::CMsgClientToGCPartyJoinResponse_EResponse value);
  private:
  ::CMsgClientToGCPartyJoinResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCPartyJoinResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartyJoinResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartyAction final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartyAction) */ {
 public:
  inline CMsgClientToGCPartyAction() : CMsgClientToGCPartyAction(nullptr) {}
  ~CMsgClientToGCPartyAction() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartyAction(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartyAction(const CMsgClientToGCPartyAction& from);
  CMsgClientToGCPartyAction(CMsgClientToGCPartyAction&& from) noexcept
    : CMsgClientToGCPartyAction() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartyAction& operator=(const CMsgClientToGCPartyAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartyAction& operator=(CMsgClientToGCPartyAction&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartyAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartyAction* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartyAction*>(
               &_CMsgClientToGCPartyAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CMsgClientToGCPartyAction& a, CMsgClientToGCPartyAction& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartyAction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartyAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartyAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartyAction>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartyAction& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartyAction& from) {
    CMsgClientToGCPartyAction::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartyAction* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartyAction";
  }
  protected:
  explicit CMsgClientToGCPartyAction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCPartyAction_EAction EAction;
  static constexpr EAction k_eKickUser =
    CMsgClientToGCPartyAction_EAction_k_eKickUser;
  static constexpr EAction k_eCancelInvite =
    CMsgClientToGCPartyAction_EAction_k_eCancelInvite;
  static constexpr EAction k_eCancelFindMatch =
    CMsgClientToGCPartyAction_EAction_k_eCancelFindMatch;
  static constexpr EAction k_eSetPlayerType =
    CMsgClientToGCPartyAction_EAction_k_eSetPlayerType;
  static constexpr EAction k_eEnablePartyCode =
    CMsgClientToGCPartyAction_EAction_k_eEnablePartyCode;
  static constexpr EAction k_eSetMemberTeam =
    CMsgClientToGCPartyAction_EAction_k_eSetMemberTeam;
  static constexpr EAction k_eSetChatMode =
    CMsgClientToGCPartyAction_EAction_k_eSetChatMode;
  static constexpr EAction k_eSetPlayerSlot =
    CMsgClientToGCPartyAction_EAction_k_eSetPlayerSlot;
  static constexpr EAction k_eSetRegionMode =
    CMsgClientToGCPartyAction_EAction_k_eSetRegionMode;
  static constexpr EAction k_eSetSearchKey =
    CMsgClientToGCPartyAction_EAction_k_eSetSearchKey;
  static constexpr EAction k_eSetBotDifficulty =
    CMsgClientToGCPartyAction_EAction_k_eSetBotDifficulty;
  static constexpr EAction k_eSetRandomizedLanes =
    CMsgClientToGCPartyAction_EAction_k_eSetRandomizedLanes;
  static constexpr EAction k_eSetServerRegion =
    CMsgClientToGCPartyAction_EAction_k_eSetServerRegion;
  static constexpr EAction k_eSetPubliclyVisible =
    CMsgClientToGCPartyAction_EAction_k_eSetPubliclyVisible;
  static constexpr EAction k_eSetCheatsEnabled =
    CMsgClientToGCPartyAction_EAction_k_eSetCheatsEnabled;
  static constexpr EAction k_eSwapTeams =
    CMsgClientToGCPartyAction_EAction_k_eSwapTeams;
  static constexpr EAction k_eShuffleLobby =
    CMsgClientToGCPartyAction_EAction_k_eShuffleLobby;
  static constexpr EAction k_eShuffleLanes =
    CMsgClientToGCPartyAction_EAction_k_eShuffleLanes;
  static constexpr EAction k_eSetDuplicateHeroesEnabled =
    CMsgClientToGCPartyAction_EAction_k_eSetDuplicateHeroesEnabled;
  static constexpr EAction k_eSetExperimentalHeroesEnabled =
    CMsgClientToGCPartyAction_EAction_k_eSetExperimentalHeroesEnabled;
  static constexpr EAction k_eSetDesiresLaningTogether =
    CMsgClientToGCPartyAction_EAction_k_eSetDesiresLaningTogether;
  static constexpr EAction k_eSetMMPreference =
    CMsgClientToGCPartyAction_EAction_k_eSetMMPreference;
  static inline bool EAction_IsValid(int value) {
    return CMsgClientToGCPartyAction_EAction_IsValid(value);
  }
  static constexpr EAction EAction_MIN =
    CMsgClientToGCPartyAction_EAction_EAction_MIN;
  static constexpr EAction EAction_MAX =
    CMsgClientToGCPartyAction_EAction_EAction_MAX;
  static constexpr int EAction_ARRAYSIZE =
    CMsgClientToGCPartyAction_EAction_EAction_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EAction_descriptor() {
    return CMsgClientToGCPartyAction_EAction_descriptor();
  }
  template<typename T>
  static inline const std::string& EAction_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EAction>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EAction_Name.");
    return CMsgClientToGCPartyAction_EAction_Name(enum_t_value);
  }
  static inline bool EAction_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EAction* value) {
    return CMsgClientToGCPartyAction_EAction_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kStrValueFieldNumber = 6,
    kPartyIdFieldNumber = 1,
    kTargetAccountIdFieldNumber = 2,
    kBoolValueFieldNumber = 5,
    kUintValueFieldNumber = 4,
    kActionIdFieldNumber = 3,
  };
  // optional string str_value = 6;
  bool has_str_value() const;
  private:
  bool _internal_has_str_value() const;
  public:
  void clear_str_value();
  const std::string& str_value() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_str_value(ArgT0&& arg0, ArgT... args);
  std::string* mutable_str_value();
  PROTOBUF_NODISCARD std::string* release_str_value();
  void set_allocated_str_value(std::string* str_value);
  private:
  const std::string& _internal_str_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str_value(const std::string& value);
  std::string* _internal_mutable_str_value();
  public:

  // optional fixed64 party_id = 1;
  bool has_party_id() const;
  private:
  bool _internal_has_party_id() const;
  public:
  void clear_party_id();
  uint64_t party_id() const;
  void set_party_id(uint64_t value);
  private:
  uint64_t _internal_party_id() const;
  void _internal_set_party_id(uint64_t value);
  public:

  // optional uint32 target_account_id = 2;
  bool has_target_account_id() const;
  private:
  bool _internal_has_target_account_id() const;
  public:
  void clear_target_account_id();
  uint32_t target_account_id() const;
  void set_target_account_id(uint32_t value);
  private:
  uint32_t _internal_target_account_id() const;
  void _internal_set_target_account_id(uint32_t value);
  public:

  // optional bool bool_value = 5;
  bool has_bool_value() const;
  private:
  bool _internal_has_bool_value() const;
  public:
  void clear_bool_value();
  bool bool_value() const;
  void set_bool_value(bool value);
  private:
  bool _internal_bool_value() const;
  void _internal_set_bool_value(bool value);
  public:

  // optional uint64 uint_value = 4;
  bool has_uint_value() const;
  private:
  bool _internal_has_uint_value() const;
  public:
  void clear_uint_value();
  uint64_t uint_value() const;
  void set_uint_value(uint64_t value);
  private:
  uint64_t _internal_uint_value() const;
  void _internal_set_uint_value(uint64_t value);
  public:

  // optional .CMsgClientToGCPartyAction.EAction action_id = 3 [default = k_eKickUser];
  bool has_action_id() const;
  private:
  bool _internal_has_action_id() const;
  public:
  void clear_action_id();
  ::CMsgClientToGCPartyAction_EAction action_id() const;
  void set_action_id(::CMsgClientToGCPartyAction_EAction value);
  private:
  ::CMsgClientToGCPartyAction_EAction _internal_action_id() const;
  void _internal_set_action_id(::CMsgClientToGCPartyAction_EAction value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartyAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr str_value_;
    uint64_t party_id_;
    uint32_t target_account_id_;
    bool bool_value_;
    uint64_t uint_value_;
    int action_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartyActionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartyActionResponse) */ {
 public:
  inline CMsgClientToGCPartyActionResponse() : CMsgClientToGCPartyActionResponse(nullptr) {}
  ~CMsgClientToGCPartyActionResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartyActionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartyActionResponse(const CMsgClientToGCPartyActionResponse& from);
  CMsgClientToGCPartyActionResponse(CMsgClientToGCPartyActionResponse&& from) noexcept
    : CMsgClientToGCPartyActionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartyActionResponse& operator=(const CMsgClientToGCPartyActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartyActionResponse& operator=(CMsgClientToGCPartyActionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartyActionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartyActionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartyActionResponse*>(
               &_CMsgClientToGCPartyActionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CMsgClientToGCPartyActionResponse& a, CMsgClientToGCPartyActionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartyActionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartyActionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartyActionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartyActionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartyActionResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartyActionResponse& from) {
    CMsgClientToGCPartyActionResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartyActionResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartyActionResponse";
  }
  protected:
  explicit CMsgClientToGCPartyActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCPartyActionResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCPartyActionResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCPartyActionResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eInvalidPartyID =
    CMsgClientToGCPartyActionResponse_EResponse_k_eInvalidPartyID;
  static constexpr EResponse k_eInvalidPermissions =
    CMsgClientToGCPartyActionResponse_EResponse_k_eInvalidPermissions;
  static constexpr EResponse k_eInvalidTarget =
    CMsgClientToGCPartyActionResponse_EResponse_k_eInvalidTarget;
  static constexpr EResponse k_eInvalidValue =
    CMsgClientToGCPartyActionResponse_EResponse_k_eInvalidValue;
  static constexpr EResponse k_eInMatchMaking =
    CMsgClientToGCPartyActionResponse_EResponse_k_eInMatchMaking;
  static constexpr EResponse k_eInMatch =
    CMsgClientToGCPartyActionResponse_EResponse_k_eInMatch;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCPartyActionResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCPartyActionResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eRateLimited =
    CMsgClientToGCPartyActionResponse_EResponse_k_eRateLimited;
  static constexpr EResponse k_eCannotChangeWhileReady =
    CMsgClientToGCPartyActionResponse_EResponse_k_eCannotChangeWhileReady;
  static constexpr EResponse k_eSlotTaken =
    CMsgClientToGCPartyActionResponse_EResponse_k_eSlotTaken;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCPartyActionResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCPartyActionResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCPartyActionResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCPartyActionResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCPartyActionResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCPartyActionResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCPartyActionResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCPartyActionResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCPartyActionResponse_EResponse result() const;
  void set_result(::CMsgClientToGCPartyActionResponse_EResponse value);
  private:
  ::CMsgClientToGCPartyActionResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCPartyActionResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartyActionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartySetMode final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartySetMode) */ {
 public:
  inline CMsgClientToGCPartySetMode() : CMsgClientToGCPartySetMode(nullptr) {}
  ~CMsgClientToGCPartySetMode() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartySetMode(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartySetMode(const CMsgClientToGCPartySetMode& from);
  CMsgClientToGCPartySetMode(CMsgClientToGCPartySetMode&& from) noexcept
    : CMsgClientToGCPartySetMode() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartySetMode& operator=(const CMsgClientToGCPartySetMode& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartySetMode& operator=(CMsgClientToGCPartySetMode&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartySetMode& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartySetMode* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartySetMode*>(
               &_CMsgClientToGCPartySetMode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CMsgClientToGCPartySetMode& a, CMsgClientToGCPartySetMode& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartySetMode* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartySetMode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartySetMode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartySetMode>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartySetMode& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartySetMode& from) {
    CMsgClientToGCPartySetMode::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartySetMode* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartySetMode";
  }
  protected:
  explicit CMsgClientToGCPartySetMode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDevServerCommandFieldNumber = 5,
    kPartyIdFieldNumber = 1,
    kMatchModeFieldNumber = 2,
    kGameModeFieldNumber = 3,
    kBotDifficultyFieldNumber = 4,
    kRegionModeFieldNumber = 6,
  };
  // optional string dev_server_command = 5;
  bool has_dev_server_command() const;
  private:
  bool _internal_has_dev_server_command() const;
  public:
  void clear_dev_server_command();
  const std::string& dev_server_command() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_dev_server_command(ArgT0&& arg0, ArgT... args);
  std::string* mutable_dev_server_command();
  PROTOBUF_NODISCARD std::string* release_dev_server_command();
  void set_allocated_dev_server_command(std::string* dev_server_command);
  private:
  const std::string& _internal_dev_server_command() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dev_server_command(const std::string& value);
  std::string* _internal_mutable_dev_server_command();
  public:

  // optional fixed64 party_id = 1;
  bool has_party_id() const;
  private:
  bool _internal_has_party_id() const;
  public:
  void clear_party_id();
  uint64_t party_id() const;
  void set_party_id(uint64_t value);
  private:
  uint64_t _internal_party_id() const;
  void _internal_set_party_id(uint64_t value);
  public:

  // optional .ECitadelMatchMode match_mode = 2 [default = k_ECitadelMatchMode_Invalid];
  bool has_match_mode() const;
  private:
  bool _internal_has_match_mode() const;
  public:
  void clear_match_mode();
  ::ECitadelMatchMode match_mode() const;
  void set_match_mode(::ECitadelMatchMode value);
  private:
  ::ECitadelMatchMode _internal_match_mode() const;
  void _internal_set_match_mode(::ECitadelMatchMode value);
  public:

  // optional .ECitadelGameMode game_mode = 3 [default = k_ECitadelGameMode_Invalid];
  bool has_game_mode() const;
  private:
  bool _internal_has_game_mode() const;
  public:
  void clear_game_mode();
  ::ECitadelGameMode game_mode() const;
  void set_game_mode(::ECitadelGameMode value);
  private:
  ::ECitadelGameMode _internal_game_mode() const;
  void _internal_set_game_mode(::ECitadelGameMode value);
  public:

  // optional .ECitadelBotDifficulty bot_difficulty = 4 [default = k_ECitadelBotDifficulty_None];
  bool has_bot_difficulty() const;
  private:
  bool _internal_has_bot_difficulty() const;
  public:
  void clear_bot_difficulty();
  ::ECitadelBotDifficulty bot_difficulty() const;
  void set_bot_difficulty(::ECitadelBotDifficulty value);
  private:
  ::ECitadelBotDifficulty _internal_bot_difficulty() const;
  void _internal_set_bot_difficulty(::ECitadelBotDifficulty value);
  public:

  // optional .ECitadelRegionMode region_mode = 6 [default = k_ECitadelRegionMode_ROW];
  bool has_region_mode() const;
  private:
  bool _internal_has_region_mode() const;
  public:
  void clear_region_mode();
  ::ECitadelRegionMode region_mode() const;
  void set_region_mode(::ECitadelRegionMode value);
  private:
  ::ECitadelRegionMode _internal_region_mode() const;
  void _internal_set_region_mode(::ECitadelRegionMode value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartySetMode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dev_server_command_;
    uint64_t party_id_;
    int match_mode_;
    int game_mode_;
    int bot_difficulty_;
    int region_mode_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartySetModeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartySetModeResponse) */ {
 public:
  inline CMsgClientToGCPartySetModeResponse() : CMsgClientToGCPartySetModeResponse(nullptr) {}
  ~CMsgClientToGCPartySetModeResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartySetModeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartySetModeResponse(const CMsgClientToGCPartySetModeResponse& from);
  CMsgClientToGCPartySetModeResponse(CMsgClientToGCPartySetModeResponse&& from) noexcept
    : CMsgClientToGCPartySetModeResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartySetModeResponse& operator=(const CMsgClientToGCPartySetModeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartySetModeResponse& operator=(CMsgClientToGCPartySetModeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartySetModeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartySetModeResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartySetModeResponse*>(
               &_CMsgClientToGCPartySetModeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CMsgClientToGCPartySetModeResponse& a, CMsgClientToGCPartySetModeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartySetModeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartySetModeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartySetModeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartySetModeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartySetModeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartySetModeResponse& from) {
    CMsgClientToGCPartySetModeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartySetModeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartySetModeResponse";
  }
  protected:
  explicit CMsgClientToGCPartySetModeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCPartySetModeResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eInvalidPartyID =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eInvalidPartyID;
  static constexpr EResponse k_eInvalidPermissions =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eInvalidPermissions;
  static constexpr EResponse k_ePlayerPermanentBanned =
    CMsgClientToGCPartySetModeResponse_EResponse_k_ePlayerPermanentBanned;
  static constexpr EResponse k_eInvalidValue =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eInvalidValue;
  static constexpr EResponse k_eInMatchMaking =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eInMatchMaking;
  static constexpr EResponse k_eInMatch =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eInMatch;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eRateLimited =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eRateLimited;
  static constexpr EResponse k_eAlreadyDrafting =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eAlreadyDrafting;
  static constexpr EResponse k_eCannotChangeWhileReady =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eCannotChangeWhileReady;
  static constexpr EResponse k_eTooFewPlayers =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eTooFewPlayers;
  static constexpr EResponse k_eTooManyPlayers =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eTooManyPlayers;
  static constexpr EResponse k_ePlayerBanned =
    CMsgClientToGCPartySetModeResponse_EResponse_k_ePlayerBanned;
  static constexpr EResponse k_eTooManyHighMMR =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eTooManyHighMMR;
  static constexpr EResponse k_eFiveStacksNotAllowed =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eFiveStacksNotAllowed;
  static constexpr EResponse k_eRankedMMNotOpen =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eRankedMMNotOpen;
  static constexpr EResponse k_eRankedNotunlocked =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eRankedNotunlocked;
  static constexpr EResponse k_eHeroLabsMMNotOpen =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eHeroLabsMMNotOpen;
  static constexpr EResponse k_eHeroLabsNotUnlocked =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eHeroLabsNotUnlocked;
  static constexpr EResponse k_eNoHeroLabsWhileInLowPri =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eNoHeroLabsWhileInLowPri;
  static constexpr EResponse k_eNoHighRangeFiveStack =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eNoHighRangeFiveStack;
  static constexpr EResponse k_eAccountLocked =
    CMsgClientToGCPartySetModeResponse_EResponse_k_eAccountLocked;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCPartySetModeResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCPartySetModeResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCPartySetModeResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCPartySetModeResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCPartySetModeResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCPartySetModeResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCPartySetModeResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
    kTimeStampFieldNumber = 2,
    kAccountIdFieldNumber = 3,
  };
  // optional .CMsgClientToGCPartySetModeResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCPartySetModeResponse_EResponse result() const;
  void set_result(::CMsgClientToGCPartySetModeResponse_EResponse value);
  private:
  ::CMsgClientToGCPartySetModeResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCPartySetModeResponse_EResponse value);
  public:

  // optional uint32 time_stamp = 2;
  bool has_time_stamp() const;
  private:
  bool _internal_has_time_stamp() const;
  public:
  void clear_time_stamp();
  uint32_t time_stamp() const;
  void set_time_stamp(uint32_t value);
  private:
  uint32_t _internal_time_stamp() const;
  void _internal_set_time_stamp(uint32_t value);
  public:

  // optional uint32 account_id = 3;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartySetModeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
    uint32_t time_stamp_;
    uint32_t account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartyStartMatch final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartyStartMatch) */ {
 public:
  inline CMsgClientToGCPartyStartMatch() : CMsgClientToGCPartyStartMatch(nullptr) {}
  ~CMsgClientToGCPartyStartMatch() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartyStartMatch(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartyStartMatch(const CMsgClientToGCPartyStartMatch& from);
  CMsgClientToGCPartyStartMatch(CMsgClientToGCPartyStartMatch&& from) noexcept
    : CMsgClientToGCPartyStartMatch() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartyStartMatch& operator=(const CMsgClientToGCPartyStartMatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartyStartMatch& operator=(CMsgClientToGCPartyStartMatch&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartyStartMatch& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartyStartMatch* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartyStartMatch*>(
               &_CMsgClientToGCPartyStartMatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CMsgClientToGCPartyStartMatch& a, CMsgClientToGCPartyStartMatch& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartyStartMatch* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartyStartMatch* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartyStartMatch* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartyStartMatch>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartyStartMatch& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartyStartMatch& from) {
    CMsgClientToGCPartyStartMatch::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartyStartMatch* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartyStartMatch";
  }
  protected:
  explicit CMsgClientToGCPartyStartMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPartyIdFieldNumber = 1,
  };
  // optional fixed64 party_id = 1;
  bool has_party_id() const;
  private:
  bool _internal_has_party_id() const;
  public:
  void clear_party_id();
  uint64_t party_id() const;
  void set_party_id(uint64_t value);
  private:
  uint64_t _internal_party_id() const;
  void _internal_set_party_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartyStartMatch)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t party_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartyStartMatchResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartyStartMatchResponse) */ {
 public:
  inline CMsgClientToGCPartyStartMatchResponse() : CMsgClientToGCPartyStartMatchResponse(nullptr) {}
  ~CMsgClientToGCPartyStartMatchResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartyStartMatchResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartyStartMatchResponse(const CMsgClientToGCPartyStartMatchResponse& from);
  CMsgClientToGCPartyStartMatchResponse(CMsgClientToGCPartyStartMatchResponse&& from) noexcept
    : CMsgClientToGCPartyStartMatchResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartyStartMatchResponse& operator=(const CMsgClientToGCPartyStartMatchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartyStartMatchResponse& operator=(CMsgClientToGCPartyStartMatchResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartyStartMatchResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartyStartMatchResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartyStartMatchResponse*>(
               &_CMsgClientToGCPartyStartMatchResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CMsgClientToGCPartyStartMatchResponse& a, CMsgClientToGCPartyStartMatchResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartyStartMatchResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartyStartMatchResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartyStartMatchResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartyStartMatchResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartyStartMatchResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartyStartMatchResponse& from) {
    CMsgClientToGCPartyStartMatchResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartyStartMatchResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartyStartMatchResponse";
  }
  protected:
  explicit CMsgClientToGCPartyStartMatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCPartyStartMatchResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eInvalidPartyID =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInvalidPartyID;
  static constexpr EResponse k_eInvalidPermissions =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInvalidPermissions;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eInMatchmaking =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInMatchmaking;
  static constexpr EResponse k_eInMatch =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInMatch;
  static constexpr EResponse k_eInvalidVersion =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInvalidVersion;
  static constexpr EResponse k_ePlayersNotReady =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_ePlayersNotReady;
  static constexpr EResponse k_eCannotSelectRegion =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eCannotSelectRegion;
  static constexpr EResponse k_eNotAllPlayersAvailable =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eNotAllPlayersAvailable;
  static constexpr EResponse k_eTooManyPlayersForMM =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooManyPlayersForMM;
  static constexpr EResponse k_eTooManyPlayersForPrivate =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooManyPlayersForPrivate;
  static constexpr EResponse k_eTooManySpectatorsForMM =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooManySpectatorsForMM;
  static constexpr EResponse k_eTooManySpectatorsForPrivate =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooManySpectatorsForPrivate;
  static constexpr EResponse k_eTooFewPlayersForMM =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooFewPlayersForMM;
  static constexpr EResponse k_eTooFewPlayersForPrivate =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooFewPlayersForPrivate;
  static constexpr EResponse k_eMismatchedVersions =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eMismatchedVersions;
  static constexpr EResponse k_eInvalidPartyMatchMode =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInvalidPartyMatchMode;
  static constexpr EResponse k_ePlayerBannedFromMode =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_ePlayerBannedFromMode;
  static constexpr EResponse k_eTooManyPlayersOnTeam =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eTooManyPlayersOnTeam;
  static constexpr EResponse k_eInvalidTeam =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInvalidTeam;
  static constexpr EResponse k_eInvalidHeroLineup =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInvalidHeroLineup;
  static constexpr EResponse k_eInvalidGroupHeroLineup =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eInvalidGroupHeroLineup;
  static constexpr EResponse k_eUnassignedPlayers =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eUnassignedPlayers;
  static constexpr EResponse k_eRankedMMNotOpen =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eRankedMMNotOpen;
  static constexpr EResponse k_eHeroLabsMMNotOpen =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eHeroLabsMMNotOpen;
  static constexpr EResponse k_eHeroLabsNotUnlocked =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eHeroLabsNotUnlocked;
  static constexpr EResponse k_eNoHeroLabsWhileInLowPri =
    CMsgClientToGCPartyStartMatchResponse_EResponse_k_eNoHeroLabsWhileInLowPri;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCPartyStartMatchResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCPartyStartMatchResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCPartyStartMatchResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCPartyStartMatchResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCPartyStartMatchResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCPartyStartMatchResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCPartyStartMatchResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
    kAccountIdFieldNumber = 2,
  };
  // optional .CMsgClientToGCPartyStartMatchResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCPartyStartMatchResponse_EResponse result() const;
  void set_result(::CMsgClientToGCPartyStartMatchResponse_EResponse value);
  private:
  ::CMsgClientToGCPartyStartMatchResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCPartyStartMatchResponse_EResponse value);
  public:

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartyStartMatchResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
    uint32_t account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartyInviteUser final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartyInviteUser) */ {
 public:
  inline CMsgClientToGCPartyInviteUser() : CMsgClientToGCPartyInviteUser(nullptr) {}
  ~CMsgClientToGCPartyInviteUser() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartyInviteUser(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartyInviteUser(const CMsgClientToGCPartyInviteUser& from);
  CMsgClientToGCPartyInviteUser(CMsgClientToGCPartyInviteUser&& from) noexcept
    : CMsgClientToGCPartyInviteUser() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartyInviteUser& operator=(const CMsgClientToGCPartyInviteUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartyInviteUser& operator=(CMsgClientToGCPartyInviteUser&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartyInviteUser& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartyInviteUser* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartyInviteUser*>(
               &_CMsgClientToGCPartyInviteUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CMsgClientToGCPartyInviteUser& a, CMsgClientToGCPartyInviteUser& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartyInviteUser* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartyInviteUser* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartyInviteUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartyInviteUser>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartyInviteUser& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartyInviteUser& from) {
    CMsgClientToGCPartyInviteUser::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartyInviteUser* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartyInviteUser";
  }
  protected:
  explicit CMsgClientToGCPartyInviteUser(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPartyIdFieldNumber = 1,
    kInviteAccountIdFieldNumber = 2,
  };
  // optional fixed64 party_id = 1;
  bool has_party_id() const;
  private:
  bool _internal_has_party_id() const;
  public:
  void clear_party_id();
  uint64_t party_id() const;
  void set_party_id(uint64_t value);
  private:
  uint64_t _internal_party_id() const;
  void _internal_set_party_id(uint64_t value);
  public:

  // optional uint32 invite_account_id = 2;
  bool has_invite_account_id() const;
  private:
  bool _internal_has_invite_account_id() const;
  public:
  void clear_invite_account_id();
  uint32_t invite_account_id() const;
  void set_invite_account_id(uint32_t value);
  private:
  uint32_t _internal_invite_account_id() const;
  void _internal_set_invite_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartyInviteUser)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t party_id_;
    uint32_t invite_account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartyInviteUserResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartyInviteUserResponse) */ {
 public:
  inline CMsgClientToGCPartyInviteUserResponse() : CMsgClientToGCPartyInviteUserResponse(nullptr) {}
  ~CMsgClientToGCPartyInviteUserResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartyInviteUserResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartyInviteUserResponse(const CMsgClientToGCPartyInviteUserResponse& from);
  CMsgClientToGCPartyInviteUserResponse(CMsgClientToGCPartyInviteUserResponse&& from) noexcept
    : CMsgClientToGCPartyInviteUserResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartyInviteUserResponse& operator=(const CMsgClientToGCPartyInviteUserResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartyInviteUserResponse& operator=(CMsgClientToGCPartyInviteUserResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartyInviteUserResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartyInviteUserResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartyInviteUserResponse*>(
               &_CMsgClientToGCPartyInviteUserResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(CMsgClientToGCPartyInviteUserResponse& a, CMsgClientToGCPartyInviteUserResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartyInviteUserResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartyInviteUserResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartyInviteUserResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartyInviteUserResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartyInviteUserResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartyInviteUserResponse& from) {
    CMsgClientToGCPartyInviteUserResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartyInviteUserResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartyInviteUserResponse";
  }
  protected:
  explicit CMsgClientToGCPartyInviteUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCPartyInviteUserResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCPartyInviteUserResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCPartyInviteUserResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eAlreadyInvited =
    CMsgClientToGCPartyInviteUserResponse_EResponse_k_eAlreadyInvited;
  static constexpr EResponse k_eInvalidPermissions =
    CMsgClientToGCPartyInviteUserResponse_EResponse_k_eInvalidPermissions;
  static constexpr EResponse k_eInvalidPartyID =
    CMsgClientToGCPartyInviteUserResponse_EResponse_k_eInvalidPartyID;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCPartyInviteUserResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTooManyInvites =
    CMsgClientToGCPartyInviteUserResponse_EResponse_k_eTooManyInvites;
  static constexpr EResponse k_eNotFriends =
    CMsgClientToGCPartyInviteUserResponse_EResponse_k_eNotFriends;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCPartyInviteUserResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eRateLimited =
    CMsgClientToGCPartyInviteUserResponse_EResponse_k_eRateLimited;
  static constexpr EResponse k_eInvalidPartyMode =
    CMsgClientToGCPartyInviteUserResponse_EResponse_k_eInvalidPartyMode;
  static constexpr EResponse k_ePlayerDoesntHaveGame =
    CMsgClientToGCPartyInviteUserResponse_EResponse_k_ePlayerDoesntHaveGame;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCPartyInviteUserResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCPartyInviteUserResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCPartyInviteUserResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCPartyInviteUserResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCPartyInviteUserResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCPartyInviteUserResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCPartyInviteUserResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
    kUserOnlineFieldNumber = 2,
  };
  // optional .CMsgClientToGCPartyInviteUserResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCPartyInviteUserResponse_EResponse result() const;
  void set_result(::CMsgClientToGCPartyInviteUserResponse_EResponse value);
  private:
  ::CMsgClientToGCPartyInviteUserResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCPartyInviteUserResponse_EResponse value);
  public:

  // optional bool user_online = 2;
  bool has_user_online() const;
  private:
  bool _internal_has_user_online() const;
  public:
  void clear_user_online();
  bool user_online() const;
  void set_user_online(bool value);
  private:
  bool _internal_user_online() const;
  void _internal_set_user_online(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartyInviteUserResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
    bool user_online_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientPartyEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientPartyEvent) */ {
 public:
  inline CMsgGCToClientPartyEvent() : CMsgGCToClientPartyEvent(nullptr) {}
  ~CMsgGCToClientPartyEvent() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientPartyEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientPartyEvent(const CMsgGCToClientPartyEvent& from);
  CMsgGCToClientPartyEvent(CMsgGCToClientPartyEvent&& from) noexcept
    : CMsgGCToClientPartyEvent() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientPartyEvent& operator=(const CMsgGCToClientPartyEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientPartyEvent& operator=(CMsgGCToClientPartyEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientPartyEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientPartyEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientPartyEvent*>(
               &_CMsgGCToClientPartyEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(CMsgGCToClientPartyEvent& a, CMsgGCToClientPartyEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientPartyEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientPartyEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientPartyEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientPartyEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientPartyEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientPartyEvent& from) {
    CMsgGCToClientPartyEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientPartyEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientPartyEvent";
  }
  protected:
  explicit CMsgGCToClientPartyEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientPartyEvent_EEvent EEvent;
  static constexpr EEvent k_ePlayerKicked =
    CMsgGCToClientPartyEvent_EEvent_k_ePlayerKicked;
  static constexpr EEvent k_eJoinedParty =
    CMsgGCToClientPartyEvent_EEvent_k_eJoinedParty;
  static constexpr EEvent k_eMatchCompleted =
    CMsgGCToClientPartyEvent_EEvent_k_eMatchCompleted;
  static constexpr EEvent k_eMatchMakingStopped_User =
    CMsgGCToClientPartyEvent_EEvent_k_eMatchMakingStopped_User;
  static constexpr EEvent k_eMatchMakingStopped_Version =
    CMsgGCToClientPartyEvent_EEvent_k_eMatchMakingStopped_Version;
  static constexpr EEvent k_eMatchMakingStopped_NoServerRegion =
    CMsgGCToClientPartyEvent_EEvent_k_eMatchMakingStopped_NoServerRegion;
  static constexpr EEvent k_eLeftParty =
    CMsgGCToClientPartyEvent_EEvent_k_eLeftParty;
  static constexpr EEvent k_eDeclinedInvite =
    CMsgGCToClientPartyEvent_EEvent_k_eDeclinedInvite;
  static constexpr EEvent k_eMatchMakingStopped_FailedOther =
    CMsgGCToClientPartyEvent_EEvent_k_eMatchMakingStopped_FailedOther;
  static constexpr EEvent k_eDraftEnded_User =
    CMsgGCToClientPartyEvent_EEvent_k_eDraftEnded_User;
  static constexpr EEvent k_eStartDraftMMFailed =
    CMsgGCToClientPartyEvent_EEvent_k_eStartDraftMMFailed;
  static constexpr EEvent k_eMatchMakingStopped_Cancelled =
    CMsgGCToClientPartyEvent_EEvent_k_eMatchMakingStopped_Cancelled;
  static inline bool EEvent_IsValid(int value) {
    return CMsgGCToClientPartyEvent_EEvent_IsValid(value);
  }
  static constexpr EEvent EEvent_MIN =
    CMsgGCToClientPartyEvent_EEvent_EEvent_MIN;
  static constexpr EEvent EEvent_MAX =
    CMsgGCToClientPartyEvent_EEvent_EEvent_MAX;
  static constexpr int EEvent_ARRAYSIZE =
    CMsgGCToClientPartyEvent_EEvent_EEvent_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EEvent_descriptor() {
    return CMsgGCToClientPartyEvent_EEvent_descriptor();
  }
  template<typename T>
  static inline const std::string& EEvent_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EEvent>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EEvent_Name.");
    return CMsgGCToClientPartyEvent_EEvent_Name(enum_t_value);
  }
  static inline bool EEvent_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EEvent* value) {
    return CMsgGCToClientPartyEvent_EEvent_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kBytesDataFieldNumber = 5,
    kStrDataFieldNumber = 6,
    kPartyIdFieldNumber = 1,
    kInitiatorAccountIdFieldNumber = 3,
    kTargetAccountIdFieldNumber = 4,
    kUintDataFieldNumber = 7,
    kEventFieldNumber = 2,
  };
  // optional bytes bytes_data = 5;
  bool has_bytes_data() const;
  private:
  bool _internal_has_bytes_data() const;
  public:
  void clear_bytes_data();
  const std::string& bytes_data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_bytes_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_bytes_data();
  PROTOBUF_NODISCARD std::string* release_bytes_data();
  void set_allocated_bytes_data(std::string* bytes_data);
  private:
  const std::string& _internal_bytes_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bytes_data(const std::string& value);
  std::string* _internal_mutable_bytes_data();
  public:

  // optional string str_data = 6;
  bool has_str_data() const;
  private:
  bool _internal_has_str_data() const;
  public:
  void clear_str_data();
  const std::string& str_data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_str_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_str_data();
  PROTOBUF_NODISCARD std::string* release_str_data();
  void set_allocated_str_data(std::string* str_data);
  private:
  const std::string& _internal_str_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str_data(const std::string& value);
  std::string* _internal_mutable_str_data();
  public:

  // optional fixed64 party_id = 1;
  bool has_party_id() const;
  private:
  bool _internal_has_party_id() const;
  public:
  void clear_party_id();
  uint64_t party_id() const;
  void set_party_id(uint64_t value);
  private:
  uint64_t _internal_party_id() const;
  void _internal_set_party_id(uint64_t value);
  public:

  // optional uint32 initiator_account_id = 3;
  bool has_initiator_account_id() const;
  private:
  bool _internal_has_initiator_account_id() const;
  public:
  void clear_initiator_account_id();
  uint32_t initiator_account_id() const;
  void set_initiator_account_id(uint32_t value);
  private:
  uint32_t _internal_initiator_account_id() const;
  void _internal_set_initiator_account_id(uint32_t value);
  public:

  // optional uint32 target_account_id = 4;
  bool has_target_account_id() const;
  private:
  bool _internal_has_target_account_id() const;
  public:
  void clear_target_account_id();
  uint32_t target_account_id() const;
  void set_target_account_id(uint32_t value);
  private:
  uint32_t _internal_target_account_id() const;
  void _internal_set_target_account_id(uint32_t value);
  public:

  // optional uint64 uint_data = 7;
  bool has_uint_data() const;
  private:
  bool _internal_has_uint_data() const;
  public:
  void clear_uint_data();
  uint64_t uint_data() const;
  void set_uint_data(uint64_t value);
  private:
  uint64_t _internal_uint_data() const;
  void _internal_set_uint_data(uint64_t value);
  public:

  // optional .CMsgGCToClientPartyEvent.EEvent event = 2 [default = k_ePlayerKicked];
  bool has_event() const;
  private:
  bool _internal_has_event() const;
  public:
  void clear_event();
  ::CMsgGCToClientPartyEvent_EEvent event() const;
  void set_event(::CMsgGCToClientPartyEvent_EEvent value);
  private:
  ::CMsgGCToClientPartyEvent_EEvent _internal_event() const;
  void _internal_set_event(::CMsgGCToClientPartyEvent_EEvent value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientPartyEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bytes_data_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr str_data_;
    uint64_t party_id_;
    uint32_t initiator_account_id_;
    uint32_t target_account_id_;
    uint64_t uint_data_;
    int event_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientCanRejoinParty final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientCanRejoinParty) */ {
 public:
  inline CMsgGCToClientCanRejoinParty() : CMsgGCToClientCanRejoinParty(nullptr) {}
  ~CMsgGCToClientCanRejoinParty() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientCanRejoinParty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientCanRejoinParty(const CMsgGCToClientCanRejoinParty& from);
  CMsgGCToClientCanRejoinParty(CMsgGCToClientCanRejoinParty&& from) noexcept
    : CMsgGCToClientCanRejoinParty() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientCanRejoinParty& operator=(const CMsgGCToClientCanRejoinParty& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientCanRejoinParty& operator=(CMsgGCToClientCanRejoinParty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientCanRejoinParty& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientCanRejoinParty* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientCanRejoinParty*>(
               &_CMsgGCToClientCanRejoinParty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(CMsgGCToClientCanRejoinParty& a, CMsgGCToClientCanRejoinParty& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientCanRejoinParty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientCanRejoinParty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientCanRejoinParty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientCanRejoinParty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientCanRejoinParty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientCanRejoinParty& from) {
    CMsgGCToClientCanRejoinParty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientCanRejoinParty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientCanRejoinParty";
  }
  protected:
  explicit CMsgGCToClientCanRejoinParty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPartyIdFieldNumber = 1,
  };
  // optional fixed64 party_id = 1;
  bool has_party_id() const;
  private:
  bool _internal_has_party_id() const;
  public:
  void clear_party_id();
  uint64_t party_id() const;
  void set_party_id(uint64_t value);
  private:
  uint64_t _internal_party_id() const;
  void _internal_set_party_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientCanRejoinParty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t party_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartyJoinViaCode final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartyJoinViaCode) */ {
 public:
  inline CMsgClientToGCPartyJoinViaCode() : CMsgClientToGCPartyJoinViaCode(nullptr) {}
  ~CMsgClientToGCPartyJoinViaCode() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartyJoinViaCode(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartyJoinViaCode(const CMsgClientToGCPartyJoinViaCode& from);
  CMsgClientToGCPartyJoinViaCode(CMsgClientToGCPartyJoinViaCode&& from) noexcept
    : CMsgClientToGCPartyJoinViaCode() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartyJoinViaCode& operator=(const CMsgClientToGCPartyJoinViaCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartyJoinViaCode& operator=(CMsgClientToGCPartyJoinViaCode&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartyJoinViaCode& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartyJoinViaCode* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartyJoinViaCode*>(
               &_CMsgClientToGCPartyJoinViaCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(CMsgClientToGCPartyJoinViaCode& a, CMsgClientToGCPartyJoinViaCode& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartyJoinViaCode* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartyJoinViaCode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartyJoinViaCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartyJoinViaCode>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartyJoinViaCode& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartyJoinViaCode& from) {
    CMsgClientToGCPartyJoinViaCode::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartyJoinViaCode* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartyJoinViaCode";
  }
  protected:
  explicit CMsgClientToGCPartyJoinViaCode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPartyMmInfoFieldNumber = 2,
    kJoinCodeFieldNumber = 1,
  };
  // optional .CMsgPartyMMInfo party_mm_info = 2;
  bool has_party_mm_info() const;
  private:
  bool _internal_has_party_mm_info() const;
  public:
  void clear_party_mm_info();
  const ::CMsgPartyMMInfo& party_mm_info() const;
  PROTOBUF_NODISCARD ::CMsgPartyMMInfo* release_party_mm_info();
  ::CMsgPartyMMInfo* mutable_party_mm_info();
  void set_allocated_party_mm_info(::CMsgPartyMMInfo* party_mm_info);
  private:
  const ::CMsgPartyMMInfo& _internal_party_mm_info() const;
  ::CMsgPartyMMInfo* _internal_mutable_party_mm_info();
  public:
  void unsafe_arena_set_allocated_party_mm_info(
      ::CMsgPartyMMInfo* party_mm_info);
  ::CMsgPartyMMInfo* unsafe_arena_release_party_mm_info();

  // optional uint64 join_code = 1;
  bool has_join_code() const;
  private:
  bool _internal_has_join_code() const;
  public:
  void clear_join_code();
  uint64_t join_code() const;
  void set_join_code(uint64_t value);
  private:
  uint64_t _internal_join_code() const;
  void _internal_set_join_code(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartyJoinViaCode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgPartyMMInfo* party_mm_info_;
    uint64_t join_code_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartyJoinViaCodeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartyJoinViaCodeResponse) */ {
 public:
  inline CMsgClientToGCPartyJoinViaCodeResponse() : CMsgClientToGCPartyJoinViaCodeResponse(nullptr) {}
  ~CMsgClientToGCPartyJoinViaCodeResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartyJoinViaCodeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartyJoinViaCodeResponse(const CMsgClientToGCPartyJoinViaCodeResponse& from);
  CMsgClientToGCPartyJoinViaCodeResponse(CMsgClientToGCPartyJoinViaCodeResponse&& from) noexcept
    : CMsgClientToGCPartyJoinViaCodeResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartyJoinViaCodeResponse& operator=(const CMsgClientToGCPartyJoinViaCodeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartyJoinViaCodeResponse& operator=(CMsgClientToGCPartyJoinViaCodeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartyJoinViaCodeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartyJoinViaCodeResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartyJoinViaCodeResponse*>(
               &_CMsgClientToGCPartyJoinViaCodeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(CMsgClientToGCPartyJoinViaCodeResponse& a, CMsgClientToGCPartyJoinViaCodeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartyJoinViaCodeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartyJoinViaCodeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartyJoinViaCodeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartyJoinViaCodeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartyJoinViaCodeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartyJoinViaCodeResponse& from) {
    CMsgClientToGCPartyJoinViaCodeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartyJoinViaCodeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartyJoinViaCodeResponse";
  }
  protected:
  explicit CMsgClientToGCPartyJoinViaCodeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPartyIdFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional fixed64 party_id = 2;
  bool has_party_id() const;
  private:
  bool _internal_has_party_id() const;
  public:
  void clear_party_id();
  uint64_t party_id() const;
  void set_party_id(uint64_t value);
  private:
  uint64_t _internal_party_id() const;
  void _internal_set_party_id(uint64_t value);
  public:

  // optional .CMsgClientToGCPartyJoinResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCPartyJoinResponse_EResponse result() const;
  void set_result(::CMsgClientToGCPartyJoinResponse_EResponse value);
  private:
  ::CMsgClientToGCPartyJoinResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCPartyJoinResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartyJoinViaCodeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t party_id_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartySetReadyState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartySetReadyState) */ {
 public:
  inline CMsgClientToGCPartySetReadyState() : CMsgClientToGCPartySetReadyState(nullptr) {}
  ~CMsgClientToGCPartySetReadyState() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartySetReadyState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartySetReadyState(const CMsgClientToGCPartySetReadyState& from);
  CMsgClientToGCPartySetReadyState(CMsgClientToGCPartySetReadyState&& from) noexcept
    : CMsgClientToGCPartySetReadyState() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartySetReadyState& operator=(const CMsgClientToGCPartySetReadyState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartySetReadyState& operator=(CMsgClientToGCPartySetReadyState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartySetReadyState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartySetReadyState* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartySetReadyState*>(
               &_CMsgClientToGCPartySetReadyState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(CMsgClientToGCPartySetReadyState& a, CMsgClientToGCPartySetReadyState& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartySetReadyState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartySetReadyState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartySetReadyState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartySetReadyState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartySetReadyState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartySetReadyState& from) {
    CMsgClientToGCPartySetReadyState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartySetReadyState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartySetReadyState";
  }
  protected:
  explicit CMsgClientToGCPartySetReadyState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroRosterFieldNumber = 3,
    kPartyIdFieldNumber = 1,
    kReadyStateFieldNumber = 2,
  };
  // optional .CMsgHeroSelectionMatchInfo hero_roster = 3;
  bool has_hero_roster() const;
  private:
  bool _internal_has_hero_roster() const;
  public:
  void clear_hero_roster();
  const ::CMsgHeroSelectionMatchInfo& hero_roster() const;
  PROTOBUF_NODISCARD ::CMsgHeroSelectionMatchInfo* release_hero_roster();
  ::CMsgHeroSelectionMatchInfo* mutable_hero_roster();
  void set_allocated_hero_roster(::CMsgHeroSelectionMatchInfo* hero_roster);
  private:
  const ::CMsgHeroSelectionMatchInfo& _internal_hero_roster() const;
  ::CMsgHeroSelectionMatchInfo* _internal_mutable_hero_roster();
  public:
  void unsafe_arena_set_allocated_hero_roster(
      ::CMsgHeroSelectionMatchInfo* hero_roster);
  ::CMsgHeroSelectionMatchInfo* unsafe_arena_release_hero_roster();

  // optional fixed64 party_id = 1;
  bool has_party_id() const;
  private:
  bool _internal_has_party_id() const;
  public:
  void clear_party_id();
  uint64_t party_id() const;
  void set_party_id(uint64_t value);
  private:
  uint64_t _internal_party_id() const;
  void _internal_set_party_id(uint64_t value);
  public:

  // optional bool ready_state = 2;
  bool has_ready_state() const;
  private:
  bool _internal_has_ready_state() const;
  public:
  void clear_ready_state();
  bool ready_state() const;
  void set_ready_state(bool value);
  private:
  bool _internal_ready_state() const;
  void _internal_set_ready_state(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartySetReadyState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgHeroSelectionMatchInfo* hero_roster_;
    uint64_t party_id_;
    bool ready_state_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPartySetReadyStateResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCPartySetReadyStateResponse) */ {
 public:
  inline CMsgClientToGCPartySetReadyStateResponse() : CMsgClientToGCPartySetReadyStateResponse(nullptr) {}
  ~CMsgClientToGCPartySetReadyStateResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCPartySetReadyStateResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCPartySetReadyStateResponse(const CMsgClientToGCPartySetReadyStateResponse& from);
  CMsgClientToGCPartySetReadyStateResponse(CMsgClientToGCPartySetReadyStateResponse&& from) noexcept
    : CMsgClientToGCPartySetReadyStateResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPartySetReadyStateResponse& operator=(const CMsgClientToGCPartySetReadyStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCPartySetReadyStateResponse& operator=(CMsgClientToGCPartySetReadyStateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCPartySetReadyStateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCPartySetReadyStateResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPartySetReadyStateResponse*>(
               &_CMsgClientToGCPartySetReadyStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(CMsgClientToGCPartySetReadyStateResponse& a, CMsgClientToGCPartySetReadyStateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCPartySetReadyStateResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCPartySetReadyStateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCPartySetReadyStateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCPartySetReadyStateResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCPartySetReadyStateResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCPartySetReadyStateResponse& from) {
    CMsgClientToGCPartySetReadyStateResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPartySetReadyStateResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCPartySetReadyStateResponse";
  }
  protected:
  explicit CMsgClientToGCPartySetReadyStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCPartySetReadyStateResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eInvalidPermissions =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eInvalidPermissions;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eRateLimited =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eRateLimited;
  static constexpr EResponse k_eInvalidRoster =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eInvalidRoster;
  static constexpr EResponse k_eMatchForming =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eMatchForming;
  static constexpr EResponse k_eInvalidGroupRoster =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eInvalidGroupRoster;
  static constexpr EResponse k_eInMatch =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eInMatch;
  static constexpr EResponse k_eHeroesNotUnlocked =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eHeroesNotUnlocked;
  static constexpr EResponse k_eModeLocked =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eModeLocked;
  static constexpr EResponse k_eModeBanned =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_k_eModeBanned;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCPartySetReadyStateResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCPartySetReadyStateResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCPartySetReadyStateResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCPartySetReadyStateResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCPartySetReadyStateResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCPartySetReadyStateResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCPartySetReadyStateResponse_EResponse result() const;
  void set_result(::CMsgClientToGCPartySetReadyStateResponse_EResponse value);
  private:
  ::CMsgClientToGCPartySetReadyStateResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCPartySetReadyStateResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCPartySetReadyStateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCDevSetMMBias final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCDevSetMMBias) */ {
 public:
  inline CMsgClientToGCDevSetMMBias() : CMsgClientToGCDevSetMMBias(nullptr) {}
  ~CMsgClientToGCDevSetMMBias() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCDevSetMMBias(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCDevSetMMBias(const CMsgClientToGCDevSetMMBias& from);
  CMsgClientToGCDevSetMMBias(CMsgClientToGCDevSetMMBias&& from) noexcept
    : CMsgClientToGCDevSetMMBias() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCDevSetMMBias& operator=(const CMsgClientToGCDevSetMMBias& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCDevSetMMBias& operator=(CMsgClientToGCDevSetMMBias&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCDevSetMMBias& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCDevSetMMBias* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCDevSetMMBias*>(
               &_CMsgClientToGCDevSetMMBias_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(CMsgClientToGCDevSetMMBias& a, CMsgClientToGCDevSetMMBias& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCDevSetMMBias* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCDevSetMMBias* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCDevSetMMBias* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCDevSetMMBias>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCDevSetMMBias& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCDevSetMMBias& from) {
    CMsgClientToGCDevSetMMBias::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCDevSetMMBias* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCDevSetMMBias";
  }
  protected:
  explicit CMsgClientToGCDevSetMMBias(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  uint32_t value() const;
  void set_value(uint32_t value);
  private:
  uint32_t _internal_value() const;
  void _internal_set_value(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCDevSetMMBias)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    uint32_t value_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetMatchHistory final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetMatchHistory) */ {
 public:
  inline CMsgClientToGCGetMatchHistory() : CMsgClientToGCGetMatchHistory(nullptr) {}
  ~CMsgClientToGCGetMatchHistory() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchHistory(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetMatchHistory(const CMsgClientToGCGetMatchHistory& from);
  CMsgClientToGCGetMatchHistory(CMsgClientToGCGetMatchHistory&& from) noexcept
    : CMsgClientToGCGetMatchHistory() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetMatchHistory& operator=(const CMsgClientToGCGetMatchHistory& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetMatchHistory& operator=(CMsgClientToGCGetMatchHistory&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetMatchHistory& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetMatchHistory* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetMatchHistory*>(
               &_CMsgClientToGCGetMatchHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(CMsgClientToGCGetMatchHistory& a, CMsgClientToGCGetMatchHistory& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetMatchHistory* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetMatchHistory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetMatchHistory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetMatchHistory>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetMatchHistory& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetMatchHistory& from) {
    CMsgClientToGCGetMatchHistory::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetMatchHistory* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetMatchHistory";
  }
  protected:
  explicit CMsgClientToGCGetMatchHistory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContinueCursorFieldNumber = 2,
    kAccountIdFieldNumber = 1,
    kRankedIntervalFieldNumber = 3,
  };
  // optional uint64 continue_cursor = 2;
  bool has_continue_cursor() const;
  private:
  bool _internal_has_continue_cursor() const;
  public:
  void clear_continue_cursor();
  uint64_t continue_cursor() const;
  void set_continue_cursor(uint64_t value);
  private:
  uint64_t _internal_continue_cursor() const;
  void _internal_set_continue_cursor(uint64_t value);
  public:

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 ranked_interval = 3;
  bool has_ranked_interval() const;
  private:
  bool _internal_has_ranked_interval() const;
  public:
  void clear_ranked_interval();
  uint32_t ranked_interval() const;
  void set_ranked_interval(uint32_t value);
  private:
  uint32_t _internal_ranked_interval() const;
  void _internal_set_ranked_interval(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetMatchHistory)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t continue_cursor_;
    uint32_t account_id_;
    uint32_t ranked_interval_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetMatchHistoryResponse_Match final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetMatchHistoryResponse.Match) */ {
 public:
  inline CMsgClientToGCGetMatchHistoryResponse_Match() : CMsgClientToGCGetMatchHistoryResponse_Match(nullptr) {}
  ~CMsgClientToGCGetMatchHistoryResponse_Match() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchHistoryResponse_Match(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetMatchHistoryResponse_Match(const CMsgClientToGCGetMatchHistoryResponse_Match& from);
  CMsgClientToGCGetMatchHistoryResponse_Match(CMsgClientToGCGetMatchHistoryResponse_Match&& from) noexcept
    : CMsgClientToGCGetMatchHistoryResponse_Match() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetMatchHistoryResponse_Match& operator=(const CMsgClientToGCGetMatchHistoryResponse_Match& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetMatchHistoryResponse_Match& operator=(CMsgClientToGCGetMatchHistoryResponse_Match&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetMatchHistoryResponse_Match& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetMatchHistoryResponse_Match* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetMatchHistoryResponse_Match*>(
               &_CMsgClientToGCGetMatchHistoryResponse_Match_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(CMsgClientToGCGetMatchHistoryResponse_Match& a, CMsgClientToGCGetMatchHistoryResponse_Match& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetMatchHistoryResponse_Match* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetMatchHistoryResponse_Match* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetMatchHistoryResponse_Match* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetMatchHistoryResponse_Match>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetMatchHistoryResponse_Match& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetMatchHistoryResponse_Match& from) {
    CMsgClientToGCGetMatchHistoryResponse_Match::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetMatchHistoryResponse_Match* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetMatchHistoryResponse.Match";
  }
  protected:
  explicit CMsgClientToGCGetMatchHistoryResponse_Match(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatchIdFieldNumber = 1,
    kHeroIdFieldNumber = 2,
    kMatchDurationSFieldNumber = 3,
    kStartTimeFieldNumber = 4,
    kMatchResultFieldNumber = 5,
    kPlayerTeamFieldNumber = 6,
    kPlayerKillsFieldNumber = 7,
    kPlayerDeathsFieldNumber = 8,
    kPlayerAssistsFieldNumber = 9,
    kLastHitsFieldNumber = 11,
    kDeniesFieldNumber = 12,
    kHeroLevelFieldNumber = 13,
    kNetWorthFieldNumber = 14,
    kObjectivesMaskTeam0FieldNumber = 15,
    kObjectivesMaskTeam1FieldNumber = 16,
    kAbandonedTimeSFieldNumber = 18,
    kMatchModeFieldNumber = 19,
    kTeamAbandonedFieldNumber = 17,
    kNotScoredFieldNumber = 21,
    kGameModeFieldNumber = 20,
  };
  // optional uint64 match_id = 1;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // optional uint32 match_duration_s = 3;
  bool has_match_duration_s() const;
  private:
  bool _internal_has_match_duration_s() const;
  public:
  void clear_match_duration_s();
  uint32_t match_duration_s() const;
  void set_match_duration_s(uint32_t value);
  private:
  uint32_t _internal_match_duration_s() const;
  void _internal_set_match_duration_s(uint32_t value);
  public:

  // optional uint32 start_time = 4;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  uint32_t start_time() const;
  void set_start_time(uint32_t value);
  private:
  uint32_t _internal_start_time() const;
  void _internal_set_start_time(uint32_t value);
  public:

  // optional uint32 match_result = 5;
  bool has_match_result() const;
  private:
  bool _internal_has_match_result() const;
  public:
  void clear_match_result();
  uint32_t match_result() const;
  void set_match_result(uint32_t value);
  private:
  uint32_t _internal_match_result() const;
  void _internal_set_match_result(uint32_t value);
  public:

  // optional .ECitadelLobbyTeam player_team = 6 [default = k_ECitadelLobbyTeam_Team0];
  bool has_player_team() const;
  private:
  bool _internal_has_player_team() const;
  public:
  void clear_player_team();
  ::ECitadelLobbyTeam player_team() const;
  void set_player_team(::ECitadelLobbyTeam value);
  private:
  ::ECitadelLobbyTeam _internal_player_team() const;
  void _internal_set_player_team(::ECitadelLobbyTeam value);
  public:

  // optional uint32 player_kills = 7;
  bool has_player_kills() const;
  private:
  bool _internal_has_player_kills() const;
  public:
  void clear_player_kills();
  uint32_t player_kills() const;
  void set_player_kills(uint32_t value);
  private:
  uint32_t _internal_player_kills() const;
  void _internal_set_player_kills(uint32_t value);
  public:

  // optional uint32 player_deaths = 8;
  bool has_player_deaths() const;
  private:
  bool _internal_has_player_deaths() const;
  public:
  void clear_player_deaths();
  uint32_t player_deaths() const;
  void set_player_deaths(uint32_t value);
  private:
  uint32_t _internal_player_deaths() const;
  void _internal_set_player_deaths(uint32_t value);
  public:

  // optional uint32 player_assists = 9;
  bool has_player_assists() const;
  private:
  bool _internal_has_player_assists() const;
  public:
  void clear_player_assists();
  uint32_t player_assists() const;
  void set_player_assists(uint32_t value);
  private:
  uint32_t _internal_player_assists() const;
  void _internal_set_player_assists(uint32_t value);
  public:

  // optional uint32 last_hits = 11;
  bool has_last_hits() const;
  private:
  bool _internal_has_last_hits() const;
  public:
  void clear_last_hits();
  uint32_t last_hits() const;
  void set_last_hits(uint32_t value);
  private:
  uint32_t _internal_last_hits() const;
  void _internal_set_last_hits(uint32_t value);
  public:

  // optional uint32 denies = 12;
  bool has_denies() const;
  private:
  bool _internal_has_denies() const;
  public:
  void clear_denies();
  uint32_t denies() const;
  void set_denies(uint32_t value);
  private:
  uint32_t _internal_denies() const;
  void _internal_set_denies(uint32_t value);
  public:

  // optional uint32 hero_level = 13;
  bool has_hero_level() const;
  private:
  bool _internal_has_hero_level() const;
  public:
  void clear_hero_level();
  uint32_t hero_level() const;
  void set_hero_level(uint32_t value);
  private:
  uint32_t _internal_hero_level() const;
  void _internal_set_hero_level(uint32_t value);
  public:

  // optional uint32 net_worth = 14;
  bool has_net_worth() const;
  private:
  bool _internal_has_net_worth() const;
  public:
  void clear_net_worth();
  uint32_t net_worth() const;
  void set_net_worth(uint32_t value);
  private:
  uint32_t _internal_net_worth() const;
  void _internal_set_net_worth(uint32_t value);
  public:

  // optional uint64 objectives_mask_team0 = 15;
  bool has_objectives_mask_team0() const;
  private:
  bool _internal_has_objectives_mask_team0() const;
  public:
  void clear_objectives_mask_team0();
  uint64_t objectives_mask_team0() const;
  void set_objectives_mask_team0(uint64_t value);
  private:
  uint64_t _internal_objectives_mask_team0() const;
  void _internal_set_objectives_mask_team0(uint64_t value);
  public:

  // optional uint64 objectives_mask_team1 = 16;
  bool has_objectives_mask_team1() const;
  private:
  bool _internal_has_objectives_mask_team1() const;
  public:
  void clear_objectives_mask_team1();
  uint64_t objectives_mask_team1() const;
  void set_objectives_mask_team1(uint64_t value);
  private:
  uint64_t _internal_objectives_mask_team1() const;
  void _internal_set_objectives_mask_team1(uint64_t value);
  public:

  // optional uint32 abandoned_time_s = 18;
  bool has_abandoned_time_s() const;
  private:
  bool _internal_has_abandoned_time_s() const;
  public:
  void clear_abandoned_time_s();
  uint32_t abandoned_time_s() const;
  void set_abandoned_time_s(uint32_t value);
  private:
  uint32_t _internal_abandoned_time_s() const;
  void _internal_set_abandoned_time_s(uint32_t value);
  public:

  // optional .ECitadelMatchMode match_mode = 19 [default = k_ECitadelMatchMode_Invalid];
  bool has_match_mode() const;
  private:
  bool _internal_has_match_mode() const;
  public:
  void clear_match_mode();
  ::ECitadelMatchMode match_mode() const;
  void set_match_mode(::ECitadelMatchMode value);
  private:
  ::ECitadelMatchMode _internal_match_mode() const;
  void _internal_set_match_mode(::ECitadelMatchMode value);
  public:

  // optional bool team_abandoned = 17;
  bool has_team_abandoned() const;
  private:
  bool _internal_has_team_abandoned() const;
  public:
  void clear_team_abandoned();
  bool team_abandoned() const;
  void set_team_abandoned(bool value);
  private:
  bool _internal_team_abandoned() const;
  void _internal_set_team_abandoned(bool value);
  public:

  // optional bool not_scored = 21;
  bool has_not_scored() const;
  private:
  bool _internal_has_not_scored() const;
  public:
  void clear_not_scored();
  bool not_scored() const;
  void set_not_scored(bool value);
  private:
  bool _internal_not_scored() const;
  void _internal_set_not_scored(bool value);
  public:

  // optional .ECitadelGameMode game_mode = 20 [default = k_ECitadelGameMode_Invalid];
  bool has_game_mode() const;
  private:
  bool _internal_has_game_mode() const;
  public:
  void clear_game_mode();
  ::ECitadelGameMode game_mode() const;
  void set_game_mode(::ECitadelGameMode value);
  private:
  ::ECitadelGameMode _internal_game_mode() const;
  void _internal_set_game_mode(::ECitadelGameMode value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetMatchHistoryResponse.Match)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t match_id_;
    uint32_t hero_id_;
    uint32_t match_duration_s_;
    uint32_t start_time_;
    uint32_t match_result_;
    int player_team_;
    uint32_t player_kills_;
    uint32_t player_deaths_;
    uint32_t player_assists_;
    uint32_t last_hits_;
    uint32_t denies_;
    uint32_t hero_level_;
    uint32_t net_worth_;
    uint64_t objectives_mask_team0_;
    uint64_t objectives_mask_team1_;
    uint32_t abandoned_time_s_;
    int match_mode_;
    bool team_abandoned_;
    bool not_scored_;
    int game_mode_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetMatchHistoryResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetMatchHistoryResponse) */ {
 public:
  inline CMsgClientToGCGetMatchHistoryResponse() : CMsgClientToGCGetMatchHistoryResponse(nullptr) {}
  ~CMsgClientToGCGetMatchHistoryResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchHistoryResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetMatchHistoryResponse(const CMsgClientToGCGetMatchHistoryResponse& from);
  CMsgClientToGCGetMatchHistoryResponse(CMsgClientToGCGetMatchHistoryResponse&& from) noexcept
    : CMsgClientToGCGetMatchHistoryResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetMatchHistoryResponse& operator=(const CMsgClientToGCGetMatchHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetMatchHistoryResponse& operator=(CMsgClientToGCGetMatchHistoryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetMatchHistoryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetMatchHistoryResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetMatchHistoryResponse*>(
               &_CMsgClientToGCGetMatchHistoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(CMsgClientToGCGetMatchHistoryResponse& a, CMsgClientToGCGetMatchHistoryResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetMatchHistoryResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetMatchHistoryResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetMatchHistoryResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetMatchHistoryResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetMatchHistoryResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetMatchHistoryResponse& from) {
    CMsgClientToGCGetMatchHistoryResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetMatchHistoryResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetMatchHistoryResponse";
  }
  protected:
  explicit CMsgClientToGCGetMatchHistoryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetMatchHistoryResponse_Match Match;

  typedef CMsgClientToGCGetMatchHistoryResponse_EResult EResult;
  static constexpr EResult k_eResult_InternalError =
    CMsgClientToGCGetMatchHistoryResponse_EResult_k_eResult_InternalError;
  static constexpr EResult k_eResult_Success =
    CMsgClientToGCGetMatchHistoryResponse_EResult_k_eResult_Success;
  static constexpr EResult k_eResult_InvalidPermission =
    CMsgClientToGCGetMatchHistoryResponse_EResult_k_eResult_InvalidPermission;
  static constexpr EResult k_eResult_TemporarilyDisabled =
    CMsgClientToGCGetMatchHistoryResponse_EResult_k_eResult_TemporarilyDisabled;
  static constexpr EResult k_eResult_TooBusy =
    CMsgClientToGCGetMatchHistoryResponse_EResult_k_eResult_TooBusy;
  static constexpr EResult k_eResult_RateLimited =
    CMsgClientToGCGetMatchHistoryResponse_EResult_k_eResult_RateLimited;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCGetMatchHistoryResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgClientToGCGetMatchHistoryResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgClientToGCGetMatchHistoryResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgClientToGCGetMatchHistoryResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCGetMatchHistoryResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgClientToGCGetMatchHistoryResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgClientToGCGetMatchHistoryResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kMatchesFieldNumber = 3,
    kContinueCursorFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated .CMsgClientToGCGetMatchHistoryResponse.Match matches = 3;
  int matches_size() const;
  private:
  int _internal_matches_size() const;
  public:
  void clear_matches();
  ::CMsgClientToGCGetMatchHistoryResponse_Match* mutable_matches(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetMatchHistoryResponse_Match >*
      mutable_matches();
  private:
  const ::CMsgClientToGCGetMatchHistoryResponse_Match& _internal_matches(int index) const;
  ::CMsgClientToGCGetMatchHistoryResponse_Match* _internal_add_matches();
  public:
  const ::CMsgClientToGCGetMatchHistoryResponse_Match& matches(int index) const;
  ::CMsgClientToGCGetMatchHistoryResponse_Match* add_matches();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetMatchHistoryResponse_Match >&
      matches() const;

  // optional uint64 continue_cursor = 2;
  bool has_continue_cursor() const;
  private:
  bool _internal_has_continue_cursor() const;
  public:
  void clear_continue_cursor();
  uint64_t continue_cursor() const;
  void set_continue_cursor(uint64_t value);
  private:
  uint64_t _internal_continue_cursor() const;
  void _internal_set_continue_cursor(uint64_t value);
  public:

  // optional .CMsgClientToGCGetMatchHistoryResponse.EResult result = 1 [default = k_eResult_InternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCGetMatchHistoryResponse_EResult result() const;
  void set_result(::CMsgClientToGCGetMatchHistoryResponse_EResult value);
  private:
  ::CMsgClientToGCGetMatchHistoryResponse_EResult _internal_result() const;
  void _internal_set_result(::CMsgClientToGCGetMatchHistoryResponse_EResult value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetMatchHistoryResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetMatchHistoryResponse_Match > matches_;
    uint64_t continue_cursor_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSpectateUser final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSpectateUser) */ {
 public:
  inline CMsgClientToGCSpectateUser() : CMsgClientToGCSpectateUser(nullptr) {}
  ~CMsgClientToGCSpectateUser() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSpectateUser(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSpectateUser(const CMsgClientToGCSpectateUser& from);
  CMsgClientToGCSpectateUser(CMsgClientToGCSpectateUser&& from) noexcept
    : CMsgClientToGCSpectateUser() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSpectateUser& operator=(const CMsgClientToGCSpectateUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSpectateUser& operator=(CMsgClientToGCSpectateUser&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSpectateUser& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSpectateUser* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSpectateUser*>(
               &_CMsgClientToGCSpectateUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(CMsgClientToGCSpectateUser& a, CMsgClientToGCSpectateUser& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSpectateUser* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSpectateUser* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSpectateUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSpectateUser>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSpectateUser& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSpectateUser& from) {
    CMsgClientToGCSpectateUser::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSpectateUser* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSpectateUser";
  }
  protected:
  explicit CMsgClientToGCSpectateUser(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpectateAccountIdFieldNumber = 1,
    kClientVersionFieldNumber = 3,
    kClientPlatformFieldNumber = 4,
  };
  // optional uint32 spectate_account_id = 1;
  bool has_spectate_account_id() const;
  private:
  bool _internal_has_spectate_account_id() const;
  public:
  void clear_spectate_account_id();
  uint32_t spectate_account_id() const;
  void set_spectate_account_id(uint32_t value);
  private:
  uint32_t _internal_spectate_account_id() const;
  void _internal_set_spectate_account_id(uint32_t value);
  public:

  // optional uint32 client_version = 3;
  bool has_client_version() const;
  private:
  bool _internal_has_client_version() const;
  public:
  void clear_client_version();
  uint32_t client_version() const;
  void set_client_version(uint32_t value);
  private:
  uint32_t _internal_client_version() const;
  void _internal_set_client_version(uint32_t value);
  public:

  // optional .EGCPlatform client_platform = 4 [default = k_eGCPlatform_None];
  bool has_client_platform() const;
  private:
  bool _internal_has_client_platform() const;
  public:
  void clear_client_platform();
  ::EGCPlatform client_platform() const;
  void set_client_platform(::EGCPlatform value);
  private:
  ::EGCPlatform _internal_client_platform() const;
  void _internal_set_client_platform(::EGCPlatform value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSpectateUser)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t spectate_account_id_;
    uint32_t client_version_;
    int client_platform_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSpectateUserResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSpectateUserResponse) */ {
 public:
  inline CMsgClientToGCSpectateUserResponse() : CMsgClientToGCSpectateUserResponse(nullptr) {}
  ~CMsgClientToGCSpectateUserResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSpectateUserResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSpectateUserResponse(const CMsgClientToGCSpectateUserResponse& from);
  CMsgClientToGCSpectateUserResponse(CMsgClientToGCSpectateUserResponse&& from) noexcept
    : CMsgClientToGCSpectateUserResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSpectateUserResponse& operator=(const CMsgClientToGCSpectateUserResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSpectateUserResponse& operator=(CMsgClientToGCSpectateUserResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSpectateUserResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSpectateUserResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSpectateUserResponse*>(
               &_CMsgClientToGCSpectateUserResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(CMsgClientToGCSpectateUserResponse& a, CMsgClientToGCSpectateUserResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSpectateUserResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSpectateUserResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSpectateUserResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSpectateUserResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSpectateUserResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSpectateUserResponse& from) {
    CMsgClientToGCSpectateUserResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSpectateUserResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSpectateUserResponse";
  }
  protected:
  explicit CMsgClientToGCSpectateUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSpectateUserResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCSpectateUserResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCSpectateUserResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCSpectateUserResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCSpectateUserResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eRateLimited =
    CMsgClientToGCSpectateUserResponse_EResponse_k_eRateLimited;
  static constexpr EResponse k_eNotInGame =
    CMsgClientToGCSpectateUserResponse_EResponse_k_eNotInGame;
  static constexpr EResponse k_eDisabledForGame =
    CMsgClientToGCSpectateUserResponse_EResponse_k_eDisabledForGame;
  static constexpr EResponse k_eServerFull =
    CMsgClientToGCSpectateUserResponse_EResponse_k_eServerFull;
  static constexpr EResponse k_eNotFriends =
    CMsgClientToGCSpectateUserResponse_EResponse_k_eNotFriends;
  static constexpr EResponse k_eRegionInfoNotProvided =
    CMsgClientToGCSpectateUserResponse_EResponse_k_eRegionInfoNotProvided;
  static constexpr EResponse k_eDurationControlBlocked =
    CMsgClientToGCSpectateUserResponse_EResponse_k_eDurationControlBlocked;
  static constexpr EResponse k_eInvalidClientVersion =
    CMsgClientToGCSpectateUserResponse_EResponse_k_eInvalidClientVersion;
  static constexpr EResponse k_eInvalidRegion =
    CMsgClientToGCSpectateUserResponse_EResponse_k_eInvalidRegion;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCSpectateUserResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCSpectateUserResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCSpectateUserResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCSpectateUserResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCSpectateUserResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCSpectateUserResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCSpectateUserResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kSdrKeyFieldNumber = 4,
    kClientBroadcastUrlFieldNumber = 8,
    kServerSteamIdFieldNumber = 3,
    kResultFieldNumber = 1,
    kUdpConnectIpFieldNumber = 5,
    kLobbyIdFieldNumber = 7,
    kUdpConnectPortFieldNumber = 6,
  };
  // optional bytes sdr_key = 4;
  bool has_sdr_key() const;
  private:
  bool _internal_has_sdr_key() const;
  public:
  void clear_sdr_key();
  const std::string& sdr_key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_sdr_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_sdr_key();
  PROTOBUF_NODISCARD std::string* release_sdr_key();
  void set_allocated_sdr_key(std::string* sdr_key);
  private:
  const std::string& _internal_sdr_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sdr_key(const std::string& value);
  std::string* _internal_mutable_sdr_key();
  public:

  // optional string client_broadcast_url = 8;
  bool has_client_broadcast_url() const;
  private:
  bool _internal_has_client_broadcast_url() const;
  public:
  void clear_client_broadcast_url();
  const std::string& client_broadcast_url() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_client_broadcast_url(ArgT0&& arg0, ArgT... args);
  std::string* mutable_client_broadcast_url();
  PROTOBUF_NODISCARD std::string* release_client_broadcast_url();
  void set_allocated_client_broadcast_url(std::string* client_broadcast_url);
  private:
  const std::string& _internal_client_broadcast_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_broadcast_url(const std::string& value);
  std::string* _internal_mutable_client_broadcast_url();
  public:

  // optional fixed64 server_steam_id = 3;
  bool has_server_steam_id() const;
  private:
  bool _internal_has_server_steam_id() const;
  public:
  void clear_server_steam_id();
  uint64_t server_steam_id() const;
  void set_server_steam_id(uint64_t value);
  private:
  uint64_t _internal_server_steam_id() const;
  void _internal_set_server_steam_id(uint64_t value);
  public:

  // optional .CMsgClientToGCSpectateUserResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCSpectateUserResponse_EResponse result() const;
  void set_result(::CMsgClientToGCSpectateUserResponse_EResponse value);
  private:
  ::CMsgClientToGCSpectateUserResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCSpectateUserResponse_EResponse value);
  public:

  // optional uint32 udp_connect_ip = 5;
  bool has_udp_connect_ip() const;
  private:
  bool _internal_has_udp_connect_ip() const;
  public:
  void clear_udp_connect_ip();
  uint32_t udp_connect_ip() const;
  void set_udp_connect_ip(uint32_t value);
  private:
  uint32_t _internal_udp_connect_ip() const;
  void _internal_set_udp_connect_ip(uint32_t value);
  public:

  // optional fixed64 lobby_id = 7;
  bool has_lobby_id() const;
  private:
  bool _internal_has_lobby_id() const;
  public:
  void clear_lobby_id();
  uint64_t lobby_id() const;
  void set_lobby_id(uint64_t value);
  private:
  uint64_t _internal_lobby_id() const;
  void _internal_set_lobby_id(uint64_t value);
  public:

  // optional uint32 udp_connect_port = 6;
  bool has_udp_connect_port() const;
  private:
  bool _internal_has_udp_connect_port() const;
  public:
  void clear_udp_connect_port();
  uint32_t udp_connect_port() const;
  void set_udp_connect_port(uint32_t value);
  private:
  uint32_t _internal_udp_connect_port() const;
  void _internal_set_udp_connect_port(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSpectateUserResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sdr_key_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr client_broadcast_url_;
    uint64_t server_steam_id_;
    int result_;
    uint32_t udp_connect_ip_;
    uint64_t lobby_id_;
    uint32_t udp_connect_port_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSpectateLobby final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSpectateLobby) */ {
 public:
  inline CMsgClientToGCSpectateLobby() : CMsgClientToGCSpectateLobby(nullptr) {}
  ~CMsgClientToGCSpectateLobby() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSpectateLobby(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSpectateLobby(const CMsgClientToGCSpectateLobby& from);
  CMsgClientToGCSpectateLobby(CMsgClientToGCSpectateLobby&& from) noexcept
    : CMsgClientToGCSpectateLobby() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSpectateLobby& operator=(const CMsgClientToGCSpectateLobby& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSpectateLobby& operator=(CMsgClientToGCSpectateLobby&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSpectateLobby& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSpectateLobby* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSpectateLobby*>(
               &_CMsgClientToGCSpectateLobby_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(CMsgClientToGCSpectateLobby& a, CMsgClientToGCSpectateLobby& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSpectateLobby* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSpectateLobby* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSpectateLobby* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSpectateLobby>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSpectateLobby& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSpectateLobby& from) {
    CMsgClientToGCSpectateLobby::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSpectateLobby* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSpectateLobby";
  }
  protected:
  explicit CMsgClientToGCSpectateLobby(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLobbyIdFieldNumber = 1,
    kClientVersionFieldNumber = 3,
    kClientPlatformFieldNumber = 4,
    kMatchIdFieldNumber = 5,
  };
  // optional uint64 lobby_id = 1;
  bool has_lobby_id() const;
  private:
  bool _internal_has_lobby_id() const;
  public:
  void clear_lobby_id();
  uint64_t lobby_id() const;
  void set_lobby_id(uint64_t value);
  private:
  uint64_t _internal_lobby_id() const;
  void _internal_set_lobby_id(uint64_t value);
  public:

  // optional uint32 client_version = 3;
  bool has_client_version() const;
  private:
  bool _internal_has_client_version() const;
  public:
  void clear_client_version();
  uint32_t client_version() const;
  void set_client_version(uint32_t value);
  private:
  uint32_t _internal_client_version() const;
  void _internal_set_client_version(uint32_t value);
  public:

  // optional .EGCPlatform client_platform = 4 [default = k_eGCPlatform_None];
  bool has_client_platform() const;
  private:
  bool _internal_has_client_platform() const;
  public:
  void clear_client_platform();
  ::EGCPlatform client_platform() const;
  void set_client_platform(::EGCPlatform value);
  private:
  ::EGCPlatform _internal_client_platform() const;
  void _internal_set_client_platform(::EGCPlatform value);
  public:

  // optional uint64 match_id = 5;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSpectateLobby)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t lobby_id_;
    uint32_t client_version_;
    int client_platform_;
    uint64_t match_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSpectateLobbyResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSpectateLobbyResponse) */ {
 public:
  inline CMsgClientToGCSpectateLobbyResponse() : CMsgClientToGCSpectateLobbyResponse(nullptr) {}
  ~CMsgClientToGCSpectateLobbyResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSpectateLobbyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSpectateLobbyResponse(const CMsgClientToGCSpectateLobbyResponse& from);
  CMsgClientToGCSpectateLobbyResponse(CMsgClientToGCSpectateLobbyResponse&& from) noexcept
    : CMsgClientToGCSpectateLobbyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSpectateLobbyResponse& operator=(const CMsgClientToGCSpectateLobbyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSpectateLobbyResponse& operator=(CMsgClientToGCSpectateLobbyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSpectateLobbyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSpectateLobbyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSpectateLobbyResponse*>(
               &_CMsgClientToGCSpectateLobbyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(CMsgClientToGCSpectateLobbyResponse& a, CMsgClientToGCSpectateLobbyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSpectateLobbyResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSpectateLobbyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSpectateLobbyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSpectateLobbyResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSpectateLobbyResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSpectateLobbyResponse& from) {
    CMsgClientToGCSpectateLobbyResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSpectateLobbyResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSpectateLobbyResponse";
  }
  protected:
  explicit CMsgClientToGCSpectateLobbyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCSpectateUserResponse result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::CMsgClientToGCSpectateUserResponse& result() const;
  PROTOBUF_NODISCARD ::CMsgClientToGCSpectateUserResponse* release_result();
  ::CMsgClientToGCSpectateUserResponse* mutable_result();
  void set_allocated_result(::CMsgClientToGCSpectateUserResponse* result);
  private:
  const ::CMsgClientToGCSpectateUserResponse& _internal_result() const;
  ::CMsgClientToGCSpectateUserResponse* _internal_mutable_result();
  public:
  void unsafe_arena_set_allocated_result(
      ::CMsgClientToGCSpectateUserResponse* result);
  ::CMsgClientToGCSpectateUserResponse* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSpectateLobbyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgClientToGCSpectateUserResponse* result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetProfileCard final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetProfileCard) */ {
 public:
  inline CMsgClientToGCGetProfileCard() : CMsgClientToGCGetProfileCard(nullptr) {}
  ~CMsgClientToGCGetProfileCard() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetProfileCard(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetProfileCard(const CMsgClientToGCGetProfileCard& from);
  CMsgClientToGCGetProfileCard(CMsgClientToGCGetProfileCard&& from) noexcept
    : CMsgClientToGCGetProfileCard() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetProfileCard& operator=(const CMsgClientToGCGetProfileCard& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetProfileCard& operator=(CMsgClientToGCGetProfileCard&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetProfileCard& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetProfileCard* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetProfileCard*>(
               &_CMsgClientToGCGetProfileCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(CMsgClientToGCGetProfileCard& a, CMsgClientToGCGetProfileCard& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetProfileCard* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetProfileCard* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetProfileCard* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetProfileCard>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetProfileCard& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetProfileCard& from) {
    CMsgClientToGCGetProfileCard::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetProfileCard* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetProfileCard";
  }
  protected:
  explicit CMsgClientToGCGetProfileCard(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kDevAccessHintFieldNumber = 2,
    kFriendAccessHintFieldNumber = 3,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional bool dev_access_hint = 2;
  bool has_dev_access_hint() const;
  private:
  bool _internal_has_dev_access_hint() const;
  public:
  void clear_dev_access_hint();
  bool dev_access_hint() const;
  void set_dev_access_hint(bool value);
  private:
  bool _internal_dev_access_hint() const;
  void _internal_set_dev_access_hint(bool value);
  public:

  // optional bool friend_access_hint = 3;
  bool has_friend_access_hint() const;
  private:
  bool _internal_has_friend_access_hint() const;
  public:
  void clear_friend_access_hint();
  bool friend_access_hint() const;
  void set_friend_access_hint(bool value);
  private:
  bool _internal_friend_access_hint() const;
  void _internal_set_friend_access_hint(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetProfileCard)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    bool dev_access_hint_;
    bool friend_access_hint_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgCitadelProfileCard_Slot_Stat final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCitadelProfileCard.Slot.Stat) */ {
 public:
  inline CMsgCitadelProfileCard_Slot_Stat() : CMsgCitadelProfileCard_Slot_Stat(nullptr) {}
  ~CMsgCitadelProfileCard_Slot_Stat() override;
  explicit PROTOBUF_CONSTEXPR CMsgCitadelProfileCard_Slot_Stat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCitadelProfileCard_Slot_Stat(const CMsgCitadelProfileCard_Slot_Stat& from);
  CMsgCitadelProfileCard_Slot_Stat(CMsgCitadelProfileCard_Slot_Stat&& from) noexcept
    : CMsgCitadelProfileCard_Slot_Stat() {
    *this = ::std::move(from);
  }

  inline CMsgCitadelProfileCard_Slot_Stat& operator=(const CMsgCitadelProfileCard_Slot_Stat& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCitadelProfileCard_Slot_Stat& operator=(CMsgCitadelProfileCard_Slot_Stat&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgCitadelProfileCard_Slot_Stat& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCitadelProfileCard_Slot_Stat* internal_default_instance() {
    return reinterpret_cast<const CMsgCitadelProfileCard_Slot_Stat*>(
               &_CMsgCitadelProfileCard_Slot_Stat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(CMsgCitadelProfileCard_Slot_Stat& a, CMsgCitadelProfileCard_Slot_Stat& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCitadelProfileCard_Slot_Stat* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCitadelProfileCard_Slot_Stat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgCitadelProfileCard_Slot_Stat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgCitadelProfileCard_Slot_Stat>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgCitadelProfileCard_Slot_Stat& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgCitadelProfileCard_Slot_Stat& from) {
    CMsgCitadelProfileCard_Slot_Stat::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCitadelProfileCard_Slot_Stat* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCitadelProfileCard.Slot.Stat";
  }
  protected:
  explicit CMsgCitadelProfileCard_Slot_Stat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatIdFieldNumber = 1,
    kStatScoreFieldNumber = 2,
  };
  // optional .CMsgCitadelProfileCard.EStatID stat_id = 1 [default = k_eStat_Invalid];
  bool has_stat_id() const;
  private:
  bool _internal_has_stat_id() const;
  public:
  void clear_stat_id();
  ::CMsgCitadelProfileCard_EStatID stat_id() const;
  void set_stat_id(::CMsgCitadelProfileCard_EStatID value);
  private:
  ::CMsgCitadelProfileCard_EStatID _internal_stat_id() const;
  void _internal_set_stat_id(::CMsgCitadelProfileCard_EStatID value);
  public:

  // optional uint32 stat_score = 2;
  bool has_stat_score() const;
  private:
  bool _internal_has_stat_score() const;
  public:
  void clear_stat_score();
  uint32_t stat_score() const;
  void set_stat_score(uint32_t value);
  private:
  uint32_t _internal_stat_score() const;
  void _internal_set_stat_score(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCitadelProfileCard.Slot.Stat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int stat_id_;
    uint32_t stat_score_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgCitadelProfileCard_Slot_Hero final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCitadelProfileCard.Slot.Hero) */ {
 public:
  inline CMsgCitadelProfileCard_Slot_Hero() : CMsgCitadelProfileCard_Slot_Hero(nullptr) {}
  ~CMsgCitadelProfileCard_Slot_Hero() override;
  explicit PROTOBUF_CONSTEXPR CMsgCitadelProfileCard_Slot_Hero(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCitadelProfileCard_Slot_Hero(const CMsgCitadelProfileCard_Slot_Hero& from);
  CMsgCitadelProfileCard_Slot_Hero(CMsgCitadelProfileCard_Slot_Hero&& from) noexcept
    : CMsgCitadelProfileCard_Slot_Hero() {
    *this = ::std::move(from);
  }

  inline CMsgCitadelProfileCard_Slot_Hero& operator=(const CMsgCitadelProfileCard_Slot_Hero& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCitadelProfileCard_Slot_Hero& operator=(CMsgCitadelProfileCard_Slot_Hero&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgCitadelProfileCard_Slot_Hero& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCitadelProfileCard_Slot_Hero* internal_default_instance() {
    return reinterpret_cast<const CMsgCitadelProfileCard_Slot_Hero*>(
               &_CMsgCitadelProfileCard_Slot_Hero_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(CMsgCitadelProfileCard_Slot_Hero& a, CMsgCitadelProfileCard_Slot_Hero& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCitadelProfileCard_Slot_Hero* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCitadelProfileCard_Slot_Hero* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgCitadelProfileCard_Slot_Hero* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgCitadelProfileCard_Slot_Hero>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgCitadelProfileCard_Slot_Hero& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgCitadelProfileCard_Slot_Hero& from) {
    CMsgCitadelProfileCard_Slot_Hero::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCitadelProfileCard_Slot_Hero* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCitadelProfileCard.Slot.Hero";
  }
  protected:
  explicit CMsgCitadelProfileCard_Slot_Hero(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroIdFieldNumber = 1,
    kHeroWinsFieldNumber = 2,
    kHeroKillsFieldNumber = 3,
  };
  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // optional uint32 hero_wins = 2;
  bool has_hero_wins() const;
  private:
  bool _internal_has_hero_wins() const;
  public:
  void clear_hero_wins();
  uint32_t hero_wins() const;
  void set_hero_wins(uint32_t value);
  private:
  uint32_t _internal_hero_wins() const;
  void _internal_set_hero_wins(uint32_t value);
  public:

  // optional uint32 hero_kills = 3;
  bool has_hero_kills() const;
  private:
  bool _internal_has_hero_kills() const;
  public:
  void clear_hero_kills();
  uint32_t hero_kills() const;
  void set_hero_kills(uint32_t value);
  private:
  uint32_t _internal_hero_kills() const;
  void _internal_set_hero_kills(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCitadelProfileCard.Slot.Hero)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t hero_id_;
    uint32_t hero_wins_;
    uint32_t hero_kills_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgCitadelProfileCard_Slot final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCitadelProfileCard.Slot) */ {
 public:
  inline CMsgCitadelProfileCard_Slot() : CMsgCitadelProfileCard_Slot(nullptr) {}
  ~CMsgCitadelProfileCard_Slot() override;
  explicit PROTOBUF_CONSTEXPR CMsgCitadelProfileCard_Slot(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCitadelProfileCard_Slot(const CMsgCitadelProfileCard_Slot& from);
  CMsgCitadelProfileCard_Slot(CMsgCitadelProfileCard_Slot&& from) noexcept
    : CMsgCitadelProfileCard_Slot() {
    *this = ::std::move(from);
  }

  inline CMsgCitadelProfileCard_Slot& operator=(const CMsgCitadelProfileCard_Slot& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCitadelProfileCard_Slot& operator=(CMsgCitadelProfileCard_Slot&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgCitadelProfileCard_Slot& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCitadelProfileCard_Slot* internal_default_instance() {
    return reinterpret_cast<const CMsgCitadelProfileCard_Slot*>(
               &_CMsgCitadelProfileCard_Slot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(CMsgCitadelProfileCard_Slot& a, CMsgCitadelProfileCard_Slot& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCitadelProfileCard_Slot* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCitadelProfileCard_Slot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgCitadelProfileCard_Slot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgCitadelProfileCard_Slot>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgCitadelProfileCard_Slot& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgCitadelProfileCard_Slot& from) {
    CMsgCitadelProfileCard_Slot::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCitadelProfileCard_Slot* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCitadelProfileCard.Slot";
  }
  protected:
  explicit CMsgCitadelProfileCard_Slot(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgCitadelProfileCard_Slot_Stat Stat;
  typedef CMsgCitadelProfileCard_Slot_Hero Hero;

  // accessors -------------------------------------------------------

  enum : int {
    kStatFieldNumber = 2,
    kHeroFieldNumber = 3,
    kSlotIdFieldNumber = 1,
  };
  // optional .CMsgCitadelProfileCard.Slot.Stat stat = 2;
  bool has_stat() const;
  private:
  bool _internal_has_stat() const;
  public:
  void clear_stat();
  const ::CMsgCitadelProfileCard_Slot_Stat& stat() const;
  PROTOBUF_NODISCARD ::CMsgCitadelProfileCard_Slot_Stat* release_stat();
  ::CMsgCitadelProfileCard_Slot_Stat* mutable_stat();
  void set_allocated_stat(::CMsgCitadelProfileCard_Slot_Stat* stat);
  private:
  const ::CMsgCitadelProfileCard_Slot_Stat& _internal_stat() const;
  ::CMsgCitadelProfileCard_Slot_Stat* _internal_mutable_stat();
  public:
  void unsafe_arena_set_allocated_stat(
      ::CMsgCitadelProfileCard_Slot_Stat* stat);
  ::CMsgCitadelProfileCard_Slot_Stat* unsafe_arena_release_stat();

  // optional .CMsgCitadelProfileCard.Slot.Hero hero = 3;
  bool has_hero() const;
  private:
  bool _internal_has_hero() const;
  public:
  void clear_hero();
  const ::CMsgCitadelProfileCard_Slot_Hero& hero() const;
  PROTOBUF_NODISCARD ::CMsgCitadelProfileCard_Slot_Hero* release_hero();
  ::CMsgCitadelProfileCard_Slot_Hero* mutable_hero();
  void set_allocated_hero(::CMsgCitadelProfileCard_Slot_Hero* hero);
  private:
  const ::CMsgCitadelProfileCard_Slot_Hero& _internal_hero() const;
  ::CMsgCitadelProfileCard_Slot_Hero* _internal_mutable_hero();
  public:
  void unsafe_arena_set_allocated_hero(
      ::CMsgCitadelProfileCard_Slot_Hero* hero);
  ::CMsgCitadelProfileCard_Slot_Hero* unsafe_arena_release_hero();

  // optional uint32 slot_id = 1;
  bool has_slot_id() const;
  private:
  bool _internal_has_slot_id() const;
  public:
  void clear_slot_id();
  uint32_t slot_id() const;
  void set_slot_id(uint32_t value);
  private:
  uint32_t _internal_slot_id() const;
  void _internal_set_slot_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCitadelProfileCard.Slot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgCitadelProfileCard_Slot_Stat* stat_;
    ::CMsgCitadelProfileCard_Slot_Hero* hero_;
    uint32_t slot_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgCitadelProfileCard final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCitadelProfileCard) */ {
 public:
  inline CMsgCitadelProfileCard() : CMsgCitadelProfileCard(nullptr) {}
  ~CMsgCitadelProfileCard() override;
  explicit PROTOBUF_CONSTEXPR CMsgCitadelProfileCard(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCitadelProfileCard(const CMsgCitadelProfileCard& from);
  CMsgCitadelProfileCard(CMsgCitadelProfileCard&& from) noexcept
    : CMsgCitadelProfileCard() {
    *this = ::std::move(from);
  }

  inline CMsgCitadelProfileCard& operator=(const CMsgCitadelProfileCard& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCitadelProfileCard& operator=(CMsgCitadelProfileCard&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgCitadelProfileCard& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCitadelProfileCard* internal_default_instance() {
    return reinterpret_cast<const CMsgCitadelProfileCard*>(
               &_CMsgCitadelProfileCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(CMsgCitadelProfileCard& a, CMsgCitadelProfileCard& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCitadelProfileCard* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCitadelProfileCard* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgCitadelProfileCard* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgCitadelProfileCard>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgCitadelProfileCard& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgCitadelProfileCard& from) {
    CMsgCitadelProfileCard::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCitadelProfileCard* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCitadelProfileCard";
  }
  protected:
  explicit CMsgCitadelProfileCard(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgCitadelProfileCard_Slot Slot;

  typedef CMsgCitadelProfileCard_EStatID EStatID;
  static constexpr EStatID k_eStat_Invalid =
    CMsgCitadelProfileCard_EStatID_k_eStat_Invalid;
  static constexpr EStatID k_eStat_Wins =
    CMsgCitadelProfileCard_EStatID_k_eStat_Wins;
  static constexpr EStatID k_eStat_Kills =
    CMsgCitadelProfileCard_EStatID_k_eStat_Kills;
  static constexpr EStatID k_eStat_GamesPlayed =
    CMsgCitadelProfileCard_EStatID_k_eStat_GamesPlayed;
  static inline bool EStatID_IsValid(int value) {
    return CMsgCitadelProfileCard_EStatID_IsValid(value);
  }
  static constexpr EStatID EStatID_MIN =
    CMsgCitadelProfileCard_EStatID_EStatID_MIN;
  static constexpr EStatID EStatID_MAX =
    CMsgCitadelProfileCard_EStatID_EStatID_MAX;
  static constexpr int EStatID_ARRAYSIZE =
    CMsgCitadelProfileCard_EStatID_EStatID_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EStatID_descriptor() {
    return CMsgCitadelProfileCard_EStatID_descriptor();
  }
  template<typename T>
  static inline const std::string& EStatID_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EStatID>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EStatID_Name.");
    return CMsgCitadelProfileCard_EStatID_Name(enum_t_value);
  }
  static inline bool EStatID_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EStatID* value) {
    return CMsgCitadelProfileCard_EStatID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kSlotsFieldNumber = 2,
    kAccountIdFieldNumber = 1,
    kRankedBadgeLevelFieldNumber = 3,
  };
  // repeated .CMsgCitadelProfileCard.Slot slots = 2;
  int slots_size() const;
  private:
  int _internal_slots_size() const;
  public:
  void clear_slots();
  ::CMsgCitadelProfileCard_Slot* mutable_slots(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCitadelProfileCard_Slot >*
      mutable_slots();
  private:
  const ::CMsgCitadelProfileCard_Slot& _internal_slots(int index) const;
  ::CMsgCitadelProfileCard_Slot* _internal_add_slots();
  public:
  const ::CMsgCitadelProfileCard_Slot& slots(int index) const;
  ::CMsgCitadelProfileCard_Slot* add_slots();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCitadelProfileCard_Slot >&
      slots() const;

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 ranked_badge_level = 3;
  bool has_ranked_badge_level() const;
  private:
  bool _internal_has_ranked_badge_level() const;
  public:
  void clear_ranked_badge_level();
  uint32_t ranked_badge_level() const;
  void set_ranked_badge_level(uint32_t value);
  private:
  uint32_t _internal_ranked_badge_level() const;
  void _internal_set_ranked_badge_level(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCitadelProfileCard)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCitadelProfileCard_Slot > slots_;
    uint32_t account_id_;
    uint32_t ranked_badge_level_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUpdateRoster final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUpdateRoster) */ {
 public:
  inline CMsgClientToGCUpdateRoster() : CMsgClientToGCUpdateRoster(nullptr) {}
  ~CMsgClientToGCUpdateRoster() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUpdateRoster(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUpdateRoster(const CMsgClientToGCUpdateRoster& from);
  CMsgClientToGCUpdateRoster(CMsgClientToGCUpdateRoster&& from) noexcept
    : CMsgClientToGCUpdateRoster() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUpdateRoster& operator=(const CMsgClientToGCUpdateRoster& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUpdateRoster& operator=(CMsgClientToGCUpdateRoster&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUpdateRoster& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUpdateRoster* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUpdateRoster*>(
               &_CMsgClientToGCUpdateRoster_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(CMsgClientToGCUpdateRoster& a, CMsgClientToGCUpdateRoster& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUpdateRoster* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUpdateRoster* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUpdateRoster* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUpdateRoster>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUpdateRoster& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUpdateRoster& from) {
    CMsgClientToGCUpdateRoster::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUpdateRoster* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUpdateRoster";
  }
  protected:
  explicit CMsgClientToGCUpdateRoster(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroesFieldNumber = 1,
    kGameModeFieldNumber = 2,
    kMatchModeFieldNumber = 3,
  };
  // optional .CMsgHeroSelectionMatchInfo heroes = 1;
  bool has_heroes() const;
  private:
  bool _internal_has_heroes() const;
  public:
  void clear_heroes();
  const ::CMsgHeroSelectionMatchInfo& heroes() const;
  PROTOBUF_NODISCARD ::CMsgHeroSelectionMatchInfo* release_heroes();
  ::CMsgHeroSelectionMatchInfo* mutable_heroes();
  void set_allocated_heroes(::CMsgHeroSelectionMatchInfo* heroes);
  private:
  const ::CMsgHeroSelectionMatchInfo& _internal_heroes() const;
  ::CMsgHeroSelectionMatchInfo* _internal_mutable_heroes();
  public:
  void unsafe_arena_set_allocated_heroes(
      ::CMsgHeroSelectionMatchInfo* heroes);
  ::CMsgHeroSelectionMatchInfo* unsafe_arena_release_heroes();

  // optional .ECitadelGameMode game_mode = 2 [default = k_ECitadelGameMode_Invalid];
  bool has_game_mode() const;
  private:
  bool _internal_has_game_mode() const;
  public:
  void clear_game_mode();
  ::ECitadelGameMode game_mode() const;
  void set_game_mode(::ECitadelGameMode value);
  private:
  ::ECitadelGameMode _internal_game_mode() const;
  void _internal_set_game_mode(::ECitadelGameMode value);
  public:

  // optional .ECitadelMatchMode match_mode = 3 [default = k_ECitadelMatchMode_Invalid];
  bool has_match_mode() const;
  private:
  bool _internal_has_match_mode() const;
  public:
  void clear_match_mode();
  ::ECitadelMatchMode match_mode() const;
  void set_match_mode(::ECitadelMatchMode value);
  private:
  ::ECitadelMatchMode _internal_match_mode() const;
  void _internal_set_match_mode(::ECitadelMatchMode value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUpdateRoster)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgHeroSelectionMatchInfo* heroes_;
    int game_mode_;
    int match_mode_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUpdateRosterResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUpdateRosterResponse) */ {
 public:
  inline CMsgClientToGCUpdateRosterResponse() : CMsgClientToGCUpdateRosterResponse(nullptr) {}
  ~CMsgClientToGCUpdateRosterResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUpdateRosterResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUpdateRosterResponse(const CMsgClientToGCUpdateRosterResponse& from);
  CMsgClientToGCUpdateRosterResponse(CMsgClientToGCUpdateRosterResponse&& from) noexcept
    : CMsgClientToGCUpdateRosterResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUpdateRosterResponse& operator=(const CMsgClientToGCUpdateRosterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUpdateRosterResponse& operator=(CMsgClientToGCUpdateRosterResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUpdateRosterResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUpdateRosterResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUpdateRosterResponse*>(
               &_CMsgClientToGCUpdateRosterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(CMsgClientToGCUpdateRosterResponse& a, CMsgClientToGCUpdateRosterResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUpdateRosterResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUpdateRosterResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUpdateRosterResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUpdateRosterResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUpdateRosterResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUpdateRosterResponse& from) {
    CMsgClientToGCUpdateRosterResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUpdateRosterResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUpdateRosterResponse";
  }
  protected:
  explicit CMsgClientToGCUpdateRosterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCUpdateRosterResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCUpdateRosterResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCUpdateRosterResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCUpdateRosterResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCUpdateRosterResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eRateLimited =
    CMsgClientToGCUpdateRosterResponse_EResponse_k_eRateLimited;
  static constexpr EResponse k_eMMBusy =
    CMsgClientToGCUpdateRosterResponse_EResponse_k_eMMBusy;
  static constexpr EResponse k_eInvalidHeroSelection =
    CMsgClientToGCUpdateRosterResponse_EResponse_k_eInvalidHeroSelection;
  static constexpr EResponse k_eHeroesNotUnlocked =
    CMsgClientToGCUpdateRosterResponse_EResponse_k_eHeroesNotUnlocked;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCUpdateRosterResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCUpdateRosterResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCUpdateRosterResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCUpdateRosterResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCUpdateRosterResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCUpdateRosterResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCUpdateRosterResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCUpdateRosterResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCUpdateRosterResponse_EResponse result() const;
  void set_result(::CMsgClientToGCUpdateRosterResponse_EResponse value);
  private:
  ::CMsgClientToGCUpdateRosterResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCUpdateRosterResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUpdateRosterResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAccountStats final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetAccountStats) */ {
 public:
  inline CMsgClientToGCGetAccountStats() : CMsgClientToGCGetAccountStats(nullptr) {}
  ~CMsgClientToGCGetAccountStats() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountStats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetAccountStats(const CMsgClientToGCGetAccountStats& from);
  CMsgClientToGCGetAccountStats(CMsgClientToGCGetAccountStats&& from) noexcept
    : CMsgClientToGCGetAccountStats() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAccountStats& operator=(const CMsgClientToGCGetAccountStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetAccountStats& operator=(CMsgClientToGCGetAccountStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetAccountStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetAccountStats* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAccountStats*>(
               &_CMsgClientToGCGetAccountStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(CMsgClientToGCGetAccountStats& a, CMsgClientToGCGetAccountStats& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetAccountStats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetAccountStats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAccountStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAccountStats>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetAccountStats& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetAccountStats& from) {
    CMsgClientToGCGetAccountStats::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAccountStats* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetAccountStats";
  }
  protected:
  explicit CMsgClientToGCGetAccountStats(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kDevAccessHintFieldNumber = 2,
    kFriendAccessHintFieldNumber = 3,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional bool dev_access_hint = 2;
  bool has_dev_access_hint() const;
  private:
  bool _internal_has_dev_access_hint() const;
  public:
  void clear_dev_access_hint();
  bool dev_access_hint() const;
  void set_dev_access_hint(bool value);
  private:
  bool _internal_dev_access_hint() const;
  void _internal_set_dev_access_hint(bool value);
  public:

  // optional bool friend_access_hint = 3;
  bool has_friend_access_hint() const;
  private:
  bool _internal_has_friend_access_hint() const;
  public:
  void clear_friend_access_hint();
  bool friend_access_hint() const;
  void set_friend_access_hint(bool value);
  private:
  bool _internal_friend_access_hint() const;
  void _internal_set_friend_access_hint(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAccountStats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    bool dev_access_hint_;
    bool friend_access_hint_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAccountStatsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetAccountStatsResponse) */ {
 public:
  inline CMsgClientToGCGetAccountStatsResponse() : CMsgClientToGCGetAccountStatsResponse(nullptr) {}
  ~CMsgClientToGCGetAccountStatsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountStatsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetAccountStatsResponse(const CMsgClientToGCGetAccountStatsResponse& from);
  CMsgClientToGCGetAccountStatsResponse(CMsgClientToGCGetAccountStatsResponse&& from) noexcept
    : CMsgClientToGCGetAccountStatsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAccountStatsResponse& operator=(const CMsgClientToGCGetAccountStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetAccountStatsResponse& operator=(CMsgClientToGCGetAccountStatsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetAccountStatsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetAccountStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAccountStatsResponse*>(
               &_CMsgClientToGCGetAccountStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(CMsgClientToGCGetAccountStatsResponse& a, CMsgClientToGCGetAccountStatsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetAccountStatsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetAccountStatsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAccountStatsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAccountStatsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetAccountStatsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetAccountStatsResponse& from) {
    CMsgClientToGCGetAccountStatsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAccountStatsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetAccountStatsResponse";
  }
  protected:
  explicit CMsgClientToGCGetAccountStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetAccountStatsResponse_EResult EResult;
  static constexpr EResult k_eInternalError =
    CMsgClientToGCGetAccountStatsResponse_EResult_k_eInternalError;
  static constexpr EResult k_eSuccess =
    CMsgClientToGCGetAccountStatsResponse_EResult_k_eSuccess;
  static constexpr EResult k_eDisabled =
    CMsgClientToGCGetAccountStatsResponse_EResult_k_eDisabled;
  static constexpr EResult k_eTooBusy =
    CMsgClientToGCGetAccountStatsResponse_EResult_k_eTooBusy;
  static constexpr EResult k_eRateLimited =
    CMsgClientToGCGetAccountStatsResponse_EResult_k_eRateLimited;
  static constexpr EResult k_eInvalidPermissions =
    CMsgClientToGCGetAccountStatsResponse_EResult_k_eInvalidPermissions;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCGetAccountStatsResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgClientToGCGetAccountStatsResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgClientToGCGetAccountStatsResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgClientToGCGetAccountStatsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCGetAccountStatsResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgClientToGCGetAccountStatsResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgClientToGCGetAccountStatsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kStatsFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgAccountStats stats = 2;
  bool has_stats() const;
  private:
  bool _internal_has_stats() const;
  public:
  void clear_stats();
  const ::CMsgAccountStats& stats() const;
  PROTOBUF_NODISCARD ::CMsgAccountStats* release_stats();
  ::CMsgAccountStats* mutable_stats();
  void set_allocated_stats(::CMsgAccountStats* stats);
  private:
  const ::CMsgAccountStats& _internal_stats() const;
  ::CMsgAccountStats* _internal_mutable_stats();
  public:
  void unsafe_arena_set_allocated_stats(
      ::CMsgAccountStats* stats);
  ::CMsgAccountStats* unsafe_arena_release_stats();

  // optional .CMsgClientToGCGetAccountStatsResponse.EResult result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCGetAccountStatsResponse_EResult result() const;
  void set_result(::CMsgClientToGCGetAccountStatsResponse_EResult value);
  private:
  ::CMsgClientToGCGetAccountStatsResponse_EResult _internal_result() const;
  void _internal_set_result(::CMsgClientToGCGetAccountStatsResponse_EResult value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAccountStatsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgAccountStats* stats_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetMatchMetaData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetMatchMetaData) */ {
 public:
  inline CMsgClientToGCGetMatchMetaData() : CMsgClientToGCGetMatchMetaData(nullptr) {}
  ~CMsgClientToGCGetMatchMetaData() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchMetaData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetMatchMetaData(const CMsgClientToGCGetMatchMetaData& from);
  CMsgClientToGCGetMatchMetaData(CMsgClientToGCGetMatchMetaData&& from) noexcept
    : CMsgClientToGCGetMatchMetaData() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetMatchMetaData& operator=(const CMsgClientToGCGetMatchMetaData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetMatchMetaData& operator=(CMsgClientToGCGetMatchMetaData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetMatchMetaData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetMatchMetaData* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetMatchMetaData*>(
               &_CMsgClientToGCGetMatchMetaData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(CMsgClientToGCGetMatchMetaData& a, CMsgClientToGCGetMatchMetaData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetMatchMetaData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetMatchMetaData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetMatchMetaData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetMatchMetaData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetMatchMetaData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetMatchMetaData& from) {
    CMsgClientToGCGetMatchMetaData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetMatchMetaData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetMatchMetaData";
  }
  protected:
  explicit CMsgClientToGCGetMatchMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatchIdFieldNumber = 1,
    kMetadataSaltFieldNumber = 3,
    kTargetAccountIdFieldNumber = 4,
  };
  // optional uint64 match_id = 1;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // optional uint32 metadata_salt = 3;
  bool has_metadata_salt() const;
  private:
  bool _internal_has_metadata_salt() const;
  public:
  void clear_metadata_salt();
  uint32_t metadata_salt() const;
  void set_metadata_salt(uint32_t value);
  private:
  uint32_t _internal_metadata_salt() const;
  void _internal_set_metadata_salt(uint32_t value);
  public:

  // optional uint32 target_account_id = 4;
  bool has_target_account_id() const;
  private:
  bool _internal_has_target_account_id() const;
  public:
  void clear_target_account_id();
  uint32_t target_account_id() const;
  void set_target_account_id(uint32_t value);
  private:
  uint32_t _internal_target_account_id() const;
  void _internal_set_target_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetMatchMetaData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t match_id_;
    uint32_t metadata_salt_;
    uint32_t target_account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetMatchMetaDataResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetMatchMetaDataResponse) */ {
 public:
  inline CMsgClientToGCGetMatchMetaDataResponse() : CMsgClientToGCGetMatchMetaDataResponse(nullptr) {}
  ~CMsgClientToGCGetMatchMetaDataResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchMetaDataResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetMatchMetaDataResponse(const CMsgClientToGCGetMatchMetaDataResponse& from);
  CMsgClientToGCGetMatchMetaDataResponse(CMsgClientToGCGetMatchMetaDataResponse&& from) noexcept
    : CMsgClientToGCGetMatchMetaDataResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetMatchMetaDataResponse& operator=(const CMsgClientToGCGetMatchMetaDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetMatchMetaDataResponse& operator=(CMsgClientToGCGetMatchMetaDataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetMatchMetaDataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetMatchMetaDataResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetMatchMetaDataResponse*>(
               &_CMsgClientToGCGetMatchMetaDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(CMsgClientToGCGetMatchMetaDataResponse& a, CMsgClientToGCGetMatchMetaDataResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetMatchMetaDataResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetMatchMetaDataResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetMatchMetaDataResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetMatchMetaDataResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetMatchMetaDataResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetMatchMetaDataResponse& from) {
    CMsgClientToGCGetMatchMetaDataResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetMatchMetaDataResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetMatchMetaDataResponse";
  }
  protected:
  explicit CMsgClientToGCGetMatchMetaDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetMatchMetaDataResponse_EResult EResult;
  static constexpr EResult k_eResult_InternalError =
    CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_InternalError;
  static constexpr EResult k_eResult_Success =
    CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_Success;
  static constexpr EResult k_eResult_InvalidPermission =
    CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_InvalidPermission;
  static constexpr EResult k_eResult_TemporarilyDisabled =
    CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_TemporarilyDisabled;
  static constexpr EResult k_eResult_TooBusy =
    CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_TooBusy;
  static constexpr EResult k_eResult_RateLimited =
    CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_RateLimited;
  static constexpr EResult k_eResult_InvalidMatch =
    CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_InvalidMatch;
  static constexpr EResult k_eResult_MatchInFlight =
    CMsgClientToGCGetMatchMetaDataResponse_EResult_k_eResult_MatchInFlight;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCGetMatchMetaDataResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgClientToGCGetMatchMetaDataResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgClientToGCGetMatchMetaDataResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgClientToGCGetMatchMetaDataResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCGetMatchMetaDataResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgClientToGCGetMatchMetaDataResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgClientToGCGetMatchMetaDataResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
    kReplaySaltFieldNumber = 2,
    kMetadataSaltFieldNumber = 3,
    kReplayValidThroughFieldNumber = 4,
    kClusterIdFieldNumber = 5,
    kReplayProcessingThroughFieldNumber = 6,
  };
  // optional .CMsgClientToGCGetMatchMetaDataResponse.EResult result = 1 [default = k_eResult_InternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCGetMatchMetaDataResponse_EResult result() const;
  void set_result(::CMsgClientToGCGetMatchMetaDataResponse_EResult value);
  private:
  ::CMsgClientToGCGetMatchMetaDataResponse_EResult _internal_result() const;
  void _internal_set_result(::CMsgClientToGCGetMatchMetaDataResponse_EResult value);
  public:

  // optional uint32 replay_salt = 2;
  bool has_replay_salt() const;
  private:
  bool _internal_has_replay_salt() const;
  public:
  void clear_replay_salt();
  uint32_t replay_salt() const;
  void set_replay_salt(uint32_t value);
  private:
  uint32_t _internal_replay_salt() const;
  void _internal_set_replay_salt(uint32_t value);
  public:

  // optional uint32 metadata_salt = 3;
  bool has_metadata_salt() const;
  private:
  bool _internal_has_metadata_salt() const;
  public:
  void clear_metadata_salt();
  uint32_t metadata_salt() const;
  void set_metadata_salt(uint32_t value);
  private:
  uint32_t _internal_metadata_salt() const;
  void _internal_set_metadata_salt(uint32_t value);
  public:

  // optional uint32 replay_valid_through = 4;
  bool has_replay_valid_through() const;
  private:
  bool _internal_has_replay_valid_through() const;
  public:
  void clear_replay_valid_through();
  uint32_t replay_valid_through() const;
  void set_replay_valid_through(uint32_t value);
  private:
  uint32_t _internal_replay_valid_through() const;
  void _internal_set_replay_valid_through(uint32_t value);
  public:

  // optional uint32 cluster_id = 5;
  bool has_cluster_id() const;
  private:
  bool _internal_has_cluster_id() const;
  public:
  void clear_cluster_id();
  uint32_t cluster_id() const;
  void set_cluster_id(uint32_t value);
  private:
  uint32_t _internal_cluster_id() const;
  void _internal_set_cluster_id(uint32_t value);
  public:

  // optional uint32 replay_processing_through = 6;
  bool has_replay_processing_through() const;
  private:
  bool _internal_has_replay_processing_through() const;
  public:
  void clear_replay_processing_through();
  uint32_t replay_processing_through() const;
  void set_replay_processing_through(uint32_t value);
  private:
  uint32_t _internal_replay_processing_through() const;
  void _internal_set_replay_processing_through(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetMatchMetaDataResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
    uint32_t replay_salt_;
    uint32_t metadata_salt_;
    uint32_t replay_valid_through_;
    uint32_t cluster_id_;
    uint32_t replay_processing_through_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientDevAnnouncements_Announcement final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientDevAnnouncements.Announcement) */ {
 public:
  inline CMsgGCToClientDevAnnouncements_Announcement() : CMsgGCToClientDevAnnouncements_Announcement(nullptr) {}
  ~CMsgGCToClientDevAnnouncements_Announcement() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientDevAnnouncements_Announcement(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientDevAnnouncements_Announcement(const CMsgGCToClientDevAnnouncements_Announcement& from);
  CMsgGCToClientDevAnnouncements_Announcement(CMsgGCToClientDevAnnouncements_Announcement&& from) noexcept
    : CMsgGCToClientDevAnnouncements_Announcement() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientDevAnnouncements_Announcement& operator=(const CMsgGCToClientDevAnnouncements_Announcement& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientDevAnnouncements_Announcement& operator=(CMsgGCToClientDevAnnouncements_Announcement&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientDevAnnouncements_Announcement& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientDevAnnouncements_Announcement* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientDevAnnouncements_Announcement*>(
               &_CMsgGCToClientDevAnnouncements_Announcement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(CMsgGCToClientDevAnnouncements_Announcement& a, CMsgGCToClientDevAnnouncements_Announcement& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientDevAnnouncements_Announcement* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientDevAnnouncements_Announcement* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientDevAnnouncements_Announcement* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientDevAnnouncements_Announcement>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientDevAnnouncements_Announcement& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientDevAnnouncements_Announcement& from) {
    CMsgGCToClientDevAnnouncements_Announcement::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientDevAnnouncements_Announcement* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientDevAnnouncements.Announcement";
  }
  protected:
  explicit CMsgGCToClientDevAnnouncements_Announcement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTitleFieldNumber = 2,
    kMessageFieldNumber = 3,
    kUrlFieldNumber = 4,
    kPatchVersionFieldNumber = 7,
    kPriorityFieldNumber = 1,
    kUniqueIdFieldNumber = 5,
    kPostedTimeFieldNumber = 6,
  };
  // optional string title = 2;
  bool has_title() const;
  private:
  bool _internal_has_title() const;
  public:
  void clear_title();
  const std::string& title() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_title(ArgT0&& arg0, ArgT... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* title);
  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // optional string message = 3;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional string url = 4;
  bool has_url() const;
  private:
  bool _internal_has_url() const;
  public:
  void clear_url();
  const std::string& url() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_url(ArgT0&& arg0, ArgT... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* url);
  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(const std::string& value);
  std::string* _internal_mutable_url();
  public:

  // optional string patch_version = 7;
  bool has_patch_version() const;
  private:
  bool _internal_has_patch_version() const;
  public:
  void clear_patch_version();
  const std::string& patch_version() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_patch_version(ArgT0&& arg0, ArgT... args);
  std::string* mutable_patch_version();
  PROTOBUF_NODISCARD std::string* release_patch_version();
  void set_allocated_patch_version(std::string* patch_version);
  private:
  const std::string& _internal_patch_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_patch_version(const std::string& value);
  std::string* _internal_mutable_patch_version();
  public:

  // optional uint32 priority = 1;
  bool has_priority() const;
  private:
  bool _internal_has_priority() const;
  public:
  void clear_priority();
  uint32_t priority() const;
  void set_priority(uint32_t value);
  private:
  uint32_t _internal_priority() const;
  void _internal_set_priority(uint32_t value);
  public:

  // optional uint32 unique_id = 5;
  bool has_unique_id() const;
  private:
  bool _internal_has_unique_id() const;
  public:
  void clear_unique_id();
  uint32_t unique_id() const;
  void set_unique_id(uint32_t value);
  private:
  uint32_t _internal_unique_id() const;
  void _internal_set_unique_id(uint32_t value);
  public:

  // optional uint32 posted_time = 6;
  bool has_posted_time() const;
  private:
  bool _internal_has_posted_time() const;
  public:
  void clear_posted_time();
  uint32_t posted_time() const;
  void set_posted_time(uint32_t value);
  private:
  uint32_t _internal_posted_time() const;
  void _internal_set_posted_time(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientDevAnnouncements.Announcement)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr url_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr patch_version_;
    uint32_t priority_;
    uint32_t unique_id_;
    uint32_t posted_time_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientDevAnnouncements final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientDevAnnouncements) */ {
 public:
  inline CMsgGCToClientDevAnnouncements() : CMsgGCToClientDevAnnouncements(nullptr) {}
  ~CMsgGCToClientDevAnnouncements() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientDevAnnouncements(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientDevAnnouncements(const CMsgGCToClientDevAnnouncements& from);
  CMsgGCToClientDevAnnouncements(CMsgGCToClientDevAnnouncements&& from) noexcept
    : CMsgGCToClientDevAnnouncements() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientDevAnnouncements& operator=(const CMsgGCToClientDevAnnouncements& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientDevAnnouncements& operator=(CMsgGCToClientDevAnnouncements&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientDevAnnouncements& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientDevAnnouncements* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientDevAnnouncements*>(
               &_CMsgGCToClientDevAnnouncements_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(CMsgGCToClientDevAnnouncements& a, CMsgGCToClientDevAnnouncements& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientDevAnnouncements* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientDevAnnouncements* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientDevAnnouncements* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientDevAnnouncements>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientDevAnnouncements& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientDevAnnouncements& from) {
    CMsgGCToClientDevAnnouncements::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientDevAnnouncements* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientDevAnnouncements";
  }
  protected:
  explicit CMsgGCToClientDevAnnouncements(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientDevAnnouncements_Announcement Announcement;

  // accessors -------------------------------------------------------

  enum : int {
    kAnnouncementsFieldNumber = 1,
  };
  // repeated .CMsgGCToClientDevAnnouncements.Announcement announcements = 1;
  int announcements_size() const;
  private:
  int _internal_announcements_size() const;
  public:
  void clear_announcements();
  ::CMsgGCToClientDevAnnouncements_Announcement* mutable_announcements(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevAnnouncements_Announcement >*
      mutable_announcements();
  private:
  const ::CMsgGCToClientDevAnnouncements_Announcement& _internal_announcements(int index) const;
  ::CMsgGCToClientDevAnnouncements_Announcement* _internal_add_announcements();
  public:
  const ::CMsgGCToClientDevAnnouncements_Announcement& announcements(int index) const;
  ::CMsgGCToClientDevAnnouncements_Announcement* add_announcements();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevAnnouncements_Announcement >&
      announcements() const;

  // @@protoc_insertion_point(class_scope:CMsgGCToClientDevAnnouncements)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevAnnouncements_Announcement > announcements_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCModifyDevAnnouncements final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCModifyDevAnnouncements) */ {
 public:
  inline CMsgClientToGCModifyDevAnnouncements() : CMsgClientToGCModifyDevAnnouncements(nullptr) {}
  ~CMsgClientToGCModifyDevAnnouncements() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCModifyDevAnnouncements(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCModifyDevAnnouncements(const CMsgClientToGCModifyDevAnnouncements& from);
  CMsgClientToGCModifyDevAnnouncements(CMsgClientToGCModifyDevAnnouncements&& from) noexcept
    : CMsgClientToGCModifyDevAnnouncements() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCModifyDevAnnouncements& operator=(const CMsgClientToGCModifyDevAnnouncements& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCModifyDevAnnouncements& operator=(CMsgClientToGCModifyDevAnnouncements&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCModifyDevAnnouncements& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCModifyDevAnnouncements* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCModifyDevAnnouncements*>(
               &_CMsgClientToGCModifyDevAnnouncements_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(CMsgClientToGCModifyDevAnnouncements& a, CMsgClientToGCModifyDevAnnouncements& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCModifyDevAnnouncements* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCModifyDevAnnouncements* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCModifyDevAnnouncements* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCModifyDevAnnouncements>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCModifyDevAnnouncements& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCModifyDevAnnouncements& from) {
    CMsgClientToGCModifyDevAnnouncements::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCModifyDevAnnouncements* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCModifyDevAnnouncements";
  }
  protected:
  explicit CMsgClientToGCModifyDevAnnouncements(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCModifyDevAnnouncements_EOperation EOperation;
  static constexpr EOperation k_eCreate =
    CMsgClientToGCModifyDevAnnouncements_EOperation_k_eCreate;
  static constexpr EOperation k_eUpdate =
    CMsgClientToGCModifyDevAnnouncements_EOperation_k_eUpdate;
  static constexpr EOperation k_eDelete =
    CMsgClientToGCModifyDevAnnouncements_EOperation_k_eDelete;
  static inline bool EOperation_IsValid(int value) {
    return CMsgClientToGCModifyDevAnnouncements_EOperation_IsValid(value);
  }
  static constexpr EOperation EOperation_MIN =
    CMsgClientToGCModifyDevAnnouncements_EOperation_EOperation_MIN;
  static constexpr EOperation EOperation_MAX =
    CMsgClientToGCModifyDevAnnouncements_EOperation_EOperation_MAX;
  static constexpr int EOperation_ARRAYSIZE =
    CMsgClientToGCModifyDevAnnouncements_EOperation_EOperation_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EOperation_descriptor() {
    return CMsgClientToGCModifyDevAnnouncements_EOperation_descriptor();
  }
  template<typename T>
  static inline const std::string& EOperation_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EOperation>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EOperation_Name.");
    return CMsgClientToGCModifyDevAnnouncements_EOperation_Name(enum_t_value);
  }
  static inline bool EOperation_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EOperation* value) {
    return CMsgClientToGCModifyDevAnnouncements_EOperation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTitleFieldNumber = 4,
    kMessageFieldNumber = 5,
    kUrlFieldNumber = 6,
    kPatchVersionFieldNumber = 7,
    kOperationFieldNumber = 1,
    kTargetIdFieldNumber = 2,
    kPriorityFieldNumber = 3,
  };
  // optional string title = 4;
  bool has_title() const;
  private:
  bool _internal_has_title() const;
  public:
  void clear_title();
  const std::string& title() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_title(ArgT0&& arg0, ArgT... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* title);
  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // optional string message = 5;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional string url = 6;
  bool has_url() const;
  private:
  bool _internal_has_url() const;
  public:
  void clear_url();
  const std::string& url() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_url(ArgT0&& arg0, ArgT... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* url);
  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(const std::string& value);
  std::string* _internal_mutable_url();
  public:

  // optional string patch_version = 7;
  bool has_patch_version() const;
  private:
  bool _internal_has_patch_version() const;
  public:
  void clear_patch_version();
  const std::string& patch_version() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_patch_version(ArgT0&& arg0, ArgT... args);
  std::string* mutable_patch_version();
  PROTOBUF_NODISCARD std::string* release_patch_version();
  void set_allocated_patch_version(std::string* patch_version);
  private:
  const std::string& _internal_patch_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_patch_version(const std::string& value);
  std::string* _internal_mutable_patch_version();
  public:

  // optional .CMsgClientToGCModifyDevAnnouncements.EOperation operation = 1 [default = k_eCreate];
  bool has_operation() const;
  private:
  bool _internal_has_operation() const;
  public:
  void clear_operation();
  ::CMsgClientToGCModifyDevAnnouncements_EOperation operation() const;
  void set_operation(::CMsgClientToGCModifyDevAnnouncements_EOperation value);
  private:
  ::CMsgClientToGCModifyDevAnnouncements_EOperation _internal_operation() const;
  void _internal_set_operation(::CMsgClientToGCModifyDevAnnouncements_EOperation value);
  public:

  // optional uint32 target_id = 2;
  bool has_target_id() const;
  private:
  bool _internal_has_target_id() const;
  public:
  void clear_target_id();
  uint32_t target_id() const;
  void set_target_id(uint32_t value);
  private:
  uint32_t _internal_target_id() const;
  void _internal_set_target_id(uint32_t value);
  public:

  // optional uint32 priority = 3;
  bool has_priority() const;
  private:
  bool _internal_has_priority() const;
  public:
  void clear_priority();
  uint32_t priority() const;
  void set_priority(uint32_t value);
  private:
  uint32_t _internal_priority() const;
  void _internal_set_priority(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCModifyDevAnnouncements)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr url_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr patch_version_;
    int operation_;
    uint32_t target_id_;
    uint32_t priority_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCModifyDevAnnouncementsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCModifyDevAnnouncementsResponse) */ {
 public:
  inline CMsgClientToGCModifyDevAnnouncementsResponse() : CMsgClientToGCModifyDevAnnouncementsResponse(nullptr) {}
  ~CMsgClientToGCModifyDevAnnouncementsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCModifyDevAnnouncementsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCModifyDevAnnouncementsResponse(const CMsgClientToGCModifyDevAnnouncementsResponse& from);
  CMsgClientToGCModifyDevAnnouncementsResponse(CMsgClientToGCModifyDevAnnouncementsResponse&& from) noexcept
    : CMsgClientToGCModifyDevAnnouncementsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCModifyDevAnnouncementsResponse& operator=(const CMsgClientToGCModifyDevAnnouncementsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCModifyDevAnnouncementsResponse& operator=(CMsgClientToGCModifyDevAnnouncementsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCModifyDevAnnouncementsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCModifyDevAnnouncementsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCModifyDevAnnouncementsResponse*>(
               &_CMsgClientToGCModifyDevAnnouncementsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(CMsgClientToGCModifyDevAnnouncementsResponse& a, CMsgClientToGCModifyDevAnnouncementsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCModifyDevAnnouncementsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCModifyDevAnnouncementsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCModifyDevAnnouncementsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCModifyDevAnnouncementsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCModifyDevAnnouncementsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCModifyDevAnnouncementsResponse& from) {
    CMsgClientToGCModifyDevAnnouncementsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCModifyDevAnnouncementsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCModifyDevAnnouncementsResponse";
  }
  protected:
  explicit CMsgClientToGCModifyDevAnnouncementsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCModifyDevAnnouncementsResponse_EResult EResult;
  static constexpr EResult k_eSuccess =
    CMsgClientToGCModifyDevAnnouncementsResponse_EResult_k_eSuccess;
  static constexpr EResult k_eInvalidPermission =
    CMsgClientToGCModifyDevAnnouncementsResponse_EResult_k_eInvalidPermission;
  static constexpr EResult k_eInvalidTarget =
    CMsgClientToGCModifyDevAnnouncementsResponse_EResult_k_eInvalidTarget;
  static constexpr EResult k_eInternalError =
    CMsgClientToGCModifyDevAnnouncementsResponse_EResult_k_eInternalError;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCModifyDevAnnouncementsResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgClientToGCModifyDevAnnouncementsResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgClientToGCModifyDevAnnouncementsResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgClientToGCModifyDevAnnouncementsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCModifyDevAnnouncementsResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgClientToGCModifyDevAnnouncementsResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgClientToGCModifyDevAnnouncementsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCModifyDevAnnouncementsResponse.EResult result = 1 [default = k_eSuccess];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCModifyDevAnnouncementsResponse_EResult result() const;
  void set_result(::CMsgClientToGCModifyDevAnnouncementsResponse_EResult value);
  private:
  ::CMsgClientToGCModifyDevAnnouncementsResponse_EResult _internal_result() const;
  void _internal_set_result(::CMsgClientToGCModifyDevAnnouncementsResponse_EResult value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCModifyDevAnnouncementsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCDevAction final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCDevAction) */ {
 public:
  inline CMsgClientToGCDevAction() : CMsgClientToGCDevAction(nullptr) {}
  ~CMsgClientToGCDevAction() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCDevAction(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCDevAction(const CMsgClientToGCDevAction& from);
  CMsgClientToGCDevAction(CMsgClientToGCDevAction&& from) noexcept
    : CMsgClientToGCDevAction() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCDevAction& operator=(const CMsgClientToGCDevAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCDevAction& operator=(CMsgClientToGCDevAction&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCDevAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCDevAction* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCDevAction*>(
               &_CMsgClientToGCDevAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(CMsgClientToGCDevAction& a, CMsgClientToGCDevAction& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCDevAction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCDevAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCDevAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCDevAction>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCDevAction& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCDevAction& from) {
    CMsgClientToGCDevAction::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCDevAction* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCDevAction";
  }
  protected:
  explicit CMsgClientToGCDevAction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCDevAction_EAction EAction;
  static constexpr EAction k_eSetDeveloper =
    CMsgClientToGCDevAction_EAction_k_eSetDeveloper;
  static constexpr EAction k_eSetMMR =
    CMsgClientToGCDevAction_EAction_k_eSetMMR;
  static constexpr EAction k_eSetMMRUncertainty =
    CMsgClientToGCDevAction_EAction_k_eSetMMRUncertainty;
  static constexpr EAction k_eSetHeroStatus =
    CMsgClientToGCDevAction_EAction_k_eSetHeroStatus;
  static constexpr EAction k_eSetPermission =
    CMsgClientToGCDevAction_EAction_k_eSetPermission;
  static constexpr EAction k_eSetNewPlayerProgress =
    CMsgClientToGCDevAction_EAction_k_eSetNewPlayerProgress;
  static constexpr EAction k_eForceAccountStorage =
    CMsgClientToGCDevAction_EAction_k_eForceAccountStorage;
  static constexpr EAction k_eBookReset =
    CMsgClientToGCDevAction_EAction_k_eBookReset;
  static constexpr EAction k_eBookXPGrant =
    CMsgClientToGCDevAction_EAction_k_eBookXPGrant;
  static constexpr EAction k_eBanAccount =
    CMsgClientToGCDevAction_EAction_k_eBanAccount;
  static constexpr EAction k_eExonerateAccount =
    CMsgClientToGCDevAction_EAction_k_eExonerateAccount;
  static constexpr EAction k_eRequireAccountInMM =
    CMsgClientToGCDevAction_EAction_k_eRequireAccountInMM;
  static inline bool EAction_IsValid(int value) {
    return CMsgClientToGCDevAction_EAction_IsValid(value);
  }
  static constexpr EAction EAction_MIN =
    CMsgClientToGCDevAction_EAction_EAction_MIN;
  static constexpr EAction EAction_MAX =
    CMsgClientToGCDevAction_EAction_EAction_MAX;
  static constexpr int EAction_ARRAYSIZE =
    CMsgClientToGCDevAction_EAction_EAction_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EAction_descriptor() {
    return CMsgClientToGCDevAction_EAction_descriptor();
  }
  template<typename T>
  static inline const std::string& EAction_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EAction>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EAction_Name.");
    return CMsgClientToGCDevAction_EAction_Name(enum_t_value);
  }
  static inline bool EAction_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EAction* value) {
    return CMsgClientToGCDevAction_EAction_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kStrValueFieldNumber = 6,
    kAccountIdFieldNumber = 2,
    kUintValueFieldNumber = 3,
    kIntValueFieldNumber = 4,
    kBoolValueFieldNumber = 5,
    kMatchIdFieldNumber = 7,
    kActionFieldNumber = 1,
  };
  // optional string str_value = 6;
  bool has_str_value() const;
  private:
  bool _internal_has_str_value() const;
  public:
  void clear_str_value();
  const std::string& str_value() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_str_value(ArgT0&& arg0, ArgT... args);
  std::string* mutable_str_value();
  PROTOBUF_NODISCARD std::string* release_str_value();
  void set_allocated_str_value(std::string* str_value);
  private:
  const std::string& _internal_str_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str_value(const std::string& value);
  std::string* _internal_mutable_str_value();
  public:

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 uint_value = 3;
  bool has_uint_value() const;
  private:
  bool _internal_has_uint_value() const;
  public:
  void clear_uint_value();
  uint32_t uint_value() const;
  void set_uint_value(uint32_t value);
  private:
  uint32_t _internal_uint_value() const;
  void _internal_set_uint_value(uint32_t value);
  public:

  // optional int32 int_value = 4;
  bool has_int_value() const;
  private:
  bool _internal_has_int_value() const;
  public:
  void clear_int_value();
  int32_t int_value() const;
  void set_int_value(int32_t value);
  private:
  int32_t _internal_int_value() const;
  void _internal_set_int_value(int32_t value);
  public:

  // optional bool bool_value = 5;
  bool has_bool_value() const;
  private:
  bool _internal_has_bool_value() const;
  public:
  void clear_bool_value();
  bool bool_value() const;
  void set_bool_value(bool value);
  private:
  bool _internal_bool_value() const;
  void _internal_set_bool_value(bool value);
  public:

  // optional uint64 match_id = 7;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // optional .CMsgClientToGCDevAction.EAction action = 1 [default = k_eSetDeveloper];
  bool has_action() const;
  private:
  bool _internal_has_action() const;
  public:
  void clear_action();
  ::CMsgClientToGCDevAction_EAction action() const;
  void set_action(::CMsgClientToGCDevAction_EAction value);
  private:
  ::CMsgClientToGCDevAction_EAction _internal_action() const;
  void _internal_set_action(::CMsgClientToGCDevAction_EAction value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCDevAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr str_value_;
    uint32_t account_id_;
    uint32_t uint_value_;
    int32_t int_value_;
    bool bool_value_;
    uint64_t match_id_;
    int action_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCDevActionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCDevActionResponse) */ {
 public:
  inline CMsgClientToGCDevActionResponse() : CMsgClientToGCDevActionResponse(nullptr) {}
  ~CMsgClientToGCDevActionResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCDevActionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCDevActionResponse(const CMsgClientToGCDevActionResponse& from);
  CMsgClientToGCDevActionResponse(CMsgClientToGCDevActionResponse&& from) noexcept
    : CMsgClientToGCDevActionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCDevActionResponse& operator=(const CMsgClientToGCDevActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCDevActionResponse& operator=(CMsgClientToGCDevActionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCDevActionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCDevActionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCDevActionResponse*>(
               &_CMsgClientToGCDevActionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(CMsgClientToGCDevActionResponse& a, CMsgClientToGCDevActionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCDevActionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCDevActionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCDevActionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCDevActionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCDevActionResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCDevActionResponse& from) {
    CMsgClientToGCDevActionResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCDevActionResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCDevActionResponse";
  }
  protected:
  explicit CMsgClientToGCDevActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCDevActionResponse_EResult EResult;
  static constexpr EResult k_eSuccess =
    CMsgClientToGCDevActionResponse_EResult_k_eSuccess;
  static constexpr EResult k_eInvalidPermission =
    CMsgClientToGCDevActionResponse_EResult_k_eInvalidPermission;
  static constexpr EResult k_eInvalidTarget =
    CMsgClientToGCDevActionResponse_EResult_k_eInvalidTarget;
  static constexpr EResult k_eInternalError =
    CMsgClientToGCDevActionResponse_EResult_k_eInternalError;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCDevActionResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgClientToGCDevActionResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgClientToGCDevActionResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgClientToGCDevActionResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCDevActionResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgClientToGCDevActionResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgClientToGCDevActionResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCDevActionResponse.EResult result = 1 [default = k_eSuccess];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCDevActionResponse_EResult result() const;
  void set_result(::CMsgClientToGCDevActionResponse_EResult value);
  private:
  ::CMsgClientToGCDevActionResponse_EResult _internal_result() const;
  void _internal_set_result(::CMsgClientToGCDevActionResponse_EResult value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCDevActionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecordClientEvents_Event final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRecordClientEvents.Event) */ {
 public:
  inline CMsgClientToGCRecordClientEvents_Event() : CMsgClientToGCRecordClientEvents_Event(nullptr) {}
  ~CMsgClientToGCRecordClientEvents_Event() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRecordClientEvents_Event(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRecordClientEvents_Event(const CMsgClientToGCRecordClientEvents_Event& from);
  CMsgClientToGCRecordClientEvents_Event(CMsgClientToGCRecordClientEvents_Event&& from) noexcept
    : CMsgClientToGCRecordClientEvents_Event() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRecordClientEvents_Event& operator=(const CMsgClientToGCRecordClientEvents_Event& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRecordClientEvents_Event& operator=(CMsgClientToGCRecordClientEvents_Event&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRecordClientEvents_Event& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRecordClientEvents_Event* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRecordClientEvents_Event*>(
               &_CMsgClientToGCRecordClientEvents_Event_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(CMsgClientToGCRecordClientEvents_Event& a, CMsgClientToGCRecordClientEvents_Event& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRecordClientEvents_Event* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRecordClientEvents_Event* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRecordClientEvents_Event* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRecordClientEvents_Event>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRecordClientEvents_Event& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRecordClientEvents_Event& from) {
    CMsgClientToGCRecordClientEvents_Event::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRecordClientEvents_Event* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRecordClientEvents.Event";
  }
  protected:
  explicit CMsgClientToGCRecordClientEvents_Event(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeStampFieldNumber = 1,
    kClientEventIndexFieldNumber = 4,
    kEventDataFieldNumber = 3,
    kEventIdFieldNumber = 2,
  };
  // optional uint32 time_stamp = 1;
  bool has_time_stamp() const;
  private:
  bool _internal_has_time_stamp() const;
  public:
  void clear_time_stamp();
  uint32_t time_stamp() const;
  void set_time_stamp(uint32_t value);
  private:
  uint32_t _internal_time_stamp() const;
  void _internal_set_time_stamp(uint32_t value);
  public:

  // optional uint32 client_event_index = 4;
  bool has_client_event_index() const;
  private:
  bool _internal_has_client_event_index() const;
  public:
  void clear_client_event_index();
  uint32_t client_event_index() const;
  void set_client_event_index(uint32_t value);
  private:
  uint32_t _internal_client_event_index() const;
  void _internal_set_client_event_index(uint32_t value);
  public:

  // optional uint64 event_data = 3;
  bool has_event_data() const;
  private:
  bool _internal_has_event_data() const;
  public:
  void clear_event_data();
  uint64_t event_data() const;
  void set_event_data(uint64_t value);
  private:
  uint64_t _internal_event_data() const;
  void _internal_set_event_data(uint64_t value);
  public:

  // optional .ECitadelClientAccountEvent event_id = 2 [default = k_eLaunchedHeroTest];
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::ECitadelClientAccountEvent event_id() const;
  void set_event_id(::ECitadelClientAccountEvent value);
  private:
  ::ECitadelClientAccountEvent _internal_event_id() const;
  void _internal_set_event_id(::ECitadelClientAccountEvent value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRecordClientEvents.Event)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t time_stamp_;
    uint32_t client_event_index_;
    uint64_t event_data_;
    int event_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecordClientEvents final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRecordClientEvents) */ {
 public:
  inline CMsgClientToGCRecordClientEvents() : CMsgClientToGCRecordClientEvents(nullptr) {}
  ~CMsgClientToGCRecordClientEvents() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRecordClientEvents(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRecordClientEvents(const CMsgClientToGCRecordClientEvents& from);
  CMsgClientToGCRecordClientEvents(CMsgClientToGCRecordClientEvents&& from) noexcept
    : CMsgClientToGCRecordClientEvents() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRecordClientEvents& operator=(const CMsgClientToGCRecordClientEvents& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRecordClientEvents& operator=(CMsgClientToGCRecordClientEvents&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRecordClientEvents& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRecordClientEvents* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRecordClientEvents*>(
               &_CMsgClientToGCRecordClientEvents_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(CMsgClientToGCRecordClientEvents& a, CMsgClientToGCRecordClientEvents& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRecordClientEvents* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRecordClientEvents* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRecordClientEvents* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRecordClientEvents>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRecordClientEvents& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRecordClientEvents& from) {
    CMsgClientToGCRecordClientEvents::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRecordClientEvents* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRecordClientEvents";
  }
  protected:
  explicit CMsgClientToGCRecordClientEvents(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRecordClientEvents_Event Event;

  // accessors -------------------------------------------------------

  enum : int {
    kEventsFieldNumber = 1,
    kClientRunTokenFieldNumber = 2,
  };
  // repeated .CMsgClientToGCRecordClientEvents.Event events = 1;
  int events_size() const;
  private:
  int _internal_events_size() const;
  public:
  void clear_events();
  ::CMsgClientToGCRecordClientEvents_Event* mutable_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCRecordClientEvents_Event >*
      mutable_events();
  private:
  const ::CMsgClientToGCRecordClientEvents_Event& _internal_events(int index) const;
  ::CMsgClientToGCRecordClientEvents_Event* _internal_add_events();
  public:
  const ::CMsgClientToGCRecordClientEvents_Event& events(int index) const;
  ::CMsgClientToGCRecordClientEvents_Event* add_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCRecordClientEvents_Event >&
      events() const;

  // optional uint32 client_run_token = 2;
  bool has_client_run_token() const;
  private:
  bool _internal_has_client_run_token() const;
  public:
  void clear_client_run_token();
  uint32_t client_run_token() const;
  void set_client_run_token(uint32_t value);
  private:
  uint32_t _internal_client_run_token() const;
  void _internal_set_client_run_token(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRecordClientEvents)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCRecordClientEvents_Event > events_;
    uint32_t client_run_token_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecordClientEventsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRecordClientEventsResponse) */ {
 public:
  inline CMsgClientToGCRecordClientEventsResponse() : CMsgClientToGCRecordClientEventsResponse(nullptr) {}
  ~CMsgClientToGCRecordClientEventsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRecordClientEventsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRecordClientEventsResponse(const CMsgClientToGCRecordClientEventsResponse& from);
  CMsgClientToGCRecordClientEventsResponse(CMsgClientToGCRecordClientEventsResponse&& from) noexcept
    : CMsgClientToGCRecordClientEventsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRecordClientEventsResponse& operator=(const CMsgClientToGCRecordClientEventsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRecordClientEventsResponse& operator=(CMsgClientToGCRecordClientEventsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRecordClientEventsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRecordClientEventsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRecordClientEventsResponse*>(
               &_CMsgClientToGCRecordClientEventsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(CMsgClientToGCRecordClientEventsResponse& a, CMsgClientToGCRecordClientEventsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRecordClientEventsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRecordClientEventsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRecordClientEventsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRecordClientEventsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRecordClientEventsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRecordClientEventsResponse& from) {
    CMsgClientToGCRecordClientEventsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRecordClientEventsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRecordClientEventsResponse";
  }
  protected:
  explicit CMsgClientToGCRecordClientEventsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // optional bool success = 1;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRecordClientEventsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool success_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetNewPlayerProgress final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetNewPlayerProgress) */ {
 public:
  inline CMsgClientToGCSetNewPlayerProgress() : CMsgClientToGCSetNewPlayerProgress(nullptr) {}
  ~CMsgClientToGCSetNewPlayerProgress() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetNewPlayerProgress(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetNewPlayerProgress(const CMsgClientToGCSetNewPlayerProgress& from);
  CMsgClientToGCSetNewPlayerProgress(CMsgClientToGCSetNewPlayerProgress&& from) noexcept
    : CMsgClientToGCSetNewPlayerProgress() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetNewPlayerProgress& operator=(const CMsgClientToGCSetNewPlayerProgress& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetNewPlayerProgress& operator=(CMsgClientToGCSetNewPlayerProgress&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetNewPlayerProgress& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetNewPlayerProgress* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetNewPlayerProgress*>(
               &_CMsgClientToGCSetNewPlayerProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(CMsgClientToGCSetNewPlayerProgress& a, CMsgClientToGCSetNewPlayerProgress& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetNewPlayerProgress* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetNewPlayerProgress* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetNewPlayerProgress* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetNewPlayerProgress>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetNewPlayerProgress& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetNewPlayerProgress& from) {
    CMsgClientToGCSetNewPlayerProgress::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetNewPlayerProgress* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetNewPlayerProgress";
  }
  protected:
  explicit CMsgClientToGCSetNewPlayerProgress(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFlagFieldNumber = 1,
  };
  // optional .ECitadelNewPlayerProgressFlag flag = 1 [default = k_eNewPlayerProgress_GettingStarted];
  bool has_flag() const;
  private:
  bool _internal_has_flag() const;
  public:
  void clear_flag();
  ::ECitadelNewPlayerProgressFlag flag() const;
  void set_flag(::ECitadelNewPlayerProgressFlag value);
  private:
  ::ECitadelNewPlayerProgressFlag _internal_flag() const;
  void _internal_set_flag(::ECitadelNewPlayerProgressFlag value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetNewPlayerProgress)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int flag_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetNewPlayerProgressResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetNewPlayerProgressResponse) */ {
 public:
  inline CMsgClientToGCSetNewPlayerProgressResponse() : CMsgClientToGCSetNewPlayerProgressResponse(nullptr) {}
  ~CMsgClientToGCSetNewPlayerProgressResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetNewPlayerProgressResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetNewPlayerProgressResponse(const CMsgClientToGCSetNewPlayerProgressResponse& from);
  CMsgClientToGCSetNewPlayerProgressResponse(CMsgClientToGCSetNewPlayerProgressResponse&& from) noexcept
    : CMsgClientToGCSetNewPlayerProgressResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetNewPlayerProgressResponse& operator=(const CMsgClientToGCSetNewPlayerProgressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetNewPlayerProgressResponse& operator=(CMsgClientToGCSetNewPlayerProgressResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetNewPlayerProgressResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetNewPlayerProgressResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetNewPlayerProgressResponse*>(
               &_CMsgClientToGCSetNewPlayerProgressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(CMsgClientToGCSetNewPlayerProgressResponse& a, CMsgClientToGCSetNewPlayerProgressResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetNewPlayerProgressResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetNewPlayerProgressResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetNewPlayerProgressResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetNewPlayerProgressResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetNewPlayerProgressResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetNewPlayerProgressResponse& from) {
    CMsgClientToGCSetNewPlayerProgressResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetNewPlayerProgressResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetNewPlayerProgressResponse";
  }
  protected:
  explicit CMsgClientToGCSetNewPlayerProgressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // optional bool success = 1;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetNewPlayerProgressResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool success_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUpdateAccountSync final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUpdateAccountSync) */ {
 public:
  inline CMsgClientToGCUpdateAccountSync() : CMsgClientToGCUpdateAccountSync(nullptr) {}
  ~CMsgClientToGCUpdateAccountSync() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUpdateAccountSync(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUpdateAccountSync(const CMsgClientToGCUpdateAccountSync& from);
  CMsgClientToGCUpdateAccountSync(CMsgClientToGCUpdateAccountSync&& from) noexcept
    : CMsgClientToGCUpdateAccountSync() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUpdateAccountSync& operator=(const CMsgClientToGCUpdateAccountSync& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUpdateAccountSync& operator=(CMsgClientToGCUpdateAccountSync&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUpdateAccountSync& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUpdateAccountSync* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUpdateAccountSync*>(
               &_CMsgClientToGCUpdateAccountSync_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(CMsgClientToGCUpdateAccountSync& a, CMsgClientToGCUpdateAccountSync& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUpdateAccountSync* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUpdateAccountSync* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUpdateAccountSync* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUpdateAccountSync>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUpdateAccountSync& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUpdateAccountSync& from) {
    CMsgClientToGCUpdateAccountSync::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUpdateAccountSync* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUpdateAccountSync";
  }
  protected:
  explicit CMsgClientToGCUpdateAccountSync(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdsFieldNumber = 1,
    kValuesFieldNumber = 2,
  };
  // repeated uint32 ids = 1;
  int ids_size() const;
  private:
  int _internal_ids_size() const;
  public:
  void clear_ids();
  private:
  uint32_t _internal_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_ids() const;
  void _internal_add_ids(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_ids();
  public:
  uint32_t ids(int index) const;
  void set_ids(int index, uint32_t value);
  void add_ids(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_ids();

  // repeated uint32 values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;
  public:
  void clear_values();
  private:
  uint32_t _internal_values(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_values() const;
  void _internal_add_values(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_values();
  public:
  uint32_t values(int index) const;
  void set_values(int index, uint32_t value);
  void add_values(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      values() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUpdateAccountSync)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > ids_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > values_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUpdateAccountSyncResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUpdateAccountSyncResponse) */ {
 public:
  inline CMsgClientToGCUpdateAccountSyncResponse() : CMsgClientToGCUpdateAccountSyncResponse(nullptr) {}
  ~CMsgClientToGCUpdateAccountSyncResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUpdateAccountSyncResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUpdateAccountSyncResponse(const CMsgClientToGCUpdateAccountSyncResponse& from);
  CMsgClientToGCUpdateAccountSyncResponse(CMsgClientToGCUpdateAccountSyncResponse&& from) noexcept
    : CMsgClientToGCUpdateAccountSyncResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUpdateAccountSyncResponse& operator=(const CMsgClientToGCUpdateAccountSyncResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUpdateAccountSyncResponse& operator=(CMsgClientToGCUpdateAccountSyncResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUpdateAccountSyncResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUpdateAccountSyncResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUpdateAccountSyncResponse*>(
               &_CMsgClientToGCUpdateAccountSyncResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  friend void swap(CMsgClientToGCUpdateAccountSyncResponse& a, CMsgClientToGCUpdateAccountSyncResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUpdateAccountSyncResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUpdateAccountSyncResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUpdateAccountSyncResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUpdateAccountSyncResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUpdateAccountSyncResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUpdateAccountSyncResponse& from) {
    CMsgClientToGCUpdateAccountSyncResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUpdateAccountSyncResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUpdateAccountSyncResponse";
  }
  protected:
  explicit CMsgClientToGCUpdateAccountSyncResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCUpdateAccountSyncResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCUpdateAccountSyncResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCUpdateAccountSyncResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCUpdateAccountSyncResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCUpdateAccountSyncResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eInvalidMessage =
    CMsgClientToGCUpdateAccountSyncResponse_EResponse_k_eInvalidMessage;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCUpdateAccountSyncResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCUpdateAccountSyncResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCUpdateAccountSyncResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCUpdateAccountSyncResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCUpdateAccountSyncResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCUpdateAccountSyncResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCUpdateAccountSyncResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCUpdateAccountSyncResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCUpdateAccountSyncResponse_EResponse result() const;
  void set_result(::CMsgClientToGCUpdateAccountSyncResponse_EResponse value);
  private:
  ::CMsgClientToGCUpdateAccountSyncResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCUpdateAccountSyncResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUpdateAccountSyncResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetHeroChoice final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetHeroChoice) */ {
 public:
  inline CMsgClientToGCGetHeroChoice() : CMsgClientToGCGetHeroChoice(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroChoice(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetHeroChoice(const CMsgClientToGCGetHeroChoice& from);
  CMsgClientToGCGetHeroChoice(CMsgClientToGCGetHeroChoice&& from) noexcept
    : CMsgClientToGCGetHeroChoice() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetHeroChoice& operator=(const CMsgClientToGCGetHeroChoice& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetHeroChoice& operator=(CMsgClientToGCGetHeroChoice&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetHeroChoice& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetHeroChoice* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetHeroChoice*>(
               &_CMsgClientToGCGetHeroChoice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  friend void swap(CMsgClientToGCGetHeroChoice& a, CMsgClientToGCGetHeroChoice& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetHeroChoice* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetHeroChoice* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetHeroChoice* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetHeroChoice>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgClientToGCGetHeroChoice& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgClientToGCGetHeroChoice& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetHeroChoice";
  }
  protected:
  explicit CMsgClientToGCGetHeroChoice(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetHeroChoice)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetHeroChoiceResponse_Hero final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetHeroChoiceResponse.Hero) */ {
 public:
  inline CMsgClientToGCGetHeroChoiceResponse_Hero() : CMsgClientToGCGetHeroChoiceResponse_Hero(nullptr) {}
  ~CMsgClientToGCGetHeroChoiceResponse_Hero() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroChoiceResponse_Hero(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetHeroChoiceResponse_Hero(const CMsgClientToGCGetHeroChoiceResponse_Hero& from);
  CMsgClientToGCGetHeroChoiceResponse_Hero(CMsgClientToGCGetHeroChoiceResponse_Hero&& from) noexcept
    : CMsgClientToGCGetHeroChoiceResponse_Hero() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetHeroChoiceResponse_Hero& operator=(const CMsgClientToGCGetHeroChoiceResponse_Hero& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetHeroChoiceResponse_Hero& operator=(CMsgClientToGCGetHeroChoiceResponse_Hero&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetHeroChoiceResponse_Hero& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetHeroChoiceResponse_Hero* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetHeroChoiceResponse_Hero*>(
               &_CMsgClientToGCGetHeroChoiceResponse_Hero_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  friend void swap(CMsgClientToGCGetHeroChoiceResponse_Hero& a, CMsgClientToGCGetHeroChoiceResponse_Hero& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetHeroChoiceResponse_Hero* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetHeroChoiceResponse_Hero* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetHeroChoiceResponse_Hero* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetHeroChoiceResponse_Hero>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetHeroChoiceResponse_Hero& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetHeroChoiceResponse_Hero& from) {
    CMsgClientToGCGetHeroChoiceResponse_Hero::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetHeroChoiceResponse_Hero* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetHeroChoiceResponse.Hero";
  }
  protected:
  explicit CMsgClientToGCGetHeroChoiceResponse_Hero(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroIdFieldNumber = 1,
  };
  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetHeroChoiceResponse.Hero)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t hero_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetHeroChoiceResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetHeroChoiceResponse) */ {
 public:
  inline CMsgClientToGCGetHeroChoiceResponse() : CMsgClientToGCGetHeroChoiceResponse(nullptr) {}
  ~CMsgClientToGCGetHeroChoiceResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroChoiceResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetHeroChoiceResponse(const CMsgClientToGCGetHeroChoiceResponse& from);
  CMsgClientToGCGetHeroChoiceResponse(CMsgClientToGCGetHeroChoiceResponse&& from) noexcept
    : CMsgClientToGCGetHeroChoiceResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetHeroChoiceResponse& operator=(const CMsgClientToGCGetHeroChoiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetHeroChoiceResponse& operator=(CMsgClientToGCGetHeroChoiceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetHeroChoiceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetHeroChoiceResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetHeroChoiceResponse*>(
               &_CMsgClientToGCGetHeroChoiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  friend void swap(CMsgClientToGCGetHeroChoiceResponse& a, CMsgClientToGCGetHeroChoiceResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetHeroChoiceResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetHeroChoiceResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetHeroChoiceResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetHeroChoiceResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetHeroChoiceResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetHeroChoiceResponse& from) {
    CMsgClientToGCGetHeroChoiceResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetHeroChoiceResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetHeroChoiceResponse";
  }
  protected:
  explicit CMsgClientToGCGetHeroChoiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetHeroChoiceResponse_Hero Hero;

  typedef CMsgClientToGCGetHeroChoiceResponse_EResult EResult;
  static constexpr EResult k_eSuccess =
    CMsgClientToGCGetHeroChoiceResponse_EResult_k_eSuccess;
  static constexpr EResult k_eNoChoices =
    CMsgClientToGCGetHeroChoiceResponse_EResult_k_eNoChoices;
  static constexpr EResult k_eInvalidTarget =
    CMsgClientToGCGetHeroChoiceResponse_EResult_k_eInvalidTarget;
  static constexpr EResult k_eInternalError =
    CMsgClientToGCGetHeroChoiceResponse_EResult_k_eInternalError;
  static constexpr EResult k_eDisabled =
    CMsgClientToGCGetHeroChoiceResponse_EResult_k_eDisabled;
  static constexpr EResult k_eTooBusy =
    CMsgClientToGCGetHeroChoiceResponse_EResult_k_eTooBusy;
  static constexpr EResult k_eChoiceClosed =
    CMsgClientToGCGetHeroChoiceResponse_EResult_k_eChoiceClosed;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCGetHeroChoiceResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgClientToGCGetHeroChoiceResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgClientToGCGetHeroChoiceResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgClientToGCGetHeroChoiceResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCGetHeroChoiceResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgClientToGCGetHeroChoiceResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgClientToGCGetHeroChoiceResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kHeroSelectionsFieldNumber = 2,
    kResultFieldNumber = 1,
    kHeroChoiceIdFieldNumber = 3,
    kSelectCountFieldNumber = 4,
  };
  // repeated .CMsgClientToGCGetHeroChoiceResponse.Hero hero_selections = 2;
  int hero_selections_size() const;
  private:
  int _internal_hero_selections_size() const;
  public:
  void clear_hero_selections();
  ::CMsgClientToGCGetHeroChoiceResponse_Hero* mutable_hero_selections(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetHeroChoiceResponse_Hero >*
      mutable_hero_selections();
  private:
  const ::CMsgClientToGCGetHeroChoiceResponse_Hero& _internal_hero_selections(int index) const;
  ::CMsgClientToGCGetHeroChoiceResponse_Hero* _internal_add_hero_selections();
  public:
  const ::CMsgClientToGCGetHeroChoiceResponse_Hero& hero_selections(int index) const;
  ::CMsgClientToGCGetHeroChoiceResponse_Hero* add_hero_selections();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetHeroChoiceResponse_Hero >&
      hero_selections() const;

  // optional .CMsgClientToGCGetHeroChoiceResponse.EResult result = 1 [default = k_eSuccess];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCGetHeroChoiceResponse_EResult result() const;
  void set_result(::CMsgClientToGCGetHeroChoiceResponse_EResult value);
  private:
  ::CMsgClientToGCGetHeroChoiceResponse_EResult _internal_result() const;
  void _internal_set_result(::CMsgClientToGCGetHeroChoiceResponse_EResult value);
  public:

  // optional uint32 hero_choice_id = 3;
  bool has_hero_choice_id() const;
  private:
  bool _internal_has_hero_choice_id() const;
  public:
  void clear_hero_choice_id();
  uint32_t hero_choice_id() const;
  void set_hero_choice_id(uint32_t value);
  private:
  uint32_t _internal_hero_choice_id() const;
  void _internal_set_hero_choice_id(uint32_t value);
  public:

  // optional uint32 select_count = 4;
  bool has_select_count() const;
  private:
  bool _internal_has_select_count() const;
  public:
  void clear_select_count();
  uint32_t select_count() const;
  void set_select_count(uint32_t value);
  private:
  uint32_t _internal_select_count() const;
  void _internal_set_select_count(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetHeroChoiceResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetHeroChoiceResponse_Hero > hero_selections_;
    int result_;
    uint32_t hero_choice_id_;
    uint32_t select_count_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUnlockHero final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUnlockHero) */ {
 public:
  inline CMsgClientToGCUnlockHero() : CMsgClientToGCUnlockHero(nullptr) {}
  ~CMsgClientToGCUnlockHero() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUnlockHero(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUnlockHero(const CMsgClientToGCUnlockHero& from);
  CMsgClientToGCUnlockHero(CMsgClientToGCUnlockHero&& from) noexcept
    : CMsgClientToGCUnlockHero() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUnlockHero& operator=(const CMsgClientToGCUnlockHero& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUnlockHero& operator=(CMsgClientToGCUnlockHero&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUnlockHero& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUnlockHero* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUnlockHero*>(
               &_CMsgClientToGCUnlockHero_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  friend void swap(CMsgClientToGCUnlockHero& a, CMsgClientToGCUnlockHero& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUnlockHero* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUnlockHero* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUnlockHero* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUnlockHero>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUnlockHero& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUnlockHero& from) {
    CMsgClientToGCUnlockHero::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUnlockHero* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUnlockHero";
  }
  protected:
  explicit CMsgClientToGCUnlockHero(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroIdsFieldNumber = 1,
    kHeroChoiceIdFieldNumber = 2,
  };
  // repeated uint32 hero_ids = 1;
  int hero_ids_size() const;
  private:
  int _internal_hero_ids_size() const;
  public:
  void clear_hero_ids();
  private:
  uint32_t _internal_hero_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_hero_ids() const;
  void _internal_add_hero_ids(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_hero_ids();
  public:
  uint32_t hero_ids(int index) const;
  void set_hero_ids(int index, uint32_t value);
  void add_hero_ids(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      hero_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_hero_ids();

  // optional uint32 hero_choice_id = 2;
  bool has_hero_choice_id() const;
  private:
  bool _internal_has_hero_choice_id() const;
  public:
  void clear_hero_choice_id();
  uint32_t hero_choice_id() const;
  void set_hero_choice_id(uint32_t value);
  private:
  uint32_t _internal_hero_choice_id() const;
  void _internal_set_hero_choice_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUnlockHero)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > hero_ids_;
    uint32_t hero_choice_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUnlockHeroResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUnlockHeroResponse) */ {
 public:
  inline CMsgClientToGCUnlockHeroResponse() : CMsgClientToGCUnlockHeroResponse(nullptr) {}
  ~CMsgClientToGCUnlockHeroResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUnlockHeroResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUnlockHeroResponse(const CMsgClientToGCUnlockHeroResponse& from);
  CMsgClientToGCUnlockHeroResponse(CMsgClientToGCUnlockHeroResponse&& from) noexcept
    : CMsgClientToGCUnlockHeroResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUnlockHeroResponse& operator=(const CMsgClientToGCUnlockHeroResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUnlockHeroResponse& operator=(CMsgClientToGCUnlockHeroResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUnlockHeroResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUnlockHeroResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUnlockHeroResponse*>(
               &_CMsgClientToGCUnlockHeroResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  friend void swap(CMsgClientToGCUnlockHeroResponse& a, CMsgClientToGCUnlockHeroResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUnlockHeroResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUnlockHeroResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUnlockHeroResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUnlockHeroResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUnlockHeroResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUnlockHeroResponse& from) {
    CMsgClientToGCUnlockHeroResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUnlockHeroResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUnlockHeroResponse";
  }
  protected:
  explicit CMsgClientToGCUnlockHeroResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCUnlockHeroResponse_EResult EResult;
  static constexpr EResult k_eSuccess =
    CMsgClientToGCUnlockHeroResponse_EResult_k_eSuccess;
  static constexpr EResult k_eInternalError =
    CMsgClientToGCUnlockHeroResponse_EResult_k_eInternalError;
  static constexpr EResult k_eInvalidHero =
    CMsgClientToGCUnlockHeroResponse_EResult_k_eInvalidHero;
  static constexpr EResult k_eOutOfSync =
    CMsgClientToGCUnlockHeroResponse_EResult_k_eOutOfSync;
  static constexpr EResult k_eDisabled =
    CMsgClientToGCUnlockHeroResponse_EResult_k_eDisabled;
  static constexpr EResult k_eTooBusy =
    CMsgClientToGCUnlockHeroResponse_EResult_k_eTooBusy;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCUnlockHeroResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgClientToGCUnlockHeroResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgClientToGCUnlockHeroResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgClientToGCUnlockHeroResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCUnlockHeroResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgClientToGCUnlockHeroResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgClientToGCUnlockHeroResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCUnlockHeroResponse.EResult result = 1 [default = k_eSuccess];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCUnlockHeroResponse_EResult result() const;
  void set_result(::CMsgClientToGCUnlockHeroResponse_EResult value);
  private:
  ::CMsgClientToGCUnlockHeroResponse_EResult _internal_result() const;
  void _internal_set_result(::CMsgClientToGCUnlockHeroResponse_EResult value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUnlockHeroResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgAccountBook_Unlock final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAccountBook.Unlock) */ {
 public:
  inline CMsgAccountBook_Unlock() : CMsgAccountBook_Unlock(nullptr) {}
  ~CMsgAccountBook_Unlock() override;
  explicit PROTOBUF_CONSTEXPR CMsgAccountBook_Unlock(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAccountBook_Unlock(const CMsgAccountBook_Unlock& from);
  CMsgAccountBook_Unlock(CMsgAccountBook_Unlock&& from) noexcept
    : CMsgAccountBook_Unlock() {
    *this = ::std::move(from);
  }

  inline CMsgAccountBook_Unlock& operator=(const CMsgAccountBook_Unlock& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAccountBook_Unlock& operator=(CMsgAccountBook_Unlock&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAccountBook_Unlock& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAccountBook_Unlock* internal_default_instance() {
    return reinterpret_cast<const CMsgAccountBook_Unlock*>(
               &_CMsgAccountBook_Unlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  friend void swap(CMsgAccountBook_Unlock& a, CMsgAccountBook_Unlock& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAccountBook_Unlock* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAccountBook_Unlock* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAccountBook_Unlock* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgAccountBook_Unlock>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAccountBook_Unlock& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAccountBook_Unlock& from) {
    CMsgAccountBook_Unlock::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAccountBook_Unlock* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAccountBook.Unlock";
  }
  protected:
  explicit CMsgAccountBook_Unlock(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnlockIdFieldNumber = 1,
    kFlagsFieldNumber = 2,
  };
  // optional uint32 unlock_id = 1;
  bool has_unlock_id() const;
  private:
  bool _internal_has_unlock_id() const;
  public:
  void clear_unlock_id();
  uint32_t unlock_id() const;
  void set_unlock_id(uint32_t value);
  private:
  uint32_t _internal_unlock_id() const;
  void _internal_set_unlock_id(uint32_t value);
  public:

  // optional uint32 flags = 2;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  uint32_t flags() const;
  void set_flags(uint32_t value);
  private:
  uint32_t _internal_flags() const;
  void _internal_set_flags(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAccountBook.Unlock)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t unlock_id_;
    uint32_t flags_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgAccountBook final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAccountBook) */ {
 public:
  inline CMsgAccountBook() : CMsgAccountBook(nullptr) {}
  ~CMsgAccountBook() override;
  explicit PROTOBUF_CONSTEXPR CMsgAccountBook(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAccountBook(const CMsgAccountBook& from);
  CMsgAccountBook(CMsgAccountBook&& from) noexcept
    : CMsgAccountBook() {
    *this = ::std::move(from);
  }

  inline CMsgAccountBook& operator=(const CMsgAccountBook& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAccountBook& operator=(CMsgAccountBook&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAccountBook& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAccountBook* internal_default_instance() {
    return reinterpret_cast<const CMsgAccountBook*>(
               &_CMsgAccountBook_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  friend void swap(CMsgAccountBook& a, CMsgAccountBook& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAccountBook* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAccountBook* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAccountBook* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgAccountBook>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAccountBook& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAccountBook& from) {
    CMsgAccountBook::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAccountBook* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAccountBook";
  }
  protected:
  explicit CMsgAccountBook(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgAccountBook_Unlock Unlock;

  // accessors -------------------------------------------------------

  enum : int {
    kUnlocksFieldNumber = 4,
    kBookIdFieldNumber = 1,
    kBookXpFieldNumber = 2,
    kSpentXpFieldNumber = 3,
  };
  // repeated .CMsgAccountBook.Unlock unlocks = 4;
  int unlocks_size() const;
  private:
  int _internal_unlocks_size() const;
  public:
  void clear_unlocks();
  ::CMsgAccountBook_Unlock* mutable_unlocks(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountBook_Unlock >*
      mutable_unlocks();
  private:
  const ::CMsgAccountBook_Unlock& _internal_unlocks(int index) const;
  ::CMsgAccountBook_Unlock* _internal_add_unlocks();
  public:
  const ::CMsgAccountBook_Unlock& unlocks(int index) const;
  ::CMsgAccountBook_Unlock* add_unlocks();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountBook_Unlock >&
      unlocks() const;

  // optional uint32 book_id = 1;
  bool has_book_id() const;
  private:
  bool _internal_has_book_id() const;
  public:
  void clear_book_id();
  uint32_t book_id() const;
  void set_book_id(uint32_t value);
  private:
  uint32_t _internal_book_id() const;
  void _internal_set_book_id(uint32_t value);
  public:

  // optional uint32 book_xp = 2;
  bool has_book_xp() const;
  private:
  bool _internal_has_book_xp() const;
  public:
  void clear_book_xp();
  uint32_t book_xp() const;
  void set_book_xp(uint32_t value);
  private:
  uint32_t _internal_book_xp() const;
  void _internal_set_book_xp(uint32_t value);
  public:

  // optional uint32 spent_xp = 3;
  bool has_spent_xp() const;
  private:
  bool _internal_has_spent_xp() const;
  public:
  void clear_spent_xp();
  uint32_t spent_xp() const;
  void set_spent_xp(uint32_t value);
  private:
  uint32_t _internal_spent_xp() const;
  void _internal_set_spent_xp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAccountBook)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountBook_Unlock > unlocks_;
    uint32_t book_id_;
    uint32_t book_xp_;
    uint32_t spent_xp_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCBookUnlock final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCBookUnlock) */ {
 public:
  inline CMsgClientToGCBookUnlock() : CMsgClientToGCBookUnlock(nullptr) {}
  ~CMsgClientToGCBookUnlock() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCBookUnlock(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCBookUnlock(const CMsgClientToGCBookUnlock& from);
  CMsgClientToGCBookUnlock(CMsgClientToGCBookUnlock&& from) noexcept
    : CMsgClientToGCBookUnlock() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCBookUnlock& operator=(const CMsgClientToGCBookUnlock& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCBookUnlock& operator=(CMsgClientToGCBookUnlock&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCBookUnlock& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCBookUnlock* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCBookUnlock*>(
               &_CMsgClientToGCBookUnlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  friend void swap(CMsgClientToGCBookUnlock& a, CMsgClientToGCBookUnlock& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCBookUnlock* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCBookUnlock* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCBookUnlock* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCBookUnlock>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCBookUnlock& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCBookUnlock& from) {
    CMsgClientToGCBookUnlock::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCBookUnlock* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCBookUnlock";
  }
  protected:
  explicit CMsgClientToGCBookUnlock(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBookIdFieldNumber = 1,
    kUnlockIdFieldNumber = 2,
    kExpectedCostFieldNumber = 3,
    kClientVersionFieldNumber = 4,
  };
  // optional uint32 book_id = 1;
  bool has_book_id() const;
  private:
  bool _internal_has_book_id() const;
  public:
  void clear_book_id();
  uint32_t book_id() const;
  void set_book_id(uint32_t value);
  private:
  uint32_t _internal_book_id() const;
  void _internal_set_book_id(uint32_t value);
  public:

  // optional uint32 unlock_id = 2;
  bool has_unlock_id() const;
  private:
  bool _internal_has_unlock_id() const;
  public:
  void clear_unlock_id();
  uint32_t unlock_id() const;
  void set_unlock_id(uint32_t value);
  private:
  uint32_t _internal_unlock_id() const;
  void _internal_set_unlock_id(uint32_t value);
  public:

  // optional uint32 expected_cost = 3;
  bool has_expected_cost() const;
  private:
  bool _internal_has_expected_cost() const;
  public:
  void clear_expected_cost();
  uint32_t expected_cost() const;
  void set_expected_cost(uint32_t value);
  private:
  uint32_t _internal_expected_cost() const;
  void _internal_set_expected_cost(uint32_t value);
  public:

  // optional uint32 client_version = 4;
  bool has_client_version() const;
  private:
  bool _internal_has_client_version() const;
  public:
  void clear_client_version();
  uint32_t client_version() const;
  void set_client_version(uint32_t value);
  private:
  uint32_t _internal_client_version() const;
  void _internal_set_client_version(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCBookUnlock)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t book_id_;
    uint32_t unlock_id_;
    uint32_t expected_cost_;
    uint32_t client_version_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCBookUnlockResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCBookUnlockResponse) */ {
 public:
  inline CMsgClientToGCBookUnlockResponse() : CMsgClientToGCBookUnlockResponse(nullptr) {}
  ~CMsgClientToGCBookUnlockResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCBookUnlockResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCBookUnlockResponse(const CMsgClientToGCBookUnlockResponse& from);
  CMsgClientToGCBookUnlockResponse(CMsgClientToGCBookUnlockResponse&& from) noexcept
    : CMsgClientToGCBookUnlockResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCBookUnlockResponse& operator=(const CMsgClientToGCBookUnlockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCBookUnlockResponse& operator=(CMsgClientToGCBookUnlockResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCBookUnlockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCBookUnlockResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCBookUnlockResponse*>(
               &_CMsgClientToGCBookUnlockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  friend void swap(CMsgClientToGCBookUnlockResponse& a, CMsgClientToGCBookUnlockResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCBookUnlockResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCBookUnlockResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCBookUnlockResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCBookUnlockResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCBookUnlockResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCBookUnlockResponse& from) {
    CMsgClientToGCBookUnlockResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCBookUnlockResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCBookUnlockResponse";
  }
  protected:
  explicit CMsgClientToGCBookUnlockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCBookUnlockResponse_EResult EResult;
  static constexpr EResult k_eSuccess =
    CMsgClientToGCBookUnlockResponse_EResult_k_eSuccess;
  static constexpr EResult k_eInternalError =
    CMsgClientToGCBookUnlockResponse_EResult_k_eInternalError;
  static constexpr EResult k_eOutOfDateClient =
    CMsgClientToGCBookUnlockResponse_EResult_k_eOutOfDateClient;
  static constexpr EResult k_eInvalidFunds =
    CMsgClientToGCBookUnlockResponse_EResult_k_eInvalidFunds;
  static constexpr EResult k_eDisabled =
    CMsgClientToGCBookUnlockResponse_EResult_k_eDisabled;
  static constexpr EResult k_eTooBusy =
    CMsgClientToGCBookUnlockResponse_EResult_k_eTooBusy;
  static constexpr EResult k_eAlreadyUnlocked =
    CMsgClientToGCBookUnlockResponse_EResult_k_eAlreadyUnlocked;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCBookUnlockResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgClientToGCBookUnlockResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgClientToGCBookUnlockResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgClientToGCBookUnlockResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCBookUnlockResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgClientToGCBookUnlockResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgClientToGCBookUnlockResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kUpdatedBookFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgAccountBook updated_book = 2;
  bool has_updated_book() const;
  private:
  bool _internal_has_updated_book() const;
  public:
  void clear_updated_book();
  const ::CMsgAccountBook& updated_book() const;
  PROTOBUF_NODISCARD ::CMsgAccountBook* release_updated_book();
  ::CMsgAccountBook* mutable_updated_book();
  void set_allocated_updated_book(::CMsgAccountBook* updated_book);
  private:
  const ::CMsgAccountBook& _internal_updated_book() const;
  ::CMsgAccountBook* _internal_mutable_updated_book();
  public:
  void unsafe_arena_set_allocated_updated_book(
      ::CMsgAccountBook* updated_book);
  ::CMsgAccountBook* unsafe_arena_release_updated_book();

  // optional .CMsgClientToGCBookUnlockResponse.EResult result = 1 [default = k_eSuccess];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCBookUnlockResponse_EResult result() const;
  void set_result(::CMsgClientToGCBookUnlockResponse_EResult value);
  private:
  ::CMsgClientToGCBookUnlockResponse_EResult _internal_result() const;
  void _internal_set_result(::CMsgClientToGCBookUnlockResponse_EResult value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCBookUnlockResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgAccountBook* updated_book_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetBook final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetBook) */ {
 public:
  inline CMsgClientToGCGetBook() : CMsgClientToGCGetBook(nullptr) {}
  ~CMsgClientToGCGetBook() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetBook(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetBook(const CMsgClientToGCGetBook& from);
  CMsgClientToGCGetBook(CMsgClientToGCGetBook&& from) noexcept
    : CMsgClientToGCGetBook() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetBook& operator=(const CMsgClientToGCGetBook& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetBook& operator=(CMsgClientToGCGetBook&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetBook& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetBook* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetBook*>(
               &_CMsgClientToGCGetBook_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  friend void swap(CMsgClientToGCGetBook& a, CMsgClientToGCGetBook& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetBook* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetBook* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetBook* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetBook>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetBook& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetBook& from) {
    CMsgClientToGCGetBook::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetBook* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetBook";
  }
  protected:
  explicit CMsgClientToGCGetBook(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBookIdFieldNumber = 1,
  };
  // optional uint32 book_id = 1;
  bool has_book_id() const;
  private:
  bool _internal_has_book_id() const;
  public:
  void clear_book_id();
  uint32_t book_id() const;
  void set_book_id(uint32_t value);
  private:
  uint32_t _internal_book_id() const;
  void _internal_set_book_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetBook)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t book_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetBookResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetBookResponse) */ {
 public:
  inline CMsgClientToGCGetBookResponse() : CMsgClientToGCGetBookResponse(nullptr) {}
  ~CMsgClientToGCGetBookResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetBookResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetBookResponse(const CMsgClientToGCGetBookResponse& from);
  CMsgClientToGCGetBookResponse(CMsgClientToGCGetBookResponse&& from) noexcept
    : CMsgClientToGCGetBookResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetBookResponse& operator=(const CMsgClientToGCGetBookResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetBookResponse& operator=(CMsgClientToGCGetBookResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetBookResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetBookResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetBookResponse*>(
               &_CMsgClientToGCGetBookResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  friend void swap(CMsgClientToGCGetBookResponse& a, CMsgClientToGCGetBookResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetBookResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetBookResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetBookResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetBookResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetBookResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetBookResponse& from) {
    CMsgClientToGCGetBookResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetBookResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetBookResponse";
  }
  protected:
  explicit CMsgClientToGCGetBookResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetBookResponse_EResult EResult;
  static constexpr EResult k_eSuccess =
    CMsgClientToGCGetBookResponse_EResult_k_eSuccess;
  static constexpr EResult k_eInternalError =
    CMsgClientToGCGetBookResponse_EResult_k_eInternalError;
  static constexpr EResult k_eInvalidBook =
    CMsgClientToGCGetBookResponse_EResult_k_eInvalidBook;
  static constexpr EResult k_eDisabled =
    CMsgClientToGCGetBookResponse_EResult_k_eDisabled;
  static constexpr EResult k_eTooBusy =
    CMsgClientToGCGetBookResponse_EResult_k_eTooBusy;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCGetBookResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgClientToGCGetBookResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgClientToGCGetBookResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgClientToGCGetBookResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCGetBookResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgClientToGCGetBookResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgClientToGCGetBookResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kBookFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgAccountBook book = 2;
  bool has_book() const;
  private:
  bool _internal_has_book() const;
  public:
  void clear_book();
  const ::CMsgAccountBook& book() const;
  PROTOBUF_NODISCARD ::CMsgAccountBook* release_book();
  ::CMsgAccountBook* mutable_book();
  void set_allocated_book(::CMsgAccountBook* book);
  private:
  const ::CMsgAccountBook& _internal_book() const;
  ::CMsgAccountBook* _internal_mutable_book();
  public:
  void unsafe_arena_set_allocated_book(
      ::CMsgAccountBook* book);
  ::CMsgAccountBook* unsafe_arena_release_book();

  // optional .CMsgClientToGCGetBookResponse.EResult result = 1 [default = k_eSuccess];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCGetBookResponse_EResult result() const;
  void set_result(::CMsgClientToGCGetBookResponse_EResult value);
  private:
  ::CMsgClientToGCGetBookResponse_EResult _internal_result() const;
  void _internal_set_result(::CMsgClientToGCGetBookResponse_EResult value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetBookResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgAccountBook* book_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBookUpdated final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientBookUpdated) */ {
 public:
  inline CMsgGCToClientBookUpdated() : CMsgGCToClientBookUpdated(nullptr) {}
  ~CMsgGCToClientBookUpdated() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientBookUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientBookUpdated(const CMsgGCToClientBookUpdated& from);
  CMsgGCToClientBookUpdated(CMsgGCToClientBookUpdated&& from) noexcept
    : CMsgGCToClientBookUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBookUpdated& operator=(const CMsgGCToClientBookUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientBookUpdated& operator=(CMsgGCToClientBookUpdated&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientBookUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientBookUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBookUpdated*>(
               &_CMsgGCToClientBookUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  friend void swap(CMsgGCToClientBookUpdated& a, CMsgGCToClientBookUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientBookUpdated* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientBookUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientBookUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientBookUpdated>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientBookUpdated& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientBookUpdated& from) {
    CMsgGCToClientBookUpdated::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBookUpdated* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientBookUpdated";
  }
  protected:
  explicit CMsgGCToClientBookUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBookFieldNumber = 1,
  };
  // optional .CMsgAccountBook book = 1;
  bool has_book() const;
  private:
  bool _internal_has_book() const;
  public:
  void clear_book();
  const ::CMsgAccountBook& book() const;
  PROTOBUF_NODISCARD ::CMsgAccountBook* release_book();
  ::CMsgAccountBook* mutable_book();
  void set_allocated_book(::CMsgAccountBook* book);
  private:
  const ::CMsgAccountBook& _internal_book() const;
  ::CMsgAccountBook* _internal_mutable_book();
  public:
  void unsafe_arena_set_allocated_book(
      ::CMsgAccountBook* book);
  ::CMsgAccountBook* unsafe_arena_release_book();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientBookUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgAccountBook* book_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSubmitPlaytestUser final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSubmitPlaytestUser) */ {
 public:
  inline CMsgClientToGCSubmitPlaytestUser() : CMsgClientToGCSubmitPlaytestUser(nullptr) {}
  ~CMsgClientToGCSubmitPlaytestUser() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSubmitPlaytestUser(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSubmitPlaytestUser(const CMsgClientToGCSubmitPlaytestUser& from);
  CMsgClientToGCSubmitPlaytestUser(CMsgClientToGCSubmitPlaytestUser&& from) noexcept
    : CMsgClientToGCSubmitPlaytestUser() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSubmitPlaytestUser& operator=(const CMsgClientToGCSubmitPlaytestUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSubmitPlaytestUser& operator=(CMsgClientToGCSubmitPlaytestUser&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSubmitPlaytestUser& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSubmitPlaytestUser* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSubmitPlaytestUser*>(
               &_CMsgClientToGCSubmitPlaytestUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  friend void swap(CMsgClientToGCSubmitPlaytestUser& a, CMsgClientToGCSubmitPlaytestUser& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSubmitPlaytestUser* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSubmitPlaytestUser* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSubmitPlaytestUser* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSubmitPlaytestUser>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSubmitPlaytestUser& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSubmitPlaytestUser& from) {
    CMsgClientToGCSubmitPlaytestUser::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSubmitPlaytestUser* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSubmitPlaytestUser";
  }
  protected:
  explicit CMsgClientToGCSubmitPlaytestUser(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 3,
    kTargetAccountIdFieldNumber = 4,
  };
  // optional string location = 3;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const std::string& location() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_location(ArgT0&& arg0, ArgT... args);
  std::string* mutable_location();
  PROTOBUF_NODISCARD std::string* release_location();
  void set_allocated_location(std::string* location);
  private:
  const std::string& _internal_location() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_location(const std::string& value);
  std::string* _internal_mutable_location();
  public:

  // optional uint32 target_account_id = 4;
  bool has_target_account_id() const;
  private:
  bool _internal_has_target_account_id() const;
  public:
  void clear_target_account_id();
  uint32_t target_account_id() const;
  void set_target_account_id(uint32_t value);
  private:
  uint32_t _internal_target_account_id() const;
  void _internal_set_target_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSubmitPlaytestUser)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr location_;
    uint32_t target_account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSubmitPlaytestUserResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSubmitPlaytestUserResponse) */ {
 public:
  inline CMsgClientToGCSubmitPlaytestUserResponse() : CMsgClientToGCSubmitPlaytestUserResponse(nullptr) {}
  ~CMsgClientToGCSubmitPlaytestUserResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSubmitPlaytestUserResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSubmitPlaytestUserResponse(const CMsgClientToGCSubmitPlaytestUserResponse& from);
  CMsgClientToGCSubmitPlaytestUserResponse(CMsgClientToGCSubmitPlaytestUserResponse&& from) noexcept
    : CMsgClientToGCSubmitPlaytestUserResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSubmitPlaytestUserResponse& operator=(const CMsgClientToGCSubmitPlaytestUserResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSubmitPlaytestUserResponse& operator=(CMsgClientToGCSubmitPlaytestUserResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSubmitPlaytestUserResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSubmitPlaytestUserResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSubmitPlaytestUserResponse*>(
               &_CMsgClientToGCSubmitPlaytestUserResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  friend void swap(CMsgClientToGCSubmitPlaytestUserResponse& a, CMsgClientToGCSubmitPlaytestUserResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSubmitPlaytestUserResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSubmitPlaytestUserResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSubmitPlaytestUserResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSubmitPlaytestUserResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSubmitPlaytestUserResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSubmitPlaytestUserResponse& from) {
    CMsgClientToGCSubmitPlaytestUserResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSubmitPlaytestUserResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSubmitPlaytestUserResponse";
  }
  protected:
  explicit CMsgClientToGCSubmitPlaytestUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSubmitPlaytestUserResponse_EResponse EResponse;
  static constexpr EResponse eResponse_Success =
    CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_Success;
  static constexpr EResponse eResponse_InternalError =
    CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_InternalError;
  static constexpr EResponse eResponse_InvalidFriend =
    CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_InvalidFriend;
  static constexpr EResponse eResponse_NotFriendsLongEnough =
    CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_NotFriendsLongEnough;
  static constexpr EResponse eResponse_AlreadyHasGame =
    CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_AlreadyHasGame;
  static constexpr EResponse eResponse_LimitedUser =
    CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_LimitedUser;
  static constexpr EResponse eResponse_InviteLimitReached =
    CMsgClientToGCSubmitPlaytestUserResponse_EResponse_eResponse_InviteLimitReached;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCSubmitPlaytestUserResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCSubmitPlaytestUserResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCSubmitPlaytestUserResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCSubmitPlaytestUserResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCSubmitPlaytestUserResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCSubmitPlaytestUserResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCSubmitPlaytestUserResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 1,
  };
  // optional .CMsgClientToGCSubmitPlaytestUserResponse.EResponse response = 1 [default = eResponse_Success];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCSubmitPlaytestUserResponse_EResponse response() const;
  void set_response(::CMsgClientToGCSubmitPlaytestUserResponse_EResponse value);
  private:
  ::CMsgClientToGCSubmitPlaytestUserResponse_EResponse _internal_response() const;
  void _internal_set_response(::CMsgClientToGCSubmitPlaytestUserResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSubmitPlaytestUserResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroBuild_BuildModEntry final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgHeroBuild.BuildModEntry) */ {
 public:
  inline CMsgHeroBuild_BuildModEntry() : CMsgHeroBuild_BuildModEntry(nullptr) {}
  ~CMsgHeroBuild_BuildModEntry() override;
  explicit PROTOBUF_CONSTEXPR CMsgHeroBuild_BuildModEntry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgHeroBuild_BuildModEntry(const CMsgHeroBuild_BuildModEntry& from);
  CMsgHeroBuild_BuildModEntry(CMsgHeroBuild_BuildModEntry&& from) noexcept
    : CMsgHeroBuild_BuildModEntry() {
    *this = ::std::move(from);
  }

  inline CMsgHeroBuild_BuildModEntry& operator=(const CMsgHeroBuild_BuildModEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgHeroBuild_BuildModEntry& operator=(CMsgHeroBuild_BuildModEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgHeroBuild_BuildModEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgHeroBuild_BuildModEntry* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroBuild_BuildModEntry*>(
               &_CMsgHeroBuild_BuildModEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  friend void swap(CMsgHeroBuild_BuildModEntry& a, CMsgHeroBuild_BuildModEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgHeroBuild_BuildModEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgHeroBuild_BuildModEntry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgHeroBuild_BuildModEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgHeroBuild_BuildModEntry>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgHeroBuild_BuildModEntry& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgHeroBuild_BuildModEntry& from) {
    CMsgHeroBuild_BuildModEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHeroBuild_BuildModEntry* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgHeroBuild.BuildModEntry";
  }
  protected:
  explicit CMsgHeroBuild_BuildModEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAnnotationFieldNumber = 2,
    kAbilityIdFieldNumber = 1,
  };
  // optional string annotation = 2;
  bool has_annotation() const;
  private:
  bool _internal_has_annotation() const;
  public:
  void clear_annotation();
  const std::string& annotation() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_annotation(ArgT0&& arg0, ArgT... args);
  std::string* mutable_annotation();
  PROTOBUF_NODISCARD std::string* release_annotation();
  void set_allocated_annotation(std::string* annotation);
  private:
  const std::string& _internal_annotation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_annotation(const std::string& value);
  std::string* _internal_mutable_annotation();
  public:

  // optional uint32 ability_id = 1;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  uint32_t ability_id() const;
  void set_ability_id(uint32_t value);
  private:
  uint32_t _internal_ability_id() const;
  void _internal_set_ability_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgHeroBuild.BuildModEntry)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr annotation_;
    uint32_t ability_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroBuild_BuildModCategory final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgHeroBuild.BuildModCategory) */ {
 public:
  inline CMsgHeroBuild_BuildModCategory() : CMsgHeroBuild_BuildModCategory(nullptr) {}
  ~CMsgHeroBuild_BuildModCategory() override;
  explicit PROTOBUF_CONSTEXPR CMsgHeroBuild_BuildModCategory(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgHeroBuild_BuildModCategory(const CMsgHeroBuild_BuildModCategory& from);
  CMsgHeroBuild_BuildModCategory(CMsgHeroBuild_BuildModCategory&& from) noexcept
    : CMsgHeroBuild_BuildModCategory() {
    *this = ::std::move(from);
  }

  inline CMsgHeroBuild_BuildModCategory& operator=(const CMsgHeroBuild_BuildModCategory& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgHeroBuild_BuildModCategory& operator=(CMsgHeroBuild_BuildModCategory&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgHeroBuild_BuildModCategory& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgHeroBuild_BuildModCategory* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroBuild_BuildModCategory*>(
               &_CMsgHeroBuild_BuildModCategory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  friend void swap(CMsgHeroBuild_BuildModCategory& a, CMsgHeroBuild_BuildModCategory& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgHeroBuild_BuildModCategory* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgHeroBuild_BuildModCategory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgHeroBuild_BuildModCategory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgHeroBuild_BuildModCategory>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgHeroBuild_BuildModCategory& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgHeroBuild_BuildModCategory& from) {
    CMsgHeroBuild_BuildModCategory::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHeroBuild_BuildModCategory* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgHeroBuild.BuildModCategory";
  }
  protected:
  explicit CMsgHeroBuild_BuildModCategory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModsFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kWidthFieldNumber = 4,
    kHeightFieldNumber = 5,
  };
  // repeated .CMsgHeroBuild.BuildModEntry mods = 1;
  int mods_size() const;
  private:
  int _internal_mods_size() const;
  public:
  void clear_mods();
  ::CMsgHeroBuild_BuildModEntry* mutable_mods(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_BuildModEntry >*
      mutable_mods();
  private:
  const ::CMsgHeroBuild_BuildModEntry& _internal_mods(int index) const;
  ::CMsgHeroBuild_BuildModEntry* _internal_add_mods();
  public:
  const ::CMsgHeroBuild_BuildModEntry& mods(int index) const;
  ::CMsgHeroBuild_BuildModEntry* add_mods();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_BuildModEntry >&
      mods() const;

  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string description = 3;
  bool has_description() const;
  private:
  bool _internal_has_description() const;
  public:
  void clear_description();
  const std::string& description() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_description(ArgT0&& arg0, ArgT... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // optional float width = 4;
  bool has_width() const;
  private:
  bool _internal_has_width() const;
  public:
  void clear_width();
  float width() const;
  void set_width(float value);
  private:
  float _internal_width() const;
  void _internal_set_width(float value);
  public:

  // optional float height = 5;
  bool has_height() const;
  private:
  bool _internal_has_height() const;
  public:
  void clear_height();
  float height() const;
  void set_height(float value);
  private:
  float _internal_height() const;
  void _internal_set_height(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgHeroBuild.BuildModCategory)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_BuildModEntry > mods_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
    float width_;
    float height_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroBuild_CurrencyChange final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgHeroBuild.CurrencyChange) */ {
 public:
  inline CMsgHeroBuild_CurrencyChange() : CMsgHeroBuild_CurrencyChange(nullptr) {}
  ~CMsgHeroBuild_CurrencyChange() override;
  explicit PROTOBUF_CONSTEXPR CMsgHeroBuild_CurrencyChange(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgHeroBuild_CurrencyChange(const CMsgHeroBuild_CurrencyChange& from);
  CMsgHeroBuild_CurrencyChange(CMsgHeroBuild_CurrencyChange&& from) noexcept
    : CMsgHeroBuild_CurrencyChange() {
    *this = ::std::move(from);
  }

  inline CMsgHeroBuild_CurrencyChange& operator=(const CMsgHeroBuild_CurrencyChange& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgHeroBuild_CurrencyChange& operator=(CMsgHeroBuild_CurrencyChange&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgHeroBuild_CurrencyChange& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgHeroBuild_CurrencyChange* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroBuild_CurrencyChange*>(
               &_CMsgHeroBuild_CurrencyChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  friend void swap(CMsgHeroBuild_CurrencyChange& a, CMsgHeroBuild_CurrencyChange& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgHeroBuild_CurrencyChange* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgHeroBuild_CurrencyChange* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgHeroBuild_CurrencyChange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgHeroBuild_CurrencyChange>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgHeroBuild_CurrencyChange& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgHeroBuild_CurrencyChange& from) {
    CMsgHeroBuild_CurrencyChange::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHeroBuild_CurrencyChange* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgHeroBuild.CurrencyChange";
  }
  protected:
  explicit CMsgHeroBuild_CurrencyChange(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAnnotationFieldNumber = 4,
    kAbilityIdFieldNumber = 1,
    kCurrencyTypeFieldNumber = 2,
    kDeltaFieldNumber = 3,
  };
  // optional string annotation = 4;
  bool has_annotation() const;
  private:
  bool _internal_has_annotation() const;
  public:
  void clear_annotation();
  const std::string& annotation() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_annotation(ArgT0&& arg0, ArgT... args);
  std::string* mutable_annotation();
  PROTOBUF_NODISCARD std::string* release_annotation();
  void set_allocated_annotation(std::string* annotation);
  private:
  const std::string& _internal_annotation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_annotation(const std::string& value);
  std::string* _internal_mutable_annotation();
  public:

  // optional uint32 ability_id = 1;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  uint32_t ability_id() const;
  void set_ability_id(uint32_t value);
  private:
  uint32_t _internal_ability_id() const;
  void _internal_set_ability_id(uint32_t value);
  public:

  // optional int32 currency_type = 2;
  bool has_currency_type() const;
  private:
  bool _internal_has_currency_type() const;
  public:
  void clear_currency_type();
  int32_t currency_type() const;
  void set_currency_type(int32_t value);
  private:
  int32_t _internal_currency_type() const;
  void _internal_set_currency_type(int32_t value);
  public:

  // optional int32 delta = 3;
  bool has_delta() const;
  private:
  bool _internal_has_delta() const;
  public:
  void clear_delta();
  int32_t delta() const;
  void set_delta(int32_t value);
  private:
  int32_t _internal_delta() const;
  void _internal_set_delta(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgHeroBuild.CurrencyChange)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr annotation_;
    uint32_t ability_id_;
    int32_t currency_type_;
    int32_t delta_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroBuild_AbilityOrder final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgHeroBuild.AbilityOrder) */ {
 public:
  inline CMsgHeroBuild_AbilityOrder() : CMsgHeroBuild_AbilityOrder(nullptr) {}
  ~CMsgHeroBuild_AbilityOrder() override;
  explicit PROTOBUF_CONSTEXPR CMsgHeroBuild_AbilityOrder(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgHeroBuild_AbilityOrder(const CMsgHeroBuild_AbilityOrder& from);
  CMsgHeroBuild_AbilityOrder(CMsgHeroBuild_AbilityOrder&& from) noexcept
    : CMsgHeroBuild_AbilityOrder() {
    *this = ::std::move(from);
  }

  inline CMsgHeroBuild_AbilityOrder& operator=(const CMsgHeroBuild_AbilityOrder& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgHeroBuild_AbilityOrder& operator=(CMsgHeroBuild_AbilityOrder&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgHeroBuild_AbilityOrder& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgHeroBuild_AbilityOrder* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroBuild_AbilityOrder*>(
               &_CMsgHeroBuild_AbilityOrder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  friend void swap(CMsgHeroBuild_AbilityOrder& a, CMsgHeroBuild_AbilityOrder& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgHeroBuild_AbilityOrder* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgHeroBuild_AbilityOrder* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgHeroBuild_AbilityOrder* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgHeroBuild_AbilityOrder>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgHeroBuild_AbilityOrder& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgHeroBuild_AbilityOrder& from) {
    CMsgHeroBuild_AbilityOrder::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHeroBuild_AbilityOrder* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgHeroBuild.AbilityOrder";
  }
  protected:
  explicit CMsgHeroBuild_AbilityOrder(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurrencyChangesFieldNumber = 1,
  };
  // repeated .CMsgHeroBuild.CurrencyChange currency_changes = 1;
  int currency_changes_size() const;
  private:
  int _internal_currency_changes_size() const;
  public:
  void clear_currency_changes();
  ::CMsgHeroBuild_CurrencyChange* mutable_currency_changes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_CurrencyChange >*
      mutable_currency_changes();
  private:
  const ::CMsgHeroBuild_CurrencyChange& _internal_currency_changes(int index) const;
  ::CMsgHeroBuild_CurrencyChange* _internal_add_currency_changes();
  public:
  const ::CMsgHeroBuild_CurrencyChange& currency_changes(int index) const;
  ::CMsgHeroBuild_CurrencyChange* add_currency_changes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_CurrencyChange >&
      currency_changes() const;

  // @@protoc_insertion_point(class_scope:CMsgHeroBuild.AbilityOrder)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_CurrencyChange > currency_changes_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroBuild_Details_V0 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgHeroBuild.Details_V0) */ {
 public:
  inline CMsgHeroBuild_Details_V0() : CMsgHeroBuild_Details_V0(nullptr) {}
  ~CMsgHeroBuild_Details_V0() override;
  explicit PROTOBUF_CONSTEXPR CMsgHeroBuild_Details_V0(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgHeroBuild_Details_V0(const CMsgHeroBuild_Details_V0& from);
  CMsgHeroBuild_Details_V0(CMsgHeroBuild_Details_V0&& from) noexcept
    : CMsgHeroBuild_Details_V0() {
    *this = ::std::move(from);
  }

  inline CMsgHeroBuild_Details_V0& operator=(const CMsgHeroBuild_Details_V0& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgHeroBuild_Details_V0& operator=(CMsgHeroBuild_Details_V0&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgHeroBuild_Details_V0& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgHeroBuild_Details_V0* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroBuild_Details_V0*>(
               &_CMsgHeroBuild_Details_V0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  friend void swap(CMsgHeroBuild_Details_V0& a, CMsgHeroBuild_Details_V0& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgHeroBuild_Details_V0* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgHeroBuild_Details_V0* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgHeroBuild_Details_V0* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgHeroBuild_Details_V0>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgHeroBuild_Details_V0& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgHeroBuild_Details_V0& from) {
    CMsgHeroBuild_Details_V0::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHeroBuild_Details_V0* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgHeroBuild.Details_V0";
  }
  protected:
  explicit CMsgHeroBuild_Details_V0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModCategoriesFieldNumber = 1,
    kAbilityOrderFieldNumber = 2,
  };
  // repeated .CMsgHeroBuild.BuildModCategory mod_categories = 1;
  int mod_categories_size() const;
  private:
  int _internal_mod_categories_size() const;
  public:
  void clear_mod_categories();
  ::CMsgHeroBuild_BuildModCategory* mutable_mod_categories(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_BuildModCategory >*
      mutable_mod_categories();
  private:
  const ::CMsgHeroBuild_BuildModCategory& _internal_mod_categories(int index) const;
  ::CMsgHeroBuild_BuildModCategory* _internal_add_mod_categories();
  public:
  const ::CMsgHeroBuild_BuildModCategory& mod_categories(int index) const;
  ::CMsgHeroBuild_BuildModCategory* add_mod_categories();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_BuildModCategory >&
      mod_categories() const;

  // optional .CMsgHeroBuild.AbilityOrder ability_order = 2;
  bool has_ability_order() const;
  private:
  bool _internal_has_ability_order() const;
  public:
  void clear_ability_order();
  const ::CMsgHeroBuild_AbilityOrder& ability_order() const;
  PROTOBUF_NODISCARD ::CMsgHeroBuild_AbilityOrder* release_ability_order();
  ::CMsgHeroBuild_AbilityOrder* mutable_ability_order();
  void set_allocated_ability_order(::CMsgHeroBuild_AbilityOrder* ability_order);
  private:
  const ::CMsgHeroBuild_AbilityOrder& _internal_ability_order() const;
  ::CMsgHeroBuild_AbilityOrder* _internal_mutable_ability_order();
  public:
  void unsafe_arena_set_allocated_ability_order(
      ::CMsgHeroBuild_AbilityOrder* ability_order);
  ::CMsgHeroBuild_AbilityOrder* unsafe_arena_release_ability_order();

  // @@protoc_insertion_point(class_scope:CMsgHeroBuild.Details_V0)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_BuildModCategory > mod_categories_;
    ::CMsgHeroBuild_AbilityOrder* ability_order_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroBuild final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgHeroBuild) */ {
 public:
  inline CMsgHeroBuild() : CMsgHeroBuild(nullptr) {}
  ~CMsgHeroBuild() override;
  explicit PROTOBUF_CONSTEXPR CMsgHeroBuild(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgHeroBuild(const CMsgHeroBuild& from);
  CMsgHeroBuild(CMsgHeroBuild&& from) noexcept
    : CMsgHeroBuild() {
    *this = ::std::move(from);
  }

  inline CMsgHeroBuild& operator=(const CMsgHeroBuild& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgHeroBuild& operator=(CMsgHeroBuild&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgHeroBuild& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgHeroBuild* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroBuild*>(
               &_CMsgHeroBuild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  friend void swap(CMsgHeroBuild& a, CMsgHeroBuild& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgHeroBuild* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgHeroBuild* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgHeroBuild* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgHeroBuild>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgHeroBuild& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgHeroBuild& from) {
    CMsgHeroBuild::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHeroBuild* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgHeroBuild";
  }
  protected:
  explicit CMsgHeroBuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgHeroBuild_BuildModEntry BuildModEntry;
  typedef CMsgHeroBuild_BuildModCategory BuildModCategory;
  typedef CMsgHeroBuild_CurrencyChange CurrencyChange;
  typedef CMsgHeroBuild_AbilityOrder AbilityOrder;
  typedef CMsgHeroBuild_Details_V0 Details_V0;

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 5,
    kDescriptionFieldNumber = 6,
    kDetailsFieldNumber = 10,
    kHeroBuildIdFieldNumber = 1,
    kHeroIdFieldNumber = 2,
    kAuthorAccountIdFieldNumber = 3,
    kLastUpdatedTimestampFieldNumber = 4,
    kLanguageFieldNumber = 7,
    kVersionFieldNumber = 8,
    kOriginBuildIdFieldNumber = 9,
  };
  // optional string name = 5;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string description = 6;
  bool has_description() const;
  private:
  bool _internal_has_description() const;
  public:
  void clear_description();
  const std::string& description() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_description(ArgT0&& arg0, ArgT... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // optional .CMsgHeroBuild.Details_V0 details = 10;
  bool has_details() const;
  private:
  bool _internal_has_details() const;
  public:
  void clear_details();
  const ::CMsgHeroBuild_Details_V0& details() const;
  PROTOBUF_NODISCARD ::CMsgHeroBuild_Details_V0* release_details();
  ::CMsgHeroBuild_Details_V0* mutable_details();
  void set_allocated_details(::CMsgHeroBuild_Details_V0* details);
  private:
  const ::CMsgHeroBuild_Details_V0& _internal_details() const;
  ::CMsgHeroBuild_Details_V0* _internal_mutable_details();
  public:
  void unsafe_arena_set_allocated_details(
      ::CMsgHeroBuild_Details_V0* details);
  ::CMsgHeroBuild_Details_V0* unsafe_arena_release_details();

  // optional uint32 hero_build_id = 1;
  bool has_hero_build_id() const;
  private:
  bool _internal_has_hero_build_id() const;
  public:
  void clear_hero_build_id();
  uint32_t hero_build_id() const;
  void set_hero_build_id(uint32_t value);
  private:
  uint32_t _internal_hero_build_id() const;
  void _internal_set_hero_build_id(uint32_t value);
  public:

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // optional uint32 author_account_id = 3;
  bool has_author_account_id() const;
  private:
  bool _internal_has_author_account_id() const;
  public:
  void clear_author_account_id();
  uint32_t author_account_id() const;
  void set_author_account_id(uint32_t value);
  private:
  uint32_t _internal_author_account_id() const;
  void _internal_set_author_account_id(uint32_t value);
  public:

  // optional uint32 last_updated_timestamp = 4;
  bool has_last_updated_timestamp() const;
  private:
  bool _internal_has_last_updated_timestamp() const;
  public:
  void clear_last_updated_timestamp();
  uint32_t last_updated_timestamp() const;
  void set_last_updated_timestamp(uint32_t value);
  private:
  uint32_t _internal_last_updated_timestamp() const;
  void _internal_set_last_updated_timestamp(uint32_t value);
  public:

  // optional uint32 language = 7;
  bool has_language() const;
  private:
  bool _internal_has_language() const;
  public:
  void clear_language();
  uint32_t language() const;
  void set_language(uint32_t value);
  private:
  uint32_t _internal_language() const;
  void _internal_set_language(uint32_t value);
  public:

  // optional uint32 version = 8;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  uint32_t version() const;
  void set_version(uint32_t value);
  private:
  uint32_t _internal_version() const;
  void _internal_set_version(uint32_t value);
  public:

  // optional uint32 origin_build_id = 9;
  bool has_origin_build_id() const;
  private:
  bool _internal_has_origin_build_id() const;
  public:
  void clear_origin_build_id();
  uint32_t origin_build_id() const;
  void set_origin_build_id(uint32_t value);
  private:
  uint32_t _internal_origin_build_id() const;
  void _internal_set_origin_build_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgHeroBuild)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
    ::CMsgHeroBuild_Details_V0* details_;
    uint32_t hero_build_id_;
    uint32_t hero_id_;
    uint32_t author_account_id_;
    uint32_t last_updated_timestamp_;
    uint32_t language_;
    uint32_t version_;
    uint32_t origin_build_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUpdateHeroBuild final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUpdateHeroBuild) */ {
 public:
  inline CMsgClientToGCUpdateHeroBuild() : CMsgClientToGCUpdateHeroBuild(nullptr) {}
  ~CMsgClientToGCUpdateHeroBuild() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUpdateHeroBuild(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUpdateHeroBuild(const CMsgClientToGCUpdateHeroBuild& from);
  CMsgClientToGCUpdateHeroBuild(CMsgClientToGCUpdateHeroBuild&& from) noexcept
    : CMsgClientToGCUpdateHeroBuild() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUpdateHeroBuild& operator=(const CMsgClientToGCUpdateHeroBuild& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUpdateHeroBuild& operator=(CMsgClientToGCUpdateHeroBuild&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUpdateHeroBuild& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUpdateHeroBuild* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUpdateHeroBuild*>(
               &_CMsgClientToGCUpdateHeroBuild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  friend void swap(CMsgClientToGCUpdateHeroBuild& a, CMsgClientToGCUpdateHeroBuild& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUpdateHeroBuild* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUpdateHeroBuild* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUpdateHeroBuild* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUpdateHeroBuild>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUpdateHeroBuild& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUpdateHeroBuild& from) {
    CMsgClientToGCUpdateHeroBuild::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUpdateHeroBuild* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUpdateHeroBuild";
  }
  protected:
  explicit CMsgClientToGCUpdateHeroBuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroBuildFieldNumber = 1,
  };
  // optional .CMsgHeroBuild hero_build = 1;
  bool has_hero_build() const;
  private:
  bool _internal_has_hero_build() const;
  public:
  void clear_hero_build();
  const ::CMsgHeroBuild& hero_build() const;
  PROTOBUF_NODISCARD ::CMsgHeroBuild* release_hero_build();
  ::CMsgHeroBuild* mutable_hero_build();
  void set_allocated_hero_build(::CMsgHeroBuild* hero_build);
  private:
  const ::CMsgHeroBuild& _internal_hero_build() const;
  ::CMsgHeroBuild* _internal_mutable_hero_build();
  public:
  void unsafe_arena_set_allocated_hero_build(
      ::CMsgHeroBuild* hero_build);
  ::CMsgHeroBuild* unsafe_arena_release_hero_build();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUpdateHeroBuild)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgHeroBuild* hero_build_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUpdateHeroBuildResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUpdateHeroBuildResponse) */ {
 public:
  inline CMsgClientToGCUpdateHeroBuildResponse() : CMsgClientToGCUpdateHeroBuildResponse(nullptr) {}
  ~CMsgClientToGCUpdateHeroBuildResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUpdateHeroBuildResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUpdateHeroBuildResponse(const CMsgClientToGCUpdateHeroBuildResponse& from);
  CMsgClientToGCUpdateHeroBuildResponse(CMsgClientToGCUpdateHeroBuildResponse&& from) noexcept
    : CMsgClientToGCUpdateHeroBuildResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUpdateHeroBuildResponse& operator=(const CMsgClientToGCUpdateHeroBuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUpdateHeroBuildResponse& operator=(CMsgClientToGCUpdateHeroBuildResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUpdateHeroBuildResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUpdateHeroBuildResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUpdateHeroBuildResponse*>(
               &_CMsgClientToGCUpdateHeroBuildResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  friend void swap(CMsgClientToGCUpdateHeroBuildResponse& a, CMsgClientToGCUpdateHeroBuildResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUpdateHeroBuildResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUpdateHeroBuildResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUpdateHeroBuildResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUpdateHeroBuildResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUpdateHeroBuildResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUpdateHeroBuildResponse& from) {
    CMsgClientToGCUpdateHeroBuildResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUpdateHeroBuildResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUpdateHeroBuildResponse";
  }
  protected:
  explicit CMsgClientToGCUpdateHeroBuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCUpdateHeroBuildResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCUpdateHeroBuildResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCUpdateHeroBuildResponse_EResponse_k_eSuccess;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCUpdateHeroBuildResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCUpdateHeroBuildResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCUpdateHeroBuildResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCUpdateHeroBuildResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCUpdateHeroBuildResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCUpdateHeroBuildResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCUpdateHeroBuildResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 1,
    kHeroBuildIdFieldNumber = 2,
    kVersionFieldNumber = 3,
  };
  // optional .CMsgClientToGCUpdateHeroBuildResponse.EResponse response = 1 [default = k_eInternalError];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCUpdateHeroBuildResponse_EResponse response() const;
  void set_response(::CMsgClientToGCUpdateHeroBuildResponse_EResponse value);
  private:
  ::CMsgClientToGCUpdateHeroBuildResponse_EResponse _internal_response() const;
  void _internal_set_response(::CMsgClientToGCUpdateHeroBuildResponse_EResponse value);
  public:

  // optional uint32 hero_build_id = 2;
  bool has_hero_build_id() const;
  private:
  bool _internal_has_hero_build_id() const;
  public:
  void clear_hero_build_id();
  uint32_t hero_build_id() const;
  void set_hero_build_id(uint32_t value);
  private:
  uint32_t _internal_hero_build_id() const;
  void _internal_set_hero_build_id(uint32_t value);
  public:

  // optional uint32 version = 3;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  uint32_t version() const;
  void set_version(uint32_t value);
  private:
  uint32_t _internal_version() const;
  void _internal_set_version(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUpdateHeroBuildResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int response_;
    uint32_t hero_build_id_;
    uint32_t version_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCFindHeroBuilds final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCFindHeroBuilds) */ {
 public:
  inline CMsgClientToGCFindHeroBuilds() : CMsgClientToGCFindHeroBuilds(nullptr) {}
  ~CMsgClientToGCFindHeroBuilds() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCFindHeroBuilds(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCFindHeroBuilds(const CMsgClientToGCFindHeroBuilds& from);
  CMsgClientToGCFindHeroBuilds(CMsgClientToGCFindHeroBuilds&& from) noexcept
    : CMsgClientToGCFindHeroBuilds() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCFindHeroBuilds& operator=(const CMsgClientToGCFindHeroBuilds& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCFindHeroBuilds& operator=(CMsgClientToGCFindHeroBuilds&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCFindHeroBuilds& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCFindHeroBuilds* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCFindHeroBuilds*>(
               &_CMsgClientToGCFindHeroBuilds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  friend void swap(CMsgClientToGCFindHeroBuilds& a, CMsgClientToGCFindHeroBuilds& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCFindHeroBuilds* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCFindHeroBuilds* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCFindHeroBuilds* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCFindHeroBuilds>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCFindHeroBuilds& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCFindHeroBuilds& from) {
    CMsgClientToGCFindHeroBuilds::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCFindHeroBuilds* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCFindHeroBuilds";
  }
  protected:
  explicit CMsgClientToGCFindHeroBuilds(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLanguageFieldNumber = 3,
    kSearchTextFieldNumber = 4,
    kAuthorAccountIdFieldNumber = 1,
    kHeroIdFieldNumber = 2,
    kHeroBuildIdFieldNumber = 5,
  };
  // repeated int32 language = 3;
  int language_size() const;
  private:
  int _internal_language_size() const;
  public:
  void clear_language();
  private:
  int32_t _internal_language(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_language() const;
  void _internal_add_language(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_language();
  public:
  int32_t language(int index) const;
  void set_language(int index, int32_t value);
  void add_language(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      language() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_language();

  // optional string search_text = 4;
  bool has_search_text() const;
  private:
  bool _internal_has_search_text() const;
  public:
  void clear_search_text();
  const std::string& search_text() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_search_text(ArgT0&& arg0, ArgT... args);
  std::string* mutable_search_text();
  PROTOBUF_NODISCARD std::string* release_search_text();
  void set_allocated_search_text(std::string* search_text);
  private:
  const std::string& _internal_search_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_search_text(const std::string& value);
  std::string* _internal_mutable_search_text();
  public:

  // optional uint32 author_account_id = 1;
  bool has_author_account_id() const;
  private:
  bool _internal_has_author_account_id() const;
  public:
  void clear_author_account_id();
  uint32_t author_account_id() const;
  void set_author_account_id(uint32_t value);
  private:
  uint32_t _internal_author_account_id() const;
  void _internal_set_author_account_id(uint32_t value);
  public:

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // optional uint32 hero_build_id = 5;
  bool has_hero_build_id() const;
  private:
  bool _internal_has_hero_build_id() const;
  public:
  void clear_hero_build_id();
  uint32_t hero_build_id() const;
  void set_hero_build_id(uint32_t value);
  private:
  uint32_t _internal_hero_build_id() const;
  void _internal_set_hero_build_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCFindHeroBuilds)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > language_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr search_text_;
    uint32_t author_account_id_;
    uint32_t hero_id_;
    uint32_t hero_build_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroBuildPreference final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgHeroBuildPreference) */ {
 public:
  inline CMsgHeroBuildPreference() : CMsgHeroBuildPreference(nullptr) {}
  ~CMsgHeroBuildPreference() override;
  explicit PROTOBUF_CONSTEXPR CMsgHeroBuildPreference(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgHeroBuildPreference(const CMsgHeroBuildPreference& from);
  CMsgHeroBuildPreference(CMsgHeroBuildPreference&& from) noexcept
    : CMsgHeroBuildPreference() {
    *this = ::std::move(from);
  }

  inline CMsgHeroBuildPreference& operator=(const CMsgHeroBuildPreference& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgHeroBuildPreference& operator=(CMsgHeroBuildPreference&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgHeroBuildPreference& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgHeroBuildPreference* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroBuildPreference*>(
               &_CMsgHeroBuildPreference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  friend void swap(CMsgHeroBuildPreference& a, CMsgHeroBuildPreference& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgHeroBuildPreference* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgHeroBuildPreference* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgHeroBuildPreference* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgHeroBuildPreference>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgHeroBuildPreference& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgHeroBuildPreference& from) {
    CMsgHeroBuildPreference::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHeroBuildPreference* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgHeroBuildPreference";
  }
  protected:
  explicit CMsgHeroBuildPreference(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFavoritedFieldNumber = 1,
    kIgnoredFieldNumber = 2,
    kReportedFieldNumber = 3,
  };
  // optional bool favorited = 1;
  bool has_favorited() const;
  private:
  bool _internal_has_favorited() const;
  public:
  void clear_favorited();
  bool favorited() const;
  void set_favorited(bool value);
  private:
  bool _internal_favorited() const;
  void _internal_set_favorited(bool value);
  public:

  // optional bool ignored = 2;
  bool has_ignored() const;
  private:
  bool _internal_has_ignored() const;
  public:
  void clear_ignored();
  bool ignored() const;
  void set_ignored(bool value);
  private:
  bool _internal_ignored() const;
  void _internal_set_ignored(bool value);
  public:

  // optional bool reported = 3;
  bool has_reported() const;
  private:
  bool _internal_has_reported() const;
  public:
  void clear_reported();
  bool reported() const;
  void set_reported(bool value);
  private:
  bool _internal_reported() const;
  void _internal_set_reported(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgHeroBuildPreference)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool favorited_;
    bool ignored_;
    bool reported_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult) */ {
 public:
  inline CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult() : CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult(nullptr) {}
  ~CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult(const CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& from);
  CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult(CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult&& from) noexcept
    : CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& operator=(const CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& operator=(CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult*>(
               &_CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  friend void swap(CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& a, CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& from) {
    CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult";
  }
  protected:
  explicit CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroBuildFieldNumber = 1,
    kPreferenceFieldNumber = 2,
    kNumFavoritesFieldNumber = 3,
    kNumIgnoresFieldNumber = 4,
    kNumReportsFieldNumber = 5,
    kNumWeeklyFavoritesFieldNumber = 6,
    kNumDailyFavoritesFieldNumber = 7,
    kRollupCategoryFieldNumber = 8,
  };
  // optional .CMsgHeroBuild hero_build = 1;
  bool has_hero_build() const;
  private:
  bool _internal_has_hero_build() const;
  public:
  void clear_hero_build();
  const ::CMsgHeroBuild& hero_build() const;
  PROTOBUF_NODISCARD ::CMsgHeroBuild* release_hero_build();
  ::CMsgHeroBuild* mutable_hero_build();
  void set_allocated_hero_build(::CMsgHeroBuild* hero_build);
  private:
  const ::CMsgHeroBuild& _internal_hero_build() const;
  ::CMsgHeroBuild* _internal_mutable_hero_build();
  public:
  void unsafe_arena_set_allocated_hero_build(
      ::CMsgHeroBuild* hero_build);
  ::CMsgHeroBuild* unsafe_arena_release_hero_build();

  // optional .CMsgHeroBuildPreference preference = 2;
  bool has_preference() const;
  private:
  bool _internal_has_preference() const;
  public:
  void clear_preference();
  const ::CMsgHeroBuildPreference& preference() const;
  PROTOBUF_NODISCARD ::CMsgHeroBuildPreference* release_preference();
  ::CMsgHeroBuildPreference* mutable_preference();
  void set_allocated_preference(::CMsgHeroBuildPreference* preference);
  private:
  const ::CMsgHeroBuildPreference& _internal_preference() const;
  ::CMsgHeroBuildPreference* _internal_mutable_preference();
  public:
  void unsafe_arena_set_allocated_preference(
      ::CMsgHeroBuildPreference* preference);
  ::CMsgHeroBuildPreference* unsafe_arena_release_preference();

  // optional uint32 num_favorites = 3;
  bool has_num_favorites() const;
  private:
  bool _internal_has_num_favorites() const;
  public:
  void clear_num_favorites();
  uint32_t num_favorites() const;
  void set_num_favorites(uint32_t value);
  private:
  uint32_t _internal_num_favorites() const;
  void _internal_set_num_favorites(uint32_t value);
  public:

  // optional uint32 num_ignores = 4;
  bool has_num_ignores() const;
  private:
  bool _internal_has_num_ignores() const;
  public:
  void clear_num_ignores();
  uint32_t num_ignores() const;
  void set_num_ignores(uint32_t value);
  private:
  uint32_t _internal_num_ignores() const;
  void _internal_set_num_ignores(uint32_t value);
  public:

  // optional uint32 num_reports = 5;
  bool has_num_reports() const;
  private:
  bool _internal_has_num_reports() const;
  public:
  void clear_num_reports();
  uint32_t num_reports() const;
  void set_num_reports(uint32_t value);
  private:
  uint32_t _internal_num_reports() const;
  void _internal_set_num_reports(uint32_t value);
  public:

  // optional uint32 num_weekly_favorites = 6;
  bool has_num_weekly_favorites() const;
  private:
  bool _internal_has_num_weekly_favorites() const;
  public:
  void clear_num_weekly_favorites();
  uint32_t num_weekly_favorites() const;
  void set_num_weekly_favorites(uint32_t value);
  private:
  uint32_t _internal_num_weekly_favorites() const;
  void _internal_set_num_weekly_favorites(uint32_t value);
  public:

  // optional uint32 num_daily_favorites = 7;
  bool has_num_daily_favorites() const;
  private:
  bool _internal_has_num_daily_favorites() const;
  public:
  void clear_num_daily_favorites();
  uint32_t num_daily_favorites() const;
  void set_num_daily_favorites(uint32_t value);
  private:
  uint32_t _internal_num_daily_favorites() const;
  void _internal_set_num_daily_favorites(uint32_t value);
  public:

  // optional uint32 rollup_category = 8;
  bool has_rollup_category() const;
  private:
  bool _internal_has_rollup_category() const;
  public:
  void clear_rollup_category();
  uint32_t rollup_category() const;
  void set_rollup_category(uint32_t value);
  private:
  uint32_t _internal_rollup_category() const;
  void _internal_set_rollup_category(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgHeroBuild* hero_build_;
    ::CMsgHeroBuildPreference* preference_;
    uint32_t num_favorites_;
    uint32_t num_ignores_;
    uint32_t num_reports_;
    uint32_t num_weekly_favorites_;
    uint32_t num_daily_favorites_;
    uint32_t rollup_category_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCFindHeroBuildsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCFindHeroBuildsResponse) */ {
 public:
  inline CMsgClientToGCFindHeroBuildsResponse() : CMsgClientToGCFindHeroBuildsResponse(nullptr) {}
  ~CMsgClientToGCFindHeroBuildsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCFindHeroBuildsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCFindHeroBuildsResponse(const CMsgClientToGCFindHeroBuildsResponse& from);
  CMsgClientToGCFindHeroBuildsResponse(CMsgClientToGCFindHeroBuildsResponse&& from) noexcept
    : CMsgClientToGCFindHeroBuildsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCFindHeroBuildsResponse& operator=(const CMsgClientToGCFindHeroBuildsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCFindHeroBuildsResponse& operator=(CMsgClientToGCFindHeroBuildsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCFindHeroBuildsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCFindHeroBuildsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCFindHeroBuildsResponse*>(
               &_CMsgClientToGCFindHeroBuildsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  friend void swap(CMsgClientToGCFindHeroBuildsResponse& a, CMsgClientToGCFindHeroBuildsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCFindHeroBuildsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCFindHeroBuildsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCFindHeroBuildsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCFindHeroBuildsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCFindHeroBuildsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCFindHeroBuildsResponse& from) {
    CMsgClientToGCFindHeroBuildsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCFindHeroBuildsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCFindHeroBuildsResponse";
  }
  protected:
  explicit CMsgClientToGCFindHeroBuildsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult HeroBuildResult;

  typedef CMsgClientToGCFindHeroBuildsResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCFindHeroBuildsResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCFindHeroBuildsResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCFindHeroBuildsResponse_EResponse_k_eTooBusy;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCFindHeroBuildsResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCFindHeroBuildsResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCFindHeroBuildsResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCFindHeroBuildsResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCFindHeroBuildsResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCFindHeroBuildsResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCFindHeroBuildsResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultsFieldNumber = 2,
    kResponseFieldNumber = 1,
  };
  // repeated .CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult results = 2;
  int results_size() const;
  private:
  int _internal_results_size() const;
  public:
  void clear_results();
  ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* mutable_results(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult >*
      mutable_results();
  private:
  const ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& _internal_results(int index) const;
  ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* _internal_add_results();
  public:
  const ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& results(int index) const;
  ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* add_results();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult >&
      results() const;

  // optional .CMsgClientToGCFindHeroBuildsResponse.EResponse response = 1 [default = k_eInternalError];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCFindHeroBuildsResponse_EResponse response() const;
  void set_response(::CMsgClientToGCFindHeroBuildsResponse_EResponse value);
  private:
  ::CMsgClientToGCFindHeroBuildsResponse_EResponse _internal_response() const;
  void _internal_set_response(::CMsgClientToGCFindHeroBuildsResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCFindHeroBuildsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult > results_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUpdateHeroBuildPreference final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUpdateHeroBuildPreference) */ {
 public:
  inline CMsgClientToGCUpdateHeroBuildPreference() : CMsgClientToGCUpdateHeroBuildPreference(nullptr) {}
  ~CMsgClientToGCUpdateHeroBuildPreference() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUpdateHeroBuildPreference(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUpdateHeroBuildPreference(const CMsgClientToGCUpdateHeroBuildPreference& from);
  CMsgClientToGCUpdateHeroBuildPreference(CMsgClientToGCUpdateHeroBuildPreference&& from) noexcept
    : CMsgClientToGCUpdateHeroBuildPreference() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUpdateHeroBuildPreference& operator=(const CMsgClientToGCUpdateHeroBuildPreference& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUpdateHeroBuildPreference& operator=(CMsgClientToGCUpdateHeroBuildPreference&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUpdateHeroBuildPreference& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUpdateHeroBuildPreference* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUpdateHeroBuildPreference*>(
               &_CMsgClientToGCUpdateHeroBuildPreference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  friend void swap(CMsgClientToGCUpdateHeroBuildPreference& a, CMsgClientToGCUpdateHeroBuildPreference& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUpdateHeroBuildPreference* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUpdateHeroBuildPreference* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUpdateHeroBuildPreference* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUpdateHeroBuildPreference>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUpdateHeroBuildPreference& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUpdateHeroBuildPreference& from) {
    CMsgClientToGCUpdateHeroBuildPreference::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUpdateHeroBuildPreference* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUpdateHeroBuildPreference";
  }
  protected:
  explicit CMsgClientToGCUpdateHeroBuildPreference(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPreferenceFieldNumber = 2,
    kHeroBuildIdFieldNumber = 1,
  };
  // optional .CMsgHeroBuildPreference preference = 2;
  bool has_preference() const;
  private:
  bool _internal_has_preference() const;
  public:
  void clear_preference();
  const ::CMsgHeroBuildPreference& preference() const;
  PROTOBUF_NODISCARD ::CMsgHeroBuildPreference* release_preference();
  ::CMsgHeroBuildPreference* mutable_preference();
  void set_allocated_preference(::CMsgHeroBuildPreference* preference);
  private:
  const ::CMsgHeroBuildPreference& _internal_preference() const;
  ::CMsgHeroBuildPreference* _internal_mutable_preference();
  public:
  void unsafe_arena_set_allocated_preference(
      ::CMsgHeroBuildPreference* preference);
  ::CMsgHeroBuildPreference* unsafe_arena_release_preference();

  // optional uint32 hero_build_id = 1;
  bool has_hero_build_id() const;
  private:
  bool _internal_has_hero_build_id() const;
  public:
  void clear_hero_build_id();
  uint32_t hero_build_id() const;
  void set_hero_build_id(uint32_t value);
  private:
  uint32_t _internal_hero_build_id() const;
  void _internal_set_hero_build_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUpdateHeroBuildPreference)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgHeroBuildPreference* preference_;
    uint32_t hero_build_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUpdateHeroBuildPreferenceResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUpdateHeroBuildPreferenceResponse) */ {
 public:
  inline CMsgClientToGCUpdateHeroBuildPreferenceResponse() : CMsgClientToGCUpdateHeroBuildPreferenceResponse(nullptr) {}
  ~CMsgClientToGCUpdateHeroBuildPreferenceResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUpdateHeroBuildPreferenceResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUpdateHeroBuildPreferenceResponse(const CMsgClientToGCUpdateHeroBuildPreferenceResponse& from);
  CMsgClientToGCUpdateHeroBuildPreferenceResponse(CMsgClientToGCUpdateHeroBuildPreferenceResponse&& from) noexcept
    : CMsgClientToGCUpdateHeroBuildPreferenceResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUpdateHeroBuildPreferenceResponse& operator=(const CMsgClientToGCUpdateHeroBuildPreferenceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUpdateHeroBuildPreferenceResponse& operator=(CMsgClientToGCUpdateHeroBuildPreferenceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUpdateHeroBuildPreferenceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUpdateHeroBuildPreferenceResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUpdateHeroBuildPreferenceResponse*>(
               &_CMsgClientToGCUpdateHeroBuildPreferenceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  friend void swap(CMsgClientToGCUpdateHeroBuildPreferenceResponse& a, CMsgClientToGCUpdateHeroBuildPreferenceResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUpdateHeroBuildPreferenceResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUpdateHeroBuildPreferenceResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUpdateHeroBuildPreferenceResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUpdateHeroBuildPreferenceResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUpdateHeroBuildPreferenceResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUpdateHeroBuildPreferenceResponse& from) {
    CMsgClientToGCUpdateHeroBuildPreferenceResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUpdateHeroBuildPreferenceResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUpdateHeroBuildPreferenceResponse";
  }
  protected:
  explicit CMsgClientToGCUpdateHeroBuildPreferenceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_k_eSuccess;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 1,
  };
  // optional .CMsgClientToGCUpdateHeroBuildPreferenceResponse.EResponse response = 1 [default = k_eInternalError];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse response() const;
  void set_response(::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse value);
  private:
  ::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse _internal_response() const;
  void _internal_set_response(::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUpdateHeroBuildPreferenceResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetOldHeroBuildData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetOldHeroBuildData) */ {
 public:
  inline CMsgClientToGCGetOldHeroBuildData() : CMsgClientToGCGetOldHeroBuildData(nullptr) {}
  ~CMsgClientToGCGetOldHeroBuildData() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetOldHeroBuildData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetOldHeroBuildData(const CMsgClientToGCGetOldHeroBuildData& from);
  CMsgClientToGCGetOldHeroBuildData(CMsgClientToGCGetOldHeroBuildData&& from) noexcept
    : CMsgClientToGCGetOldHeroBuildData() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetOldHeroBuildData& operator=(const CMsgClientToGCGetOldHeroBuildData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetOldHeroBuildData& operator=(CMsgClientToGCGetOldHeroBuildData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetOldHeroBuildData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetOldHeroBuildData* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetOldHeroBuildData*>(
               &_CMsgClientToGCGetOldHeroBuildData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  friend void swap(CMsgClientToGCGetOldHeroBuildData& a, CMsgClientToGCGetOldHeroBuildData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetOldHeroBuildData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetOldHeroBuildData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetOldHeroBuildData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetOldHeroBuildData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetOldHeroBuildData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetOldHeroBuildData& from) {
    CMsgClientToGCGetOldHeroBuildData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetOldHeroBuildData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetOldHeroBuildData";
  }
  protected:
  explicit CMsgClientToGCGetOldHeroBuildData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorAccountIdFieldNumber = 1,
  };
  // optional uint32 author_account_id = 1;
  bool has_author_account_id() const;
  private:
  bool _internal_has_author_account_id() const;
  public:
  void clear_author_account_id();
  uint32_t author_account_id() const;
  void set_author_account_id(uint32_t value);
  private:
  uint32_t _internal_author_account_id() const;
  void _internal_set_author_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetOldHeroBuildData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t author_account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0) */ {
 public:
  inline CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0() : CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0(nullptr) {}
  ~CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0(const CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& from);
  CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0(CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0&& from) noexcept
    : CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& operator=(const CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& operator=(CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0*>(
               &_CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  friend void swap(CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& a, CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& from) {
    CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0";
  }
  protected:
  explicit CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecommendedModAbilityIdsFieldNumber = 1,
  };
  // repeated uint32 recommended_mod_ability_ids = 1;
  int recommended_mod_ability_ids_size() const;
  private:
  int _internal_recommended_mod_ability_ids_size() const;
  public:
  void clear_recommended_mod_ability_ids();
  private:
  uint32_t _internal_recommended_mod_ability_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_recommended_mod_ability_ids() const;
  void _internal_add_recommended_mod_ability_ids(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_recommended_mod_ability_ids();
  public:
  uint32_t recommended_mod_ability_ids(int index) const;
  void set_recommended_mod_ability_ids(int index, uint32_t value);
  void add_recommended_mod_ability_ids(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      recommended_mod_ability_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_recommended_mod_ability_ids();

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > recommended_mod_ability_ids_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild) */ {
 public:
  inline CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild() : CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild(nullptr) {}
  ~CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild(const CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& from);
  CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild(CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild&& from) noexcept
    : CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& operator=(const CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& operator=(CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild*>(
               &_CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  friend void swap(CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& a, CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& from) {
    CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild";
  }
  protected:
  explicit CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kDescriptionFieldNumber = 3,
    kDetailsFieldNumber = 4,
    kHeroIdFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string description = 3;
  bool has_description() const;
  private:
  bool _internal_has_description() const;
  public:
  void clear_description();
  const std::string& description() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_description(ArgT0&& arg0, ArgT... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // optional .CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0 details = 4;
  bool has_details() const;
  private:
  bool _internal_has_details() const;
  public:
  void clear_details();
  const ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& details() const;
  PROTOBUF_NODISCARD ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* release_details();
  ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* mutable_details();
  void set_allocated_details(::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* details);
  private:
  const ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& _internal_details() const;
  ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* _internal_mutable_details();
  public:
  void unsafe_arena_set_allocated_details(
      ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* details);
  ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* unsafe_arena_release_details();

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
    ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* details_;
    uint32_t hero_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetOldHeroBuildDataResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetOldHeroBuildDataResponse) */ {
 public:
  inline CMsgClientToGCGetOldHeroBuildDataResponse() : CMsgClientToGCGetOldHeroBuildDataResponse(nullptr) {}
  ~CMsgClientToGCGetOldHeroBuildDataResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetOldHeroBuildDataResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetOldHeroBuildDataResponse(const CMsgClientToGCGetOldHeroBuildDataResponse& from);
  CMsgClientToGCGetOldHeroBuildDataResponse(CMsgClientToGCGetOldHeroBuildDataResponse&& from) noexcept
    : CMsgClientToGCGetOldHeroBuildDataResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetOldHeroBuildDataResponse& operator=(const CMsgClientToGCGetOldHeroBuildDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetOldHeroBuildDataResponse& operator=(CMsgClientToGCGetOldHeroBuildDataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetOldHeroBuildDataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetOldHeroBuildDataResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetOldHeroBuildDataResponse*>(
               &_CMsgClientToGCGetOldHeroBuildDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  friend void swap(CMsgClientToGCGetOldHeroBuildDataResponse& a, CMsgClientToGCGetOldHeroBuildDataResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetOldHeroBuildDataResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetOldHeroBuildDataResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetOldHeroBuildDataResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetOldHeroBuildDataResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetOldHeroBuildDataResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetOldHeroBuildDataResponse& from) {
    CMsgClientToGCGetOldHeroBuildDataResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetOldHeroBuildDataResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetOldHeroBuildDataResponse";
  }
  protected:
  explicit CMsgClientToGCGetOldHeroBuildDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0 OldDetails_V0;
  typedef CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild OldBuild;

  typedef CMsgClientToGCGetOldHeroBuildDataResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_k_eSuccess;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultsFieldNumber = 3,
    kResponseFieldNumber = 1,
    kAuthorAccountIdFieldNumber = 2,
  };
  // repeated .CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild results = 3;
  int results_size() const;
  private:
  int _internal_results_size() const;
  public:
  void clear_results();
  ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* mutable_results(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild >*
      mutable_results();
  private:
  const ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& _internal_results(int index) const;
  ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* _internal_add_results();
  public:
  const ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& results(int index) const;
  ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* add_results();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild >&
      results() const;

  // optional .CMsgClientToGCGetOldHeroBuildDataResponse.EResponse response = 1 [default = k_eInternalError];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse response() const;
  void set_response(::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse value);
  private:
  ::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse _internal_response() const;
  void _internal_set_response(::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse value);
  public:

  // optional uint32 author_account_id = 2;
  bool has_author_account_id() const;
  private:
  bool _internal_has_author_account_id() const;
  public:
  void clear_author_account_id();
  uint32_t author_account_id() const;
  void set_author_account_id(uint32_t value);
  private:
  uint32_t _internal_author_account_id() const;
  void _internal_set_author_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetOldHeroBuildDataResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild > results_;
    int response_;
    uint32_t author_account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCReportPlayerFromMatch final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCReportPlayerFromMatch) */ {
 public:
  inline CMsgClientToGCReportPlayerFromMatch() : CMsgClientToGCReportPlayerFromMatch(nullptr) {}
  ~CMsgClientToGCReportPlayerFromMatch() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCReportPlayerFromMatch(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCReportPlayerFromMatch(const CMsgClientToGCReportPlayerFromMatch& from);
  CMsgClientToGCReportPlayerFromMatch(CMsgClientToGCReportPlayerFromMatch&& from) noexcept
    : CMsgClientToGCReportPlayerFromMatch() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCReportPlayerFromMatch& operator=(const CMsgClientToGCReportPlayerFromMatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCReportPlayerFromMatch& operator=(CMsgClientToGCReportPlayerFromMatch&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCReportPlayerFromMatch& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCReportPlayerFromMatch* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCReportPlayerFromMatch*>(
               &_CMsgClientToGCReportPlayerFromMatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  friend void swap(CMsgClientToGCReportPlayerFromMatch& a, CMsgClientToGCReportPlayerFromMatch& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCReportPlayerFromMatch* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCReportPlayerFromMatch* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCReportPlayerFromMatch* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCReportPlayerFromMatch>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCReportPlayerFromMatch& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCReportPlayerFromMatch& from) {
    CMsgClientToGCReportPlayerFromMatch::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCReportPlayerFromMatch* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCReportPlayerFromMatch";
  }
  protected:
  explicit CMsgClientToGCReportPlayerFromMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCReportPlayerFromMatch_EReportType EReportType;
  static constexpr EReportType k_eReport_None =
    CMsgClientToGCReportPlayerFromMatch_EReportType_k_eReport_None;
  static constexpr EReportType k_eReport_VoiceChat =
    CMsgClientToGCReportPlayerFromMatch_EReportType_k_eReport_VoiceChat;
  static constexpr EReportType k_eReport_Griefing =
    CMsgClientToGCReportPlayerFromMatch_EReportType_k_eReport_Griefing;
  static constexpr EReportType k_eReport_LeftMatch =
    CMsgClientToGCReportPlayerFromMatch_EReportType_k_eReport_LeftMatch;
  static constexpr EReportType k_eReport_Matchmaking =
    CMsgClientToGCReportPlayerFromMatch_EReportType_k_eReport_Matchmaking;
  static constexpr EReportType k_eReport_Cheating =
    CMsgClientToGCReportPlayerFromMatch_EReportType_k_eReport_Cheating;
  static inline bool EReportType_IsValid(int value) {
    return CMsgClientToGCReportPlayerFromMatch_EReportType_IsValid(value);
  }
  static constexpr EReportType EReportType_MIN =
    CMsgClientToGCReportPlayerFromMatch_EReportType_EReportType_MIN;
  static constexpr EReportType EReportType_MAX =
    CMsgClientToGCReportPlayerFromMatch_EReportType_EReportType_MAX;
  static constexpr int EReportType_ARRAYSIZE =
    CMsgClientToGCReportPlayerFromMatch_EReportType_EReportType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EReportType_descriptor() {
    return CMsgClientToGCReportPlayerFromMatch_EReportType_descriptor();
  }
  template<typename T>
  static inline const std::string& EReportType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EReportType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EReportType_Name.");
    return CMsgClientToGCReportPlayerFromMatch_EReportType_Name(enum_t_value);
  }
  static inline bool EReportType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EReportType* value) {
    return CMsgClientToGCReportPlayerFromMatch_EReportType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kReportTextFieldNumber = 4,
    kMatchIdFieldNumber = 1,
    kTargetAccountIdFieldNumber = 2,
    kReportTypeFieldNumber = 3,
  };
  // optional string report_text = 4;
  bool has_report_text() const;
  private:
  bool _internal_has_report_text() const;
  public:
  void clear_report_text();
  const std::string& report_text() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_report_text(ArgT0&& arg0, ArgT... args);
  std::string* mutable_report_text();
  PROTOBUF_NODISCARD std::string* release_report_text();
  void set_allocated_report_text(std::string* report_text);
  private:
  const std::string& _internal_report_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_report_text(const std::string& value);
  std::string* _internal_mutable_report_text();
  public:

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // optional uint32 target_account_id = 2;
  bool has_target_account_id() const;
  private:
  bool _internal_has_target_account_id() const;
  public:
  void clear_target_account_id();
  uint32_t target_account_id() const;
  void set_target_account_id(uint32_t value);
  private:
  uint32_t _internal_target_account_id() const;
  void _internal_set_target_account_id(uint32_t value);
  public:

  // optional .CMsgClientToGCReportPlayerFromMatch.EReportType report_type = 3 [default = k_eReport_None];
  bool has_report_type() const;
  private:
  bool _internal_has_report_type() const;
  public:
  void clear_report_type();
  ::CMsgClientToGCReportPlayerFromMatch_EReportType report_type() const;
  void set_report_type(::CMsgClientToGCReportPlayerFromMatch_EReportType value);
  private:
  ::CMsgClientToGCReportPlayerFromMatch_EReportType _internal_report_type() const;
  void _internal_set_report_type(::CMsgClientToGCReportPlayerFromMatch_EReportType value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCReportPlayerFromMatch)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr report_text_;
    uint64_t match_id_;
    uint32_t target_account_id_;
    int report_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCReportPlayerFromMatchResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCReportPlayerFromMatchResponse) */ {
 public:
  inline CMsgClientToGCReportPlayerFromMatchResponse() : CMsgClientToGCReportPlayerFromMatchResponse(nullptr) {}
  ~CMsgClientToGCReportPlayerFromMatchResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCReportPlayerFromMatchResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCReportPlayerFromMatchResponse(const CMsgClientToGCReportPlayerFromMatchResponse& from);
  CMsgClientToGCReportPlayerFromMatchResponse(CMsgClientToGCReportPlayerFromMatchResponse&& from) noexcept
    : CMsgClientToGCReportPlayerFromMatchResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCReportPlayerFromMatchResponse& operator=(const CMsgClientToGCReportPlayerFromMatchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCReportPlayerFromMatchResponse& operator=(CMsgClientToGCReportPlayerFromMatchResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCReportPlayerFromMatchResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCReportPlayerFromMatchResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCReportPlayerFromMatchResponse*>(
               &_CMsgClientToGCReportPlayerFromMatchResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  friend void swap(CMsgClientToGCReportPlayerFromMatchResponse& a, CMsgClientToGCReportPlayerFromMatchResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCReportPlayerFromMatchResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCReportPlayerFromMatchResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCReportPlayerFromMatchResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCReportPlayerFromMatchResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCReportPlayerFromMatchResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCReportPlayerFromMatchResponse& from) {
    CMsgClientToGCReportPlayerFromMatchResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCReportPlayerFromMatchResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCReportPlayerFromMatchResponse";
  }
  protected:
  explicit CMsgClientToGCReportPlayerFromMatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCReportPlayerFromMatchResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eRateLimited =
    CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eRateLimited;
  static constexpr EResponse k_eAlreadyReported =
    CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eAlreadyReported;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eInvalidPermissions =
    CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eInvalidPermissions;
  static constexpr EResponse k_eReportingWindowExpired =
    CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eReportingWindowExpired;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eBannedFromReporting =
    CMsgClientToGCReportPlayerFromMatchResponse_EResponse_k_eBannedFromReporting;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCReportPlayerFromMatchResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCReportPlayerFromMatchResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCReportPlayerFromMatchResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCReportPlayerFromMatchResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCReportPlayerFromMatchResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCReportPlayerFromMatchResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCReportPlayerFromMatchResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 1,
  };
  // optional .CMsgClientToGCReportPlayerFromMatchResponse.EResponse response = 1 [default = k_eInternalError];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCReportPlayerFromMatchResponse_EResponse response() const;
  void set_response(::CMsgClientToGCReportPlayerFromMatchResponse_EResponse value);
  private:
  ::CMsgClientToGCReportPlayerFromMatchResponse_EResponse _internal_response() const;
  void _internal_set_response(::CMsgClientToGCReportPlayerFromMatchResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCReportPlayerFromMatchResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAccountMatchReports final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetAccountMatchReports) */ {
 public:
  inline CMsgClientToGCGetAccountMatchReports() : CMsgClientToGCGetAccountMatchReports(nullptr) {}
  ~CMsgClientToGCGetAccountMatchReports() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountMatchReports(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetAccountMatchReports(const CMsgClientToGCGetAccountMatchReports& from);
  CMsgClientToGCGetAccountMatchReports(CMsgClientToGCGetAccountMatchReports&& from) noexcept
    : CMsgClientToGCGetAccountMatchReports() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAccountMatchReports& operator=(const CMsgClientToGCGetAccountMatchReports& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetAccountMatchReports& operator=(CMsgClientToGCGetAccountMatchReports&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetAccountMatchReports& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetAccountMatchReports* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAccountMatchReports*>(
               &_CMsgClientToGCGetAccountMatchReports_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    116;

  friend void swap(CMsgClientToGCGetAccountMatchReports& a, CMsgClientToGCGetAccountMatchReports& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetAccountMatchReports* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetAccountMatchReports* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAccountMatchReports* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAccountMatchReports>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetAccountMatchReports& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetAccountMatchReports& from) {
    CMsgClientToGCGetAccountMatchReports::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAccountMatchReports* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetAccountMatchReports";
  }
  protected:
  explicit CMsgClientToGCGetAccountMatchReports(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatchIdFieldNumber = 1,
  };
  // optional uint64 match_id = 1;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAccountMatchReports)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t match_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAccountMatchReportsResponse_Report final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetAccountMatchReportsResponse.Report) */ {
 public:
  inline CMsgClientToGCGetAccountMatchReportsResponse_Report() : CMsgClientToGCGetAccountMatchReportsResponse_Report(nullptr) {}
  ~CMsgClientToGCGetAccountMatchReportsResponse_Report() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountMatchReportsResponse_Report(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetAccountMatchReportsResponse_Report(const CMsgClientToGCGetAccountMatchReportsResponse_Report& from);
  CMsgClientToGCGetAccountMatchReportsResponse_Report(CMsgClientToGCGetAccountMatchReportsResponse_Report&& from) noexcept
    : CMsgClientToGCGetAccountMatchReportsResponse_Report() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAccountMatchReportsResponse_Report& operator=(const CMsgClientToGCGetAccountMatchReportsResponse_Report& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetAccountMatchReportsResponse_Report& operator=(CMsgClientToGCGetAccountMatchReportsResponse_Report&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetAccountMatchReportsResponse_Report& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetAccountMatchReportsResponse_Report* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAccountMatchReportsResponse_Report*>(
               &_CMsgClientToGCGetAccountMatchReportsResponse_Report_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    117;

  friend void swap(CMsgClientToGCGetAccountMatchReportsResponse_Report& a, CMsgClientToGCGetAccountMatchReportsResponse_Report& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetAccountMatchReportsResponse_Report* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetAccountMatchReportsResponse_Report* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAccountMatchReportsResponse_Report* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAccountMatchReportsResponse_Report>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetAccountMatchReportsResponse_Report& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetAccountMatchReportsResponse_Report& from) {
    CMsgClientToGCGetAccountMatchReportsResponse_Report::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAccountMatchReportsResponse_Report* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetAccountMatchReportsResponse.Report";
  }
  protected:
  explicit CMsgClientToGCGetAccountMatchReportsResponse_Report(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAccountMatchReportsResponse.Report)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAccountMatchReportsResponse_Commend final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetAccountMatchReportsResponse.Commend) */ {
 public:
  inline CMsgClientToGCGetAccountMatchReportsResponse_Commend() : CMsgClientToGCGetAccountMatchReportsResponse_Commend(nullptr) {}
  ~CMsgClientToGCGetAccountMatchReportsResponse_Commend() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountMatchReportsResponse_Commend(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetAccountMatchReportsResponse_Commend(const CMsgClientToGCGetAccountMatchReportsResponse_Commend& from);
  CMsgClientToGCGetAccountMatchReportsResponse_Commend(CMsgClientToGCGetAccountMatchReportsResponse_Commend&& from) noexcept
    : CMsgClientToGCGetAccountMatchReportsResponse_Commend() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAccountMatchReportsResponse_Commend& operator=(const CMsgClientToGCGetAccountMatchReportsResponse_Commend& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetAccountMatchReportsResponse_Commend& operator=(CMsgClientToGCGetAccountMatchReportsResponse_Commend&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetAccountMatchReportsResponse_Commend& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetAccountMatchReportsResponse_Commend* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAccountMatchReportsResponse_Commend*>(
               &_CMsgClientToGCGetAccountMatchReportsResponse_Commend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    118;

  friend void swap(CMsgClientToGCGetAccountMatchReportsResponse_Commend& a, CMsgClientToGCGetAccountMatchReportsResponse_Commend& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetAccountMatchReportsResponse_Commend* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetAccountMatchReportsResponse_Commend* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAccountMatchReportsResponse_Commend* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAccountMatchReportsResponse_Commend>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetAccountMatchReportsResponse_Commend& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetAccountMatchReportsResponse_Commend& from) {
    CMsgClientToGCGetAccountMatchReportsResponse_Commend::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAccountMatchReportsResponse_Commend* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetAccountMatchReportsResponse.Commend";
  }
  protected:
  explicit CMsgClientToGCGetAccountMatchReportsResponse_Commend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAccountMatchReportsResponse.Commend)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAccountMatchReportsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetAccountMatchReportsResponse) */ {
 public:
  inline CMsgClientToGCGetAccountMatchReportsResponse() : CMsgClientToGCGetAccountMatchReportsResponse(nullptr) {}
  ~CMsgClientToGCGetAccountMatchReportsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountMatchReportsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetAccountMatchReportsResponse(const CMsgClientToGCGetAccountMatchReportsResponse& from);
  CMsgClientToGCGetAccountMatchReportsResponse(CMsgClientToGCGetAccountMatchReportsResponse&& from) noexcept
    : CMsgClientToGCGetAccountMatchReportsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAccountMatchReportsResponse& operator=(const CMsgClientToGCGetAccountMatchReportsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetAccountMatchReportsResponse& operator=(CMsgClientToGCGetAccountMatchReportsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetAccountMatchReportsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetAccountMatchReportsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAccountMatchReportsResponse*>(
               &_CMsgClientToGCGetAccountMatchReportsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    119;

  friend void swap(CMsgClientToGCGetAccountMatchReportsResponse& a, CMsgClientToGCGetAccountMatchReportsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetAccountMatchReportsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetAccountMatchReportsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAccountMatchReportsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAccountMatchReportsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetAccountMatchReportsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetAccountMatchReportsResponse& from) {
    CMsgClientToGCGetAccountMatchReportsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAccountMatchReportsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetAccountMatchReportsResponse";
  }
  protected:
  explicit CMsgClientToGCGetAccountMatchReportsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetAccountMatchReportsResponse_Report Report;
  typedef CMsgClientToGCGetAccountMatchReportsResponse_Commend Commend;

  typedef CMsgClientToGCGetAccountMatchReportsResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCGetAccountMatchReportsResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCGetAccountMatchReportsResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCGetAccountMatchReportsResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCGetAccountMatchReportsResponse_EResponse_k_eTooBusy;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCGetAccountMatchReportsResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCGetAccountMatchReportsResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCGetAccountMatchReportsResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCGetAccountMatchReportsResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCGetAccountMatchReportsResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCGetAccountMatchReportsResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCGetAccountMatchReportsResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kReportsFieldNumber = 2,
    kCommendsFieldNumber = 3,
    kResponseFieldNumber = 1,
  };
  // repeated .CMsgClientToGCGetAccountMatchReportsResponse.Report reports = 2;
  int reports_size() const;
  private:
  int _internal_reports_size() const;
  public:
  void clear_reports();
  ::CMsgClientToGCGetAccountMatchReportsResponse_Report* mutable_reports(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountMatchReportsResponse_Report >*
      mutable_reports();
  private:
  const ::CMsgClientToGCGetAccountMatchReportsResponse_Report& _internal_reports(int index) const;
  ::CMsgClientToGCGetAccountMatchReportsResponse_Report* _internal_add_reports();
  public:
  const ::CMsgClientToGCGetAccountMatchReportsResponse_Report& reports(int index) const;
  ::CMsgClientToGCGetAccountMatchReportsResponse_Report* add_reports();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountMatchReportsResponse_Report >&
      reports() const;

  // repeated .CMsgClientToGCGetAccountMatchReportsResponse.Commend commends = 3;
  int commends_size() const;
  private:
  int _internal_commends_size() const;
  public:
  void clear_commends();
  ::CMsgClientToGCGetAccountMatchReportsResponse_Commend* mutable_commends(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountMatchReportsResponse_Commend >*
      mutable_commends();
  private:
  const ::CMsgClientToGCGetAccountMatchReportsResponse_Commend& _internal_commends(int index) const;
  ::CMsgClientToGCGetAccountMatchReportsResponse_Commend* _internal_add_commends();
  public:
  const ::CMsgClientToGCGetAccountMatchReportsResponse_Commend& commends(int index) const;
  ::CMsgClientToGCGetAccountMatchReportsResponse_Commend* add_commends();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountMatchReportsResponse_Commend >&
      commends() const;

  // optional .CMsgClientToGCGetAccountMatchReportsResponse.EResponse response = 1 [default = k_eInternalError];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCGetAccountMatchReportsResponse_EResponse response() const;
  void set_response(::CMsgClientToGCGetAccountMatchReportsResponse_EResponse value);
  private:
  ::CMsgClientToGCGetAccountMatchReportsResponse_EResponse _internal_response() const;
  void _internal_set_response(::CMsgClientToGCGetAccountMatchReportsResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAccountMatchReportsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountMatchReportsResponse_Report > reports_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountMatchReportsResponse_Commend > commends_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCDeleteHeroBuild final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCDeleteHeroBuild) */ {
 public:
  inline CMsgClientToGCDeleteHeroBuild() : CMsgClientToGCDeleteHeroBuild(nullptr) {}
  ~CMsgClientToGCDeleteHeroBuild() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCDeleteHeroBuild(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCDeleteHeroBuild(const CMsgClientToGCDeleteHeroBuild& from);
  CMsgClientToGCDeleteHeroBuild(CMsgClientToGCDeleteHeroBuild&& from) noexcept
    : CMsgClientToGCDeleteHeroBuild() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCDeleteHeroBuild& operator=(const CMsgClientToGCDeleteHeroBuild& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCDeleteHeroBuild& operator=(CMsgClientToGCDeleteHeroBuild&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCDeleteHeroBuild& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCDeleteHeroBuild* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCDeleteHeroBuild*>(
               &_CMsgClientToGCDeleteHeroBuild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    120;

  friend void swap(CMsgClientToGCDeleteHeroBuild& a, CMsgClientToGCDeleteHeroBuild& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCDeleteHeroBuild* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCDeleteHeroBuild* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCDeleteHeroBuild* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCDeleteHeroBuild>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCDeleteHeroBuild& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCDeleteHeroBuild& from) {
    CMsgClientToGCDeleteHeroBuild::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCDeleteHeroBuild* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCDeleteHeroBuild";
  }
  protected:
  explicit CMsgClientToGCDeleteHeroBuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorAccountIdFieldNumber = 1,
    kHeroBuildIdFieldNumber = 2,
  };
  // optional uint32 author_account_id = 1;
  bool has_author_account_id() const;
  private:
  bool _internal_has_author_account_id() const;
  public:
  void clear_author_account_id();
  uint32_t author_account_id() const;
  void set_author_account_id(uint32_t value);
  private:
  uint32_t _internal_author_account_id() const;
  void _internal_set_author_account_id(uint32_t value);
  public:

  // optional uint32 hero_build_id = 2;
  bool has_hero_build_id() const;
  private:
  bool _internal_has_hero_build_id() const;
  public:
  void clear_hero_build_id();
  uint32_t hero_build_id() const;
  void set_hero_build_id(uint32_t value);
  private:
  uint32_t _internal_hero_build_id() const;
  void _internal_set_hero_build_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCDeleteHeroBuild)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t author_account_id_;
    uint32_t hero_build_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCDeleteHeroBuildResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCDeleteHeroBuildResponse) */ {
 public:
  inline CMsgClientToGCDeleteHeroBuildResponse() : CMsgClientToGCDeleteHeroBuildResponse(nullptr) {}
  ~CMsgClientToGCDeleteHeroBuildResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCDeleteHeroBuildResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCDeleteHeroBuildResponse(const CMsgClientToGCDeleteHeroBuildResponse& from);
  CMsgClientToGCDeleteHeroBuildResponse(CMsgClientToGCDeleteHeroBuildResponse&& from) noexcept
    : CMsgClientToGCDeleteHeroBuildResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCDeleteHeroBuildResponse& operator=(const CMsgClientToGCDeleteHeroBuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCDeleteHeroBuildResponse& operator=(CMsgClientToGCDeleteHeroBuildResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCDeleteHeroBuildResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCDeleteHeroBuildResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCDeleteHeroBuildResponse*>(
               &_CMsgClientToGCDeleteHeroBuildResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    121;

  friend void swap(CMsgClientToGCDeleteHeroBuildResponse& a, CMsgClientToGCDeleteHeroBuildResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCDeleteHeroBuildResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCDeleteHeroBuildResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCDeleteHeroBuildResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCDeleteHeroBuildResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCDeleteHeroBuildResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCDeleteHeroBuildResponse& from) {
    CMsgClientToGCDeleteHeroBuildResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCDeleteHeroBuildResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCDeleteHeroBuildResponse";
  }
  protected:
  explicit CMsgClientToGCDeleteHeroBuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCDeleteHeroBuildResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCDeleteHeroBuildResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCDeleteHeroBuildResponse_EResponse_k_eSuccess;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCDeleteHeroBuildResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCDeleteHeroBuildResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCDeleteHeroBuildResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCDeleteHeroBuildResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCDeleteHeroBuildResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCDeleteHeroBuildResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCDeleteHeroBuildResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 1,
    kBuildsDeletedFieldNumber = 2,
  };
  // optional .CMsgClientToGCDeleteHeroBuildResponse.EResponse response = 1 [default = k_eInternalError];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCDeleteHeroBuildResponse_EResponse response() const;
  void set_response(::CMsgClientToGCDeleteHeroBuildResponse_EResponse value);
  private:
  ::CMsgClientToGCDeleteHeroBuildResponse_EResponse _internal_response() const;
  void _internal_set_response(::CMsgClientToGCDeleteHeroBuildResponse_EResponse value);
  public:

  // optional uint32 builds_deleted = 2;
  bool has_builds_deleted() const;
  private:
  bool _internal_has_builds_deleted() const;
  public:
  void clear_builds_deleted();
  uint32_t builds_deleted() const;
  void set_builds_deleted(uint32_t value);
  private:
  uint32_t _internal_builds_deleted() const;
  void _internal_set_builds_deleted(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCDeleteHeroBuildResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int response_;
    uint32_t builds_deleted_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetActiveMatches final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetActiveMatches) */ {
 public:
  inline CMsgClientToGCGetActiveMatches() : CMsgClientToGCGetActiveMatches(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetActiveMatches(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetActiveMatches(const CMsgClientToGCGetActiveMatches& from);
  CMsgClientToGCGetActiveMatches(CMsgClientToGCGetActiveMatches&& from) noexcept
    : CMsgClientToGCGetActiveMatches() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetActiveMatches& operator=(const CMsgClientToGCGetActiveMatches& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetActiveMatches& operator=(CMsgClientToGCGetActiveMatches&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetActiveMatches& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetActiveMatches* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetActiveMatches*>(
               &_CMsgClientToGCGetActiveMatches_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    122;

  friend void swap(CMsgClientToGCGetActiveMatches& a, CMsgClientToGCGetActiveMatches& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetActiveMatches* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetActiveMatches* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetActiveMatches* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetActiveMatches>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgClientToGCGetActiveMatches& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgClientToGCGetActiveMatches& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetActiveMatches";
  }
  protected:
  explicit CMsgClientToGCGetActiveMatches(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetActiveMatches)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetActiveMatchesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetActiveMatchesResponse) */ {
 public:
  inline CMsgClientToGCGetActiveMatchesResponse() : CMsgClientToGCGetActiveMatchesResponse(nullptr) {}
  ~CMsgClientToGCGetActiveMatchesResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetActiveMatchesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetActiveMatchesResponse(const CMsgClientToGCGetActiveMatchesResponse& from);
  CMsgClientToGCGetActiveMatchesResponse(CMsgClientToGCGetActiveMatchesResponse&& from) noexcept
    : CMsgClientToGCGetActiveMatchesResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetActiveMatchesResponse& operator=(const CMsgClientToGCGetActiveMatchesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetActiveMatchesResponse& operator=(CMsgClientToGCGetActiveMatchesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetActiveMatchesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetActiveMatchesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetActiveMatchesResponse*>(
               &_CMsgClientToGCGetActiveMatchesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    123;

  friend void swap(CMsgClientToGCGetActiveMatchesResponse& a, CMsgClientToGCGetActiveMatchesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetActiveMatchesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetActiveMatchesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetActiveMatchesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetActiveMatchesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetActiveMatchesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetActiveMatchesResponse& from) {
    CMsgClientToGCGetActiveMatchesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetActiveMatchesResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetActiveMatchesResponse";
  }
  protected:
  explicit CMsgClientToGCGetActiveMatchesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActiveMatchesFieldNumber = 1,
  };
  // repeated .CMsgDevMatchInfo active_matches = 1;
  int active_matches_size() const;
  private:
  int _internal_active_matches_size() const;
  public:
  void clear_active_matches();
  ::CMsgDevMatchInfo* mutable_active_matches(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDevMatchInfo >*
      mutable_active_matches();
  private:
  const ::CMsgDevMatchInfo& _internal_active_matches(int index) const;
  ::CMsgDevMatchInfo* _internal_add_active_matches();
  public:
  const ::CMsgDevMatchInfo& active_matches(int index) const;
  ::CMsgDevMatchInfo* add_active_matches();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDevMatchInfo >&
      active_matches() const;

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetActiveMatchesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDevMatchInfo > active_matches_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetDiscordLink final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetDiscordLink) */ {
 public:
  inline CMsgClientToGCGetDiscordLink() : CMsgClientToGCGetDiscordLink(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetDiscordLink(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetDiscordLink(const CMsgClientToGCGetDiscordLink& from);
  CMsgClientToGCGetDiscordLink(CMsgClientToGCGetDiscordLink&& from) noexcept
    : CMsgClientToGCGetDiscordLink() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetDiscordLink& operator=(const CMsgClientToGCGetDiscordLink& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetDiscordLink& operator=(CMsgClientToGCGetDiscordLink&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetDiscordLink& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetDiscordLink* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetDiscordLink*>(
               &_CMsgClientToGCGetDiscordLink_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    124;

  friend void swap(CMsgClientToGCGetDiscordLink& a, CMsgClientToGCGetDiscordLink& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetDiscordLink* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetDiscordLink* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetDiscordLink* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetDiscordLink>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgClientToGCGetDiscordLink& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgClientToGCGetDiscordLink& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetDiscordLink";
  }
  protected:
  explicit CMsgClientToGCGetDiscordLink(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetDiscordLink)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetDiscordLinkResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetDiscordLinkResponse) */ {
 public:
  inline CMsgClientToGCGetDiscordLinkResponse() : CMsgClientToGCGetDiscordLinkResponse(nullptr) {}
  ~CMsgClientToGCGetDiscordLinkResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetDiscordLinkResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetDiscordLinkResponse(const CMsgClientToGCGetDiscordLinkResponse& from);
  CMsgClientToGCGetDiscordLinkResponse(CMsgClientToGCGetDiscordLinkResponse&& from) noexcept
    : CMsgClientToGCGetDiscordLinkResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetDiscordLinkResponse& operator=(const CMsgClientToGCGetDiscordLinkResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetDiscordLinkResponse& operator=(CMsgClientToGCGetDiscordLinkResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetDiscordLinkResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetDiscordLinkResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetDiscordLinkResponse*>(
               &_CMsgClientToGCGetDiscordLinkResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    125;

  friend void swap(CMsgClientToGCGetDiscordLinkResponse& a, CMsgClientToGCGetDiscordLinkResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetDiscordLinkResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetDiscordLinkResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetDiscordLinkResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetDiscordLinkResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetDiscordLinkResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetDiscordLinkResponse& from) {
    CMsgClientToGCGetDiscordLinkResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetDiscordLinkResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetDiscordLinkResponse";
  }
  protected:
  explicit CMsgClientToGCGetDiscordLinkResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetDiscordLinkResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCGetDiscordLinkResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCGetDiscordLinkResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eDiscordTooBusy =
    CMsgClientToGCGetDiscordLinkResponse_EResponse_k_eDiscordTooBusy;
  static constexpr EResponse k_eAlreadyClaimed =
    CMsgClientToGCGetDiscordLinkResponse_EResponse_k_eAlreadyClaimed;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCGetDiscordLinkResponse_EResponse_k_eDisabled;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCGetDiscordLinkResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCGetDiscordLinkResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCGetDiscordLinkResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCGetDiscordLinkResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCGetDiscordLinkResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCGetDiscordLinkResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCGetDiscordLinkResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kDiscordLinkFieldNumber = 2,
    kResponseFieldNumber = 1,
    kValidHoursFieldNumber = 3,
  };
  // optional string discord_link = 2;
  bool has_discord_link() const;
  private:
  bool _internal_has_discord_link() const;
  public:
  void clear_discord_link();
  const std::string& discord_link() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_discord_link(ArgT0&& arg0, ArgT... args);
  std::string* mutable_discord_link();
  PROTOBUF_NODISCARD std::string* release_discord_link();
  void set_allocated_discord_link(std::string* discord_link);
  private:
  const std::string& _internal_discord_link() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_discord_link(const std::string& value);
  std::string* _internal_mutable_discord_link();
  public:

  // optional .CMsgClientToGCGetDiscordLinkResponse.EResponse response = 1 [default = k_eInternalError];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCGetDiscordLinkResponse_EResponse response() const;
  void set_response(::CMsgClientToGCGetDiscordLinkResponse_EResponse value);
  private:
  ::CMsgClientToGCGetDiscordLinkResponse_EResponse _internal_response() const;
  void _internal_set_response(::CMsgClientToGCGetDiscordLinkResponse_EResponse value);
  public:

  // optional uint32 valid_hours = 3;
  bool has_valid_hours() const;
  private:
  bool _internal_has_valid_hours() const;
  public:
  void clear_valid_hours();
  uint32_t valid_hours() const;
  void set_valid_hours(uint32_t value);
  private:
  uint32_t _internal_valid_hours() const;
  void _internal_set_valid_hours(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetDiscordLinkResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr discord_link_;
    int response_;
    uint32_t valid_hours_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGrantForumAccess final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGrantForumAccess) */ {
 public:
  inline CMsgClientToGCGrantForumAccess() : CMsgClientToGCGrantForumAccess(nullptr) {}
  ~CMsgClientToGCGrantForumAccess() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGrantForumAccess(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGrantForumAccess(const CMsgClientToGCGrantForumAccess& from);
  CMsgClientToGCGrantForumAccess(CMsgClientToGCGrantForumAccess&& from) noexcept
    : CMsgClientToGCGrantForumAccess() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGrantForumAccess& operator=(const CMsgClientToGCGrantForumAccess& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGrantForumAccess& operator=(CMsgClientToGCGrantForumAccess&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGrantForumAccess& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGrantForumAccess* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGrantForumAccess*>(
               &_CMsgClientToGCGrantForumAccess_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    126;

  friend void swap(CMsgClientToGCGrantForumAccess& a, CMsgClientToGCGrantForumAccess& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGrantForumAccess* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGrantForumAccess* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGrantForumAccess* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGrantForumAccess>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGrantForumAccess& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGrantForumAccess& from) {
    CMsgClientToGCGrantForumAccess::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGrantForumAccess* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGrantForumAccess";
  }
  protected:
  explicit CMsgClientToGCGrantForumAccess(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmailFieldNumber = 1,
  };
  // optional string email = 1;
  bool has_email() const;
  private:
  bool _internal_has_email() const;
  public:
  void clear_email();
  const std::string& email() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_email(ArgT0&& arg0, ArgT... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGrantForumAccess)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGrantForumAccessResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGrantForumAccessResponse) */ {
 public:
  inline CMsgClientToGCGrantForumAccessResponse() : CMsgClientToGCGrantForumAccessResponse(nullptr) {}
  ~CMsgClientToGCGrantForumAccessResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGrantForumAccessResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGrantForumAccessResponse(const CMsgClientToGCGrantForumAccessResponse& from);
  CMsgClientToGCGrantForumAccessResponse(CMsgClientToGCGrantForumAccessResponse&& from) noexcept
    : CMsgClientToGCGrantForumAccessResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGrantForumAccessResponse& operator=(const CMsgClientToGCGrantForumAccessResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGrantForumAccessResponse& operator=(CMsgClientToGCGrantForumAccessResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGrantForumAccessResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGrantForumAccessResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGrantForumAccessResponse*>(
               &_CMsgClientToGCGrantForumAccessResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    127;

  friend void swap(CMsgClientToGCGrantForumAccessResponse& a, CMsgClientToGCGrantForumAccessResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGrantForumAccessResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGrantForumAccessResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGrantForumAccessResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGrantForumAccessResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGrantForumAccessResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGrantForumAccessResponse& from) {
    CMsgClientToGCGrantForumAccessResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGrantForumAccessResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGrantForumAccessResponse";
  }
  protected:
  explicit CMsgClientToGCGrantForumAccessResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGrantForumAccessResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCGrantForumAccessResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCGrantForumAccessResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eAlreadyClaimed =
    CMsgClientToGCGrantForumAccessResponse_EResponse_k_eAlreadyClaimed;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCGrantForumAccessResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eEmailUsed =
    CMsgClientToGCGrantForumAccessResponse_EResponse_k_eEmailUsed;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCGrantForumAccessResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCGrantForumAccessResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCGrantForumAccessResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCGrantForumAccessResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCGrantForumAccessResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCGrantForumAccessResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCGrantForumAccessResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kEmailFieldNumber = 2,
    kUsernameFieldNumber = 3,
    kForumPasswordFieldNumber = 4,
    kResponseFieldNumber = 1,
  };
  // optional string email = 2;
  bool has_email() const;
  private:
  bool _internal_has_email() const;
  public:
  void clear_email();
  const std::string& email() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_email(ArgT0&& arg0, ArgT... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // optional string username = 3;
  bool has_username() const;
  private:
  bool _internal_has_username() const;
  public:
  void clear_username();
  const std::string& username() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_username(ArgT0&& arg0, ArgT... args);
  std::string* mutable_username();
  PROTOBUF_NODISCARD std::string* release_username();
  void set_allocated_username(std::string* username);
  private:
  const std::string& _internal_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_username(const std::string& value);
  std::string* _internal_mutable_username();
  public:

  // optional string forum_password = 4;
  bool has_forum_password() const;
  private:
  bool _internal_has_forum_password() const;
  public:
  void clear_forum_password();
  const std::string& forum_password() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_forum_password(ArgT0&& arg0, ArgT... args);
  std::string* mutable_forum_password();
  PROTOBUF_NODISCARD std::string* release_forum_password();
  void set_allocated_forum_password(std::string* forum_password);
  private:
  const std::string& _internal_forum_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_forum_password(const std::string& value);
  std::string* _internal_mutable_forum_password();
  public:

  // optional .CMsgClientToGCGrantForumAccessResponse.EResponse response = 1 [default = k_eInternalError];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCGrantForumAccessResponse_EResponse response() const;
  void set_response(::CMsgClientToGCGrantForumAccessResponse_EResponse value);
  private:
  ::CMsgClientToGCGrantForumAccessResponse_EResponse _internal_response() const;
  void _internal_set_response(::CMsgClientToGCGrantForumAccessResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGrantForumAccessResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr username_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr forum_password_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCModeratorRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCModeratorRequest) */ {
 public:
  inline CMsgClientToGCModeratorRequest() : CMsgClientToGCModeratorRequest(nullptr) {}
  ~CMsgClientToGCModeratorRequest() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCModeratorRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCModeratorRequest(const CMsgClientToGCModeratorRequest& from);
  CMsgClientToGCModeratorRequest(CMsgClientToGCModeratorRequest&& from) noexcept
    : CMsgClientToGCModeratorRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCModeratorRequest& operator=(const CMsgClientToGCModeratorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCModeratorRequest& operator=(CMsgClientToGCModeratorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCModeratorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCModeratorRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCModeratorRequest*>(
               &_CMsgClientToGCModeratorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    128;

  friend void swap(CMsgClientToGCModeratorRequest& a, CMsgClientToGCModeratorRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCModeratorRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCModeratorRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCModeratorRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCModeratorRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCModeratorRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCModeratorRequest& from) {
    CMsgClientToGCModeratorRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCModeratorRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCModeratorRequest";
  }
  protected:
  explicit CMsgClientToGCModeratorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCModeratorRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCModeratorRequestResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCModeratorRequestResponse) */ {
 public:
  inline CMsgClientToGCModeratorRequestResponse() : CMsgClientToGCModeratorRequestResponse(nullptr) {}
  ~CMsgClientToGCModeratorRequestResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCModeratorRequestResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCModeratorRequestResponse(const CMsgClientToGCModeratorRequestResponse& from);
  CMsgClientToGCModeratorRequestResponse(CMsgClientToGCModeratorRequestResponse&& from) noexcept
    : CMsgClientToGCModeratorRequestResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCModeratorRequestResponse& operator=(const CMsgClientToGCModeratorRequestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCModeratorRequestResponse& operator=(CMsgClientToGCModeratorRequestResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCModeratorRequestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCModeratorRequestResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCModeratorRequestResponse*>(
               &_CMsgClientToGCModeratorRequestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    129;

  friend void swap(CMsgClientToGCModeratorRequestResponse& a, CMsgClientToGCModeratorRequestResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCModeratorRequestResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCModeratorRequestResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCModeratorRequestResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCModeratorRequestResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCModeratorRequestResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCModeratorRequestResponse& from) {
    CMsgClientToGCModeratorRequestResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCModeratorRequestResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCModeratorRequestResponse";
  }
  protected:
  explicit CMsgClientToGCModeratorRequestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseTextFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // repeated string response_text = 2;
  int response_text_size() const;
  private:
  int _internal_response_text_size() const;
  public:
  void clear_response_text();
  const std::string& response_text(int index) const;
  std::string* mutable_response_text(int index);
  void set_response_text(int index, const std::string& value);
  void set_response_text(int index, std::string&& value);
  void set_response_text(int index, const char* value);
  void set_response_text(int index, const char* value, size_t size);
  std::string* add_response_text();
  void add_response_text(const std::string& value);
  void add_response_text(std::string&& value);
  void add_response_text(const char* value);
  void add_response_text(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& response_text() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_response_text();
  private:
  const std::string& _internal_response_text(int index) const;
  std::string* _internal_add_response_text();
  public:

  // optional bool success = 1;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCModeratorRequestResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> response_text_;
    bool success_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetFriendGameStatus final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetFriendGameStatus) */ {
 public:
  inline CMsgClientToGCGetFriendGameStatus() : CMsgClientToGCGetFriendGameStatus(nullptr) {}
  ~CMsgClientToGCGetFriendGameStatus() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetFriendGameStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetFriendGameStatus(const CMsgClientToGCGetFriendGameStatus& from);
  CMsgClientToGCGetFriendGameStatus(CMsgClientToGCGetFriendGameStatus&& from) noexcept
    : CMsgClientToGCGetFriendGameStatus() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetFriendGameStatus& operator=(const CMsgClientToGCGetFriendGameStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetFriendGameStatus& operator=(CMsgClientToGCGetFriendGameStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetFriendGameStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetFriendGameStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetFriendGameStatus*>(
               &_CMsgClientToGCGetFriendGameStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    130;

  friend void swap(CMsgClientToGCGetFriendGameStatus& a, CMsgClientToGCGetFriendGameStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetFriendGameStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetFriendGameStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetFriendGameStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetFriendGameStatus>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetFriendGameStatus& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetFriendGameStatus& from) {
    CMsgClientToGCGetFriendGameStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetFriendGameStatus* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetFriendGameStatus";
  }
  protected:
  explicit CMsgClientToGCGetFriendGameStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIncludeInvitedFieldNumber = 1,
  };
  // optional bool include_invited = 1;
  bool has_include_invited() const;
  private:
  bool _internal_has_include_invited() const;
  public:
  void clear_include_invited();
  bool include_invited() const;
  void set_include_invited(bool value);
  private:
  bool _internal_include_invited() const;
  void _internal_set_include_invited(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetFriendGameStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool include_invited_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetFriendGameStatusResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetFriendGameStatusResponse) */ {
 public:
  inline CMsgClientToGCGetFriendGameStatusResponse() : CMsgClientToGCGetFriendGameStatusResponse(nullptr) {}
  ~CMsgClientToGCGetFriendGameStatusResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetFriendGameStatusResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetFriendGameStatusResponse(const CMsgClientToGCGetFriendGameStatusResponse& from);
  CMsgClientToGCGetFriendGameStatusResponse(CMsgClientToGCGetFriendGameStatusResponse&& from) noexcept
    : CMsgClientToGCGetFriendGameStatusResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetFriendGameStatusResponse& operator=(const CMsgClientToGCGetFriendGameStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetFriendGameStatusResponse& operator=(CMsgClientToGCGetFriendGameStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetFriendGameStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetFriendGameStatusResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetFriendGameStatusResponse*>(
               &_CMsgClientToGCGetFriendGameStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    131;

  friend void swap(CMsgClientToGCGetFriendGameStatusResponse& a, CMsgClientToGCGetFriendGameStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetFriendGameStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetFriendGameStatusResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetFriendGameStatusResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetFriendGameStatusResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetFriendGameStatusResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetFriendGameStatusResponse& from) {
    CMsgClientToGCGetFriendGameStatusResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetFriendGameStatusResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetFriendGameStatusResponse";
  }
  protected:
  explicit CMsgClientToGCGetFriendGameStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetFriendGameStatusResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCGetFriendGameStatusResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCGetFriendGameStatusResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCGetFriendGameStatusResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCGetFriendGameStatusResponse_EResponse_k_eDisabled;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCGetFriendGameStatusResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCGetFriendGameStatusResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCGetFriendGameStatusResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCGetFriendGameStatusResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCGetFriendGameStatusResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCGetFriendGameStatusResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCGetFriendGameStatusResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kFriendsPlayedGameFieldNumber = 2,
    kFriendsInvitedFieldNumber = 3,
    kFriendsInvitesSentFieldNumber = 4,
    kResponseFieldNumber = 1,
  };
  // repeated uint32 friends_played_game = 2 [packed = true];
  int friends_played_game_size() const;
  private:
  int _internal_friends_played_game_size() const;
  public:
  void clear_friends_played_game();
  private:
  uint32_t _internal_friends_played_game(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_friends_played_game() const;
  void _internal_add_friends_played_game(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_friends_played_game();
  public:
  uint32_t friends_played_game(int index) const;
  void set_friends_played_game(int index, uint32_t value);
  void add_friends_played_game(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      friends_played_game() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_friends_played_game();

  // repeated uint32 friends_invited = 3 [packed = true];
  int friends_invited_size() const;
  private:
  int _internal_friends_invited_size() const;
  public:
  void clear_friends_invited();
  private:
  uint32_t _internal_friends_invited(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_friends_invited() const;
  void _internal_add_friends_invited(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_friends_invited();
  public:
  uint32_t friends_invited(int index) const;
  void set_friends_invited(int index, uint32_t value);
  void add_friends_invited(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      friends_invited() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_friends_invited();

  // repeated uint32 friends_invites_sent = 4 [packed = true];
  int friends_invites_sent_size() const;
  private:
  int _internal_friends_invites_sent_size() const;
  public:
  void clear_friends_invites_sent();
  private:
  uint32_t _internal_friends_invites_sent(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_friends_invites_sent() const;
  void _internal_add_friends_invites_sent(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_friends_invites_sent();
  public:
  uint32_t friends_invites_sent(int index) const;
  void set_friends_invites_sent(int index, uint32_t value);
  void add_friends_invites_sent(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      friends_invites_sent() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_friends_invites_sent();

  // optional .CMsgClientToGCGetFriendGameStatusResponse.EResponse response = 1 [default = k_eInternalError];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::CMsgClientToGCGetFriendGameStatusResponse_EResponse response() const;
  void set_response(::CMsgClientToGCGetFriendGameStatusResponse_EResponse value);
  private:
  ::CMsgClientToGCGetFriendGameStatusResponse_EResponse _internal_response() const;
  void _internal_set_response(::CMsgClientToGCGetFriendGameStatusResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetFriendGameStatusResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > friends_played_game_;
    mutable std::atomic<int> _friends_played_game_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > friends_invited_;
    mutable std::atomic<int> _friends_invited_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > friends_invites_sent_;
    mutable std::atomic<int> _friends_invites_sent_cached_byte_size_;
    int response_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCUpdateSpectatorStatus final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCUpdateSpectatorStatus) */ {
 public:
  inline CMsgClientToGCUpdateSpectatorStatus() : CMsgClientToGCUpdateSpectatorStatus(nullptr) {}
  ~CMsgClientToGCUpdateSpectatorStatus() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCUpdateSpectatorStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCUpdateSpectatorStatus(const CMsgClientToGCUpdateSpectatorStatus& from);
  CMsgClientToGCUpdateSpectatorStatus(CMsgClientToGCUpdateSpectatorStatus&& from) noexcept
    : CMsgClientToGCUpdateSpectatorStatus() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCUpdateSpectatorStatus& operator=(const CMsgClientToGCUpdateSpectatorStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCUpdateSpectatorStatus& operator=(CMsgClientToGCUpdateSpectatorStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCUpdateSpectatorStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCUpdateSpectatorStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCUpdateSpectatorStatus*>(
               &_CMsgClientToGCUpdateSpectatorStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    132;

  friend void swap(CMsgClientToGCUpdateSpectatorStatus& a, CMsgClientToGCUpdateSpectatorStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCUpdateSpectatorStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCUpdateSpectatorStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCUpdateSpectatorStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCUpdateSpectatorStatus>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCUpdateSpectatorStatus& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCUpdateSpectatorStatus& from) {
    CMsgClientToGCUpdateSpectatorStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCUpdateSpectatorStatus* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCUpdateSpectatorStatus";
  }
  protected:
  explicit CMsgClientToGCUpdateSpectatorStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpectatingLobbyIdFieldNumber = 1,
    kStoppedSpectatingFieldNumber = 2,
  };
  // optional fixed64 spectating_lobby_id = 1;
  bool has_spectating_lobby_id() const;
  private:
  bool _internal_has_spectating_lobby_id() const;
  public:
  void clear_spectating_lobby_id();
  uint64_t spectating_lobby_id() const;
  void set_spectating_lobby_id(uint64_t value);
  private:
  uint64_t _internal_spectating_lobby_id() const;
  void _internal_set_spectating_lobby_id(uint64_t value);
  public:

  // optional bool stopped_spectating = 2;
  bool has_stopped_spectating() const;
  private:
  bool _internal_has_stopped_spectating() const;
  public:
  void clear_stopped_spectating();
  bool stopped_spectating() const;
  void set_stopped_spectating(bool value);
  private:
  bool _internal_stopped_spectating() const;
  void _internal_set_stopped_spectating(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCUpdateSpectatorStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t spectating_lobby_id_;
    bool stopped_spectating_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCommendPlayerFromMatch final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCCommendPlayerFromMatch) */ {
 public:
  inline CMsgClientToGCCommendPlayerFromMatch() : CMsgClientToGCCommendPlayerFromMatch(nullptr) {}
  ~CMsgClientToGCCommendPlayerFromMatch() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCCommendPlayerFromMatch(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCCommendPlayerFromMatch(const CMsgClientToGCCommendPlayerFromMatch& from);
  CMsgClientToGCCommendPlayerFromMatch(CMsgClientToGCCommendPlayerFromMatch&& from) noexcept
    : CMsgClientToGCCommendPlayerFromMatch() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCommendPlayerFromMatch& operator=(const CMsgClientToGCCommendPlayerFromMatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCCommendPlayerFromMatch& operator=(CMsgClientToGCCommendPlayerFromMatch&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCCommendPlayerFromMatch& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCCommendPlayerFromMatch* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCommendPlayerFromMatch*>(
               &_CMsgClientToGCCommendPlayerFromMatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    133;

  friend void swap(CMsgClientToGCCommendPlayerFromMatch& a, CMsgClientToGCCommendPlayerFromMatch& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCCommendPlayerFromMatch* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCCommendPlayerFromMatch* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCCommendPlayerFromMatch* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCCommendPlayerFromMatch>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCCommendPlayerFromMatch& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCCommendPlayerFromMatch& from) {
    CMsgClientToGCCommendPlayerFromMatch::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCommendPlayerFromMatch* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCCommendPlayerFromMatch";
  }
  protected:
  explicit CMsgClientToGCCommendPlayerFromMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatchIdFieldNumber = 1,
    kTargetAccountIdFieldNumber = 2,
    kCommendTypeFieldNumber = 3,
    kFakeCommendHeroIdFieldNumber = 4,
  };
  // optional uint64 match_id = 1;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // optional uint32 target_account_id = 2;
  bool has_target_account_id() const;
  private:
  bool _internal_has_target_account_id() const;
  public:
  void clear_target_account_id();
  uint32_t target_account_id() const;
  void set_target_account_id(uint32_t value);
  private:
  uint32_t _internal_target_account_id() const;
  void _internal_set_target_account_id(uint32_t value);
  public:

  // optional .ECommendType commend_type = 3 [default = k_eInvalid];
  bool has_commend_type() const;
  private:
  bool _internal_has_commend_type() const;
  public:
  void clear_commend_type();
  ::ECommendType commend_type() const;
  void set_commend_type(::ECommendType value);
  private:
  ::ECommendType _internal_commend_type() const;
  void _internal_set_commend_type(::ECommendType value);
  public:

  // optional uint32 fake_commend_hero_id = 4;
  bool has_fake_commend_hero_id() const;
  private:
  bool _internal_has_fake_commend_hero_id() const;
  public:
  void clear_fake_commend_hero_id();
  uint32_t fake_commend_hero_id() const;
  void set_fake_commend_hero_id(uint32_t value);
  private:
  uint32_t _internal_fake_commend_hero_id() const;
  void _internal_set_fake_commend_hero_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCommendPlayerFromMatch)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t match_id_;
    uint32_t target_account_id_;
    int commend_type_;
    uint32_t fake_commend_hero_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCommendPlayerFromMatchResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCCommendPlayerFromMatchResponse) */ {
 public:
  inline CMsgClientToGCCommendPlayerFromMatchResponse() : CMsgClientToGCCommendPlayerFromMatchResponse(nullptr) {}
  ~CMsgClientToGCCommendPlayerFromMatchResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCCommendPlayerFromMatchResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCCommendPlayerFromMatchResponse(const CMsgClientToGCCommendPlayerFromMatchResponse& from);
  CMsgClientToGCCommendPlayerFromMatchResponse(CMsgClientToGCCommendPlayerFromMatchResponse&& from) noexcept
    : CMsgClientToGCCommendPlayerFromMatchResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCommendPlayerFromMatchResponse& operator=(const CMsgClientToGCCommendPlayerFromMatchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCCommendPlayerFromMatchResponse& operator=(CMsgClientToGCCommendPlayerFromMatchResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCCommendPlayerFromMatchResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCCommendPlayerFromMatchResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCommendPlayerFromMatchResponse*>(
               &_CMsgClientToGCCommendPlayerFromMatchResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    134;

  friend void swap(CMsgClientToGCCommendPlayerFromMatchResponse& a, CMsgClientToGCCommendPlayerFromMatchResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCCommendPlayerFromMatchResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCCommendPlayerFromMatchResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCCommendPlayerFromMatchResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCCommendPlayerFromMatchResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCCommendPlayerFromMatchResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCCommendPlayerFromMatchResponse& from) {
    CMsgClientToGCCommendPlayerFromMatchResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCommendPlayerFromMatchResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCCommendPlayerFromMatchResponse";
  }
  protected:
  explicit CMsgClientToGCCommendPlayerFromMatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCommendPlayerFromMatchResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eRateLimited =
    CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_k_eRateLimited;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCCommendPlayerFromMatchResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse result() const;
  void set_result(::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse value);
  private:
  ::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCommendPlayerFromMatchResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientCommendNotification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientCommendNotification) */ {
 public:
  inline CMsgGCToClientCommendNotification() : CMsgGCToClientCommendNotification(nullptr) {}
  ~CMsgGCToClientCommendNotification() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCToClientCommendNotification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientCommendNotification(const CMsgGCToClientCommendNotification& from);
  CMsgGCToClientCommendNotification(CMsgGCToClientCommendNotification&& from) noexcept
    : CMsgGCToClientCommendNotification() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientCommendNotification& operator=(const CMsgGCToClientCommendNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientCommendNotification& operator=(CMsgGCToClientCommendNotification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCToClientCommendNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientCommendNotification* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientCommendNotification*>(
               &_CMsgGCToClientCommendNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    135;

  friend void swap(CMsgGCToClientCommendNotification& a, CMsgGCToClientCommendNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientCommendNotification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientCommendNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCToClientCommendNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCToClientCommendNotification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCToClientCommendNotification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCToClientCommendNotification& from) {
    CMsgGCToClientCommendNotification::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientCommendNotification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientCommendNotification";
  }
  protected:
  explicit CMsgGCToClientCommendNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommenderNameFieldNumber = 2,
    kCommenderAccountIdFieldNumber = 1,
    kCommenderHeroIdFieldNumber = 4,
    kMatchIdFieldNumber = 6,
    kCommendTypeFieldNumber = 5,
  };
  // optional string commender_name = 2;
  bool has_commender_name() const;
  private:
  bool _internal_has_commender_name() const;
  public:
  void clear_commender_name();
  const std::string& commender_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_commender_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_commender_name();
  PROTOBUF_NODISCARD std::string* release_commender_name();
  void set_allocated_commender_name(std::string* commender_name);
  private:
  const std::string& _internal_commender_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_commender_name(const std::string& value);
  std::string* _internal_mutable_commender_name();
  public:

  // optional uint32 commender_account_id = 1;
  bool has_commender_account_id() const;
  private:
  bool _internal_has_commender_account_id() const;
  public:
  void clear_commender_account_id();
  uint32_t commender_account_id() const;
  void set_commender_account_id(uint32_t value);
  private:
  uint32_t _internal_commender_account_id() const;
  void _internal_set_commender_account_id(uint32_t value);
  public:

  // optional uint32 commender_hero_id = 4;
  bool has_commender_hero_id() const;
  private:
  bool _internal_has_commender_hero_id() const;
  public:
  void clear_commender_hero_id();
  uint32_t commender_hero_id() const;
  void set_commender_hero_id(uint32_t value);
  private:
  uint32_t _internal_commender_hero_id() const;
  void _internal_set_commender_hero_id(uint32_t value);
  public:

  // optional uint64 match_id = 6;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // optional .ECommendType commend_type = 5 [default = k_eInvalid];
  bool has_commend_type() const;
  private:
  bool _internal_has_commend_type() const;
  public:
  void clear_commend_type();
  ::ECommendType commend_type() const;
  void set_commend_type(::ECommendType value);
  private:
  ::ECommendType _internal_commend_type() const;
  void _internal_set_commend_type(::ECommendType value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientCommendNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr commender_name_;
    uint32_t commender_account_id_;
    uint32_t commender_hero_id_;
    uint64_t match_id_;
    int commend_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestCheatReports final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestCheatReports) */ {
 public:
  inline CMsgClientToGCRequestCheatReports() : CMsgClientToGCRequestCheatReports(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRequestCheatReports(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestCheatReports(const CMsgClientToGCRequestCheatReports& from);
  CMsgClientToGCRequestCheatReports(CMsgClientToGCRequestCheatReports&& from) noexcept
    : CMsgClientToGCRequestCheatReports() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestCheatReports& operator=(const CMsgClientToGCRequestCheatReports& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestCheatReports& operator=(CMsgClientToGCRequestCheatReports&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRequestCheatReports& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestCheatReports* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestCheatReports*>(
               &_CMsgClientToGCRequestCheatReports_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    136;

  friend void swap(CMsgClientToGCRequestCheatReports& a, CMsgClientToGCRequestCheatReports& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestCheatReports* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestCheatReports* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestCheatReports* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestCheatReports>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgClientToGCRequestCheatReports& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgClientToGCRequestCheatReports& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestCheatReports";
  }
  protected:
  explicit CMsgClientToGCRequestCheatReports(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestCheatReports)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport) */ {
 public:
  inline CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport() : CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport(nullptr) {}
  ~CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport(const CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& from);
  CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport(CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport&& from) noexcept
    : CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& operator=(const CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& operator=(CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport*>(
               &_CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    137;

  friend void swap(CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& a, CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& from) {
    CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport";
  }
  protected:
  explicit CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatchIdFieldNumber = 2,
    kAccountIdFieldNumber = 1,
    kHeroIdFieldNumber = 3,
  };
  // optional uint64 match_id = 2;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 hero_id = 3;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t match_id_;
    uint32_t account_id_;
    uint32_t hero_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestCheatReportsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestCheatReportsResponse) */ {
 public:
  inline CMsgClientToGCRequestCheatReportsResponse() : CMsgClientToGCRequestCheatReportsResponse(nullptr) {}
  ~CMsgClientToGCRequestCheatReportsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCRequestCheatReportsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestCheatReportsResponse(const CMsgClientToGCRequestCheatReportsResponse& from);
  CMsgClientToGCRequestCheatReportsResponse(CMsgClientToGCRequestCheatReportsResponse&& from) noexcept
    : CMsgClientToGCRequestCheatReportsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestCheatReportsResponse& operator=(const CMsgClientToGCRequestCheatReportsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestCheatReportsResponse& operator=(CMsgClientToGCRequestCheatReportsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCRequestCheatReportsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestCheatReportsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestCheatReportsResponse*>(
               &_CMsgClientToGCRequestCheatReportsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    138;

  friend void swap(CMsgClientToGCRequestCheatReportsResponse& a, CMsgClientToGCRequestCheatReportsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestCheatReportsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestCheatReportsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCRequestCheatReportsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestCheatReportsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCRequestCheatReportsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCRequestCheatReportsResponse& from) {
    CMsgClientToGCRequestCheatReportsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestCheatReportsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestCheatReportsResponse";
  }
  protected:
  explicit CMsgClientToGCRequestCheatReportsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport RecentCheatReport;

  typedef CMsgClientToGCRequestCheatReportsResponse_EResult EResult;
  static constexpr EResult k_eSuccess =
    CMsgClientToGCRequestCheatReportsResponse_EResult_k_eSuccess;
  static constexpr EResult k_eInvalidPermission =
    CMsgClientToGCRequestCheatReportsResponse_EResult_k_eInvalidPermission;
  static constexpr EResult k_eInternalError =
    CMsgClientToGCRequestCheatReportsResponse_EResult_k_eInternalError;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCRequestCheatReportsResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgClientToGCRequestCheatReportsResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgClientToGCRequestCheatReportsResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgClientToGCRequestCheatReportsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCRequestCheatReportsResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgClientToGCRequestCheatReportsResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgClientToGCRequestCheatReportsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kCheatReportsFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated .CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport cheat_reports = 2;
  int cheat_reports_size() const;
  private:
  int _internal_cheat_reports_size() const;
  public:
  void clear_cheat_reports();
  ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* mutable_cheat_reports(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport >*
      mutable_cheat_reports();
  private:
  const ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& _internal_cheat_reports(int index) const;
  ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* _internal_add_cheat_reports();
  public:
  const ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& cheat_reports(int index) const;
  ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* add_cheat_reports();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport >&
      cheat_reports() const;

  // optional .CMsgClientToGCRequestCheatReportsResponse.EResult result = 1 [default = k_eSuccess];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRequestCheatReportsResponse_EResult result() const;
  void set_result(::CMsgClientToGCRequestCheatReportsResponse_EResult value);
  private:
  ::CMsgClientToGCRequestCheatReportsResponse_EResult _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRequestCheatReportsResponse_EResult value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestCheatReportsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport > cheat_reports_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetHeroMMRRankings final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetHeroMMRRankings) */ {
 public:
  inline CMsgClientToGCGetHeroMMRRankings() : CMsgClientToGCGetHeroMMRRankings(nullptr) {}
  ~CMsgClientToGCGetHeroMMRRankings() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroMMRRankings(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetHeroMMRRankings(const CMsgClientToGCGetHeroMMRRankings& from);
  CMsgClientToGCGetHeroMMRRankings(CMsgClientToGCGetHeroMMRRankings&& from) noexcept
    : CMsgClientToGCGetHeroMMRRankings() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetHeroMMRRankings& operator=(const CMsgClientToGCGetHeroMMRRankings& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetHeroMMRRankings& operator=(CMsgClientToGCGetHeroMMRRankings&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetHeroMMRRankings& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetHeroMMRRankings* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetHeroMMRRankings*>(
               &_CMsgClientToGCGetHeroMMRRankings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    139;

  friend void swap(CMsgClientToGCGetHeroMMRRankings& a, CMsgClientToGCGetHeroMMRRankings& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetHeroMMRRankings* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetHeroMMRRankings* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetHeroMMRRankings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetHeroMMRRankings>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetHeroMMRRankings& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetHeroMMRRankings& from) {
    CMsgClientToGCGetHeroMMRRankings::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetHeroMMRRankings* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetHeroMMRRankings";
  }
  protected:
  explicit CMsgClientToGCGetHeroMMRRankings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetAccountIdFieldNumber = 1,
  };
  // optional uint32 target_account_id = 1;
  bool has_target_account_id() const;
  private:
  bool _internal_has_target_account_id() const;
  public:
  void clear_target_account_id();
  uint32_t target_account_id() const;
  void set_target_account_id(uint32_t value);
  private:
  uint32_t _internal_target_account_id() const;
  void _internal_set_target_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetHeroMMRRankings)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t target_account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetHeroMMRRankingsResponse_Hero final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetHeroMMRRankingsResponse.Hero) */ {
 public:
  inline CMsgClientToGCGetHeroMMRRankingsResponse_Hero() : CMsgClientToGCGetHeroMMRRankingsResponse_Hero(nullptr) {}
  ~CMsgClientToGCGetHeroMMRRankingsResponse_Hero() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroMMRRankingsResponse_Hero(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetHeroMMRRankingsResponse_Hero(const CMsgClientToGCGetHeroMMRRankingsResponse_Hero& from);
  CMsgClientToGCGetHeroMMRRankingsResponse_Hero(CMsgClientToGCGetHeroMMRRankingsResponse_Hero&& from) noexcept
    : CMsgClientToGCGetHeroMMRRankingsResponse_Hero() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetHeroMMRRankingsResponse_Hero& operator=(const CMsgClientToGCGetHeroMMRRankingsResponse_Hero& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetHeroMMRRankingsResponse_Hero& operator=(CMsgClientToGCGetHeroMMRRankingsResponse_Hero&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetHeroMMRRankingsResponse_Hero& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetHeroMMRRankingsResponse_Hero* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetHeroMMRRankingsResponse_Hero*>(
               &_CMsgClientToGCGetHeroMMRRankingsResponse_Hero_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    140;

  friend void swap(CMsgClientToGCGetHeroMMRRankingsResponse_Hero& a, CMsgClientToGCGetHeroMMRRankingsResponse_Hero& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetHeroMMRRankingsResponse_Hero* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetHeroMMRRankingsResponse_Hero* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetHeroMMRRankingsResponse_Hero* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetHeroMMRRankingsResponse_Hero>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetHeroMMRRankingsResponse_Hero& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetHeroMMRRankingsResponse_Hero& from) {
    CMsgClientToGCGetHeroMMRRankingsResponse_Hero::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetHeroMMRRankingsResponse_Hero* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetHeroMMRRankingsResponse.Hero";
  }
  protected:
  explicit CMsgClientToGCGetHeroMMRRankingsResponse_Hero(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroIdFieldNumber = 1,
    kRelativeMmrFieldNumber = 2,
  };
  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // optional int32 relative_mmr = 2;
  bool has_relative_mmr() const;
  private:
  bool _internal_has_relative_mmr() const;
  public:
  void clear_relative_mmr();
  int32_t relative_mmr() const;
  void set_relative_mmr(int32_t value);
  private:
  int32_t _internal_relative_mmr() const;
  void _internal_set_relative_mmr(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetHeroMMRRankingsResponse.Hero)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t hero_id_;
    int32_t relative_mmr_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetHeroMMRRankingsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetHeroMMRRankingsResponse) */ {
 public:
  inline CMsgClientToGCGetHeroMMRRankingsResponse() : CMsgClientToGCGetHeroMMRRankingsResponse(nullptr) {}
  ~CMsgClientToGCGetHeroMMRRankingsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroMMRRankingsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetHeroMMRRankingsResponse(const CMsgClientToGCGetHeroMMRRankingsResponse& from);
  CMsgClientToGCGetHeroMMRRankingsResponse(CMsgClientToGCGetHeroMMRRankingsResponse&& from) noexcept
    : CMsgClientToGCGetHeroMMRRankingsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetHeroMMRRankingsResponse& operator=(const CMsgClientToGCGetHeroMMRRankingsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetHeroMMRRankingsResponse& operator=(CMsgClientToGCGetHeroMMRRankingsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetHeroMMRRankingsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetHeroMMRRankingsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetHeroMMRRankingsResponse*>(
               &_CMsgClientToGCGetHeroMMRRankingsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    141;

  friend void swap(CMsgClientToGCGetHeroMMRRankingsResponse& a, CMsgClientToGCGetHeroMMRRankingsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetHeroMMRRankingsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetHeroMMRRankingsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetHeroMMRRankingsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetHeroMMRRankingsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetHeroMMRRankingsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetHeroMMRRankingsResponse& from) {
    CMsgClientToGCGetHeroMMRRankingsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetHeroMMRRankingsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetHeroMMRRankingsResponse";
  }
  protected:
  explicit CMsgClientToGCGetHeroMMRRankingsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetHeroMMRRankingsResponse_Hero Hero;

  typedef CMsgClientToGCGetHeroMMRRankingsResponse_EResult EResult;
  static constexpr EResult k_eSuccess =
    CMsgClientToGCGetHeroMMRRankingsResponse_EResult_k_eSuccess;
  static constexpr EResult k_eInvalidPermission =
    CMsgClientToGCGetHeroMMRRankingsResponse_EResult_k_eInvalidPermission;
  static constexpr EResult k_eInternalError =
    CMsgClientToGCGetHeroMMRRankingsResponse_EResult_k_eInternalError;
  static constexpr EResult k_eTooBusy =
    CMsgClientToGCGetHeroMMRRankingsResponse_EResult_k_eTooBusy;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCGetHeroMMRRankingsResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgClientToGCGetHeroMMRRankingsResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgClientToGCGetHeroMMRRankingsResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgClientToGCGetHeroMMRRankingsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCGetHeroMMRRankingsResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgClientToGCGetHeroMMRRankingsResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgClientToGCGetHeroMMRRankingsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kHeroesFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated .CMsgClientToGCGetHeroMMRRankingsResponse.Hero heroes = 2;
  int heroes_size() const;
  private:
  int _internal_heroes_size() const;
  public:
  void clear_heroes();
  ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero* mutable_heroes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero >*
      mutable_heroes();
  private:
  const ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero& _internal_heroes(int index) const;
  ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero* _internal_add_heroes();
  public:
  const ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero& heroes(int index) const;
  ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero* add_heroes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero >&
      heroes() const;

  // optional .CMsgClientToGCGetHeroMMRRankingsResponse.EResult result = 1 [default = k_eSuccess];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCGetHeroMMRRankingsResponse_EResult result() const;
  void set_result(::CMsgClientToGCGetHeroMMRRankingsResponse_EResult value);
  private:
  ::CMsgClientToGCGetHeroMMRRankingsResponse_EResult _internal_result() const;
  void _internal_set_result(::CMsgClientToGCGetHeroMMRRankingsResponse_EResult value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetHeroMMRRankingsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero > heroes_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeaderboard final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetLeaderboard) */ {
 public:
  inline CMsgClientToGCGetLeaderboard() : CMsgClientToGCGetLeaderboard(nullptr) {}
  ~CMsgClientToGCGetLeaderboard() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetLeaderboard(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetLeaderboard(const CMsgClientToGCGetLeaderboard& from);
  CMsgClientToGCGetLeaderboard(CMsgClientToGCGetLeaderboard&& from) noexcept
    : CMsgClientToGCGetLeaderboard() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetLeaderboard& operator=(const CMsgClientToGCGetLeaderboard& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetLeaderboard& operator=(CMsgClientToGCGetLeaderboard&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetLeaderboard& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetLeaderboard* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetLeaderboard*>(
               &_CMsgClientToGCGetLeaderboard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    142;

  friend void swap(CMsgClientToGCGetLeaderboard& a, CMsgClientToGCGetLeaderboard& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetLeaderboard* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetLeaderboard* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetLeaderboard* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetLeaderboard>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetLeaderboard& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetLeaderboard& from) {
    CMsgClientToGCGetLeaderboard::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetLeaderboard* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetLeaderboard";
  }
  protected:
  explicit CMsgClientToGCGetLeaderboard(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLeaderboardRegionFieldNumber = 1,
    kHeroIdFieldNumber = 2,
  };
  // optional .ECitadelLeaderboardRegion leaderboard_region = 1 [default = k_ECitadelLeaderboardRegion_None];
  bool has_leaderboard_region() const;
  private:
  bool _internal_has_leaderboard_region() const;
  public:
  void clear_leaderboard_region();
  ::ECitadelLeaderboardRegion leaderboard_region() const;
  void set_leaderboard_region(::ECitadelLeaderboardRegion value);
  private:
  ::ECitadelLeaderboardRegion _internal_leaderboard_region() const;
  void _internal_set_leaderboard_region(::ECitadelLeaderboardRegion value);
  public:

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetLeaderboard)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int leaderboard_region_;
    uint32_t hero_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry) */ {
 public:
  inline CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry() : CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry(nullptr) {}
  ~CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry(const CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& from);
  CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry(CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry&& from) noexcept
    : CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& operator=(const CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& operator=(CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry*>(
               &_CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    143;

  friend void swap(CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& a, CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& from) {
    CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry";
  }
  protected:
  explicit CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTopHeroIdsFieldNumber = 3,
    kAccountNameFieldNumber = 1,
    kRankFieldNumber = 2,
    kBadgeLevelFieldNumber = 4,
  };
  // repeated uint32 top_hero_ids = 3;
  int top_hero_ids_size() const;
  private:
  int _internal_top_hero_ids_size() const;
  public:
  void clear_top_hero_ids();
  private:
  uint32_t _internal_top_hero_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_top_hero_ids() const;
  void _internal_add_top_hero_ids(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_top_hero_ids();
  public:
  uint32_t top_hero_ids(int index) const;
  void set_top_hero_ids(int index, uint32_t value);
  void add_top_hero_ids(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      top_hero_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_top_hero_ids();

  // optional string account_name = 1;
  bool has_account_name() const;
  private:
  bool _internal_has_account_name() const;
  public:
  void clear_account_name();
  const std::string& account_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_account_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_account_name();
  PROTOBUF_NODISCARD std::string* release_account_name();
  void set_allocated_account_name(std::string* account_name);
  private:
  const std::string& _internal_account_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_name(const std::string& value);
  std::string* _internal_mutable_account_name();
  public:

  // optional uint32 rank = 2;
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  uint32_t rank() const;
  void set_rank(uint32_t value);
  private:
  uint32_t _internal_rank() const;
  void _internal_set_rank(uint32_t value);
  public:

  // optional uint32 badge_level = 4;
  bool has_badge_level() const;
  private:
  bool _internal_has_badge_level() const;
  public:
  void clear_badge_level();
  uint32_t badge_level() const;
  void set_badge_level(uint32_t value);
  private:
  uint32_t _internal_badge_level() const;
  void _internal_set_badge_level(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > top_hero_ids_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_name_;
    uint32_t rank_;
    uint32_t badge_level_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeaderboardResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetLeaderboardResponse) */ {
 public:
  inline CMsgClientToGCGetLeaderboardResponse() : CMsgClientToGCGetLeaderboardResponse(nullptr) {}
  ~CMsgClientToGCGetLeaderboardResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetLeaderboardResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetLeaderboardResponse(const CMsgClientToGCGetLeaderboardResponse& from);
  CMsgClientToGCGetLeaderboardResponse(CMsgClientToGCGetLeaderboardResponse&& from) noexcept
    : CMsgClientToGCGetLeaderboardResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetLeaderboardResponse& operator=(const CMsgClientToGCGetLeaderboardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetLeaderboardResponse& operator=(CMsgClientToGCGetLeaderboardResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetLeaderboardResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetLeaderboardResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetLeaderboardResponse*>(
               &_CMsgClientToGCGetLeaderboardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    144;

  friend void swap(CMsgClientToGCGetLeaderboardResponse& a, CMsgClientToGCGetLeaderboardResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetLeaderboardResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetLeaderboardResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetLeaderboardResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetLeaderboardResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetLeaderboardResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetLeaderboardResponse& from) {
    CMsgClientToGCGetLeaderboardResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetLeaderboardResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetLeaderboardResponse";
  }
  protected:
  explicit CMsgClientToGCGetLeaderboardResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry LeaderboardEntry;

  typedef CMsgClientToGCGetLeaderboardResponse_EResult EResult;
  static constexpr EResult k_eSuccess =
    CMsgClientToGCGetLeaderboardResponse_EResult_k_eSuccess;
  static constexpr EResult k_eInvalidArguments =
    CMsgClientToGCGetLeaderboardResponse_EResult_k_eInvalidArguments;
  static constexpr EResult k_eInternalError =
    CMsgClientToGCGetLeaderboardResponse_EResult_k_eInternalError;
  static constexpr EResult k_eTooBusy =
    CMsgClientToGCGetLeaderboardResponse_EResult_k_eTooBusy;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCGetLeaderboardResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgClientToGCGetLeaderboardResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgClientToGCGetLeaderboardResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgClientToGCGetLeaderboardResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCGetLeaderboardResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgClientToGCGetLeaderboardResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgClientToGCGetLeaderboardResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated .CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry entries = 2;
  int entries_size() const;
  private:
  int _internal_entries_size() const;
  public:
  void clear_entries();
  ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* mutable_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry >*
      mutable_entries();
  private:
  const ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& _internal_entries(int index) const;
  ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* _internal_add_entries();
  public:
  const ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& entries(int index) const;
  ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* add_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry >&
      entries() const;

  // optional .CMsgClientToGCGetLeaderboardResponse.EResult result = 1 [default = k_eSuccess];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCGetLeaderboardResponse_EResult result() const;
  void set_result(::CMsgClientToGCGetLeaderboardResponse_EResult value);
  private:
  ::CMsgClientToGCGetLeaderboardResponse_EResult _internal_result() const;
  void _internal_set_result(::CMsgClientToGCGetLeaderboardResponse_EResult value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetLeaderboardResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry > entries_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAccountLeaderboards final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetAccountLeaderboards) */ {
 public:
  inline CMsgClientToGCGetAccountLeaderboards() : CMsgClientToGCGetAccountLeaderboards(nullptr) {}
  ~CMsgClientToGCGetAccountLeaderboards() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountLeaderboards(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetAccountLeaderboards(const CMsgClientToGCGetAccountLeaderboards& from);
  CMsgClientToGCGetAccountLeaderboards(CMsgClientToGCGetAccountLeaderboards&& from) noexcept
    : CMsgClientToGCGetAccountLeaderboards() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAccountLeaderboards& operator=(const CMsgClientToGCGetAccountLeaderboards& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetAccountLeaderboards& operator=(CMsgClientToGCGetAccountLeaderboards&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetAccountLeaderboards& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetAccountLeaderboards* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAccountLeaderboards*>(
               &_CMsgClientToGCGetAccountLeaderboards_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    145;

  friend void swap(CMsgClientToGCGetAccountLeaderboards& a, CMsgClientToGCGetAccountLeaderboards& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetAccountLeaderboards* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetAccountLeaderboards* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAccountLeaderboards* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAccountLeaderboards>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetAccountLeaderboards& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetAccountLeaderboards& from) {
    CMsgClientToGCGetAccountLeaderboards::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAccountLeaderboards* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetAccountLeaderboards";
  }
  protected:
  explicit CMsgClientToGCGetAccountLeaderboards(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAccountLeaderboards)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry) */ {
 public:
  inline CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry() : CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry(nullptr) {}
  ~CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry(const CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& from);
  CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry(CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry&& from) noexcept
    : CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& operator=(const CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& operator=(CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry*>(
               &_CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    146;

  friend void swap(CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& a, CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& from) {
    CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry";
  }
  protected:
  explicit CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRegionFieldNumber = 1,
    kHeroIdFieldNumber = 2,
    kRankFieldNumber = 3,
  };
  // optional .ECitadelLeaderboardRegion region = 1 [default = k_ECitadelLeaderboardRegion_None];
  bool has_region() const;
  private:
  bool _internal_has_region() const;
  public:
  void clear_region();
  ::ECitadelLeaderboardRegion region() const;
  void set_region(::ECitadelLeaderboardRegion value);
  private:
  ::ECitadelLeaderboardRegion _internal_region() const;
  void _internal_set_region(::ECitadelLeaderboardRegion value);
  public:

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // optional uint32 rank = 3;
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  uint32_t rank() const;
  void set_rank(uint32_t value);
  private:
  uint32_t _internal_rank() const;
  void _internal_set_rank(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int region_;
    uint32_t hero_id_;
    uint32_t rank_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAccountLeaderboardsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetAccountLeaderboardsResponse) */ {
 public:
  inline CMsgClientToGCGetAccountLeaderboardsResponse() : CMsgClientToGCGetAccountLeaderboardsResponse(nullptr) {}
  ~CMsgClientToGCGetAccountLeaderboardsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountLeaderboardsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetAccountLeaderboardsResponse(const CMsgClientToGCGetAccountLeaderboardsResponse& from);
  CMsgClientToGCGetAccountLeaderboardsResponse(CMsgClientToGCGetAccountLeaderboardsResponse&& from) noexcept
    : CMsgClientToGCGetAccountLeaderboardsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAccountLeaderboardsResponse& operator=(const CMsgClientToGCGetAccountLeaderboardsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetAccountLeaderboardsResponse& operator=(CMsgClientToGCGetAccountLeaderboardsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCGetAccountLeaderboardsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetAccountLeaderboardsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAccountLeaderboardsResponse*>(
               &_CMsgClientToGCGetAccountLeaderboardsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    147;

  friend void swap(CMsgClientToGCGetAccountLeaderboardsResponse& a, CMsgClientToGCGetAccountLeaderboardsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetAccountLeaderboardsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetAccountLeaderboardsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCGetAccountLeaderboardsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAccountLeaderboardsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCGetAccountLeaderboardsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCGetAccountLeaderboardsResponse& from) {
    CMsgClientToGCGetAccountLeaderboardsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAccountLeaderboardsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetAccountLeaderboardsResponse";
  }
  protected:
  explicit CMsgClientToGCGetAccountLeaderboardsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry LeaderboardEntry;

  typedef CMsgClientToGCGetAccountLeaderboardsResponse_EResult EResult;
  static constexpr EResult k_eSuccess =
    CMsgClientToGCGetAccountLeaderboardsResponse_EResult_k_eSuccess;
  static constexpr EResult k_eInvalidPermission =
    CMsgClientToGCGetAccountLeaderboardsResponse_EResult_k_eInvalidPermission;
  static constexpr EResult k_eInternalError =
    CMsgClientToGCGetAccountLeaderboardsResponse_EResult_k_eInternalError;
  static constexpr EResult k_eTooBusy =
    CMsgClientToGCGetAccountLeaderboardsResponse_EResult_k_eTooBusy;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCGetAccountLeaderboardsResponse_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CMsgClientToGCGetAccountLeaderboardsResponse_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CMsgClientToGCGetAccountLeaderboardsResponse_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CMsgClientToGCGetAccountLeaderboardsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCGetAccountLeaderboardsResponse_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CMsgClientToGCGetAccountLeaderboardsResponse_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CMsgClientToGCGetAccountLeaderboardsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 3,
    kAccountNameFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated .CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry entries = 3;
  int entries_size() const;
  private:
  int _internal_entries_size() const;
  public:
  void clear_entries();
  ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* mutable_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry >*
      mutable_entries();
  private:
  const ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& _internal_entries(int index) const;
  ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* _internal_add_entries();
  public:
  const ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& entries(int index) const;
  ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* add_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry >&
      entries() const;

  // optional string account_name = 2;
  bool has_account_name() const;
  private:
  bool _internal_has_account_name() const;
  public:
  void clear_account_name();
  const std::string& account_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_account_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_account_name();
  PROTOBUF_NODISCARD std::string* release_account_name();
  void set_allocated_account_name(std::string* account_name);
  private:
  const std::string& _internal_account_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_name(const std::string& value);
  std::string* _internal_mutable_account_name();
  public:

  // optional .CMsgClientToGCGetAccountLeaderboardsResponse.EResult result = 1 [default = k_eSuccess];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCGetAccountLeaderboardsResponse_EResult result() const;
  void set_result(::CMsgClientToGCGetAccountLeaderboardsResponse_EResult value);
  private:
  ::CMsgClientToGCGetAccountLeaderboardsResponse_EResult _internal_result() const;
  void _internal_set_result(::CMsgClientToGCGetAccountLeaderboardsResponse_EResult value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAccountLeaderboardsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry > entries_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_name_;
    int result_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetHideHolidayModels final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetHideHolidayModels) */ {
 public:
  inline CMsgClientToGCSetHideHolidayModels() : CMsgClientToGCSetHideHolidayModels(nullptr) {}
  ~CMsgClientToGCSetHideHolidayModels() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetHideHolidayModels(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetHideHolidayModels(const CMsgClientToGCSetHideHolidayModels& from);
  CMsgClientToGCSetHideHolidayModels(CMsgClientToGCSetHideHolidayModels&& from) noexcept
    : CMsgClientToGCSetHideHolidayModels() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetHideHolidayModels& operator=(const CMsgClientToGCSetHideHolidayModels& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetHideHolidayModels& operator=(CMsgClientToGCSetHideHolidayModels&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetHideHolidayModels& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetHideHolidayModels* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetHideHolidayModels*>(
               &_CMsgClientToGCSetHideHolidayModels_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    148;

  friend void swap(CMsgClientToGCSetHideHolidayModels& a, CMsgClientToGCSetHideHolidayModels& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetHideHolidayModels* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetHideHolidayModels* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetHideHolidayModels* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetHideHolidayModels>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetHideHolidayModels& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetHideHolidayModels& from) {
    CMsgClientToGCSetHideHolidayModels::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetHideHolidayModels* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetHideHolidayModels";
  }
  protected:
  explicit CMsgClientToGCSetHideHolidayModels(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHideHolidayModelsFieldNumber = 1,
  };
  // optional bool hide_holiday_models = 1;
  bool has_hide_holiday_models() const;
  private:
  bool _internal_has_hide_holiday_models() const;
  public:
  void clear_hide_holiday_models();
  bool hide_holiday_models() const;
  void set_hide_holiday_models(bool value);
  private:
  bool _internal_hide_holiday_models() const;
  void _internal_set_hide_holiday_models(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetHideHolidayModels)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool hide_holiday_models_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetHideHolidayModelsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSetHideHolidayModelsResponse) */ {
 public:
  inline CMsgClientToGCSetHideHolidayModelsResponse() : CMsgClientToGCSetHideHolidayModelsResponse(nullptr) {}
  ~CMsgClientToGCSetHideHolidayModelsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgClientToGCSetHideHolidayModelsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSetHideHolidayModelsResponse(const CMsgClientToGCSetHideHolidayModelsResponse& from);
  CMsgClientToGCSetHideHolidayModelsResponse(CMsgClientToGCSetHideHolidayModelsResponse&& from) noexcept
    : CMsgClientToGCSetHideHolidayModelsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetHideHolidayModelsResponse& operator=(const CMsgClientToGCSetHideHolidayModelsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSetHideHolidayModelsResponse& operator=(CMsgClientToGCSetHideHolidayModelsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientToGCSetHideHolidayModelsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSetHideHolidayModelsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetHideHolidayModelsResponse*>(
               &_CMsgClientToGCSetHideHolidayModelsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    149;

  friend void swap(CMsgClientToGCSetHideHolidayModelsResponse& a, CMsgClientToGCSetHideHolidayModelsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSetHideHolidayModelsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSetHideHolidayModelsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientToGCSetHideHolidayModelsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientToGCSetHideHolidayModelsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientToGCSetHideHolidayModelsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgClientToGCSetHideHolidayModelsResponse& from) {
    CMsgClientToGCSetHideHolidayModelsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetHideHolidayModelsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSetHideHolidayModelsResponse";
  }
  protected:
  explicit CMsgClientToGCSetHideHolidayModelsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // optional bool success = 1;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSetHideHolidayModelsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool success_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fclient_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CSOGameAccountClient

// optional uint32 account_id = 1 [(.key_field) = true];
inline bool CSOGameAccountClient::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_account_id() const {
  return _internal_has_account_id();
}
inline void CSOGameAccountClient::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CSOGameAccountClient::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CSOGameAccountClient::account_id() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.account_id)
  return _internal_account_id();
}
inline void CSOGameAccountClient::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.account_id_ = value;
}
inline void CSOGameAccountClient::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.account_id)
}

// optional uint64 flags = 2;
inline bool CSOGameAccountClient::_internal_has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_flags() const {
  return _internal_has_flags();
}
inline void CSOGameAccountClient::clear_flags() {
  _impl_.flags_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CSOGameAccountClient::_internal_flags() const {
  return _impl_.flags_;
}
inline uint64_t CSOGameAccountClient::flags() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.flags)
  return _internal_flags();
}
inline void CSOGameAccountClient::_internal_set_flags(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.flags_ = value;
}
inline void CSOGameAccountClient::set_flags(uint64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.flags)
}

// optional uint32 wins = 3;
inline bool CSOGameAccountClient::_internal_has_wins() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_wins() const {
  return _internal_has_wins();
}
inline void CSOGameAccountClient::clear_wins() {
  _impl_.wins_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CSOGameAccountClient::_internal_wins() const {
  return _impl_.wins_;
}
inline uint32_t CSOGameAccountClient::wins() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.wins)
  return _internal_wins();
}
inline void CSOGameAccountClient::_internal_set_wins(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.wins_ = value;
}
inline void CSOGameAccountClient::set_wins(uint32_t value) {
  _internal_set_wins(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.wins)
}

// optional uint32 losses = 4;
inline bool CSOGameAccountClient::_internal_has_losses() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_losses() const {
  return _internal_has_losses();
}
inline void CSOGameAccountClient::clear_losses() {
  _impl_.losses_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CSOGameAccountClient::_internal_losses() const {
  return _impl_.losses_;
}
inline uint32_t CSOGameAccountClient::losses() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.losses)
  return _internal_losses();
}
inline void CSOGameAccountClient::_internal_set_losses(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.losses_ = value;
}
inline void CSOGameAccountClient::set_losses(uint32_t value) {
  _internal_set_losses(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.losses)
}

// optional uint32 kills = 5;
inline bool CSOGameAccountClient::_internal_has_kills() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_kills() const {
  return _internal_has_kills();
}
inline void CSOGameAccountClient::clear_kills() {
  _impl_.kills_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CSOGameAccountClient::_internal_kills() const {
  return _impl_.kills_;
}
inline uint32_t CSOGameAccountClient::kills() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.kills)
  return _internal_kills();
}
inline void CSOGameAccountClient::_internal_set_kills(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.kills_ = value;
}
inline void CSOGameAccountClient::set_kills(uint32_t value) {
  _internal_set_kills(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.kills)
}

// optional uint32 most_played_hero_id = 6;
inline bool CSOGameAccountClient::_internal_has_most_played_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_most_played_hero_id() const {
  return _internal_has_most_played_hero_id();
}
inline void CSOGameAccountClient::clear_most_played_hero_id() {
  _impl_.most_played_hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CSOGameAccountClient::_internal_most_played_hero_id() const {
  return _impl_.most_played_hero_id_;
}
inline uint32_t CSOGameAccountClient::most_played_hero_id() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.most_played_hero_id)
  return _internal_most_played_hero_id();
}
inline void CSOGameAccountClient::_internal_set_most_played_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.most_played_hero_id_ = value;
}
inline void CSOGameAccountClient::set_most_played_hero_id(uint32_t value) {
  _internal_set_most_played_hero_id(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.most_played_hero_id)
}

// optional uint64 permissions = 7;
inline bool CSOGameAccountClient::_internal_has_permissions() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_permissions() const {
  return _internal_has_permissions();
}
inline void CSOGameAccountClient::clear_permissions() {
  _impl_.permissions_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint64_t CSOGameAccountClient::_internal_permissions() const {
  return _impl_.permissions_;
}
inline uint64_t CSOGameAccountClient::permissions() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.permissions)
  return _internal_permissions();
}
inline void CSOGameAccountClient::_internal_set_permissions(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.permissions_ = value;
}
inline void CSOGameAccountClient::set_permissions(uint64_t value) {
  _internal_set_permissions(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.permissions)
}

// optional uint64 new_player_progress = 8;
inline bool CSOGameAccountClient::_internal_has_new_player_progress() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_new_player_progress() const {
  return _internal_has_new_player_progress();
}
inline void CSOGameAccountClient::clear_new_player_progress() {
  _impl_.new_player_progress_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline uint64_t CSOGameAccountClient::_internal_new_player_progress() const {
  return _impl_.new_player_progress_;
}
inline uint64_t CSOGameAccountClient::new_player_progress() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.new_player_progress)
  return _internal_new_player_progress();
}
inline void CSOGameAccountClient::_internal_set_new_player_progress(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.new_player_progress_ = value;
}
inline void CSOGameAccountClient::set_new_player_progress(uint64_t value) {
  _internal_set_new_player_progress(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.new_player_progress)
}

// optional uint32 hero_unlock_credits = 9;
inline bool CSOGameAccountClient::_internal_has_hero_unlock_credits() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_hero_unlock_credits() const {
  return _internal_has_hero_unlock_credits();
}
inline void CSOGameAccountClient::clear_hero_unlock_credits() {
  _impl_.hero_unlock_credits_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CSOGameAccountClient::_internal_hero_unlock_credits() const {
  return _impl_.hero_unlock_credits_;
}
inline uint32_t CSOGameAccountClient::hero_unlock_credits() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.hero_unlock_credits)
  return _internal_hero_unlock_credits();
}
inline void CSOGameAccountClient::_internal_set_hero_unlock_credits(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.hero_unlock_credits_ = value;
}
inline void CSOGameAccountClient::set_hero_unlock_credits(uint32_t value) {
  _internal_set_hero_unlock_credits(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.hero_unlock_credits)
}

// optional uint32 mm_ban_until = 10;
inline bool CSOGameAccountClient::_internal_has_mm_ban_until() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_mm_ban_until() const {
  return _internal_has_mm_ban_until();
}
inline void CSOGameAccountClient::clear_mm_ban_until() {
  _impl_.mm_ban_until_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CSOGameAccountClient::_internal_mm_ban_until() const {
  return _impl_.mm_ban_until_;
}
inline uint32_t CSOGameAccountClient::mm_ban_until() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.mm_ban_until)
  return _internal_mm_ban_until();
}
inline void CSOGameAccountClient::_internal_set_mm_ban_until(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.mm_ban_until_ = value;
}
inline void CSOGameAccountClient::set_mm_ban_until(uint32_t value) {
  _internal_set_mm_ban_until(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.mm_ban_until)
}

// optional uint32 comms_ban_until = 11;
inline bool CSOGameAccountClient::_internal_has_comms_ban_until() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_comms_ban_until() const {
  return _internal_has_comms_ban_until();
}
inline void CSOGameAccountClient::clear_comms_ban_until() {
  _impl_.comms_ban_until_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline uint32_t CSOGameAccountClient::_internal_comms_ban_until() const {
  return _impl_.comms_ban_until_;
}
inline uint32_t CSOGameAccountClient::comms_ban_until() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.comms_ban_until)
  return _internal_comms_ban_until();
}
inline void CSOGameAccountClient::_internal_set_comms_ban_until(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.comms_ban_until_ = value;
}
inline void CSOGameAccountClient::set_comms_ban_until(uint32_t value) {
  _internal_set_comms_ban_until(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.comms_ban_until)
}

// optional uint32 low_priority_games_remaining = 12;
inline bool CSOGameAccountClient::_internal_has_low_priority_games_remaining() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_low_priority_games_remaining() const {
  return _internal_has_low_priority_games_remaining();
}
inline void CSOGameAccountClient::clear_low_priority_games_remaining() {
  _impl_.low_priority_games_remaining_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline uint32_t CSOGameAccountClient::_internal_low_priority_games_remaining() const {
  return _impl_.low_priority_games_remaining_;
}
inline uint32_t CSOGameAccountClient::low_priority_games_remaining() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.low_priority_games_remaining)
  return _internal_low_priority_games_remaining();
}
inline void CSOGameAccountClient::_internal_set_low_priority_games_remaining(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.low_priority_games_remaining_ = value;
}
inline void CSOGameAccountClient::set_low_priority_games_remaining(uint32_t value) {
  _internal_set_low_priority_games_remaining(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.low_priority_games_remaining)
}

// optional uint32 report_ban_until = 13;
inline bool CSOGameAccountClient::_internal_has_report_ban_until() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_report_ban_until() const {
  return _internal_has_report_ban_until();
}
inline void CSOGameAccountClient::clear_report_ban_until() {
  _impl_.report_ban_until_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline uint32_t CSOGameAccountClient::_internal_report_ban_until() const {
  return _impl_.report_ban_until_;
}
inline uint32_t CSOGameAccountClient::report_ban_until() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.report_ban_until)
  return _internal_report_ban_until();
}
inline void CSOGameAccountClient::_internal_set_report_ban_until(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.report_ban_until_ = value;
}
inline void CSOGameAccountClient::set_report_ban_until(uint32_t value) {
  _internal_set_report_ban_until(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.report_ban_until)
}

// optional uint32 ranked_badge_level = 14;
inline bool CSOGameAccountClient::_internal_has_ranked_badge_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_ranked_badge_level() const {
  return _internal_has_ranked_badge_level();
}
inline void CSOGameAccountClient::clear_ranked_badge_level() {
  _impl_.ranked_badge_level_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline uint32_t CSOGameAccountClient::_internal_ranked_badge_level() const {
  return _impl_.ranked_badge_level_;
}
inline uint32_t CSOGameAccountClient::ranked_badge_level() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.ranked_badge_level)
  return _internal_ranked_badge_level();
}
inline void CSOGameAccountClient::_internal_set_ranked_badge_level(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.ranked_badge_level_ = value;
}
inline void CSOGameAccountClient::set_ranked_badge_level(uint32_t value) {
  _internal_set_ranked_badge_level(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.ranked_badge_level)
}

// optional uint32 hero_labs_matches_since_test_hero = 21;
inline bool CSOGameAccountClient::_internal_has_hero_labs_matches_since_test_hero() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CSOGameAccountClient::has_hero_labs_matches_since_test_hero() const {
  return _internal_has_hero_labs_matches_since_test_hero();
}
inline void CSOGameAccountClient::clear_hero_labs_matches_since_test_hero() {
  _impl_.hero_labs_matches_since_test_hero_ = 0u;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline uint32_t CSOGameAccountClient::_internal_hero_labs_matches_since_test_hero() const {
  return _impl_.hero_labs_matches_since_test_hero_;
}
inline uint32_t CSOGameAccountClient::hero_labs_matches_since_test_hero() const {
  // @@protoc_insertion_point(field_get:CSOGameAccountClient.hero_labs_matches_since_test_hero)
  return _internal_hero_labs_matches_since_test_hero();
}
inline void CSOGameAccountClient::_internal_set_hero_labs_matches_since_test_hero(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.hero_labs_matches_since_test_hero_ = value;
}
inline void CSOGameAccountClient::set_hero_labs_matches_since_test_hero(uint32_t value) {
  _internal_set_hero_labs_matches_since_test_hero(value);
  // @@protoc_insertion_point(field_set:CSOGameAccountClient.hero_labs_matches_since_test_hero)
}

// -------------------------------------------------------------------

// CSOAccountSyncStorage

// optional uint32 account_id = 1;
inline bool CSOAccountSyncStorage::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOAccountSyncStorage::has_account_id() const {
  return _internal_has_account_id();
}
inline void CSOAccountSyncStorage::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CSOAccountSyncStorage::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CSOAccountSyncStorage::account_id() const {
  // @@protoc_insertion_point(field_get:CSOAccountSyncStorage.account_id)
  return _internal_account_id();
}
inline void CSOAccountSyncStorage::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CSOAccountSyncStorage::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CSOAccountSyncStorage.account_id)
}

// optional uint32 id = 2;
inline bool CSOAccountSyncStorage::_internal_has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOAccountSyncStorage::has_id() const {
  return _internal_has_id();
}
inline void CSOAccountSyncStorage::clear_id() {
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CSOAccountSyncStorage::_internal_id() const {
  return _impl_.id_;
}
inline uint32_t CSOAccountSyncStorage::id() const {
  // @@protoc_insertion_point(field_get:CSOAccountSyncStorage.id)
  return _internal_id();
}
inline void CSOAccountSyncStorage::_internal_set_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.id_ = value;
}
inline void CSOAccountSyncStorage::set_id(uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CSOAccountSyncStorage.id)
}

// optional uint32 value = 3;
inline bool CSOAccountSyncStorage::_internal_has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOAccountSyncStorage::has_value() const {
  return _internal_has_value();
}
inline void CSOAccountSyncStorage::clear_value() {
  _impl_.value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CSOAccountSyncStorage::_internal_value() const {
  return _impl_.value_;
}
inline uint32_t CSOAccountSyncStorage::value() const {
  // @@protoc_insertion_point(field_get:CSOAccountSyncStorage.value)
  return _internal_value();
}
inline void CSOAccountSyncStorage::_internal_set_value(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.value_ = value;
}
inline void CSOAccountSyncStorage::set_value(uint32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CSOAccountSyncStorage.value)
}

// -------------------------------------------------------------------

// CSOAccountHeroInfo

// optional uint32 account_id = 1 [(.key_field) = true];
inline bool CSOAccountHeroInfo::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOAccountHeroInfo::has_account_id() const {
  return _internal_has_account_id();
}
inline void CSOAccountHeroInfo::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CSOAccountHeroInfo::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CSOAccountHeroInfo::account_id() const {
  // @@protoc_insertion_point(field_get:CSOAccountHeroInfo.account_id)
  return _internal_account_id();
}
inline void CSOAccountHeroInfo::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CSOAccountHeroInfo::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CSOAccountHeroInfo.account_id)
}

// optional uint32 hero_id = 2;
inline bool CSOAccountHeroInfo::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOAccountHeroInfo::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CSOAccountHeroInfo::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CSOAccountHeroInfo::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CSOAccountHeroInfo::hero_id() const {
  // @@protoc_insertion_point(field_get:CSOAccountHeroInfo.hero_id)
  return _internal_hero_id();
}
inline void CSOAccountHeroInfo::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.hero_id_ = value;
}
inline void CSOAccountHeroInfo::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CSOAccountHeroInfo.hero_id)
}

// optional .CSOAccountHeroInfo.EHeroStatus status = 3 [default = k_eLocked];
inline bool CSOAccountHeroInfo::_internal_has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOAccountHeroInfo::has_status() const {
  return _internal_has_status();
}
inline void CSOAccountHeroInfo::clear_status() {
  _impl_.status_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::CSOAccountHeroInfo_EHeroStatus CSOAccountHeroInfo::_internal_status() const {
  return static_cast< ::CSOAccountHeroInfo_EHeroStatus >(_impl_.status_);
}
inline ::CSOAccountHeroInfo_EHeroStatus CSOAccountHeroInfo::status() const {
  // @@protoc_insertion_point(field_get:CSOAccountHeroInfo.status)
  return _internal_status();
}
inline void CSOAccountHeroInfo::_internal_set_status(::CSOAccountHeroInfo_EHeroStatus value) {
  assert(::CSOAccountHeroInfo_EHeroStatus_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.status_ = value;
}
inline void CSOAccountHeroInfo::set_status(::CSOAccountHeroInfo_EHeroStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:CSOAccountHeroInfo.status)
}

// optional uint32 wins = 4;
inline bool CSOAccountHeroInfo::_internal_has_wins() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CSOAccountHeroInfo::has_wins() const {
  return _internal_has_wins();
}
inline void CSOAccountHeroInfo::clear_wins() {
  _impl_.wins_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CSOAccountHeroInfo::_internal_wins() const {
  return _impl_.wins_;
}
inline uint32_t CSOAccountHeroInfo::wins() const {
  // @@protoc_insertion_point(field_get:CSOAccountHeroInfo.wins)
  return _internal_wins();
}
inline void CSOAccountHeroInfo::_internal_set_wins(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.wins_ = value;
}
inline void CSOAccountHeroInfo::set_wins(uint32_t value) {
  _internal_set_wins(value);
  // @@protoc_insertion_point(field_set:CSOAccountHeroInfo.wins)
}

// optional uint32 kills = 5;
inline bool CSOAccountHeroInfo::_internal_has_kills() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CSOAccountHeroInfo::has_kills() const {
  return _internal_has_kills();
}
inline void CSOAccountHeroInfo::clear_kills() {
  _impl_.kills_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CSOAccountHeroInfo::_internal_kills() const {
  return _impl_.kills_;
}
inline uint32_t CSOAccountHeroInfo::kills() const {
  // @@protoc_insertion_point(field_get:CSOAccountHeroInfo.kills)
  return _internal_kills();
}
inline void CSOAccountHeroInfo::_internal_set_kills(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.kills_ = value;
}
inline void CSOAccountHeroInfo::set_kills(uint32_t value) {
  _internal_set_kills(value);
  // @@protoc_insertion_point(field_set:CSOAccountHeroInfo.kills)
}

// -------------------------------------------------------------------

// CMsgCitadelClientHello

// -------------------------------------------------------------------

// CMsgClientToGCStartMatchmaking

// optional uint32 client_version = 1;
inline bool CMsgClientToGCStartMatchmaking::_internal_has_client_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCStartMatchmaking::has_client_version() const {
  return _internal_has_client_version();
}
inline void CMsgClientToGCStartMatchmaking::clear_client_version() {
  _impl_.client_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgClientToGCStartMatchmaking::_internal_client_version() const {
  return _impl_.client_version_;
}
inline uint32_t CMsgClientToGCStartMatchmaking::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCStartMatchmaking.client_version)
  return _internal_client_version();
}
inline void CMsgClientToGCStartMatchmaking::_internal_set_client_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.client_version_ = value;
}
inline void CMsgClientToGCStartMatchmaking::set_client_version(uint32_t value) {
  _internal_set_client_version(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCStartMatchmaking.client_version)
}

// optional .EGCPlatform client_platform = 2 [default = k_eGCPlatform_None];
inline bool CMsgClientToGCStartMatchmaking::_internal_has_client_platform() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientToGCStartMatchmaking::has_client_platform() const {
  return _internal_has_client_platform();
}
inline void CMsgClientToGCStartMatchmaking::clear_client_platform() {
  _impl_.client_platform_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::EGCPlatform CMsgClientToGCStartMatchmaking::_internal_client_platform() const {
  return static_cast< ::EGCPlatform >(_impl_.client_platform_);
}
inline ::EGCPlatform CMsgClientToGCStartMatchmaking::client_platform() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCStartMatchmaking.client_platform)
  return _internal_client_platform();
}
inline void CMsgClientToGCStartMatchmaking::_internal_set_client_platform(::EGCPlatform value) {
  assert(::EGCPlatform_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.client_platform_ = value;
}
inline void CMsgClientToGCStartMatchmaking::set_client_platform(::EGCPlatform value) {
  _internal_set_client_platform(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCStartMatchmaking.client_platform)
}

// optional .CMsgStartFindingMatchInfo match_info = 3;
inline bool CMsgClientToGCStartMatchmaking::_internal_has_match_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.match_info_ != nullptr);
  return value;
}
inline bool CMsgClientToGCStartMatchmaking::has_match_info() const {
  return _internal_has_match_info();
}
inline const ::CMsgStartFindingMatchInfo& CMsgClientToGCStartMatchmaking::_internal_match_info() const {
  const ::CMsgStartFindingMatchInfo* p = _impl_.match_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgStartFindingMatchInfo&>(
      ::_CMsgStartFindingMatchInfo_default_instance_);
}
inline const ::CMsgStartFindingMatchInfo& CMsgClientToGCStartMatchmaking::match_info() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCStartMatchmaking.match_info)
  return _internal_match_info();
}
inline void CMsgClientToGCStartMatchmaking::unsafe_arena_set_allocated_match_info(
    ::CMsgStartFindingMatchInfo* match_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.match_info_);
  }
  _impl_.match_info_ = match_info;
  if (match_info) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCStartMatchmaking.match_info)
}
inline ::CMsgStartFindingMatchInfo* CMsgClientToGCStartMatchmaking::release_match_info() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgStartFindingMatchInfo* temp = _impl_.match_info_;
  _impl_.match_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgStartFindingMatchInfo* CMsgClientToGCStartMatchmaking::unsafe_arena_release_match_info() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCStartMatchmaking.match_info)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgStartFindingMatchInfo* temp = _impl_.match_info_;
  _impl_.match_info_ = nullptr;
  return temp;
}
inline ::CMsgStartFindingMatchInfo* CMsgClientToGCStartMatchmaking::_internal_mutable_match_info() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.match_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgStartFindingMatchInfo>(GetArenaForAllocation());
    _impl_.match_info_ = p;
  }
  return _impl_.match_info_;
}
inline ::CMsgStartFindingMatchInfo* CMsgClientToGCStartMatchmaking::mutable_match_info() {
  ::CMsgStartFindingMatchInfo* _msg = _internal_mutable_match_info();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCStartMatchmaking.match_info)
  return _msg;
}
inline void CMsgClientToGCStartMatchmaking::set_allocated_match_info(::CMsgStartFindingMatchInfo* match_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.match_info_);
  }
  if (match_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(match_info));
    if (message_arena != submessage_arena) {
      match_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, match_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.match_info_ = match_info;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCStartMatchmaking.match_info)
}

// optional .CMsgRegionPingTimesClient ping_times = 4;
inline bool CMsgClientToGCStartMatchmaking::_internal_has_ping_times() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ping_times_ != nullptr);
  return value;
}
inline bool CMsgClientToGCStartMatchmaking::has_ping_times() const {
  return _internal_has_ping_times();
}
inline const ::CMsgRegionPingTimesClient& CMsgClientToGCStartMatchmaking::_internal_ping_times() const {
  const ::CMsgRegionPingTimesClient* p = _impl_.ping_times_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgRegionPingTimesClient&>(
      ::_CMsgRegionPingTimesClient_default_instance_);
}
inline const ::CMsgRegionPingTimesClient& CMsgClientToGCStartMatchmaking::ping_times() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCStartMatchmaking.ping_times)
  return _internal_ping_times();
}
inline void CMsgClientToGCStartMatchmaking::unsafe_arena_set_allocated_ping_times(
    ::CMsgRegionPingTimesClient* ping_times) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ping_times_);
  }
  _impl_.ping_times_ = ping_times;
  if (ping_times) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCStartMatchmaking.ping_times)
}
inline ::CMsgRegionPingTimesClient* CMsgClientToGCStartMatchmaking::release_ping_times() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgRegionPingTimesClient* temp = _impl_.ping_times_;
  _impl_.ping_times_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgRegionPingTimesClient* CMsgClientToGCStartMatchmaking::unsafe_arena_release_ping_times() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCStartMatchmaking.ping_times)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgRegionPingTimesClient* temp = _impl_.ping_times_;
  _impl_.ping_times_ = nullptr;
  return temp;
}
inline ::CMsgRegionPingTimesClient* CMsgClientToGCStartMatchmaking::_internal_mutable_ping_times() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.ping_times_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgRegionPingTimesClient>(GetArenaForAllocation());
    _impl_.ping_times_ = p;
  }
  return _impl_.ping_times_;
}
inline ::CMsgRegionPingTimesClient* CMsgClientToGCStartMatchmaking::mutable_ping_times() {
  ::CMsgRegionPingTimesClient* _msg = _internal_mutable_ping_times();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCStartMatchmaking.ping_times)
  return _msg;
}
inline void CMsgClientToGCStartMatchmaking::set_allocated_ping_times(::CMsgRegionPingTimesClient* ping_times) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ping_times_);
  }
  if (ping_times) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ping_times));
    if (message_arena != submessage_arena) {
      ping_times = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ping_times, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.ping_times_ = ping_times;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCStartMatchmaking.ping_times)
}

// optional .CMsgHeroSelectionMatchInfo heroes = 5;
inline bool CMsgClientToGCStartMatchmaking::_internal_has_heroes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.heroes_ != nullptr);
  return value;
}
inline bool CMsgClientToGCStartMatchmaking::has_heroes() const {
  return _internal_has_heroes();
}
inline const ::CMsgHeroSelectionMatchInfo& CMsgClientToGCStartMatchmaking::_internal_heroes() const {
  const ::CMsgHeroSelectionMatchInfo* p = _impl_.heroes_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgHeroSelectionMatchInfo&>(
      ::_CMsgHeroSelectionMatchInfo_default_instance_);
}
inline const ::CMsgHeroSelectionMatchInfo& CMsgClientToGCStartMatchmaking::heroes() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCStartMatchmaking.heroes)
  return _internal_heroes();
}
inline void CMsgClientToGCStartMatchmaking::unsafe_arena_set_allocated_heroes(
    ::CMsgHeroSelectionMatchInfo* heroes) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.heroes_);
  }
  _impl_.heroes_ = heroes;
  if (heroes) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCStartMatchmaking.heroes)
}
inline ::CMsgHeroSelectionMatchInfo* CMsgClientToGCStartMatchmaking::release_heroes() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgHeroSelectionMatchInfo* temp = _impl_.heroes_;
  _impl_.heroes_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgHeroSelectionMatchInfo* CMsgClientToGCStartMatchmaking::unsafe_arena_release_heroes() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCStartMatchmaking.heroes)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgHeroSelectionMatchInfo* temp = _impl_.heroes_;
  _impl_.heroes_ = nullptr;
  return temp;
}
inline ::CMsgHeroSelectionMatchInfo* CMsgClientToGCStartMatchmaking::_internal_mutable_heroes() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.heroes_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgHeroSelectionMatchInfo>(GetArenaForAllocation());
    _impl_.heroes_ = p;
  }
  return _impl_.heroes_;
}
inline ::CMsgHeroSelectionMatchInfo* CMsgClientToGCStartMatchmaking::mutable_heroes() {
  ::CMsgHeroSelectionMatchInfo* _msg = _internal_mutable_heroes();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCStartMatchmaking.heroes)
  return _msg;
}
inline void CMsgClientToGCStartMatchmaking::set_allocated_heroes(::CMsgHeroSelectionMatchInfo* heroes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.heroes_);
  }
  if (heroes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(heroes));
    if (message_arena != submessage_arena) {
      heroes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, heroes, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.heroes_ = heroes;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCStartMatchmaking.heroes)
}

// -------------------------------------------------------------------

// CMsgClientToGCStartMatchmakingResponse

// optional .CMsgClientToGCStartMatchmakingResponse.EResultCode result = 1 [default = k_EResult_OK];
inline bool CMsgClientToGCStartMatchmakingResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCStartMatchmakingResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCStartMatchmakingResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCStartMatchmakingResponse_EResultCode >(_impl_.result_);
}
inline ::CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCStartMatchmakingResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCStartMatchmakingResponse::_internal_set_result(::CMsgClientToGCStartMatchmakingResponse_EResultCode value) {
  assert(::CMsgClientToGCStartMatchmakingResponse_EResultCode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCStartMatchmakingResponse::set_result(::CMsgClientToGCStartMatchmakingResponse_EResultCode value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCStartMatchmakingResponse.result)
}

// optional uint32 time_stamp = 2;
inline bool CMsgClientToGCStartMatchmakingResponse::_internal_has_time_stamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCStartMatchmakingResponse::has_time_stamp() const {
  return _internal_has_time_stamp();
}
inline void CMsgClientToGCStartMatchmakingResponse::clear_time_stamp() {
  _impl_.time_stamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCStartMatchmakingResponse::_internal_time_stamp() const {
  return _impl_.time_stamp_;
}
inline uint32_t CMsgClientToGCStartMatchmakingResponse::time_stamp() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCStartMatchmakingResponse.time_stamp)
  return _internal_time_stamp();
}
inline void CMsgClientToGCStartMatchmakingResponse::_internal_set_time_stamp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.time_stamp_ = value;
}
inline void CMsgClientToGCStartMatchmakingResponse::set_time_stamp(uint32_t value) {
  _internal_set_time_stamp(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCStartMatchmakingResponse.time_stamp)
}

// optional string debug_message = 3;
inline bool CMsgClientToGCStartMatchmakingResponse::_internal_has_debug_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCStartMatchmakingResponse::has_debug_message() const {
  return _internal_has_debug_message();
}
inline void CMsgClientToGCStartMatchmakingResponse::clear_debug_message() {
  _impl_.debug_message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCStartMatchmakingResponse::debug_message() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCStartMatchmakingResponse.debug_message)
  return _internal_debug_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCStartMatchmakingResponse::set_debug_message(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.debug_message_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCStartMatchmakingResponse.debug_message)
}
inline std::string* CMsgClientToGCStartMatchmakingResponse::mutable_debug_message() {
  std::string* _s = _internal_mutable_debug_message();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCStartMatchmakingResponse.debug_message)
  return _s;
}
inline const std::string& CMsgClientToGCStartMatchmakingResponse::_internal_debug_message() const {
  return _impl_.debug_message_.Get();
}
inline void CMsgClientToGCStartMatchmakingResponse::_internal_set_debug_message(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.debug_message_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCStartMatchmakingResponse::_internal_mutable_debug_message() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.debug_message_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCStartMatchmakingResponse::release_debug_message() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCStartMatchmakingResponse.debug_message)
  if (!_internal_has_debug_message()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.debug_message_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.debug_message_.IsDefault()) {
    _impl_.debug_message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCStartMatchmakingResponse::set_allocated_debug_message(std::string* debug_message) {
  if (debug_message != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.debug_message_.SetAllocated(debug_message, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.debug_message_.IsDefault()) {
    _impl_.debug_message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCStartMatchmakingResponse.debug_message)
}

// -------------------------------------------------------------------

// CMsgClientToGCStopMatchmaking

// -------------------------------------------------------------------

// CMsgClientToGCStopMatchmakingResponse

// optional bool success = 1;
inline bool CMsgClientToGCStopMatchmakingResponse::_internal_has_success() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCStopMatchmakingResponse::has_success() const {
  return _internal_has_success();
}
inline void CMsgClientToGCStopMatchmakingResponse::clear_success() {
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCStopMatchmakingResponse::_internal_success() const {
  return _impl_.success_;
}
inline bool CMsgClientToGCStopMatchmakingResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCStopMatchmakingResponse.success)
  return _internal_success();
}
inline void CMsgClientToGCStopMatchmakingResponse::_internal_set_success(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.success_ = value;
}
inline void CMsgClientToGCStopMatchmakingResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCStopMatchmakingResponse.success)
}

// -------------------------------------------------------------------

// CMsgGCToClientMatchmakingStopped

// optional .CMsgGCToClientMatchmakingStopped.EReason reason = 1 [default = k_EResult_Unspecified];
inline bool CMsgGCToClientMatchmakingStopped::_internal_has_reason() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientMatchmakingStopped::has_reason() const {
  return _internal_has_reason();
}
inline void CMsgGCToClientMatchmakingStopped::clear_reason() {
  _impl_.reason_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgGCToClientMatchmakingStopped_EReason CMsgGCToClientMatchmakingStopped::_internal_reason() const {
  return static_cast< ::CMsgGCToClientMatchmakingStopped_EReason >(_impl_.reason_);
}
inline ::CMsgGCToClientMatchmakingStopped_EReason CMsgGCToClientMatchmakingStopped::reason() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientMatchmakingStopped.reason)
  return _internal_reason();
}
inline void CMsgGCToClientMatchmakingStopped::_internal_set_reason(::CMsgGCToClientMatchmakingStopped_EReason value) {
  assert(::CMsgGCToClientMatchmakingStopped_EReason_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.reason_ = value;
}
inline void CMsgGCToClientMatchmakingStopped::set_reason(::CMsgGCToClientMatchmakingStopped_EReason value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientMatchmakingStopped.reason)
}

// -------------------------------------------------------------------

// CMsgClientToGCLeaveLobby

// optional uint64 lobby_id = 1;
inline bool CMsgClientToGCLeaveLobby::_internal_has_lobby_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCLeaveLobby::has_lobby_id() const {
  return _internal_has_lobby_id();
}
inline void CMsgClientToGCLeaveLobby::clear_lobby_id() {
  _impl_.lobby_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCLeaveLobby::_internal_lobby_id() const {
  return _impl_.lobby_id_;
}
inline uint64_t CMsgClientToGCLeaveLobby::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCLeaveLobby.lobby_id)
  return _internal_lobby_id();
}
inline void CMsgClientToGCLeaveLobby::_internal_set_lobby_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.lobby_id_ = value;
}
inline void CMsgClientToGCLeaveLobby::set_lobby_id(uint64_t value) {
  _internal_set_lobby_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCLeaveLobby.lobby_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCLeaveLobbyResponse

// -------------------------------------------------------------------

// CMsgClientWelcomeCitadel

// optional uint32 currency = 1;
inline bool CMsgClientWelcomeCitadel::_internal_has_currency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientWelcomeCitadel::has_currency() const {
  return _internal_has_currency();
}
inline void CMsgClientWelcomeCitadel::clear_currency() {
  _impl_.currency_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientWelcomeCitadel::_internal_currency() const {
  return _impl_.currency_;
}
inline uint32_t CMsgClientWelcomeCitadel::currency() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcomeCitadel.currency)
  return _internal_currency();
}
inline void CMsgClientWelcomeCitadel::_internal_set_currency(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.currency_ = value;
}
inline void CMsgClientWelcomeCitadel::set_currency(uint32_t value) {
  _internal_set_currency(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcomeCitadel.currency)
}

// repeated .CExtraMsgBlock extra_messages = 2;
inline int CMsgClientWelcomeCitadel::_internal_extra_messages_size() const {
  return _impl_.extra_messages_.size();
}
inline int CMsgClientWelcomeCitadel::extra_messages_size() const {
  return _internal_extra_messages_size();
}
inline ::CExtraMsgBlock* CMsgClientWelcomeCitadel::mutable_extra_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcomeCitadel.extra_messages)
  return _impl_.extra_messages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock >*
CMsgClientWelcomeCitadel::mutable_extra_messages() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientWelcomeCitadel.extra_messages)
  return &_impl_.extra_messages_;
}
inline const ::CExtraMsgBlock& CMsgClientWelcomeCitadel::_internal_extra_messages(int index) const {
  return _impl_.extra_messages_.Get(index);
}
inline const ::CExtraMsgBlock& CMsgClientWelcomeCitadel::extra_messages(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcomeCitadel.extra_messages)
  return _internal_extra_messages(index);
}
inline ::CExtraMsgBlock* CMsgClientWelcomeCitadel::_internal_add_extra_messages() {
  return _impl_.extra_messages_.Add();
}
inline ::CExtraMsgBlock* CMsgClientWelcomeCitadel::add_extra_messages() {
  ::CExtraMsgBlock* _add = _internal_add_extra_messages();
  // @@protoc_insertion_point(field_add:CMsgClientWelcomeCitadel.extra_messages)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock >&
CMsgClientWelcomeCitadel::extra_messages() const {
  // @@protoc_insertion_point(field_list:CMsgClientWelcomeCitadel.extra_messages)
  return _impl_.extra_messages_;
}

// optional uint32 compatibility_version = 3;
inline bool CMsgClientWelcomeCitadel::_internal_has_compatibility_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientWelcomeCitadel::has_compatibility_version() const {
  return _internal_has_compatibility_version();
}
inline void CMsgClientWelcomeCitadel::clear_compatibility_version() {
  _impl_.compatibility_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientWelcomeCitadel::_internal_compatibility_version() const {
  return _impl_.compatibility_version_;
}
inline uint32_t CMsgClientWelcomeCitadel::compatibility_version() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcomeCitadel.compatibility_version)
  return _internal_compatibility_version();
}
inline void CMsgClientWelcomeCitadel::_internal_set_compatibility_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.compatibility_version_ = value;
}
inline void CMsgClientWelcomeCitadel::set_compatibility_version(uint32_t value) {
  _internal_set_compatibility_version(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcomeCitadel.compatibility_version)
}

// optional .ECitadelRegionMode region_mode = 4 [default = k_ECitadelRegionMode_ROW];
inline bool CMsgClientWelcomeCitadel::_internal_has_region_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientWelcomeCitadel::has_region_mode() const {
  return _internal_has_region_mode();
}
inline void CMsgClientWelcomeCitadel::clear_region_mode() {
  _impl_.region_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::ECitadelRegionMode CMsgClientWelcomeCitadel::_internal_region_mode() const {
  return static_cast< ::ECitadelRegionMode >(_impl_.region_mode_);
}
inline ::ECitadelRegionMode CMsgClientWelcomeCitadel::region_mode() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcomeCitadel.region_mode)
  return _internal_region_mode();
}
inline void CMsgClientWelcomeCitadel::_internal_set_region_mode(::ECitadelRegionMode value) {
  assert(::ECitadelRegionMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.region_mode_ = value;
}
inline void CMsgClientWelcomeCitadel::set_region_mode(::ECitadelRegionMode value) {
  _internal_set_region_mode(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcomeCitadel.region_mode)
}

// -------------------------------------------------------------------

// CMsgClientToGCIsInMatchmaking

// -------------------------------------------------------------------

// CMsgClientToGCIsInMatchmakingResponse

// optional bool in_matchmaking = 1;
inline bool CMsgClientToGCIsInMatchmakingResponse::_internal_has_in_matchmaking() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCIsInMatchmakingResponse::has_in_matchmaking() const {
  return _internal_has_in_matchmaking();
}
inline void CMsgClientToGCIsInMatchmakingResponse::clear_in_matchmaking() {
  _impl_.in_matchmaking_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCIsInMatchmakingResponse::_internal_in_matchmaking() const {
  return _impl_.in_matchmaking_;
}
inline bool CMsgClientToGCIsInMatchmakingResponse::in_matchmaking() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCIsInMatchmakingResponse.in_matchmaking)
  return _internal_in_matchmaking();
}
inline void CMsgClientToGCIsInMatchmakingResponse::_internal_set_in_matchmaking(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.in_matchmaking_ = value;
}
inline void CMsgClientToGCIsInMatchmakingResponse::set_in_matchmaking(bool value) {
  _internal_set_in_matchmaking(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCIsInMatchmakingResponse.in_matchmaking)
}

// -------------------------------------------------------------------

// CMsgDevMatchInfo_MatchPlayer

// optional uint32 account_id = 1;
inline bool CMsgDevMatchInfo_MatchPlayer::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo_MatchPlayer::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgDevMatchInfo_MatchPlayer::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgDevMatchInfo_MatchPlayer::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgDevMatchInfo_MatchPlayer::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.MatchPlayer.account_id)
  return _internal_account_id();
}
inline void CMsgDevMatchInfo_MatchPlayer::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgDevMatchInfo_MatchPlayer::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.MatchPlayer.account_id)
}

// optional .ECitadelLobbyTeam team = 2 [default = k_ECitadelLobbyTeam_Team0];
inline bool CMsgDevMatchInfo_MatchPlayer::_internal_has_team() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo_MatchPlayer::has_team() const {
  return _internal_has_team();
}
inline void CMsgDevMatchInfo_MatchPlayer::clear_team() {
  _impl_.team_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::ECitadelLobbyTeam CMsgDevMatchInfo_MatchPlayer::_internal_team() const {
  return static_cast< ::ECitadelLobbyTeam >(_impl_.team_);
}
inline ::ECitadelLobbyTeam CMsgDevMatchInfo_MatchPlayer::team() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.MatchPlayer.team)
  return _internal_team();
}
inline void CMsgDevMatchInfo_MatchPlayer::_internal_set_team(::ECitadelLobbyTeam value) {
  assert(::ECitadelLobbyTeam_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.team_ = value;
}
inline void CMsgDevMatchInfo_MatchPlayer::set_team(::ECitadelLobbyTeam value) {
  _internal_set_team(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.MatchPlayer.team)
}

// optional bool abandoned = 3;
inline bool CMsgDevMatchInfo_MatchPlayer::_internal_has_abandoned() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo_MatchPlayer::has_abandoned() const {
  return _internal_has_abandoned();
}
inline void CMsgDevMatchInfo_MatchPlayer::clear_abandoned() {
  _impl_.abandoned_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgDevMatchInfo_MatchPlayer::_internal_abandoned() const {
  return _impl_.abandoned_;
}
inline bool CMsgDevMatchInfo_MatchPlayer::abandoned() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.MatchPlayer.abandoned)
  return _internal_abandoned();
}
inline void CMsgDevMatchInfo_MatchPlayer::_internal_set_abandoned(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.abandoned_ = value;
}
inline void CMsgDevMatchInfo_MatchPlayer::set_abandoned(bool value) {
  _internal_set_abandoned(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.MatchPlayer.abandoned)
}

// optional uint32 hero_id = 4;
inline bool CMsgDevMatchInfo_MatchPlayer::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo_MatchPlayer::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgDevMatchInfo_MatchPlayer::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgDevMatchInfo_MatchPlayer::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgDevMatchInfo_MatchPlayer::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.MatchPlayer.hero_id)
  return _internal_hero_id();
}
inline void CMsgDevMatchInfo_MatchPlayer::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.hero_id_ = value;
}
inline void CMsgDevMatchInfo_MatchPlayer::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.MatchPlayer.hero_id)
}

// -------------------------------------------------------------------

// CMsgDevMatchInfo

// optional uint32 start_time = 1;
inline bool CMsgDevMatchInfo::_internal_has_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_start_time() const {
  return _internal_has_start_time();
}
inline void CMsgDevMatchInfo::clear_start_time() {
  _impl_.start_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgDevMatchInfo::_internal_start_time() const {
  return _impl_.start_time_;
}
inline uint32_t CMsgDevMatchInfo::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.start_time)
  return _internal_start_time();
}
inline void CMsgDevMatchInfo::_internal_set_start_time(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.start_time_ = value;
}
inline void CMsgDevMatchInfo::set_start_time(uint32_t value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.start_time)
}

// optional .ECitadelLobbyTeam winning_team = 2 [default = k_ECitadelLobbyTeam_Team0];
inline bool CMsgDevMatchInfo::_internal_has_winning_team() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_winning_team() const {
  return _internal_has_winning_team();
}
inline void CMsgDevMatchInfo::clear_winning_team() {
  _impl_.winning_team_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::ECitadelLobbyTeam CMsgDevMatchInfo::_internal_winning_team() const {
  return static_cast< ::ECitadelLobbyTeam >(_impl_.winning_team_);
}
inline ::ECitadelLobbyTeam CMsgDevMatchInfo::winning_team() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.winning_team)
  return _internal_winning_team();
}
inline void CMsgDevMatchInfo::_internal_set_winning_team(::ECitadelLobbyTeam value) {
  assert(::ECitadelLobbyTeam_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.winning_team_ = value;
}
inline void CMsgDevMatchInfo::set_winning_team(::ECitadelLobbyTeam value) {
  _internal_set_winning_team(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.winning_team)
}

// optional uint64 match_id = 3;
inline bool CMsgDevMatchInfo::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgDevMatchInfo::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CMsgDevMatchInfo::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CMsgDevMatchInfo::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.match_id)
  return _internal_match_id();
}
inline void CMsgDevMatchInfo::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.match_id_ = value;
}
inline void CMsgDevMatchInfo::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.match_id)
}

// repeated .CMsgDevMatchInfo.MatchPlayer players = 4;
inline int CMsgDevMatchInfo::_internal_players_size() const {
  return _impl_.players_.size();
}
inline int CMsgDevMatchInfo::players_size() const {
  return _internal_players_size();
}
inline void CMsgDevMatchInfo::clear_players() {
  _impl_.players_.Clear();
}
inline ::CMsgDevMatchInfo_MatchPlayer* CMsgDevMatchInfo::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDevMatchInfo.players)
  return _impl_.players_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDevMatchInfo_MatchPlayer >*
CMsgDevMatchInfo::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDevMatchInfo.players)
  return &_impl_.players_;
}
inline const ::CMsgDevMatchInfo_MatchPlayer& CMsgDevMatchInfo::_internal_players(int index) const {
  return _impl_.players_.Get(index);
}
inline const ::CMsgDevMatchInfo_MatchPlayer& CMsgDevMatchInfo::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.players)
  return _internal_players(index);
}
inline ::CMsgDevMatchInfo_MatchPlayer* CMsgDevMatchInfo::_internal_add_players() {
  return _impl_.players_.Add();
}
inline ::CMsgDevMatchInfo_MatchPlayer* CMsgDevMatchInfo::add_players() {
  ::CMsgDevMatchInfo_MatchPlayer* _add = _internal_add_players();
  // @@protoc_insertion_point(field_add:CMsgDevMatchInfo.players)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDevMatchInfo_MatchPlayer >&
CMsgDevMatchInfo::players() const {
  // @@protoc_insertion_point(field_list:CMsgDevMatchInfo.players)
  return _impl_.players_;
}

// optional fixed64 lobby_id = 5;
inline bool CMsgDevMatchInfo::_internal_has_lobby_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_lobby_id() const {
  return _internal_has_lobby_id();
}
inline void CMsgDevMatchInfo::clear_lobby_id() {
  _impl_.lobby_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CMsgDevMatchInfo::_internal_lobby_id() const {
  return _impl_.lobby_id_;
}
inline uint64_t CMsgDevMatchInfo::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.lobby_id)
  return _internal_lobby_id();
}
inline void CMsgDevMatchInfo::_internal_set_lobby_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.lobby_id_ = value;
}
inline void CMsgDevMatchInfo::set_lobby_id(uint64_t value) {
  _internal_set_lobby_id(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.lobby_id)
}

// optional uint32 net_worth_team_0 = 9;
inline bool CMsgDevMatchInfo::_internal_has_net_worth_team_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_net_worth_team_0() const {
  return _internal_has_net_worth_team_0();
}
inline void CMsgDevMatchInfo::clear_net_worth_team_0() {
  _impl_.net_worth_team_0_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgDevMatchInfo::_internal_net_worth_team_0() const {
  return _impl_.net_worth_team_0_;
}
inline uint32_t CMsgDevMatchInfo::net_worth_team_0() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.net_worth_team_0)
  return _internal_net_worth_team_0();
}
inline void CMsgDevMatchInfo::_internal_set_net_worth_team_0(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.net_worth_team_0_ = value;
}
inline void CMsgDevMatchInfo::set_net_worth_team_0(uint32_t value) {
  _internal_set_net_worth_team_0(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.net_worth_team_0)
}

// optional uint32 net_worth_team_1 = 10;
inline bool CMsgDevMatchInfo::_internal_has_net_worth_team_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_net_worth_team_1() const {
  return _internal_has_net_worth_team_1();
}
inline void CMsgDevMatchInfo::clear_net_worth_team_1() {
  _impl_.net_worth_team_1_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgDevMatchInfo::_internal_net_worth_team_1() const {
  return _impl_.net_worth_team_1_;
}
inline uint32_t CMsgDevMatchInfo::net_worth_team_1() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.net_worth_team_1)
  return _internal_net_worth_team_1();
}
inline void CMsgDevMatchInfo::_internal_set_net_worth_team_1(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.net_worth_team_1_ = value;
}
inline void CMsgDevMatchInfo::set_net_worth_team_1(uint32_t value) {
  _internal_set_net_worth_team_1(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.net_worth_team_1)
}

// optional uint32 duration_s = 11;
inline bool CMsgDevMatchInfo::_internal_has_duration_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_duration_s() const {
  return _internal_has_duration_s();
}
inline void CMsgDevMatchInfo::clear_duration_s() {
  _impl_.duration_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CMsgDevMatchInfo::_internal_duration_s() const {
  return _impl_.duration_s_;
}
inline uint32_t CMsgDevMatchInfo::duration_s() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.duration_s)
  return _internal_duration_s();
}
inline void CMsgDevMatchInfo::_internal_set_duration_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.duration_s_ = value;
}
inline void CMsgDevMatchInfo::set_duration_s(uint32_t value) {
  _internal_set_duration_s(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.duration_s)
}

// optional uint32 spectators = 12;
inline bool CMsgDevMatchInfo::_internal_has_spectators() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_spectators() const {
  return _internal_has_spectators();
}
inline void CMsgDevMatchInfo::clear_spectators() {
  _impl_.spectators_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CMsgDevMatchInfo::_internal_spectators() const {
  return _impl_.spectators_;
}
inline uint32_t CMsgDevMatchInfo::spectators() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.spectators)
  return _internal_spectators();
}
inline void CMsgDevMatchInfo::_internal_set_spectators(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.spectators_ = value;
}
inline void CMsgDevMatchInfo::set_spectators(uint32_t value) {
  _internal_set_spectators(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.spectators)
}

// optional uint32 open_spectator_slots = 13;
inline bool CMsgDevMatchInfo::_internal_has_open_spectator_slots() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_open_spectator_slots() const {
  return _internal_has_open_spectator_slots();
}
inline void CMsgDevMatchInfo::clear_open_spectator_slots() {
  _impl_.open_spectator_slots_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CMsgDevMatchInfo::_internal_open_spectator_slots() const {
  return _impl_.open_spectator_slots_;
}
inline uint32_t CMsgDevMatchInfo::open_spectator_slots() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.open_spectator_slots)
  return _internal_open_spectator_slots();
}
inline void CMsgDevMatchInfo::_internal_set_open_spectator_slots(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.open_spectator_slots_ = value;
}
inline void CMsgDevMatchInfo::set_open_spectator_slots(uint32_t value) {
  _internal_set_open_spectator_slots(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.open_spectator_slots)
}

// optional uint64 objectives_mask_team0 = 14;
inline bool CMsgDevMatchInfo::_internal_has_objectives_mask_team0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_objectives_mask_team0() const {
  return _internal_has_objectives_mask_team0();
}
inline void CMsgDevMatchInfo::clear_objectives_mask_team0() {
  _impl_.objectives_mask_team0_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline uint64_t CMsgDevMatchInfo::_internal_objectives_mask_team0() const {
  return _impl_.objectives_mask_team0_;
}
inline uint64_t CMsgDevMatchInfo::objectives_mask_team0() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.objectives_mask_team0)
  return _internal_objectives_mask_team0();
}
inline void CMsgDevMatchInfo::_internal_set_objectives_mask_team0(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.objectives_mask_team0_ = value;
}
inline void CMsgDevMatchInfo::set_objectives_mask_team0(uint64_t value) {
  _internal_set_objectives_mask_team0(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.objectives_mask_team0)
}

// optional uint64 objectives_mask_team1 = 15;
inline bool CMsgDevMatchInfo::_internal_has_objectives_mask_team1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_objectives_mask_team1() const {
  return _internal_has_objectives_mask_team1();
}
inline void CMsgDevMatchInfo::clear_objectives_mask_team1() {
  _impl_.objectives_mask_team1_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline uint64_t CMsgDevMatchInfo::_internal_objectives_mask_team1() const {
  return _impl_.objectives_mask_team1_;
}
inline uint64_t CMsgDevMatchInfo::objectives_mask_team1() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.objectives_mask_team1)
  return _internal_objectives_mask_team1();
}
inline void CMsgDevMatchInfo::_internal_set_objectives_mask_team1(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.objectives_mask_team1_ = value;
}
inline void CMsgDevMatchInfo::set_objectives_mask_team1(uint64_t value) {
  _internal_set_objectives_mask_team1(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.objectives_mask_team1)
}

// optional .ECitadelMatchMode match_mode = 16 [default = k_ECitadelMatchMode_Invalid];
inline bool CMsgDevMatchInfo::_internal_has_match_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_match_mode() const {
  return _internal_has_match_mode();
}
inline void CMsgDevMatchInfo::clear_match_mode() {
  _impl_.match_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::ECitadelMatchMode CMsgDevMatchInfo::_internal_match_mode() const {
  return static_cast< ::ECitadelMatchMode >(_impl_.match_mode_);
}
inline ::ECitadelMatchMode CMsgDevMatchInfo::match_mode() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.match_mode)
  return _internal_match_mode();
}
inline void CMsgDevMatchInfo::_internal_set_match_mode(::ECitadelMatchMode value) {
  assert(::ECitadelMatchMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.match_mode_ = value;
}
inline void CMsgDevMatchInfo::set_match_mode(::ECitadelMatchMode value) {
  _internal_set_match_mode(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.match_mode)
}

// optional .ECitadelGameMode game_mode = 17 [default = k_ECitadelGameMode_Invalid];
inline bool CMsgDevMatchInfo::_internal_has_game_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_game_mode() const {
  return _internal_has_game_mode();
}
inline void CMsgDevMatchInfo::clear_game_mode() {
  _impl_.game_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::ECitadelGameMode CMsgDevMatchInfo::_internal_game_mode() const {
  return static_cast< ::ECitadelGameMode >(_impl_.game_mode_);
}
inline ::ECitadelGameMode CMsgDevMatchInfo::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.game_mode)
  return _internal_game_mode();
}
inline void CMsgDevMatchInfo::_internal_set_game_mode(::ECitadelGameMode value) {
  assert(::ECitadelGameMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.game_mode_ = value;
}
inline void CMsgDevMatchInfo::set_game_mode(::ECitadelGameMode value) {
  _internal_set_game_mode(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.game_mode)
}

// optional uint32 match_score = 18;
inline bool CMsgDevMatchInfo::_internal_has_match_score() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_match_score() const {
  return _internal_has_match_score();
}
inline void CMsgDevMatchInfo::clear_match_score() {
  _impl_.match_score_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline uint32_t CMsgDevMatchInfo::_internal_match_score() const {
  return _impl_.match_score_;
}
inline uint32_t CMsgDevMatchInfo::match_score() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.match_score)
  return _internal_match_score();
}
inline void CMsgDevMatchInfo::_internal_set_match_score(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.match_score_ = value;
}
inline void CMsgDevMatchInfo::set_match_score(uint32_t value) {
  _internal_set_match_score(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.match_score)
}

// optional .ECitadelRegionMode region_mode = 19 [default = k_ECitadelRegionMode_ROW];
inline bool CMsgDevMatchInfo::_internal_has_region_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_region_mode() const {
  return _internal_has_region_mode();
}
inline void CMsgDevMatchInfo::clear_region_mode() {
  _impl_.region_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::ECitadelRegionMode CMsgDevMatchInfo::_internal_region_mode() const {
  return static_cast< ::ECitadelRegionMode >(_impl_.region_mode_);
}
inline ::ECitadelRegionMode CMsgDevMatchInfo::region_mode() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.region_mode)
  return _internal_region_mode();
}
inline void CMsgDevMatchInfo::_internal_set_region_mode(::ECitadelRegionMode value) {
  assert(::ECitadelRegionMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.region_mode_ = value;
}
inline void CMsgDevMatchInfo::set_region_mode(::ECitadelRegionMode value) {
  _internal_set_region_mode(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.region_mode)
}

// optional uint32 compat_version = 20;
inline bool CMsgDevMatchInfo::_internal_has_compat_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CMsgDevMatchInfo::has_compat_version() const {
  return _internal_has_compat_version();
}
inline void CMsgDevMatchInfo::clear_compat_version() {
  _impl_.compat_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline uint32_t CMsgDevMatchInfo::_internal_compat_version() const {
  return _impl_.compat_version_;
}
inline uint32_t CMsgDevMatchInfo::compat_version() const {
  // @@protoc_insertion_point(field_get:CMsgDevMatchInfo.compat_version)
  return _internal_compat_version();
}
inline void CMsgDevMatchInfo::_internal_set_compat_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.compat_version_ = value;
}
inline void CMsgDevMatchInfo::set_compat_version(uint32_t value) {
  _internal_set_compat_version(value);
  // @@protoc_insertion_point(field_set:CMsgDevMatchInfo.compat_version)
}

// -------------------------------------------------------------------

// CMsgGCToClientHeroLabsSchedule_TimeRange

// optional int32 start_time = 1;
inline bool CMsgGCToClientHeroLabsSchedule_TimeRange::_internal_has_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientHeroLabsSchedule_TimeRange::has_start_time() const {
  return _internal_has_start_time();
}
inline void CMsgGCToClientHeroLabsSchedule_TimeRange::clear_start_time() {
  _impl_.start_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CMsgGCToClientHeroLabsSchedule_TimeRange::_internal_start_time() const {
  return _impl_.start_time_;
}
inline int32_t CMsgGCToClientHeroLabsSchedule_TimeRange::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientHeroLabsSchedule.TimeRange.start_time)
  return _internal_start_time();
}
inline void CMsgGCToClientHeroLabsSchedule_TimeRange::_internal_set_start_time(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.start_time_ = value;
}
inline void CMsgGCToClientHeroLabsSchedule_TimeRange::set_start_time(int32_t value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientHeroLabsSchedule.TimeRange.start_time)
}

// optional int32 end_time = 2;
inline bool CMsgGCToClientHeroLabsSchedule_TimeRange::_internal_has_end_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientHeroLabsSchedule_TimeRange::has_end_time() const {
  return _internal_has_end_time();
}
inline void CMsgGCToClientHeroLabsSchedule_TimeRange::clear_end_time() {
  _impl_.end_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CMsgGCToClientHeroLabsSchedule_TimeRange::_internal_end_time() const {
  return _impl_.end_time_;
}
inline int32_t CMsgGCToClientHeroLabsSchedule_TimeRange::end_time() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientHeroLabsSchedule.TimeRange.end_time)
  return _internal_end_time();
}
inline void CMsgGCToClientHeroLabsSchedule_TimeRange::_internal_set_end_time(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.end_time_ = value;
}
inline void CMsgGCToClientHeroLabsSchedule_TimeRange::set_end_time(int32_t value) {
  _internal_set_end_time(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientHeroLabsSchedule.TimeRange.end_time)
}

// -------------------------------------------------------------------

// CMsgGCToClientHeroLabsSchedule_Schedule

// optional uint32 schedule_id = 1;
inline bool CMsgGCToClientHeroLabsSchedule_Schedule::_internal_has_schedule_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientHeroLabsSchedule_Schedule::has_schedule_id() const {
  return _internal_has_schedule_id();
}
inline void CMsgGCToClientHeroLabsSchedule_Schedule::clear_schedule_id() {
  _impl_.schedule_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToClientHeroLabsSchedule_Schedule::_internal_schedule_id() const {
  return _impl_.schedule_id_;
}
inline uint32_t CMsgGCToClientHeroLabsSchedule_Schedule::schedule_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientHeroLabsSchedule.Schedule.schedule_id)
  return _internal_schedule_id();
}
inline void CMsgGCToClientHeroLabsSchedule_Schedule::_internal_set_schedule_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.schedule_id_ = value;
}
inline void CMsgGCToClientHeroLabsSchedule_Schedule::set_schedule_id(uint32_t value) {
  _internal_set_schedule_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientHeroLabsSchedule.Schedule.schedule_id)
}

// repeated .CMsgGCToClientHeroLabsSchedule.TimeRange weekends = 2;
inline int CMsgGCToClientHeroLabsSchedule_Schedule::_internal_weekends_size() const {
  return _impl_.weekends_.size();
}
inline int CMsgGCToClientHeroLabsSchedule_Schedule::weekends_size() const {
  return _internal_weekends_size();
}
inline void CMsgGCToClientHeroLabsSchedule_Schedule::clear_weekends() {
  _impl_.weekends_.Clear();
}
inline ::CMsgGCToClientHeroLabsSchedule_TimeRange* CMsgGCToClientHeroLabsSchedule_Schedule::mutable_weekends(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientHeroLabsSchedule.Schedule.weekends)
  return _impl_.weekends_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_TimeRange >*
CMsgGCToClientHeroLabsSchedule_Schedule::mutable_weekends() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientHeroLabsSchedule.Schedule.weekends)
  return &_impl_.weekends_;
}
inline const ::CMsgGCToClientHeroLabsSchedule_TimeRange& CMsgGCToClientHeroLabsSchedule_Schedule::_internal_weekends(int index) const {
  return _impl_.weekends_.Get(index);
}
inline const ::CMsgGCToClientHeroLabsSchedule_TimeRange& CMsgGCToClientHeroLabsSchedule_Schedule::weekends(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientHeroLabsSchedule.Schedule.weekends)
  return _internal_weekends(index);
}
inline ::CMsgGCToClientHeroLabsSchedule_TimeRange* CMsgGCToClientHeroLabsSchedule_Schedule::_internal_add_weekends() {
  return _impl_.weekends_.Add();
}
inline ::CMsgGCToClientHeroLabsSchedule_TimeRange* CMsgGCToClientHeroLabsSchedule_Schedule::add_weekends() {
  ::CMsgGCToClientHeroLabsSchedule_TimeRange* _add = _internal_add_weekends();
  // @@protoc_insertion_point(field_add:CMsgGCToClientHeroLabsSchedule.Schedule.weekends)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_TimeRange >&
CMsgGCToClientHeroLabsSchedule_Schedule::weekends() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientHeroLabsSchedule.Schedule.weekends)
  return _impl_.weekends_;
}

// repeated .CMsgGCToClientHeroLabsSchedule.TimeRange weekdays = 3;
inline int CMsgGCToClientHeroLabsSchedule_Schedule::_internal_weekdays_size() const {
  return _impl_.weekdays_.size();
}
inline int CMsgGCToClientHeroLabsSchedule_Schedule::weekdays_size() const {
  return _internal_weekdays_size();
}
inline void CMsgGCToClientHeroLabsSchedule_Schedule::clear_weekdays() {
  _impl_.weekdays_.Clear();
}
inline ::CMsgGCToClientHeroLabsSchedule_TimeRange* CMsgGCToClientHeroLabsSchedule_Schedule::mutable_weekdays(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientHeroLabsSchedule.Schedule.weekdays)
  return _impl_.weekdays_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_TimeRange >*
CMsgGCToClientHeroLabsSchedule_Schedule::mutable_weekdays() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientHeroLabsSchedule.Schedule.weekdays)
  return &_impl_.weekdays_;
}
inline const ::CMsgGCToClientHeroLabsSchedule_TimeRange& CMsgGCToClientHeroLabsSchedule_Schedule::_internal_weekdays(int index) const {
  return _impl_.weekdays_.Get(index);
}
inline const ::CMsgGCToClientHeroLabsSchedule_TimeRange& CMsgGCToClientHeroLabsSchedule_Schedule::weekdays(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientHeroLabsSchedule.Schedule.weekdays)
  return _internal_weekdays(index);
}
inline ::CMsgGCToClientHeroLabsSchedule_TimeRange* CMsgGCToClientHeroLabsSchedule_Schedule::_internal_add_weekdays() {
  return _impl_.weekdays_.Add();
}
inline ::CMsgGCToClientHeroLabsSchedule_TimeRange* CMsgGCToClientHeroLabsSchedule_Schedule::add_weekdays() {
  ::CMsgGCToClientHeroLabsSchedule_TimeRange* _add = _internal_add_weekdays();
  // @@protoc_insertion_point(field_add:CMsgGCToClientHeroLabsSchedule.Schedule.weekdays)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_TimeRange >&
CMsgGCToClientHeroLabsSchedule_Schedule::weekdays() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientHeroLabsSchedule.Schedule.weekdays)
  return _impl_.weekdays_;
}

// optional bool is_open = 4;
inline bool CMsgGCToClientHeroLabsSchedule_Schedule::_internal_has_is_open() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientHeroLabsSchedule_Schedule::has_is_open() const {
  return _internal_has_is_open();
}
inline void CMsgGCToClientHeroLabsSchedule_Schedule::clear_is_open() {
  _impl_.is_open_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCToClientHeroLabsSchedule_Schedule::_internal_is_open() const {
  return _impl_.is_open_;
}
inline bool CMsgGCToClientHeroLabsSchedule_Schedule::is_open() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientHeroLabsSchedule.Schedule.is_open)
  return _internal_is_open();
}
inline void CMsgGCToClientHeroLabsSchedule_Schedule::_internal_set_is_open(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.is_open_ = value;
}
inline void CMsgGCToClientHeroLabsSchedule_Schedule::set_is_open(bool value) {
  _internal_set_is_open(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientHeroLabsSchedule.Schedule.is_open)
}

// repeated .ECitadelRegionMode regions = 5;
inline int CMsgGCToClientHeroLabsSchedule_Schedule::_internal_regions_size() const {
  return _impl_.regions_.size();
}
inline int CMsgGCToClientHeroLabsSchedule_Schedule::regions_size() const {
  return _internal_regions_size();
}
inline void CMsgGCToClientHeroLabsSchedule_Schedule::clear_regions() {
  _impl_.regions_.Clear();
}
inline ::ECitadelRegionMode CMsgGCToClientHeroLabsSchedule_Schedule::_internal_regions(int index) const {
  return static_cast< ::ECitadelRegionMode >(_impl_.regions_.Get(index));
}
inline ::ECitadelRegionMode CMsgGCToClientHeroLabsSchedule_Schedule::regions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientHeroLabsSchedule.Schedule.regions)
  return _internal_regions(index);
}
inline void CMsgGCToClientHeroLabsSchedule_Schedule::set_regions(int index, ::ECitadelRegionMode value) {
  assert(::ECitadelRegionMode_IsValid(value));
  _impl_.regions_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientHeroLabsSchedule.Schedule.regions)
}
inline void CMsgGCToClientHeroLabsSchedule_Schedule::_internal_add_regions(::ECitadelRegionMode value) {
  assert(::ECitadelRegionMode_IsValid(value));
  _impl_.regions_.Add(value);
}
inline void CMsgGCToClientHeroLabsSchedule_Schedule::add_regions(::ECitadelRegionMode value) {
  _internal_add_regions(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientHeroLabsSchedule.Schedule.regions)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
CMsgGCToClientHeroLabsSchedule_Schedule::regions() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientHeroLabsSchedule.Schedule.regions)
  return _impl_.regions_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
CMsgGCToClientHeroLabsSchedule_Schedule::_internal_mutable_regions() {
  return &_impl_.regions_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
CMsgGCToClientHeroLabsSchedule_Schedule::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientHeroLabsSchedule.Schedule.regions)
  return _internal_mutable_regions();
}

// -------------------------------------------------------------------

// CMsgGCToClientHeroLabsSchedule

// repeated .CMsgGCToClientHeroLabsSchedule.Schedule schedules = 1;
inline int CMsgGCToClientHeroLabsSchedule::_internal_schedules_size() const {
  return _impl_.schedules_.size();
}
inline int CMsgGCToClientHeroLabsSchedule::schedules_size() const {
  return _internal_schedules_size();
}
inline void CMsgGCToClientHeroLabsSchedule::clear_schedules() {
  _impl_.schedules_.Clear();
}
inline ::CMsgGCToClientHeroLabsSchedule_Schedule* CMsgGCToClientHeroLabsSchedule::mutable_schedules(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientHeroLabsSchedule.schedules)
  return _impl_.schedules_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_Schedule >*
CMsgGCToClientHeroLabsSchedule::mutable_schedules() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientHeroLabsSchedule.schedules)
  return &_impl_.schedules_;
}
inline const ::CMsgGCToClientHeroLabsSchedule_Schedule& CMsgGCToClientHeroLabsSchedule::_internal_schedules(int index) const {
  return _impl_.schedules_.Get(index);
}
inline const ::CMsgGCToClientHeroLabsSchedule_Schedule& CMsgGCToClientHeroLabsSchedule::schedules(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientHeroLabsSchedule.schedules)
  return _internal_schedules(index);
}
inline ::CMsgGCToClientHeroLabsSchedule_Schedule* CMsgGCToClientHeroLabsSchedule::_internal_add_schedules() {
  return _impl_.schedules_.Add();
}
inline ::CMsgGCToClientHeroLabsSchedule_Schedule* CMsgGCToClientHeroLabsSchedule::add_schedules() {
  ::CMsgGCToClientHeroLabsSchedule_Schedule* _add = _internal_add_schedules();
  // @@protoc_insertion_point(field_add:CMsgGCToClientHeroLabsSchedule.schedules)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientHeroLabsSchedule_Schedule >&
CMsgGCToClientHeroLabsSchedule::schedules() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientHeroLabsSchedule.schedules)
  return _impl_.schedules_;
}

// -------------------------------------------------------------------

// CMsgGCToClientDevPlaytestStatus_HeroWhitelist

// optional uint32 hero_id = 1;
inline bool CMsgGCToClientDevPlaytestStatus_HeroWhitelist::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientDevPlaytestStatus_HeroWhitelist::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgGCToClientDevPlaytestStatus_HeroWhitelist::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToClientDevPlaytestStatus_HeroWhitelist::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgGCToClientDevPlaytestStatus_HeroWhitelist::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevPlaytestStatus.HeroWhitelist.hero_id)
  return _internal_hero_id();
}
inline void CMsgGCToClientDevPlaytestStatus_HeroWhitelist::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.hero_id_ = value;
}
inline void CMsgGCToClientDevPlaytestStatus_HeroWhitelist::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevPlaytestStatus.HeroWhitelist.hero_id)
}

// repeated uint32 account_ids = 2;
inline int CMsgGCToClientDevPlaytestStatus_HeroWhitelist::_internal_account_ids_size() const {
  return _impl_.account_ids_.size();
}
inline int CMsgGCToClientDevPlaytestStatus_HeroWhitelist::account_ids_size() const {
  return _internal_account_ids_size();
}
inline void CMsgGCToClientDevPlaytestStatus_HeroWhitelist::clear_account_ids() {
  _impl_.account_ids_.Clear();
}
inline uint32_t CMsgGCToClientDevPlaytestStatus_HeroWhitelist::_internal_account_ids(int index) const {
  return _impl_.account_ids_.Get(index);
}
inline uint32_t CMsgGCToClientDevPlaytestStatus_HeroWhitelist::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevPlaytestStatus.HeroWhitelist.account_ids)
  return _internal_account_ids(index);
}
inline void CMsgGCToClientDevPlaytestStatus_HeroWhitelist::set_account_ids(int index, uint32_t value) {
  _impl_.account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevPlaytestStatus.HeroWhitelist.account_ids)
}
inline void CMsgGCToClientDevPlaytestStatus_HeroWhitelist::_internal_add_account_ids(uint32_t value) {
  _impl_.account_ids_.Add(value);
}
inline void CMsgGCToClientDevPlaytestStatus_HeroWhitelist::add_account_ids(uint32_t value) {
  _internal_add_account_ids(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientDevPlaytestStatus.HeroWhitelist.account_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToClientDevPlaytestStatus_HeroWhitelist::_internal_account_ids() const {
  return _impl_.account_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToClientDevPlaytestStatus_HeroWhitelist::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientDevPlaytestStatus.HeroWhitelist.account_ids)
  return _internal_account_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToClientDevPlaytestStatus_HeroWhitelist::_internal_mutable_account_ids() {
  return &_impl_.account_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToClientDevPlaytestStatus_HeroWhitelist::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientDevPlaytestStatus.HeroWhitelist.account_ids)
  return _internal_mutable_account_ids();
}

// -------------------------------------------------------------------

// CMsgGCToClientDevPlaytestStatus_DevQueueSize

// optional .ECitadelMatchMode match_mode = 1 [default = k_ECitadelMatchMode_Invalid];
inline bool CMsgGCToClientDevPlaytestStatus_DevQueueSize::_internal_has_match_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientDevPlaytestStatus_DevQueueSize::has_match_mode() const {
  return _internal_has_match_mode();
}
inline void CMsgGCToClientDevPlaytestStatus_DevQueueSize::clear_match_mode() {
  _impl_.match_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::ECitadelMatchMode CMsgGCToClientDevPlaytestStatus_DevQueueSize::_internal_match_mode() const {
  return static_cast< ::ECitadelMatchMode >(_impl_.match_mode_);
}
inline ::ECitadelMatchMode CMsgGCToClientDevPlaytestStatus_DevQueueSize::match_mode() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevPlaytestStatus.DevQueueSize.match_mode)
  return _internal_match_mode();
}
inline void CMsgGCToClientDevPlaytestStatus_DevQueueSize::_internal_set_match_mode(::ECitadelMatchMode value) {
  assert(::ECitadelMatchMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.match_mode_ = value;
}
inline void CMsgGCToClientDevPlaytestStatus_DevQueueSize::set_match_mode(::ECitadelMatchMode value) {
  _internal_set_match_mode(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevPlaytestStatus.DevQueueSize.match_mode)
}

// optional uint32 queue_size = 2;
inline bool CMsgGCToClientDevPlaytestStatus_DevQueueSize::_internal_has_queue_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientDevPlaytestStatus_DevQueueSize::has_queue_size() const {
  return _internal_has_queue_size();
}
inline void CMsgGCToClientDevPlaytestStatus_DevQueueSize::clear_queue_size() {
  _impl_.queue_size_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToClientDevPlaytestStatus_DevQueueSize::_internal_queue_size() const {
  return _impl_.queue_size_;
}
inline uint32_t CMsgGCToClientDevPlaytestStatus_DevQueueSize::queue_size() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevPlaytestStatus.DevQueueSize.queue_size)
  return _internal_queue_size();
}
inline void CMsgGCToClientDevPlaytestStatus_DevQueueSize::_internal_set_queue_size(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.queue_size_ = value;
}
inline void CMsgGCToClientDevPlaytestStatus_DevQueueSize::set_queue_size(uint32_t value) {
  _internal_set_queue_size(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevPlaytestStatus.DevQueueSize.queue_size)
}

// -------------------------------------------------------------------

// CMsgGCToClientDevPlaytestStatus

// repeated .CMsgGCToClientDevPlaytestStatus.DevQueueSize dev_queue_size = 1;
inline int CMsgGCToClientDevPlaytestStatus::_internal_dev_queue_size_size() const {
  return _impl_.dev_queue_size_.size();
}
inline int CMsgGCToClientDevPlaytestStatus::dev_queue_size_size() const {
  return _internal_dev_queue_size_size();
}
inline void CMsgGCToClientDevPlaytestStatus::clear_dev_queue_size() {
  _impl_.dev_queue_size_.Clear();
}
inline ::CMsgGCToClientDevPlaytestStatus_DevQueueSize* CMsgGCToClientDevPlaytestStatus::mutable_dev_queue_size(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientDevPlaytestStatus.dev_queue_size)
  return _impl_.dev_queue_size_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevPlaytestStatus_DevQueueSize >*
CMsgGCToClientDevPlaytestStatus::mutable_dev_queue_size() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientDevPlaytestStatus.dev_queue_size)
  return &_impl_.dev_queue_size_;
}
inline const ::CMsgGCToClientDevPlaytestStatus_DevQueueSize& CMsgGCToClientDevPlaytestStatus::_internal_dev_queue_size(int index) const {
  return _impl_.dev_queue_size_.Get(index);
}
inline const ::CMsgGCToClientDevPlaytestStatus_DevQueueSize& CMsgGCToClientDevPlaytestStatus::dev_queue_size(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevPlaytestStatus.dev_queue_size)
  return _internal_dev_queue_size(index);
}
inline ::CMsgGCToClientDevPlaytestStatus_DevQueueSize* CMsgGCToClientDevPlaytestStatus::_internal_add_dev_queue_size() {
  return _impl_.dev_queue_size_.Add();
}
inline ::CMsgGCToClientDevPlaytestStatus_DevQueueSize* CMsgGCToClientDevPlaytestStatus::add_dev_queue_size() {
  ::CMsgGCToClientDevPlaytestStatus_DevQueueSize* _add = _internal_add_dev_queue_size();
  // @@protoc_insertion_point(field_add:CMsgGCToClientDevPlaytestStatus.dev_queue_size)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevPlaytestStatus_DevQueueSize >&
CMsgGCToClientDevPlaytestStatus::dev_queue_size() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientDevPlaytestStatus.dev_queue_size)
  return _impl_.dev_queue_size_;
}

// optional uint32 dev_available_servers = 2;
inline bool CMsgGCToClientDevPlaytestStatus::_internal_has_dev_available_servers() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientDevPlaytestStatus::has_dev_available_servers() const {
  return _internal_has_dev_available_servers();
}
inline void CMsgGCToClientDevPlaytestStatus::clear_dev_available_servers() {
  _impl_.dev_available_servers_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCToClientDevPlaytestStatus::_internal_dev_available_servers() const {
  return _impl_.dev_available_servers_;
}
inline uint32_t CMsgGCToClientDevPlaytestStatus::dev_available_servers() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevPlaytestStatus.dev_available_servers)
  return _internal_dev_available_servers();
}
inline void CMsgGCToClientDevPlaytestStatus::_internal_set_dev_available_servers(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.dev_available_servers_ = value;
}
inline void CMsgGCToClientDevPlaytestStatus::set_dev_available_servers(uint32_t value) {
  _internal_set_dev_available_servers(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevPlaytestStatus.dev_available_servers)
}

// optional bool is_mm_enabled = 4;
inline bool CMsgGCToClientDevPlaytestStatus::_internal_has_is_mm_enabled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientDevPlaytestStatus::has_is_mm_enabled() const {
  return _internal_has_is_mm_enabled();
}
inline void CMsgGCToClientDevPlaytestStatus::clear_is_mm_enabled() {
  _impl_.is_mm_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCToClientDevPlaytestStatus::_internal_is_mm_enabled() const {
  return _impl_.is_mm_enabled_;
}
inline bool CMsgGCToClientDevPlaytestStatus::is_mm_enabled() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevPlaytestStatus.is_mm_enabled)
  return _internal_is_mm_enabled();
}
inline void CMsgGCToClientDevPlaytestStatus::_internal_set_is_mm_enabled(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.is_mm_enabled_ = value;
}
inline void CMsgGCToClientDevPlaytestStatus::set_is_mm_enabled(bool value) {
  _internal_set_is_mm_enabled(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevPlaytestStatus.is_mm_enabled)
}

// optional bool locked_heroes = 8;
inline bool CMsgGCToClientDevPlaytestStatus::_internal_has_locked_heroes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToClientDevPlaytestStatus::has_locked_heroes() const {
  return _internal_has_locked_heroes();
}
inline void CMsgGCToClientDevPlaytestStatus::clear_locked_heroes() {
  _impl_.locked_heroes_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgGCToClientDevPlaytestStatus::_internal_locked_heroes() const {
  return _impl_.locked_heroes_;
}
inline bool CMsgGCToClientDevPlaytestStatus::locked_heroes() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevPlaytestStatus.locked_heroes)
  return _internal_locked_heroes();
}
inline void CMsgGCToClientDevPlaytestStatus::_internal_set_locked_heroes(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.locked_heroes_ = value;
}
inline void CMsgGCToClientDevPlaytestStatus::set_locked_heroes(bool value) {
  _internal_set_locked_heroes(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevPlaytestStatus.locked_heroes)
}

// optional bool party_shared_heroes = 9;
inline bool CMsgGCToClientDevPlaytestStatus::_internal_has_party_shared_heroes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCToClientDevPlaytestStatus::has_party_shared_heroes() const {
  return _internal_has_party_shared_heroes();
}
inline void CMsgGCToClientDevPlaytestStatus::clear_party_shared_heroes() {
  _impl_.party_shared_heroes_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgGCToClientDevPlaytestStatus::_internal_party_shared_heroes() const {
  return _impl_.party_shared_heroes_;
}
inline bool CMsgGCToClientDevPlaytestStatus::party_shared_heroes() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevPlaytestStatus.party_shared_heroes)
  return _internal_party_shared_heroes();
}
inline void CMsgGCToClientDevPlaytestStatus::_internal_set_party_shared_heroes(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.party_shared_heroes_ = value;
}
inline void CMsgGCToClientDevPlaytestStatus::set_party_shared_heroes(bool value) {
  _internal_set_party_shared_heroes(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevPlaytestStatus.party_shared_heroes)
}

// repeated .CMsgGCToClientDevPlaytestStatus.HeroWhitelist hero_whitelists = 10;
inline int CMsgGCToClientDevPlaytestStatus::_internal_hero_whitelists_size() const {
  return _impl_.hero_whitelists_.size();
}
inline int CMsgGCToClientDevPlaytestStatus::hero_whitelists_size() const {
  return _internal_hero_whitelists_size();
}
inline void CMsgGCToClientDevPlaytestStatus::clear_hero_whitelists() {
  _impl_.hero_whitelists_.Clear();
}
inline ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist* CMsgGCToClientDevPlaytestStatus::mutable_hero_whitelists(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientDevPlaytestStatus.hero_whitelists)
  return _impl_.hero_whitelists_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist >*
CMsgGCToClientDevPlaytestStatus::mutable_hero_whitelists() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientDevPlaytestStatus.hero_whitelists)
  return &_impl_.hero_whitelists_;
}
inline const ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist& CMsgGCToClientDevPlaytestStatus::_internal_hero_whitelists(int index) const {
  return _impl_.hero_whitelists_.Get(index);
}
inline const ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist& CMsgGCToClientDevPlaytestStatus::hero_whitelists(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevPlaytestStatus.hero_whitelists)
  return _internal_hero_whitelists(index);
}
inline ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist* CMsgGCToClientDevPlaytestStatus::_internal_add_hero_whitelists() {
  return _impl_.hero_whitelists_.Add();
}
inline ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist* CMsgGCToClientDevPlaytestStatus::add_hero_whitelists() {
  ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist* _add = _internal_add_hero_whitelists();
  // @@protoc_insertion_point(field_add:CMsgGCToClientDevPlaytestStatus.hero_whitelists)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist >&
CMsgGCToClientDevPlaytestStatus::hero_whitelists() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientDevPlaytestStatus.hero_whitelists)
  return _impl_.hero_whitelists_;
}

// optional uint32 mm_pause_time = 14;
inline bool CMsgGCToClientDevPlaytestStatus::_internal_has_mm_pause_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGCToClientDevPlaytestStatus::has_mm_pause_time() const {
  return _internal_has_mm_pause_time();
}
inline void CMsgGCToClientDevPlaytestStatus::clear_mm_pause_time() {
  _impl_.mm_pause_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgGCToClientDevPlaytestStatus::_internal_mm_pause_time() const {
  return _impl_.mm_pause_time_;
}
inline uint32_t CMsgGCToClientDevPlaytestStatus::mm_pause_time() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevPlaytestStatus.mm_pause_time)
  return _internal_mm_pause_time();
}
inline void CMsgGCToClientDevPlaytestStatus::_internal_set_mm_pause_time(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.mm_pause_time_ = value;
}
inline void CMsgGCToClientDevPlaytestStatus::set_mm_pause_time(uint32_t value) {
  _internal_set_mm_pause_time(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevPlaytestStatus.mm_pause_time)
}

// repeated uint32 valid_client_versions = 15;
inline int CMsgGCToClientDevPlaytestStatus::_internal_valid_client_versions_size() const {
  return _impl_.valid_client_versions_.size();
}
inline int CMsgGCToClientDevPlaytestStatus::valid_client_versions_size() const {
  return _internal_valid_client_versions_size();
}
inline void CMsgGCToClientDevPlaytestStatus::clear_valid_client_versions() {
  _impl_.valid_client_versions_.Clear();
}
inline uint32_t CMsgGCToClientDevPlaytestStatus::_internal_valid_client_versions(int index) const {
  return _impl_.valid_client_versions_.Get(index);
}
inline uint32_t CMsgGCToClientDevPlaytestStatus::valid_client_versions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevPlaytestStatus.valid_client_versions)
  return _internal_valid_client_versions(index);
}
inline void CMsgGCToClientDevPlaytestStatus::set_valid_client_versions(int index, uint32_t value) {
  _impl_.valid_client_versions_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevPlaytestStatus.valid_client_versions)
}
inline void CMsgGCToClientDevPlaytestStatus::_internal_add_valid_client_versions(uint32_t value) {
  _impl_.valid_client_versions_.Add(value);
}
inline void CMsgGCToClientDevPlaytestStatus::add_valid_client_versions(uint32_t value) {
  _internal_add_valid_client_versions(value);
  // @@protoc_insertion_point(field_add:CMsgGCToClientDevPlaytestStatus.valid_client_versions)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToClientDevPlaytestStatus::_internal_valid_client_versions() const {
  return _impl_.valid_client_versions_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCToClientDevPlaytestStatus::valid_client_versions() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientDevPlaytestStatus.valid_client_versions)
  return _internal_valid_client_versions();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToClientDevPlaytestStatus::_internal_mutable_valid_client_versions() {
  return &_impl_.valid_client_versions_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCToClientDevPlaytestStatus::mutable_valid_client_versions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientDevPlaytestStatus.valid_client_versions)
  return _internal_mutable_valid_client_versions();
}

// optional uint32 active_match_count = 21;
inline bool CMsgGCToClientDevPlaytestStatus::_internal_has_active_match_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgGCToClientDevPlaytestStatus::has_active_match_count() const {
  return _internal_has_active_match_count();
}
inline void CMsgGCToClientDevPlaytestStatus::clear_active_match_count() {
  _impl_.active_match_count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgGCToClientDevPlaytestStatus::_internal_active_match_count() const {
  return _impl_.active_match_count_;
}
inline uint32_t CMsgGCToClientDevPlaytestStatus::active_match_count() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevPlaytestStatus.active_match_count)
  return _internal_active_match_count();
}
inline void CMsgGCToClientDevPlaytestStatus::_internal_set_active_match_count(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.active_match_count_ = value;
}
inline void CMsgGCToClientDevPlaytestStatus::set_active_match_count(uint32_t value) {
  _internal_set_active_match_count(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevPlaytestStatus.active_match_count)
}

// -------------------------------------------------------------------

// CMsgGCToClientSDRTicket

// optional bytes ticket = 1;
inline bool CMsgGCToClientSDRTicket::_internal_has_ticket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientSDRTicket::has_ticket() const {
  return _internal_has_ticket();
}
inline void CMsgGCToClientSDRTicket::clear_ticket() {
  _impl_.ticket_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToClientSDRTicket::ticket() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientSDRTicket.ticket)
  return _internal_ticket();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToClientSDRTicket::set_ticket(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.ticket_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToClientSDRTicket.ticket)
}
inline std::string* CMsgGCToClientSDRTicket::mutable_ticket() {
  std::string* _s = _internal_mutable_ticket();
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientSDRTicket.ticket)
  return _s;
}
inline const std::string& CMsgGCToClientSDRTicket::_internal_ticket() const {
  return _impl_.ticket_.Get();
}
inline void CMsgGCToClientSDRTicket::_internal_set_ticket(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ticket_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToClientSDRTicket::_internal_mutable_ticket() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.ticket_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToClientSDRTicket::release_ticket() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientSDRTicket.ticket)
  if (!_internal_has_ticket()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.ticket_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.ticket_.IsDefault()) {
    _impl_.ticket_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToClientSDRTicket::set_allocated_ticket(std::string* ticket) {
  if (ticket != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.ticket_.SetAllocated(ticket, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.ticket_.IsDefault()) {
    _impl_.ticket_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientSDRTicket.ticket)
}

// -------------------------------------------------------------------

// CMsgClientToGCReplacementSDRTicket

// optional fixed64 lobby_id = 1;
inline bool CMsgClientToGCReplacementSDRTicket::_internal_has_lobby_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCReplacementSDRTicket::has_lobby_id() const {
  return _internal_has_lobby_id();
}
inline void CMsgClientToGCReplacementSDRTicket::clear_lobby_id() {
  _impl_.lobby_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCReplacementSDRTicket::_internal_lobby_id() const {
  return _impl_.lobby_id_;
}
inline uint64_t CMsgClientToGCReplacementSDRTicket::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCReplacementSDRTicket.lobby_id)
  return _internal_lobby_id();
}
inline void CMsgClientToGCReplacementSDRTicket::_internal_set_lobby_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.lobby_id_ = value;
}
inline void CMsgClientToGCReplacementSDRTicket::set_lobby_id(uint64_t value) {
  _internal_set_lobby_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCReplacementSDRTicket.lobby_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCReplacementSDRTicketResponse

// optional bytes ticket = 1;
inline bool CMsgClientToGCReplacementSDRTicketResponse::_internal_has_ticket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCReplacementSDRTicketResponse::has_ticket() const {
  return _internal_has_ticket();
}
inline void CMsgClientToGCReplacementSDRTicketResponse::clear_ticket() {
  _impl_.ticket_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCReplacementSDRTicketResponse::ticket() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCReplacementSDRTicketResponse.ticket)
  return _internal_ticket();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCReplacementSDRTicketResponse::set_ticket(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.ticket_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCReplacementSDRTicketResponse.ticket)
}
inline std::string* CMsgClientToGCReplacementSDRTicketResponse::mutable_ticket() {
  std::string* _s = _internal_mutable_ticket();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCReplacementSDRTicketResponse.ticket)
  return _s;
}
inline const std::string& CMsgClientToGCReplacementSDRTicketResponse::_internal_ticket() const {
  return _impl_.ticket_.Get();
}
inline void CMsgClientToGCReplacementSDRTicketResponse::_internal_set_ticket(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ticket_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCReplacementSDRTicketResponse::_internal_mutable_ticket() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.ticket_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCReplacementSDRTicketResponse::release_ticket() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCReplacementSDRTicketResponse.ticket)
  if (!_internal_has_ticket()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.ticket_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.ticket_.IsDefault()) {
    _impl_.ticket_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCReplacementSDRTicketResponse::set_allocated_ticket(std::string* ticket) {
  if (ticket != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.ticket_.SetAllocated(ticket, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.ticket_.IsDefault()) {
    _impl_.ticket_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCReplacementSDRTicketResponse.ticket)
}

// optional string error_message = 2;
inline bool CMsgClientToGCReplacementSDRTicketResponse::_internal_has_error_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCReplacementSDRTicketResponse::has_error_message() const {
  return _internal_has_error_message();
}
inline void CMsgClientToGCReplacementSDRTicketResponse::clear_error_message() {
  _impl_.error_message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientToGCReplacementSDRTicketResponse::error_message() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCReplacementSDRTicketResponse.error_message)
  return _internal_error_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCReplacementSDRTicketResponse::set_error_message(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.error_message_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCReplacementSDRTicketResponse.error_message)
}
inline std::string* CMsgClientToGCReplacementSDRTicketResponse::mutable_error_message() {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCReplacementSDRTicketResponse.error_message)
  return _s;
}
inline const std::string& CMsgClientToGCReplacementSDRTicketResponse::_internal_error_message() const {
  return _impl_.error_message_.Get();
}
inline void CMsgClientToGCReplacementSDRTicketResponse::_internal_set_error_message(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.error_message_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCReplacementSDRTicketResponse::_internal_mutable_error_message() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.error_message_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCReplacementSDRTicketResponse::release_error_message() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCReplacementSDRTicketResponse.error_message)
  if (!_internal_has_error_message()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.error_message_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCReplacementSDRTicketResponse::set_allocated_error_message(std::string* error_message) {
  if (error_message != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.error_message_.SetAllocated(error_message, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCReplacementSDRTicketResponse.error_message)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetServerConVar

// optional string convar_name = 1;
inline bool CMsgClientToGCSetServerConVar::_internal_has_convar_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSetServerConVar::has_convar_name() const {
  return _internal_has_convar_name();
}
inline void CMsgClientToGCSetServerConVar::clear_convar_name() {
  _impl_.convar_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCSetServerConVar::convar_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetServerConVar.convar_name)
  return _internal_convar_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCSetServerConVar::set_convar_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.convar_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetServerConVar.convar_name)
}
inline std::string* CMsgClientToGCSetServerConVar::mutable_convar_name() {
  std::string* _s = _internal_mutable_convar_name();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSetServerConVar.convar_name)
  return _s;
}
inline const std::string& CMsgClientToGCSetServerConVar::_internal_convar_name() const {
  return _impl_.convar_name_.Get();
}
inline void CMsgClientToGCSetServerConVar::_internal_set_convar_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.convar_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCSetServerConVar::_internal_mutable_convar_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.convar_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCSetServerConVar::release_convar_name() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCSetServerConVar.convar_name)
  if (!_internal_has_convar_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.convar_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.convar_name_.IsDefault()) {
    _impl_.convar_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCSetServerConVar::set_allocated_convar_name(std::string* convar_name) {
  if (convar_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.convar_name_.SetAllocated(convar_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.convar_name_.IsDefault()) {
    _impl_.convar_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSetServerConVar.convar_name)
}

// optional string convar_value = 2;
inline bool CMsgClientToGCSetServerConVar::_internal_has_convar_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCSetServerConVar::has_convar_value() const {
  return _internal_has_convar_value();
}
inline void CMsgClientToGCSetServerConVar::clear_convar_value() {
  _impl_.convar_value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientToGCSetServerConVar::convar_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetServerConVar.convar_value)
  return _internal_convar_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCSetServerConVar::set_convar_value(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.convar_value_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetServerConVar.convar_value)
}
inline std::string* CMsgClientToGCSetServerConVar::mutable_convar_value() {
  std::string* _s = _internal_mutable_convar_value();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSetServerConVar.convar_value)
  return _s;
}
inline const std::string& CMsgClientToGCSetServerConVar::_internal_convar_value() const {
  return _impl_.convar_value_.Get();
}
inline void CMsgClientToGCSetServerConVar::_internal_set_convar_value(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.convar_value_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCSetServerConVar::_internal_mutable_convar_value() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.convar_value_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCSetServerConVar::release_convar_value() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCSetServerConVar.convar_value)
  if (!_internal_has_convar_value()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.convar_value_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.convar_value_.IsDefault()) {
    _impl_.convar_value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCSetServerConVar::set_allocated_convar_value(std::string* convar_value) {
  if (convar_value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.convar_value_.SetAllocated(convar_value, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.convar_value_.IsDefault()) {
    _impl_.convar_value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSetServerConVar.convar_value)
}

// optional fixed64 lobby_id = 3;
inline bool CMsgClientToGCSetServerConVar::_internal_has_lobby_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCSetServerConVar::has_lobby_id() const {
  return _internal_has_lobby_id();
}
inline void CMsgClientToGCSetServerConVar::clear_lobby_id() {
  _impl_.lobby_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CMsgClientToGCSetServerConVar::_internal_lobby_id() const {
  return _impl_.lobby_id_;
}
inline uint64_t CMsgClientToGCSetServerConVar::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetServerConVar.lobby_id)
  return _internal_lobby_id();
}
inline void CMsgClientToGCSetServerConVar::_internal_set_lobby_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.lobby_id_ = value;
}
inline void CMsgClientToGCSetServerConVar::set_lobby_id(uint64_t value) {
  _internal_set_lobby_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetServerConVar.lobby_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetServerConVarResponse

// optional string message = 1;
inline bool CMsgClientToGCSetServerConVarResponse::_internal_has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSetServerConVarResponse::has_message() const {
  return _internal_has_message();
}
inline void CMsgClientToGCSetServerConVarResponse::clear_message() {
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCSetServerConVarResponse::message() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetServerConVarResponse.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCSetServerConVarResponse::set_message(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.message_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetServerConVarResponse.message)
}
inline std::string* CMsgClientToGCSetServerConVarResponse::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSetServerConVarResponse.message)
  return _s;
}
inline const std::string& CMsgClientToGCSetServerConVarResponse::_internal_message() const {
  return _impl_.message_.Get();
}
inline void CMsgClientToGCSetServerConVarResponse::_internal_set_message(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCSetServerConVarResponse::_internal_mutable_message() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCSetServerConVarResponse::release_message() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCSetServerConVarResponse.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.message_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCSetServerConVarResponse::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(message, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSetServerConVarResponse.message)
}

// -------------------------------------------------------------------

// CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey

// optional uint32 question_id = 1;
inline bool CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_internal_has_question_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::has_question_id() const {
  return _internal_has_question_id();
}
inline void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::clear_question_id() {
  _impl_.question_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_internal_question_id() const {
  return _impl_.question_id_;
}
inline uint32_t CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::question_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey.question_id)
  return _internal_question_id();
}
inline void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_internal_set_question_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.question_id_ = value;
}
inline void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::set_question_id(uint32_t value) {
  _internal_set_question_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey.question_id)
}

// optional uint32 response_value = 2;
inline bool CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_internal_has_response_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::has_response_value() const {
  return _internal_has_response_value();
}
inline void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::clear_response_value() {
  _impl_.response_value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_internal_response_value() const {
  return _impl_.response_value_;
}
inline uint32_t CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::response_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey.response_value)
  return _internal_response_value();
}
inline void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_internal_set_response_value(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.response_value_ = value;
}
inline void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::set_response_value(uint32_t value) {
  _internal_set_response_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey.response_value)
}

// optional string response_freeform = 3;
inline bool CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_internal_has_response_freeform() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::has_response_freeform() const {
  return _internal_has_response_freeform();
}
inline void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::clear_response_freeform() {
  _impl_.response_freeform_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::response_freeform() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey.response_freeform)
  return _internal_response_freeform();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::set_response_freeform(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.response_freeform_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey.response_freeform)
}
inline std::string* CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::mutable_response_freeform() {
  std::string* _s = _internal_mutable_response_freeform();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey.response_freeform)
  return _s;
}
inline const std::string& CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_internal_response_freeform() const {
  return _impl_.response_freeform_.Get();
}
inline void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_internal_set_response_freeform(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_freeform_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_internal_mutable_response_freeform() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.response_freeform_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::release_response_freeform() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey.response_freeform)
  if (!_internal_has_response_freeform()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.response_freeform_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.response_freeform_.IsDefault()) {
    _impl_.response_freeform_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::set_allocated_response_freeform(std::string* response_freeform) {
  if (response_freeform != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.response_freeform_.SetAllocated(response_freeform, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.response_freeform_.IsDefault()) {
    _impl_.response_freeform_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey.response_freeform)
}

// -------------------------------------------------------------------

// CMsgClientToGCPostMatchSurveyResponse

// repeated .CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey post_match_survey = 1;
inline int CMsgClientToGCPostMatchSurveyResponse::_internal_post_match_survey_size() const {
  return _impl_.post_match_survey_.size();
}
inline int CMsgClientToGCPostMatchSurveyResponse::post_match_survey_size() const {
  return _internal_post_match_survey_size();
}
inline void CMsgClientToGCPostMatchSurveyResponse::clear_post_match_survey() {
  _impl_.post_match_survey_.Clear();
}
inline ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* CMsgClientToGCPostMatchSurveyResponse::mutable_post_match_survey(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCPostMatchSurveyResponse.post_match_survey)
  return _impl_.post_match_survey_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey >*
CMsgClientToGCPostMatchSurveyResponse::mutable_post_match_survey() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCPostMatchSurveyResponse.post_match_survey)
  return &_impl_.post_match_survey_;
}
inline const ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& CMsgClientToGCPostMatchSurveyResponse::_internal_post_match_survey(int index) const {
  return _impl_.post_match_survey_.Get(index);
}
inline const ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& CMsgClientToGCPostMatchSurveyResponse::post_match_survey(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPostMatchSurveyResponse.post_match_survey)
  return _internal_post_match_survey(index);
}
inline ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* CMsgClientToGCPostMatchSurveyResponse::_internal_add_post_match_survey() {
  return _impl_.post_match_survey_.Add();
}
inline ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* CMsgClientToGCPostMatchSurveyResponse::add_post_match_survey() {
  ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* _add = _internal_add_post_match_survey();
  // @@protoc_insertion_point(field_add:CMsgClientToGCPostMatchSurveyResponse.post_match_survey)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey >&
CMsgClientToGCPostMatchSurveyResponse::post_match_survey() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCPostMatchSurveyResponse.post_match_survey)
  return _impl_.post_match_survey_;
}

// optional uint64 match_id = 2;
inline bool CMsgClientToGCPostMatchSurveyResponse::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPostMatchSurveyResponse::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgClientToGCPostMatchSurveyResponse::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCPostMatchSurveyResponse::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CMsgClientToGCPostMatchSurveyResponse::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPostMatchSurveyResponse.match_id)
  return _internal_match_id();
}
inline void CMsgClientToGCPostMatchSurveyResponse::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.match_id_ = value;
}
inline void CMsgClientToGCPostMatchSurveyResponse::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPostMatchSurveyResponse.match_id)
}

// -------------------------------------------------------------------

// CMsgPartyMMInfo

// optional .EGCPlatform platform = 1 [default = k_eGCPlatform_None];
inline bool CMsgPartyMMInfo::_internal_has_platform() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgPartyMMInfo::has_platform() const {
  return _internal_has_platform();
}
inline void CMsgPartyMMInfo::clear_platform() {
  _impl_.platform_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::EGCPlatform CMsgPartyMMInfo::_internal_platform() const {
  return static_cast< ::EGCPlatform >(_impl_.platform_);
}
inline ::EGCPlatform CMsgPartyMMInfo::platform() const {
  // @@protoc_insertion_point(field_get:CMsgPartyMMInfo.platform)
  return _internal_platform();
}
inline void CMsgPartyMMInfo::_internal_set_platform(::EGCPlatform value) {
  assert(::EGCPlatform_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.platform_ = value;
}
inline void CMsgPartyMMInfo::set_platform(::EGCPlatform value) {
  _internal_set_platform(value);
  // @@protoc_insertion_point(field_set:CMsgPartyMMInfo.platform)
}

// optional .CMsgRegionPingTimesClient ping_times = 2;
inline bool CMsgPartyMMInfo::_internal_has_ping_times() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ping_times_ != nullptr);
  return value;
}
inline bool CMsgPartyMMInfo::has_ping_times() const {
  return _internal_has_ping_times();
}
inline const ::CMsgRegionPingTimesClient& CMsgPartyMMInfo::_internal_ping_times() const {
  const ::CMsgRegionPingTimesClient* p = _impl_.ping_times_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgRegionPingTimesClient&>(
      ::_CMsgRegionPingTimesClient_default_instance_);
}
inline const ::CMsgRegionPingTimesClient& CMsgPartyMMInfo::ping_times() const {
  // @@protoc_insertion_point(field_get:CMsgPartyMMInfo.ping_times)
  return _internal_ping_times();
}
inline void CMsgPartyMMInfo::unsafe_arena_set_allocated_ping_times(
    ::CMsgRegionPingTimesClient* ping_times) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ping_times_);
  }
  _impl_.ping_times_ = ping_times;
  if (ping_times) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgPartyMMInfo.ping_times)
}
inline ::CMsgRegionPingTimesClient* CMsgPartyMMInfo::release_ping_times() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgRegionPingTimesClient* temp = _impl_.ping_times_;
  _impl_.ping_times_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgRegionPingTimesClient* CMsgPartyMMInfo::unsafe_arena_release_ping_times() {
  // @@protoc_insertion_point(field_release:CMsgPartyMMInfo.ping_times)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgRegionPingTimesClient* temp = _impl_.ping_times_;
  _impl_.ping_times_ = nullptr;
  return temp;
}
inline ::CMsgRegionPingTimesClient* CMsgPartyMMInfo::_internal_mutable_ping_times() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ping_times_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgRegionPingTimesClient>(GetArenaForAllocation());
    _impl_.ping_times_ = p;
  }
  return _impl_.ping_times_;
}
inline ::CMsgRegionPingTimesClient* CMsgPartyMMInfo::mutable_ping_times() {
  ::CMsgRegionPingTimesClient* _msg = _internal_mutable_ping_times();
  // @@protoc_insertion_point(field_mutable:CMsgPartyMMInfo.ping_times)
  return _msg;
}
inline void CMsgPartyMMInfo::set_allocated_ping_times(::CMsgRegionPingTimesClient* ping_times) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ping_times_);
  }
  if (ping_times) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ping_times));
    if (message_arena != submessage_arena) {
      ping_times = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ping_times, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.ping_times_ = ping_times;
  // @@protoc_insertion_point(field_set_allocated:CMsgPartyMMInfo.ping_times)
}

// optional uint32 client_version = 3;
inline bool CMsgPartyMMInfo::_internal_has_client_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgPartyMMInfo::has_client_version() const {
  return _internal_has_client_version();
}
inline void CMsgPartyMMInfo::clear_client_version() {
  _impl_.client_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgPartyMMInfo::_internal_client_version() const {
  return _impl_.client_version_;
}
inline uint32_t CMsgPartyMMInfo::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgPartyMMInfo.client_version)
  return _internal_client_version();
}
inline void CMsgPartyMMInfo::_internal_set_client_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.client_version_ = value;
}
inline void CMsgPartyMMInfo::set_client_version(uint32_t value) {
  _internal_set_client_version(value);
  // @@protoc_insertion_point(field_set:CMsgPartyMMInfo.client_version)
}

// optional .ECitadelRegionMode region_mode = 4 [default = k_ECitadelRegionMode_ROW];
inline bool CMsgPartyMMInfo::_internal_has_region_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgPartyMMInfo::has_region_mode() const {
  return _internal_has_region_mode();
}
inline void CMsgPartyMMInfo::clear_region_mode() {
  _impl_.region_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::ECitadelRegionMode CMsgPartyMMInfo::_internal_region_mode() const {
  return static_cast< ::ECitadelRegionMode >(_impl_.region_mode_);
}
inline ::ECitadelRegionMode CMsgPartyMMInfo::region_mode() const {
  // @@protoc_insertion_point(field_get:CMsgPartyMMInfo.region_mode)
  return _internal_region_mode();
}
inline void CMsgPartyMMInfo::_internal_set_region_mode(::ECitadelRegionMode value) {
  assert(::ECitadelRegionMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.region_mode_ = value;
}
inline void CMsgPartyMMInfo::set_region_mode(::ECitadelRegionMode value) {
  _internal_set_region_mode(value);
  // @@protoc_insertion_point(field_set:CMsgPartyMMInfo.region_mode)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartyCreate

// optional .CMsgPartyMMInfo party_mm_info = 1;
inline bool CMsgClientToGCPartyCreate::_internal_has_party_mm_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.party_mm_info_ != nullptr);
  return value;
}
inline bool CMsgClientToGCPartyCreate::has_party_mm_info() const {
  return _internal_has_party_mm_info();
}
inline void CMsgClientToGCPartyCreate::clear_party_mm_info() {
  if (_impl_.party_mm_info_ != nullptr) _impl_.party_mm_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgPartyMMInfo& CMsgClientToGCPartyCreate::_internal_party_mm_info() const {
  const ::CMsgPartyMMInfo* p = _impl_.party_mm_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgPartyMMInfo&>(
      ::_CMsgPartyMMInfo_default_instance_);
}
inline const ::CMsgPartyMMInfo& CMsgClientToGCPartyCreate::party_mm_info() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyCreate.party_mm_info)
  return _internal_party_mm_info();
}
inline void CMsgClientToGCPartyCreate::unsafe_arena_set_allocated_party_mm_info(
    ::CMsgPartyMMInfo* party_mm_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.party_mm_info_);
  }
  _impl_.party_mm_info_ = party_mm_info;
  if (party_mm_info) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCPartyCreate.party_mm_info)
}
inline ::CMsgPartyMMInfo* CMsgClientToGCPartyCreate::release_party_mm_info() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgPartyMMInfo* temp = _impl_.party_mm_info_;
  _impl_.party_mm_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgPartyMMInfo* CMsgClientToGCPartyCreate::unsafe_arena_release_party_mm_info() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCPartyCreate.party_mm_info)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgPartyMMInfo* temp = _impl_.party_mm_info_;
  _impl_.party_mm_info_ = nullptr;
  return temp;
}
inline ::CMsgPartyMMInfo* CMsgClientToGCPartyCreate::_internal_mutable_party_mm_info() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.party_mm_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgPartyMMInfo>(GetArenaForAllocation());
    _impl_.party_mm_info_ = p;
  }
  return _impl_.party_mm_info_;
}
inline ::CMsgPartyMMInfo* CMsgClientToGCPartyCreate::mutable_party_mm_info() {
  ::CMsgPartyMMInfo* _msg = _internal_mutable_party_mm_info();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCPartyCreate.party_mm_info)
  return _msg;
}
inline void CMsgClientToGCPartyCreate::set_allocated_party_mm_info(::CMsgPartyMMInfo* party_mm_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.party_mm_info_;
  }
  if (party_mm_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(party_mm_info);
    if (message_arena != submessage_arena) {
      party_mm_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, party_mm_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.party_mm_info_ = party_mm_info;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCPartyCreate.party_mm_info)
}

// optional uint32 invite_account_id = 3;
inline bool CMsgClientToGCPartyCreate::_internal_has_invite_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyCreate::has_invite_account_id() const {
  return _internal_has_invite_account_id();
}
inline void CMsgClientToGCPartyCreate::clear_invite_account_id() {
  _impl_.invite_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCPartyCreate::_internal_invite_account_id() const {
  return _impl_.invite_account_id_;
}
inline uint32_t CMsgClientToGCPartyCreate::invite_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyCreate.invite_account_id)
  return _internal_invite_account_id();
}
inline void CMsgClientToGCPartyCreate::_internal_set_invite_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.invite_account_id_ = value;
}
inline void CMsgClientToGCPartyCreate::set_invite_account_id(uint32_t value) {
  _internal_set_invite_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyCreate.invite_account_id)
}

// optional bool disable_party_code = 4;
inline bool CMsgClientToGCPartyCreate::_internal_has_disable_party_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyCreate::has_disable_party_code() const {
  return _internal_has_disable_party_code();
}
inline void CMsgClientToGCPartyCreate::clear_disable_party_code() {
  _impl_.disable_party_code_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgClientToGCPartyCreate::_internal_disable_party_code() const {
  return _impl_.disable_party_code_;
}
inline bool CMsgClientToGCPartyCreate::disable_party_code() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyCreate.disable_party_code)
  return _internal_disable_party_code();
}
inline void CMsgClientToGCPartyCreate::_internal_set_disable_party_code(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.disable_party_code_ = value;
}
inline void CMsgClientToGCPartyCreate::set_disable_party_code(bool value) {
  _internal_set_disable_party_code(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyCreate.disable_party_code)
}

// optional bool is_private_lobby = 5;
inline bool CMsgClientToGCPartyCreate::_internal_has_is_private_lobby() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyCreate::has_is_private_lobby() const {
  return _internal_has_is_private_lobby();
}
inline void CMsgClientToGCPartyCreate::clear_is_private_lobby() {
  _impl_.is_private_lobby_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgClientToGCPartyCreate::_internal_is_private_lobby() const {
  return _impl_.is_private_lobby_;
}
inline bool CMsgClientToGCPartyCreate::is_private_lobby() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyCreate.is_private_lobby)
  return _internal_is_private_lobby();
}
inline void CMsgClientToGCPartyCreate::_internal_set_is_private_lobby(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.is_private_lobby_ = value;
}
inline void CMsgClientToGCPartyCreate::set_is_private_lobby(bool value) {
  _internal_set_is_private_lobby(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyCreate.is_private_lobby)
}

// optional .ECitadelRegionMode region_mode = 6 [default = k_ECitadelRegionMode_ROW];
inline bool CMsgClientToGCPartyCreate::_internal_has_region_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyCreate::has_region_mode() const {
  return _internal_has_region_mode();
}
inline void CMsgClientToGCPartyCreate::clear_region_mode() {
  _impl_.region_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::ECitadelRegionMode CMsgClientToGCPartyCreate::_internal_region_mode() const {
  return static_cast< ::ECitadelRegionMode >(_impl_.region_mode_);
}
inline ::ECitadelRegionMode CMsgClientToGCPartyCreate::region_mode() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyCreate.region_mode)
  return _internal_region_mode();
}
inline void CMsgClientToGCPartyCreate::_internal_set_region_mode(::ECitadelRegionMode value) {
  assert(::ECitadelRegionMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.region_mode_ = value;
}
inline void CMsgClientToGCPartyCreate::set_region_mode(::ECitadelRegionMode value) {
  _internal_set_region_mode(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyCreate.region_mode)
}

// optional string server_search_key = 7;
inline bool CMsgClientToGCPartyCreate::_internal_has_server_search_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyCreate::has_server_search_key() const {
  return _internal_has_server_search_key();
}
inline void CMsgClientToGCPartyCreate::clear_server_search_key() {
  _impl_.server_search_key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCPartyCreate::server_search_key() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyCreate.server_search_key)
  return _internal_server_search_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCPartyCreate::set_server_search_key(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.server_search_key_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyCreate.server_search_key)
}
inline std::string* CMsgClientToGCPartyCreate::mutable_server_search_key() {
  std::string* _s = _internal_mutable_server_search_key();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCPartyCreate.server_search_key)
  return _s;
}
inline const std::string& CMsgClientToGCPartyCreate::_internal_server_search_key() const {
  return _impl_.server_search_key_.Get();
}
inline void CMsgClientToGCPartyCreate::_internal_set_server_search_key(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.server_search_key_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCPartyCreate::_internal_mutable_server_search_key() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.server_search_key_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCPartyCreate::release_server_search_key() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCPartyCreate.server_search_key)
  if (!_internal_has_server_search_key()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.server_search_key_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.server_search_key_.IsDefault()) {
    _impl_.server_search_key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCPartyCreate::set_allocated_server_search_key(std::string* server_search_key) {
  if (server_search_key != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.server_search_key_.SetAllocated(server_search_key, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.server_search_key_.IsDefault()) {
    _impl_.server_search_key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCPartyCreate.server_search_key)
}

// optional .ECitadelMMPreference mm_preference = 8 [default = k_ECitadelMMPreference_Invalid];
inline bool CMsgClientToGCPartyCreate::_internal_has_mm_preference() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyCreate::has_mm_preference() const {
  return _internal_has_mm_preference();
}
inline void CMsgClientToGCPartyCreate::clear_mm_preference() {
  _impl_.mm_preference_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::ECitadelMMPreference CMsgClientToGCPartyCreate::_internal_mm_preference() const {
  return static_cast< ::ECitadelMMPreference >(_impl_.mm_preference_);
}
inline ::ECitadelMMPreference CMsgClientToGCPartyCreate::mm_preference() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyCreate.mm_preference)
  return _internal_mm_preference();
}
inline void CMsgClientToGCPartyCreate::_internal_set_mm_preference(::ECitadelMMPreference value) {
  assert(::ECitadelMMPreference_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.mm_preference_ = value;
}
inline void CMsgClientToGCPartyCreate::set_mm_preference(::ECitadelMMPreference value) {
  _internal_set_mm_preference(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyCreate.mm_preference)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartyCreateResponse

// optional .CMsgClientToGCPartyCreateResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCPartyCreateResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyCreateResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCPartyCreateResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCPartyCreateResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyCreateResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCPartyCreateResponse::_internal_set_result(::CMsgClientToGCPartyCreateResponse_EResponse value) {
  assert(::CMsgClientToGCPartyCreateResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCPartyCreateResponse::set_result(::CMsgClientToGCPartyCreateResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyCreateResponse.result)
}

// optional fixed64 party_id = 2;
inline bool CMsgClientToGCPartyCreateResponse::_internal_has_party_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyCreateResponse::has_party_id() const {
  return _internal_has_party_id();
}
inline void CMsgClientToGCPartyCreateResponse::clear_party_id() {
  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCPartyCreateResponse::_internal_party_id() const {
  return _impl_.party_id_;
}
inline uint64_t CMsgClientToGCPartyCreateResponse::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyCreateResponse.party_id)
  return _internal_party_id();
}
inline void CMsgClientToGCPartyCreateResponse::_internal_set_party_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.party_id_ = value;
}
inline void CMsgClientToGCPartyCreateResponse::set_party_id(uint64_t value) {
  _internal_set_party_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyCreateResponse.party_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartyLeave

// optional fixed64 party_id = 1;
inline bool CMsgClientToGCPartyLeave::_internal_has_party_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyLeave::has_party_id() const {
  return _internal_has_party_id();
}
inline void CMsgClientToGCPartyLeave::clear_party_id() {
  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCPartyLeave::_internal_party_id() const {
  return _impl_.party_id_;
}
inline uint64_t CMsgClientToGCPartyLeave::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyLeave.party_id)
  return _internal_party_id();
}
inline void CMsgClientToGCPartyLeave::_internal_set_party_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.party_id_ = value;
}
inline void CMsgClientToGCPartyLeave::set_party_id(uint64_t value) {
  _internal_set_party_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyLeave.party_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartyLeaveResponse

// optional .CMsgClientToGCPartyLeaveResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCPartyLeaveResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyLeaveResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCPartyLeaveResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCPartyLeaveResponse_EResponse CMsgClientToGCPartyLeaveResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCPartyLeaveResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCPartyLeaveResponse_EResponse CMsgClientToGCPartyLeaveResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyLeaveResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCPartyLeaveResponse::_internal_set_result(::CMsgClientToGCPartyLeaveResponse_EResponse value) {
  assert(::CMsgClientToGCPartyLeaveResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCPartyLeaveResponse::set_result(::CMsgClientToGCPartyLeaveResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyLeaveResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartyJoin

// optional fixed64 party_id = 1;
inline bool CMsgClientToGCPartyJoin::_internal_has_party_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyJoin::has_party_id() const {
  return _internal_has_party_id();
}
inline void CMsgClientToGCPartyJoin::clear_party_id() {
  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgClientToGCPartyJoin::_internal_party_id() const {
  return _impl_.party_id_;
}
inline uint64_t CMsgClientToGCPartyJoin::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyJoin.party_id)
  return _internal_party_id();
}
inline void CMsgClientToGCPartyJoin::_internal_set_party_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.party_id_ = value;
}
inline void CMsgClientToGCPartyJoin::set_party_id(uint64_t value) {
  _internal_set_party_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyJoin.party_id)
}

// optional bool is_rejoin = 2;
inline bool CMsgClientToGCPartyJoin::_internal_has_is_rejoin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyJoin::has_is_rejoin() const {
  return _internal_has_is_rejoin();
}
inline void CMsgClientToGCPartyJoin::clear_is_rejoin() {
  _impl_.is_rejoin_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgClientToGCPartyJoin::_internal_is_rejoin() const {
  return _impl_.is_rejoin_;
}
inline bool CMsgClientToGCPartyJoin::is_rejoin() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyJoin.is_rejoin)
  return _internal_is_rejoin();
}
inline void CMsgClientToGCPartyJoin::_internal_set_is_rejoin(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.is_rejoin_ = value;
}
inline void CMsgClientToGCPartyJoin::set_is_rejoin(bool value) {
  _internal_set_is_rejoin(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyJoin.is_rejoin)
}

// optional .CMsgPartyMMInfo party_mm_info = 3;
inline bool CMsgClientToGCPartyJoin::_internal_has_party_mm_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.party_mm_info_ != nullptr);
  return value;
}
inline bool CMsgClientToGCPartyJoin::has_party_mm_info() const {
  return _internal_has_party_mm_info();
}
inline void CMsgClientToGCPartyJoin::clear_party_mm_info() {
  if (_impl_.party_mm_info_ != nullptr) _impl_.party_mm_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgPartyMMInfo& CMsgClientToGCPartyJoin::_internal_party_mm_info() const {
  const ::CMsgPartyMMInfo* p = _impl_.party_mm_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgPartyMMInfo&>(
      ::_CMsgPartyMMInfo_default_instance_);
}
inline const ::CMsgPartyMMInfo& CMsgClientToGCPartyJoin::party_mm_info() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyJoin.party_mm_info)
  return _internal_party_mm_info();
}
inline void CMsgClientToGCPartyJoin::unsafe_arena_set_allocated_party_mm_info(
    ::CMsgPartyMMInfo* party_mm_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.party_mm_info_);
  }
  _impl_.party_mm_info_ = party_mm_info;
  if (party_mm_info) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCPartyJoin.party_mm_info)
}
inline ::CMsgPartyMMInfo* CMsgClientToGCPartyJoin::release_party_mm_info() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgPartyMMInfo* temp = _impl_.party_mm_info_;
  _impl_.party_mm_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgPartyMMInfo* CMsgClientToGCPartyJoin::unsafe_arena_release_party_mm_info() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCPartyJoin.party_mm_info)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgPartyMMInfo* temp = _impl_.party_mm_info_;
  _impl_.party_mm_info_ = nullptr;
  return temp;
}
inline ::CMsgPartyMMInfo* CMsgClientToGCPartyJoin::_internal_mutable_party_mm_info() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.party_mm_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgPartyMMInfo>(GetArenaForAllocation());
    _impl_.party_mm_info_ = p;
  }
  return _impl_.party_mm_info_;
}
inline ::CMsgPartyMMInfo* CMsgClientToGCPartyJoin::mutable_party_mm_info() {
  ::CMsgPartyMMInfo* _msg = _internal_mutable_party_mm_info();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCPartyJoin.party_mm_info)
  return _msg;
}
inline void CMsgClientToGCPartyJoin::set_allocated_party_mm_info(::CMsgPartyMMInfo* party_mm_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.party_mm_info_;
  }
  if (party_mm_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(party_mm_info);
    if (message_arena != submessage_arena) {
      party_mm_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, party_mm_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.party_mm_info_ = party_mm_info;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCPartyJoin.party_mm_info)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartyJoinResponse

// optional .CMsgClientToGCPartyJoinResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCPartyJoinResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyJoinResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCPartyJoinResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCPartyJoinResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyJoinResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCPartyJoinResponse::_internal_set_result(::CMsgClientToGCPartyJoinResponse_EResponse value) {
  assert(::CMsgClientToGCPartyJoinResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCPartyJoinResponse::set_result(::CMsgClientToGCPartyJoinResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyJoinResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartyAction

// optional fixed64 party_id = 1;
inline bool CMsgClientToGCPartyAction::_internal_has_party_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyAction::has_party_id() const {
  return _internal_has_party_id();
}
inline void CMsgClientToGCPartyAction::clear_party_id() {
  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgClientToGCPartyAction::_internal_party_id() const {
  return _impl_.party_id_;
}
inline uint64_t CMsgClientToGCPartyAction::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyAction.party_id)
  return _internal_party_id();
}
inline void CMsgClientToGCPartyAction::_internal_set_party_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.party_id_ = value;
}
inline void CMsgClientToGCPartyAction::set_party_id(uint64_t value) {
  _internal_set_party_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyAction.party_id)
}

// optional uint32 target_account_id = 2;
inline bool CMsgClientToGCPartyAction::_internal_has_target_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyAction::has_target_account_id() const {
  return _internal_has_target_account_id();
}
inline void CMsgClientToGCPartyAction::clear_target_account_id() {
  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCPartyAction::_internal_target_account_id() const {
  return _impl_.target_account_id_;
}
inline uint32_t CMsgClientToGCPartyAction::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyAction.target_account_id)
  return _internal_target_account_id();
}
inline void CMsgClientToGCPartyAction::_internal_set_target_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.target_account_id_ = value;
}
inline void CMsgClientToGCPartyAction::set_target_account_id(uint32_t value) {
  _internal_set_target_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyAction.target_account_id)
}

// optional .CMsgClientToGCPartyAction.EAction action_id = 3 [default = k_eKickUser];
inline bool CMsgClientToGCPartyAction::_internal_has_action_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyAction::has_action_id() const {
  return _internal_has_action_id();
}
inline void CMsgClientToGCPartyAction::clear_action_id() {
  _impl_.action_id_ = 1;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::_internal_action_id() const {
  return static_cast< ::CMsgClientToGCPartyAction_EAction >(_impl_.action_id_);
}
inline ::CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::action_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyAction.action_id)
  return _internal_action_id();
}
inline void CMsgClientToGCPartyAction::_internal_set_action_id(::CMsgClientToGCPartyAction_EAction value) {
  assert(::CMsgClientToGCPartyAction_EAction_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.action_id_ = value;
}
inline void CMsgClientToGCPartyAction::set_action_id(::CMsgClientToGCPartyAction_EAction value) {
  _internal_set_action_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyAction.action_id)
}

// optional uint64 uint_value = 4;
inline bool CMsgClientToGCPartyAction::_internal_has_uint_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyAction::has_uint_value() const {
  return _internal_has_uint_value();
}
inline void CMsgClientToGCPartyAction::clear_uint_value() {
  _impl_.uint_value_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint64_t CMsgClientToGCPartyAction::_internal_uint_value() const {
  return _impl_.uint_value_;
}
inline uint64_t CMsgClientToGCPartyAction::uint_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyAction.uint_value)
  return _internal_uint_value();
}
inline void CMsgClientToGCPartyAction::_internal_set_uint_value(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.uint_value_ = value;
}
inline void CMsgClientToGCPartyAction::set_uint_value(uint64_t value) {
  _internal_set_uint_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyAction.uint_value)
}

// optional bool bool_value = 5;
inline bool CMsgClientToGCPartyAction::_internal_has_bool_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyAction::has_bool_value() const {
  return _internal_has_bool_value();
}
inline void CMsgClientToGCPartyAction::clear_bool_value() {
  _impl_.bool_value_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgClientToGCPartyAction::_internal_bool_value() const {
  return _impl_.bool_value_;
}
inline bool CMsgClientToGCPartyAction::bool_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyAction.bool_value)
  return _internal_bool_value();
}
inline void CMsgClientToGCPartyAction::_internal_set_bool_value(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.bool_value_ = value;
}
inline void CMsgClientToGCPartyAction::set_bool_value(bool value) {
  _internal_set_bool_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyAction.bool_value)
}

// optional string str_value = 6;
inline bool CMsgClientToGCPartyAction::_internal_has_str_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyAction::has_str_value() const {
  return _internal_has_str_value();
}
inline void CMsgClientToGCPartyAction::clear_str_value() {
  _impl_.str_value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCPartyAction::str_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyAction.str_value)
  return _internal_str_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCPartyAction::set_str_value(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.str_value_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyAction.str_value)
}
inline std::string* CMsgClientToGCPartyAction::mutable_str_value() {
  std::string* _s = _internal_mutable_str_value();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCPartyAction.str_value)
  return _s;
}
inline const std::string& CMsgClientToGCPartyAction::_internal_str_value() const {
  return _impl_.str_value_.Get();
}
inline void CMsgClientToGCPartyAction::_internal_set_str_value(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.str_value_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCPartyAction::_internal_mutable_str_value() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.str_value_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCPartyAction::release_str_value() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCPartyAction.str_value)
  if (!_internal_has_str_value()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.str_value_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.str_value_.IsDefault()) {
    _impl_.str_value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCPartyAction::set_allocated_str_value(std::string* str_value) {
  if (str_value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.str_value_.SetAllocated(str_value, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.str_value_.IsDefault()) {
    _impl_.str_value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCPartyAction.str_value)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartyActionResponse

// optional .CMsgClientToGCPartyActionResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCPartyActionResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyActionResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCPartyActionResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCPartyActionResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyActionResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCPartyActionResponse::_internal_set_result(::CMsgClientToGCPartyActionResponse_EResponse value) {
  assert(::CMsgClientToGCPartyActionResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCPartyActionResponse::set_result(::CMsgClientToGCPartyActionResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyActionResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartySetMode

// optional fixed64 party_id = 1;
inline bool CMsgClientToGCPartySetMode::_internal_has_party_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCPartySetMode::has_party_id() const {
  return _internal_has_party_id();
}
inline void CMsgClientToGCPartySetMode::clear_party_id() {
  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgClientToGCPartySetMode::_internal_party_id() const {
  return _impl_.party_id_;
}
inline uint64_t CMsgClientToGCPartySetMode::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartySetMode.party_id)
  return _internal_party_id();
}
inline void CMsgClientToGCPartySetMode::_internal_set_party_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.party_id_ = value;
}
inline void CMsgClientToGCPartySetMode::set_party_id(uint64_t value) {
  _internal_set_party_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartySetMode.party_id)
}

// optional .ECitadelMatchMode match_mode = 2 [default = k_ECitadelMatchMode_Invalid];
inline bool CMsgClientToGCPartySetMode::_internal_has_match_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCPartySetMode::has_match_mode() const {
  return _internal_has_match_mode();
}
inline void CMsgClientToGCPartySetMode::clear_match_mode() {
  _impl_.match_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::ECitadelMatchMode CMsgClientToGCPartySetMode::_internal_match_mode() const {
  return static_cast< ::ECitadelMatchMode >(_impl_.match_mode_);
}
inline ::ECitadelMatchMode CMsgClientToGCPartySetMode::match_mode() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartySetMode.match_mode)
  return _internal_match_mode();
}
inline void CMsgClientToGCPartySetMode::_internal_set_match_mode(::ECitadelMatchMode value) {
  assert(::ECitadelMatchMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.match_mode_ = value;
}
inline void CMsgClientToGCPartySetMode::set_match_mode(::ECitadelMatchMode value) {
  _internal_set_match_mode(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartySetMode.match_mode)
}

// optional .ECitadelGameMode game_mode = 3 [default = k_ECitadelGameMode_Invalid];
inline bool CMsgClientToGCPartySetMode::_internal_has_game_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCPartySetMode::has_game_mode() const {
  return _internal_has_game_mode();
}
inline void CMsgClientToGCPartySetMode::clear_game_mode() {
  _impl_.game_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::ECitadelGameMode CMsgClientToGCPartySetMode::_internal_game_mode() const {
  return static_cast< ::ECitadelGameMode >(_impl_.game_mode_);
}
inline ::ECitadelGameMode CMsgClientToGCPartySetMode::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartySetMode.game_mode)
  return _internal_game_mode();
}
inline void CMsgClientToGCPartySetMode::_internal_set_game_mode(::ECitadelGameMode value) {
  assert(::ECitadelGameMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.game_mode_ = value;
}
inline void CMsgClientToGCPartySetMode::set_game_mode(::ECitadelGameMode value) {
  _internal_set_game_mode(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartySetMode.game_mode)
}

// optional .ECitadelBotDifficulty bot_difficulty = 4 [default = k_ECitadelBotDifficulty_None];
inline bool CMsgClientToGCPartySetMode::_internal_has_bot_difficulty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientToGCPartySetMode::has_bot_difficulty() const {
  return _internal_has_bot_difficulty();
}
inline void CMsgClientToGCPartySetMode::clear_bot_difficulty() {
  _impl_.bot_difficulty_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::ECitadelBotDifficulty CMsgClientToGCPartySetMode::_internal_bot_difficulty() const {
  return static_cast< ::ECitadelBotDifficulty >(_impl_.bot_difficulty_);
}
inline ::ECitadelBotDifficulty CMsgClientToGCPartySetMode::bot_difficulty() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartySetMode.bot_difficulty)
  return _internal_bot_difficulty();
}
inline void CMsgClientToGCPartySetMode::_internal_set_bot_difficulty(::ECitadelBotDifficulty value) {
  assert(::ECitadelBotDifficulty_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.bot_difficulty_ = value;
}
inline void CMsgClientToGCPartySetMode::set_bot_difficulty(::ECitadelBotDifficulty value) {
  _internal_set_bot_difficulty(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartySetMode.bot_difficulty)
}

// optional string dev_server_command = 5;
inline bool CMsgClientToGCPartySetMode::_internal_has_dev_server_command() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartySetMode::has_dev_server_command() const {
  return _internal_has_dev_server_command();
}
inline void CMsgClientToGCPartySetMode::clear_dev_server_command() {
  _impl_.dev_server_command_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCPartySetMode::dev_server_command() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartySetMode.dev_server_command)
  return _internal_dev_server_command();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCPartySetMode::set_dev_server_command(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.dev_server_command_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartySetMode.dev_server_command)
}
inline std::string* CMsgClientToGCPartySetMode::mutable_dev_server_command() {
  std::string* _s = _internal_mutable_dev_server_command();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCPartySetMode.dev_server_command)
  return _s;
}
inline const std::string& CMsgClientToGCPartySetMode::_internal_dev_server_command() const {
  return _impl_.dev_server_command_.Get();
}
inline void CMsgClientToGCPartySetMode::_internal_set_dev_server_command(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.dev_server_command_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCPartySetMode::_internal_mutable_dev_server_command() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.dev_server_command_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCPartySetMode::release_dev_server_command() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCPartySetMode.dev_server_command)
  if (!_internal_has_dev_server_command()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.dev_server_command_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.dev_server_command_.IsDefault()) {
    _impl_.dev_server_command_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCPartySetMode::set_allocated_dev_server_command(std::string* dev_server_command) {
  if (dev_server_command != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.dev_server_command_.SetAllocated(dev_server_command, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.dev_server_command_.IsDefault()) {
    _impl_.dev_server_command_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCPartySetMode.dev_server_command)
}

// optional .ECitadelRegionMode region_mode = 6 [default = k_ECitadelRegionMode_ROW];
inline bool CMsgClientToGCPartySetMode::_internal_has_region_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientToGCPartySetMode::has_region_mode() const {
  return _internal_has_region_mode();
}
inline void CMsgClientToGCPartySetMode::clear_region_mode() {
  _impl_.region_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::ECitadelRegionMode CMsgClientToGCPartySetMode::_internal_region_mode() const {
  return static_cast< ::ECitadelRegionMode >(_impl_.region_mode_);
}
inline ::ECitadelRegionMode CMsgClientToGCPartySetMode::region_mode() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartySetMode.region_mode)
  return _internal_region_mode();
}
inline void CMsgClientToGCPartySetMode::_internal_set_region_mode(::ECitadelRegionMode value) {
  assert(::ECitadelRegionMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.region_mode_ = value;
}
inline void CMsgClientToGCPartySetMode::set_region_mode(::ECitadelRegionMode value) {
  _internal_set_region_mode(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartySetMode.region_mode)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartySetModeResponse

// optional .CMsgClientToGCPartySetModeResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCPartySetModeResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartySetModeResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCPartySetModeResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCPartySetModeResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartySetModeResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCPartySetModeResponse::_internal_set_result(::CMsgClientToGCPartySetModeResponse_EResponse value) {
  assert(::CMsgClientToGCPartySetModeResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCPartySetModeResponse::set_result(::CMsgClientToGCPartySetModeResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartySetModeResponse.result)
}

// optional uint32 time_stamp = 2;
inline bool CMsgClientToGCPartySetModeResponse::_internal_has_time_stamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCPartySetModeResponse::has_time_stamp() const {
  return _internal_has_time_stamp();
}
inline void CMsgClientToGCPartySetModeResponse::clear_time_stamp() {
  _impl_.time_stamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCPartySetModeResponse::_internal_time_stamp() const {
  return _impl_.time_stamp_;
}
inline uint32_t CMsgClientToGCPartySetModeResponse::time_stamp() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartySetModeResponse.time_stamp)
  return _internal_time_stamp();
}
inline void CMsgClientToGCPartySetModeResponse::_internal_set_time_stamp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.time_stamp_ = value;
}
inline void CMsgClientToGCPartySetModeResponse::set_time_stamp(uint32_t value) {
  _internal_set_time_stamp(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartySetModeResponse.time_stamp)
}

// optional uint32 account_id = 3;
inline bool CMsgClientToGCPartySetModeResponse::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCPartySetModeResponse::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCPartySetModeResponse::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCPartySetModeResponse::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCPartySetModeResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartySetModeResponse.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCPartySetModeResponse::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCPartySetModeResponse::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartySetModeResponse.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartyStartMatch

// optional fixed64 party_id = 1;
inline bool CMsgClientToGCPartyStartMatch::_internal_has_party_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyStartMatch::has_party_id() const {
  return _internal_has_party_id();
}
inline void CMsgClientToGCPartyStartMatch::clear_party_id() {
  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCPartyStartMatch::_internal_party_id() const {
  return _impl_.party_id_;
}
inline uint64_t CMsgClientToGCPartyStartMatch::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyStartMatch.party_id)
  return _internal_party_id();
}
inline void CMsgClientToGCPartyStartMatch::_internal_set_party_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.party_id_ = value;
}
inline void CMsgClientToGCPartyStartMatch::set_party_id(uint64_t value) {
  _internal_set_party_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyStartMatch.party_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartyStartMatchResponse

// optional .CMsgClientToGCPartyStartMatchResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCPartyStartMatchResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyStartMatchResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCPartyStartMatchResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCPartyStartMatchResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyStartMatchResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCPartyStartMatchResponse::_internal_set_result(::CMsgClientToGCPartyStartMatchResponse_EResponse value) {
  assert(::CMsgClientToGCPartyStartMatchResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCPartyStartMatchResponse::set_result(::CMsgClientToGCPartyStartMatchResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyStartMatchResponse.result)
}

// optional uint32 account_id = 2;
inline bool CMsgClientToGCPartyStartMatchResponse::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyStartMatchResponse::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCPartyStartMatchResponse::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCPartyStartMatchResponse::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCPartyStartMatchResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyStartMatchResponse.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCPartyStartMatchResponse::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCPartyStartMatchResponse::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyStartMatchResponse.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartyInviteUser

// optional fixed64 party_id = 1;
inline bool CMsgClientToGCPartyInviteUser::_internal_has_party_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyInviteUser::has_party_id() const {
  return _internal_has_party_id();
}
inline void CMsgClientToGCPartyInviteUser::clear_party_id() {
  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCPartyInviteUser::_internal_party_id() const {
  return _impl_.party_id_;
}
inline uint64_t CMsgClientToGCPartyInviteUser::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyInviteUser.party_id)
  return _internal_party_id();
}
inline void CMsgClientToGCPartyInviteUser::_internal_set_party_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.party_id_ = value;
}
inline void CMsgClientToGCPartyInviteUser::set_party_id(uint64_t value) {
  _internal_set_party_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyInviteUser.party_id)
}

// optional uint32 invite_account_id = 2;
inline bool CMsgClientToGCPartyInviteUser::_internal_has_invite_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyInviteUser::has_invite_account_id() const {
  return _internal_has_invite_account_id();
}
inline void CMsgClientToGCPartyInviteUser::clear_invite_account_id() {
  _impl_.invite_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCPartyInviteUser::_internal_invite_account_id() const {
  return _impl_.invite_account_id_;
}
inline uint32_t CMsgClientToGCPartyInviteUser::invite_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyInviteUser.invite_account_id)
  return _internal_invite_account_id();
}
inline void CMsgClientToGCPartyInviteUser::_internal_set_invite_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.invite_account_id_ = value;
}
inline void CMsgClientToGCPartyInviteUser::set_invite_account_id(uint32_t value) {
  _internal_set_invite_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyInviteUser.invite_account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartyInviteUserResponse

// optional .CMsgClientToGCPartyInviteUserResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCPartyInviteUserResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyInviteUserResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCPartyInviteUserResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCPartyInviteUserResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyInviteUserResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCPartyInviteUserResponse::_internal_set_result(::CMsgClientToGCPartyInviteUserResponse_EResponse value) {
  assert(::CMsgClientToGCPartyInviteUserResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCPartyInviteUserResponse::set_result(::CMsgClientToGCPartyInviteUserResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyInviteUserResponse.result)
}

// optional bool user_online = 2;
inline bool CMsgClientToGCPartyInviteUserResponse::_internal_has_user_online() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyInviteUserResponse::has_user_online() const {
  return _internal_has_user_online();
}
inline void CMsgClientToGCPartyInviteUserResponse::clear_user_online() {
  _impl_.user_online_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgClientToGCPartyInviteUserResponse::_internal_user_online() const {
  return _impl_.user_online_;
}
inline bool CMsgClientToGCPartyInviteUserResponse::user_online() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyInviteUserResponse.user_online)
  return _internal_user_online();
}
inline void CMsgClientToGCPartyInviteUserResponse::_internal_set_user_online(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.user_online_ = value;
}
inline void CMsgClientToGCPartyInviteUserResponse::set_user_online(bool value) {
  _internal_set_user_online(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyInviteUserResponse.user_online)
}

// -------------------------------------------------------------------

// CMsgGCToClientPartyEvent

// optional fixed64 party_id = 1;
inline bool CMsgGCToClientPartyEvent::_internal_has_party_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToClientPartyEvent::has_party_id() const {
  return _internal_has_party_id();
}
inline void CMsgGCToClientPartyEvent::clear_party_id() {
  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CMsgGCToClientPartyEvent::_internal_party_id() const {
  return _impl_.party_id_;
}
inline uint64_t CMsgGCToClientPartyEvent::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPartyEvent.party_id)
  return _internal_party_id();
}
inline void CMsgGCToClientPartyEvent::_internal_set_party_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.party_id_ = value;
}
inline void CMsgGCToClientPartyEvent::set_party_id(uint64_t value) {
  _internal_set_party_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPartyEvent.party_id)
}

// optional .CMsgGCToClientPartyEvent.EEvent event = 2 [default = k_ePlayerKicked];
inline bool CMsgGCToClientPartyEvent::_internal_has_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgGCToClientPartyEvent::has_event() const {
  return _internal_has_event();
}
inline void CMsgGCToClientPartyEvent::clear_event() {
  _impl_.event_ = 1;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::_internal_event() const {
  return static_cast< ::CMsgGCToClientPartyEvent_EEvent >(_impl_.event_);
}
inline ::CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::event() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPartyEvent.event)
  return _internal_event();
}
inline void CMsgGCToClientPartyEvent::_internal_set_event(::CMsgGCToClientPartyEvent_EEvent value) {
  assert(::CMsgGCToClientPartyEvent_EEvent_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.event_ = value;
}
inline void CMsgGCToClientPartyEvent::set_event(::CMsgGCToClientPartyEvent_EEvent value) {
  _internal_set_event(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPartyEvent.event)
}

// optional uint32 initiator_account_id = 3;
inline bool CMsgGCToClientPartyEvent::_internal_has_initiator_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCToClientPartyEvent::has_initiator_account_id() const {
  return _internal_has_initiator_account_id();
}
inline void CMsgGCToClientPartyEvent::clear_initiator_account_id() {
  _impl_.initiator_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgGCToClientPartyEvent::_internal_initiator_account_id() const {
  return _impl_.initiator_account_id_;
}
inline uint32_t CMsgGCToClientPartyEvent::initiator_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPartyEvent.initiator_account_id)
  return _internal_initiator_account_id();
}
inline void CMsgGCToClientPartyEvent::_internal_set_initiator_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.initiator_account_id_ = value;
}
inline void CMsgGCToClientPartyEvent::set_initiator_account_id(uint32_t value) {
  _internal_set_initiator_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPartyEvent.initiator_account_id)
}

// optional uint32 target_account_id = 4;
inline bool CMsgGCToClientPartyEvent::_internal_has_target_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGCToClientPartyEvent::has_target_account_id() const {
  return _internal_has_target_account_id();
}
inline void CMsgGCToClientPartyEvent::clear_target_account_id() {
  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgGCToClientPartyEvent::_internal_target_account_id() const {
  return _impl_.target_account_id_;
}
inline uint32_t CMsgGCToClientPartyEvent::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPartyEvent.target_account_id)
  return _internal_target_account_id();
}
inline void CMsgGCToClientPartyEvent::_internal_set_target_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.target_account_id_ = value;
}
inline void CMsgGCToClientPartyEvent::set_target_account_id(uint32_t value) {
  _internal_set_target_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPartyEvent.target_account_id)
}

// optional bytes bytes_data = 5;
inline bool CMsgGCToClientPartyEvent::_internal_has_bytes_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientPartyEvent::has_bytes_data() const {
  return _internal_has_bytes_data();
}
inline void CMsgGCToClientPartyEvent::clear_bytes_data() {
  _impl_.bytes_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToClientPartyEvent::bytes_data() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPartyEvent.bytes_data)
  return _internal_bytes_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToClientPartyEvent::set_bytes_data(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.bytes_data_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToClientPartyEvent.bytes_data)
}
inline std::string* CMsgGCToClientPartyEvent::mutable_bytes_data() {
  std::string* _s = _internal_mutable_bytes_data();
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientPartyEvent.bytes_data)
  return _s;
}
inline const std::string& CMsgGCToClientPartyEvent::_internal_bytes_data() const {
  return _impl_.bytes_data_.Get();
}
inline void CMsgGCToClientPartyEvent::_internal_set_bytes_data(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.bytes_data_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToClientPartyEvent::_internal_mutable_bytes_data() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.bytes_data_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToClientPartyEvent::release_bytes_data() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientPartyEvent.bytes_data)
  if (!_internal_has_bytes_data()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.bytes_data_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.bytes_data_.IsDefault()) {
    _impl_.bytes_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToClientPartyEvent::set_allocated_bytes_data(std::string* bytes_data) {
  if (bytes_data != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.bytes_data_.SetAllocated(bytes_data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.bytes_data_.IsDefault()) {
    _impl_.bytes_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientPartyEvent.bytes_data)
}

// optional string str_data = 6;
inline bool CMsgGCToClientPartyEvent::_internal_has_str_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientPartyEvent::has_str_data() const {
  return _internal_has_str_data();
}
inline void CMsgGCToClientPartyEvent::clear_str_data() {
  _impl_.str_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgGCToClientPartyEvent::str_data() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPartyEvent.str_data)
  return _internal_str_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToClientPartyEvent::set_str_data(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.str_data_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToClientPartyEvent.str_data)
}
inline std::string* CMsgGCToClientPartyEvent::mutable_str_data() {
  std::string* _s = _internal_mutable_str_data();
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientPartyEvent.str_data)
  return _s;
}
inline const std::string& CMsgGCToClientPartyEvent::_internal_str_data() const {
  return _impl_.str_data_.Get();
}
inline void CMsgGCToClientPartyEvent::_internal_set_str_data(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.str_data_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToClientPartyEvent::_internal_mutable_str_data() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.str_data_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToClientPartyEvent::release_str_data() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientPartyEvent.str_data)
  if (!_internal_has_str_data()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.str_data_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.str_data_.IsDefault()) {
    _impl_.str_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToClientPartyEvent::set_allocated_str_data(std::string* str_data) {
  if (str_data != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.str_data_.SetAllocated(str_data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.str_data_.IsDefault()) {
    _impl_.str_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientPartyEvent.str_data)
}

// optional uint64 uint_data = 7;
inline bool CMsgGCToClientPartyEvent::_internal_has_uint_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgGCToClientPartyEvent::has_uint_data() const {
  return _internal_has_uint_data();
}
inline void CMsgGCToClientPartyEvent::clear_uint_data() {
  _impl_.uint_data_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint64_t CMsgGCToClientPartyEvent::_internal_uint_data() const {
  return _impl_.uint_data_;
}
inline uint64_t CMsgGCToClientPartyEvent::uint_data() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPartyEvent.uint_data)
  return _internal_uint_data();
}
inline void CMsgGCToClientPartyEvent::_internal_set_uint_data(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.uint_data_ = value;
}
inline void CMsgGCToClientPartyEvent::set_uint_data(uint64_t value) {
  _internal_set_uint_data(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPartyEvent.uint_data)
}

// -------------------------------------------------------------------

// CMsgGCToClientCanRejoinParty

// optional fixed64 party_id = 1;
inline bool CMsgGCToClientCanRejoinParty::_internal_has_party_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientCanRejoinParty::has_party_id() const {
  return _internal_has_party_id();
}
inline void CMsgGCToClientCanRejoinParty::clear_party_id() {
  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgGCToClientCanRejoinParty::_internal_party_id() const {
  return _impl_.party_id_;
}
inline uint64_t CMsgGCToClientCanRejoinParty::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCanRejoinParty.party_id)
  return _internal_party_id();
}
inline void CMsgGCToClientCanRejoinParty::_internal_set_party_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.party_id_ = value;
}
inline void CMsgGCToClientCanRejoinParty::set_party_id(uint64_t value) {
  _internal_set_party_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientCanRejoinParty.party_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartyJoinViaCode

// optional uint64 join_code = 1;
inline bool CMsgClientToGCPartyJoinViaCode::_internal_has_join_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyJoinViaCode::has_join_code() const {
  return _internal_has_join_code();
}
inline void CMsgClientToGCPartyJoinViaCode::clear_join_code() {
  _impl_.join_code_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgClientToGCPartyJoinViaCode::_internal_join_code() const {
  return _impl_.join_code_;
}
inline uint64_t CMsgClientToGCPartyJoinViaCode::join_code() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyJoinViaCode.join_code)
  return _internal_join_code();
}
inline void CMsgClientToGCPartyJoinViaCode::_internal_set_join_code(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.join_code_ = value;
}
inline void CMsgClientToGCPartyJoinViaCode::set_join_code(uint64_t value) {
  _internal_set_join_code(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyJoinViaCode.join_code)
}

// optional .CMsgPartyMMInfo party_mm_info = 2;
inline bool CMsgClientToGCPartyJoinViaCode::_internal_has_party_mm_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.party_mm_info_ != nullptr);
  return value;
}
inline bool CMsgClientToGCPartyJoinViaCode::has_party_mm_info() const {
  return _internal_has_party_mm_info();
}
inline void CMsgClientToGCPartyJoinViaCode::clear_party_mm_info() {
  if (_impl_.party_mm_info_ != nullptr) _impl_.party_mm_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgPartyMMInfo& CMsgClientToGCPartyJoinViaCode::_internal_party_mm_info() const {
  const ::CMsgPartyMMInfo* p = _impl_.party_mm_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgPartyMMInfo&>(
      ::_CMsgPartyMMInfo_default_instance_);
}
inline const ::CMsgPartyMMInfo& CMsgClientToGCPartyJoinViaCode::party_mm_info() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyJoinViaCode.party_mm_info)
  return _internal_party_mm_info();
}
inline void CMsgClientToGCPartyJoinViaCode::unsafe_arena_set_allocated_party_mm_info(
    ::CMsgPartyMMInfo* party_mm_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.party_mm_info_);
  }
  _impl_.party_mm_info_ = party_mm_info;
  if (party_mm_info) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCPartyJoinViaCode.party_mm_info)
}
inline ::CMsgPartyMMInfo* CMsgClientToGCPartyJoinViaCode::release_party_mm_info() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgPartyMMInfo* temp = _impl_.party_mm_info_;
  _impl_.party_mm_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgPartyMMInfo* CMsgClientToGCPartyJoinViaCode::unsafe_arena_release_party_mm_info() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCPartyJoinViaCode.party_mm_info)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgPartyMMInfo* temp = _impl_.party_mm_info_;
  _impl_.party_mm_info_ = nullptr;
  return temp;
}
inline ::CMsgPartyMMInfo* CMsgClientToGCPartyJoinViaCode::_internal_mutable_party_mm_info() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.party_mm_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgPartyMMInfo>(GetArenaForAllocation());
    _impl_.party_mm_info_ = p;
  }
  return _impl_.party_mm_info_;
}
inline ::CMsgPartyMMInfo* CMsgClientToGCPartyJoinViaCode::mutable_party_mm_info() {
  ::CMsgPartyMMInfo* _msg = _internal_mutable_party_mm_info();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCPartyJoinViaCode.party_mm_info)
  return _msg;
}
inline void CMsgClientToGCPartyJoinViaCode::set_allocated_party_mm_info(::CMsgPartyMMInfo* party_mm_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.party_mm_info_;
  }
  if (party_mm_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(party_mm_info);
    if (message_arena != submessage_arena) {
      party_mm_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, party_mm_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.party_mm_info_ = party_mm_info;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCPartyJoinViaCode.party_mm_info)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartyJoinViaCodeResponse

// optional .CMsgClientToGCPartyJoinResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCPartyJoinViaCodeResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyJoinViaCodeResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCPartyJoinViaCodeResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinViaCodeResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCPartyJoinResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinViaCodeResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyJoinViaCodeResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCPartyJoinViaCodeResponse::_internal_set_result(::CMsgClientToGCPartyJoinResponse_EResponse value) {
  assert(::CMsgClientToGCPartyJoinResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCPartyJoinViaCodeResponse::set_result(::CMsgClientToGCPartyJoinResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyJoinViaCodeResponse.result)
}

// optional fixed64 party_id = 2;
inline bool CMsgClientToGCPartyJoinViaCodeResponse::_internal_has_party_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartyJoinViaCodeResponse::has_party_id() const {
  return _internal_has_party_id();
}
inline void CMsgClientToGCPartyJoinViaCodeResponse::clear_party_id() {
  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCPartyJoinViaCodeResponse::_internal_party_id() const {
  return _impl_.party_id_;
}
inline uint64_t CMsgClientToGCPartyJoinViaCodeResponse::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartyJoinViaCodeResponse.party_id)
  return _internal_party_id();
}
inline void CMsgClientToGCPartyJoinViaCodeResponse::_internal_set_party_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.party_id_ = value;
}
inline void CMsgClientToGCPartyJoinViaCodeResponse::set_party_id(uint64_t value) {
  _internal_set_party_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartyJoinViaCodeResponse.party_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartySetReadyState

// optional fixed64 party_id = 1;
inline bool CMsgClientToGCPartySetReadyState::_internal_has_party_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCPartySetReadyState::has_party_id() const {
  return _internal_has_party_id();
}
inline void CMsgClientToGCPartySetReadyState::clear_party_id() {
  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgClientToGCPartySetReadyState::_internal_party_id() const {
  return _impl_.party_id_;
}
inline uint64_t CMsgClientToGCPartySetReadyState::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartySetReadyState.party_id)
  return _internal_party_id();
}
inline void CMsgClientToGCPartySetReadyState::_internal_set_party_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.party_id_ = value;
}
inline void CMsgClientToGCPartySetReadyState::set_party_id(uint64_t value) {
  _internal_set_party_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartySetReadyState.party_id)
}

// optional bool ready_state = 2;
inline bool CMsgClientToGCPartySetReadyState::_internal_has_ready_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCPartySetReadyState::has_ready_state() const {
  return _internal_has_ready_state();
}
inline void CMsgClientToGCPartySetReadyState::clear_ready_state() {
  _impl_.ready_state_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgClientToGCPartySetReadyState::_internal_ready_state() const {
  return _impl_.ready_state_;
}
inline bool CMsgClientToGCPartySetReadyState::ready_state() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartySetReadyState.ready_state)
  return _internal_ready_state();
}
inline void CMsgClientToGCPartySetReadyState::_internal_set_ready_state(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.ready_state_ = value;
}
inline void CMsgClientToGCPartySetReadyState::set_ready_state(bool value) {
  _internal_set_ready_state(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartySetReadyState.ready_state)
}

// optional .CMsgHeroSelectionMatchInfo hero_roster = 3;
inline bool CMsgClientToGCPartySetReadyState::_internal_has_hero_roster() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hero_roster_ != nullptr);
  return value;
}
inline bool CMsgClientToGCPartySetReadyState::has_hero_roster() const {
  return _internal_has_hero_roster();
}
inline const ::CMsgHeroSelectionMatchInfo& CMsgClientToGCPartySetReadyState::_internal_hero_roster() const {
  const ::CMsgHeroSelectionMatchInfo* p = _impl_.hero_roster_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgHeroSelectionMatchInfo&>(
      ::_CMsgHeroSelectionMatchInfo_default_instance_);
}
inline const ::CMsgHeroSelectionMatchInfo& CMsgClientToGCPartySetReadyState::hero_roster() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartySetReadyState.hero_roster)
  return _internal_hero_roster();
}
inline void CMsgClientToGCPartySetReadyState::unsafe_arena_set_allocated_hero_roster(
    ::CMsgHeroSelectionMatchInfo* hero_roster) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hero_roster_);
  }
  _impl_.hero_roster_ = hero_roster;
  if (hero_roster) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCPartySetReadyState.hero_roster)
}
inline ::CMsgHeroSelectionMatchInfo* CMsgClientToGCPartySetReadyState::release_hero_roster() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgHeroSelectionMatchInfo* temp = _impl_.hero_roster_;
  _impl_.hero_roster_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgHeroSelectionMatchInfo* CMsgClientToGCPartySetReadyState::unsafe_arena_release_hero_roster() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCPartySetReadyState.hero_roster)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgHeroSelectionMatchInfo* temp = _impl_.hero_roster_;
  _impl_.hero_roster_ = nullptr;
  return temp;
}
inline ::CMsgHeroSelectionMatchInfo* CMsgClientToGCPartySetReadyState::_internal_mutable_hero_roster() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.hero_roster_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgHeroSelectionMatchInfo>(GetArenaForAllocation());
    _impl_.hero_roster_ = p;
  }
  return _impl_.hero_roster_;
}
inline ::CMsgHeroSelectionMatchInfo* CMsgClientToGCPartySetReadyState::mutable_hero_roster() {
  ::CMsgHeroSelectionMatchInfo* _msg = _internal_mutable_hero_roster();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCPartySetReadyState.hero_roster)
  return _msg;
}
inline void CMsgClientToGCPartySetReadyState::set_allocated_hero_roster(::CMsgHeroSelectionMatchInfo* hero_roster) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hero_roster_);
  }
  if (hero_roster) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hero_roster));
    if (message_arena != submessage_arena) {
      hero_roster = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hero_roster, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.hero_roster_ = hero_roster;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCPartySetReadyState.hero_roster)
}

// -------------------------------------------------------------------

// CMsgClientToGCPartySetReadyStateResponse

// optional .CMsgClientToGCPartySetReadyStateResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCPartySetReadyStateResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCPartySetReadyStateResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCPartySetReadyStateResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCPartySetReadyStateResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCPartySetReadyStateResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCPartySetReadyStateResponse::_internal_set_result(::CMsgClientToGCPartySetReadyStateResponse_EResponse value) {
  assert(::CMsgClientToGCPartySetReadyStateResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCPartySetReadyStateResponse::set_result(::CMsgClientToGCPartySetReadyStateResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCPartySetReadyStateResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCDevSetMMBias

// optional uint32 account_id = 1;
inline bool CMsgClientToGCDevSetMMBias::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCDevSetMMBias::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCDevSetMMBias::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCDevSetMMBias::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCDevSetMMBias::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDevSetMMBias.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCDevSetMMBias::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCDevSetMMBias::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDevSetMMBias.account_id)
}

// optional uint32 value = 2;
inline bool CMsgClientToGCDevSetMMBias::_internal_has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCDevSetMMBias::has_value() const {
  return _internal_has_value();
}
inline void CMsgClientToGCDevSetMMBias::clear_value() {
  _impl_.value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCDevSetMMBias::_internal_value() const {
  return _impl_.value_;
}
inline uint32_t CMsgClientToGCDevSetMMBias::value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDevSetMMBias.value)
  return _internal_value();
}
inline void CMsgClientToGCDevSetMMBias::_internal_set_value(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.value_ = value;
}
inline void CMsgClientToGCDevSetMMBias::set_value(uint32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDevSetMMBias.value)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetMatchHistory

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetMatchHistory::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistory::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCGetMatchHistory::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCGetMatchHistory::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCGetMatchHistory::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistory.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCGetMatchHistory::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCGetMatchHistory::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistory.account_id)
}

// optional uint64 continue_cursor = 2;
inline bool CMsgClientToGCGetMatchHistory::_internal_has_continue_cursor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistory::has_continue_cursor() const {
  return _internal_has_continue_cursor();
}
inline void CMsgClientToGCGetMatchHistory::clear_continue_cursor() {
  _impl_.continue_cursor_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCGetMatchHistory::_internal_continue_cursor() const {
  return _impl_.continue_cursor_;
}
inline uint64_t CMsgClientToGCGetMatchHistory::continue_cursor() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistory.continue_cursor)
  return _internal_continue_cursor();
}
inline void CMsgClientToGCGetMatchHistory::_internal_set_continue_cursor(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.continue_cursor_ = value;
}
inline void CMsgClientToGCGetMatchHistory::set_continue_cursor(uint64_t value) {
  _internal_set_continue_cursor(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistory.continue_cursor)
}

// optional uint32 ranked_interval = 3;
inline bool CMsgClientToGCGetMatchHistory::_internal_has_ranked_interval() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistory::has_ranked_interval() const {
  return _internal_has_ranked_interval();
}
inline void CMsgClientToGCGetMatchHistory::clear_ranked_interval() {
  _impl_.ranked_interval_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCGetMatchHistory::_internal_ranked_interval() const {
  return _impl_.ranked_interval_;
}
inline uint32_t CMsgClientToGCGetMatchHistory::ranked_interval() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistory.ranked_interval)
  return _internal_ranked_interval();
}
inline void CMsgClientToGCGetMatchHistory::_internal_set_ranked_interval(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.ranked_interval_ = value;
}
inline void CMsgClientToGCGetMatchHistory::set_ranked_interval(uint32_t value) {
  _internal_set_ranked_interval(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistory.ranked_interval)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetMatchHistoryResponse_Match

// optional uint64 match_id = 1;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CMsgClientToGCGetMatchHistoryResponse_Match::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.match_id)
  return _internal_match_id();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.match_id_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.match_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.hero_id)
  return _internal_hero_id();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.hero_id_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.hero_id)
}

// optional uint32 match_duration_s = 3;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_match_duration_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_match_duration_s() const {
  return _internal_has_match_duration_s();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_match_duration_s() {
  _impl_.match_duration_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_match_duration_s() const {
  return _impl_.match_duration_s_;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::match_duration_s() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.match_duration_s)
  return _internal_match_duration_s();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_match_duration_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.match_duration_s_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_match_duration_s(uint32_t value) {
  _internal_set_match_duration_s(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.match_duration_s)
}

// optional uint32 start_time = 4;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_start_time() const {
  return _internal_has_start_time();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_start_time() {
  _impl_.start_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_start_time() const {
  return _impl_.start_time_;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.start_time)
  return _internal_start_time();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_start_time(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.start_time_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_start_time(uint32_t value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.start_time)
}

// optional uint32 match_result = 5;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_match_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_match_result() const {
  return _internal_has_match_result();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_match_result() {
  _impl_.match_result_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_match_result() const {
  return _impl_.match_result_;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::match_result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.match_result)
  return _internal_match_result();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_match_result(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.match_result_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_match_result(uint32_t value) {
  _internal_set_match_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.match_result)
}

// optional .ECitadelLobbyTeam player_team = 6 [default = k_ECitadelLobbyTeam_Team0];
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_player_team() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_player_team() const {
  return _internal_has_player_team();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_player_team() {
  _impl_.player_team_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::ECitadelLobbyTeam CMsgClientToGCGetMatchHistoryResponse_Match::_internal_player_team() const {
  return static_cast< ::ECitadelLobbyTeam >(_impl_.player_team_);
}
inline ::ECitadelLobbyTeam CMsgClientToGCGetMatchHistoryResponse_Match::player_team() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.player_team)
  return _internal_player_team();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_player_team(::ECitadelLobbyTeam value) {
  assert(::ECitadelLobbyTeam_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.player_team_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_player_team(::ECitadelLobbyTeam value) {
  _internal_set_player_team(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.player_team)
}

// optional uint32 player_kills = 7;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_player_kills() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_player_kills() const {
  return _internal_has_player_kills();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_player_kills() {
  _impl_.player_kills_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_player_kills() const {
  return _impl_.player_kills_;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::player_kills() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.player_kills)
  return _internal_player_kills();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_player_kills(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.player_kills_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_player_kills(uint32_t value) {
  _internal_set_player_kills(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.player_kills)
}

// optional uint32 player_deaths = 8;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_player_deaths() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_player_deaths() const {
  return _internal_has_player_deaths();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_player_deaths() {
  _impl_.player_deaths_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_player_deaths() const {
  return _impl_.player_deaths_;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::player_deaths() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.player_deaths)
  return _internal_player_deaths();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_player_deaths(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.player_deaths_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_player_deaths(uint32_t value) {
  _internal_set_player_deaths(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.player_deaths)
}

// optional uint32 player_assists = 9;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_player_assists() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_player_assists() const {
  return _internal_has_player_assists();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_player_assists() {
  _impl_.player_assists_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_player_assists() const {
  return _impl_.player_assists_;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::player_assists() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.player_assists)
  return _internal_player_assists();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_player_assists(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.player_assists_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_player_assists(uint32_t value) {
  _internal_set_player_assists(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.player_assists)
}

// optional uint32 last_hits = 11;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_last_hits() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_last_hits() const {
  return _internal_has_last_hits();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_last_hits() {
  _impl_.last_hits_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_last_hits() const {
  return _impl_.last_hits_;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::last_hits() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.last_hits)
  return _internal_last_hits();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_last_hits(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.last_hits_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_last_hits(uint32_t value) {
  _internal_set_last_hits(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.last_hits)
}

// optional uint32 denies = 12;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_denies() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_denies() const {
  return _internal_has_denies();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_denies() {
  _impl_.denies_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_denies() const {
  return _impl_.denies_;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::denies() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.denies)
  return _internal_denies();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_denies(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.denies_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_denies(uint32_t value) {
  _internal_set_denies(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.denies)
}

// optional uint32 hero_level = 13;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_hero_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_hero_level() const {
  return _internal_has_hero_level();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_hero_level() {
  _impl_.hero_level_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_hero_level() const {
  return _impl_.hero_level_;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::hero_level() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.hero_level)
  return _internal_hero_level();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_hero_level(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.hero_level_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_hero_level(uint32_t value) {
  _internal_set_hero_level(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.hero_level)
}

// optional uint32 net_worth = 14;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_net_worth() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_net_worth() const {
  return _internal_has_net_worth();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_net_worth() {
  _impl_.net_worth_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_net_worth() const {
  return _impl_.net_worth_;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::net_worth() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.net_worth)
  return _internal_net_worth();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_net_worth(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.net_worth_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_net_worth(uint32_t value) {
  _internal_set_net_worth(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.net_worth)
}

// optional uint64 objectives_mask_team0 = 15;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_objectives_mask_team0() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_objectives_mask_team0() const {
  return _internal_has_objectives_mask_team0();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_objectives_mask_team0() {
  _impl_.objectives_mask_team0_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline uint64_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_objectives_mask_team0() const {
  return _impl_.objectives_mask_team0_;
}
inline uint64_t CMsgClientToGCGetMatchHistoryResponse_Match::objectives_mask_team0() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.objectives_mask_team0)
  return _internal_objectives_mask_team0();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_objectives_mask_team0(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.objectives_mask_team0_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_objectives_mask_team0(uint64_t value) {
  _internal_set_objectives_mask_team0(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.objectives_mask_team0)
}

// optional uint64 objectives_mask_team1 = 16;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_objectives_mask_team1() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_objectives_mask_team1() const {
  return _internal_has_objectives_mask_team1();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_objectives_mask_team1() {
  _impl_.objectives_mask_team1_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline uint64_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_objectives_mask_team1() const {
  return _impl_.objectives_mask_team1_;
}
inline uint64_t CMsgClientToGCGetMatchHistoryResponse_Match::objectives_mask_team1() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.objectives_mask_team1)
  return _internal_objectives_mask_team1();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_objectives_mask_team1(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.objectives_mask_team1_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_objectives_mask_team1(uint64_t value) {
  _internal_set_objectives_mask_team1(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.objectives_mask_team1)
}

// optional bool team_abandoned = 17;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_team_abandoned() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_team_abandoned() const {
  return _internal_has_team_abandoned();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_team_abandoned() {
  _impl_.team_abandoned_ = false;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_team_abandoned() const {
  return _impl_.team_abandoned_;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::team_abandoned() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.team_abandoned)
  return _internal_team_abandoned();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_team_abandoned(bool value) {
  _impl_._has_bits_[0] |= 0x00020000u;
  _impl_.team_abandoned_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_team_abandoned(bool value) {
  _internal_set_team_abandoned(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.team_abandoned)
}

// optional uint32 abandoned_time_s = 18;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_abandoned_time_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_abandoned_time_s() const {
  return _internal_has_abandoned_time_s();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_abandoned_time_s() {
  _impl_.abandoned_time_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::_internal_abandoned_time_s() const {
  return _impl_.abandoned_time_s_;
}
inline uint32_t CMsgClientToGCGetMatchHistoryResponse_Match::abandoned_time_s() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.abandoned_time_s)
  return _internal_abandoned_time_s();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_abandoned_time_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.abandoned_time_s_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_abandoned_time_s(uint32_t value) {
  _internal_set_abandoned_time_s(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.abandoned_time_s)
}

// optional .ECitadelMatchMode match_mode = 19 [default = k_ECitadelMatchMode_Invalid];
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_match_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_match_mode() const {
  return _internal_has_match_mode();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_match_mode() {
  _impl_.match_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::ECitadelMatchMode CMsgClientToGCGetMatchHistoryResponse_Match::_internal_match_mode() const {
  return static_cast< ::ECitadelMatchMode >(_impl_.match_mode_);
}
inline ::ECitadelMatchMode CMsgClientToGCGetMatchHistoryResponse_Match::match_mode() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.match_mode)
  return _internal_match_mode();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_match_mode(::ECitadelMatchMode value) {
  assert(::ECitadelMatchMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00010000u;
  _impl_.match_mode_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_match_mode(::ECitadelMatchMode value) {
  _internal_set_match_mode(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.match_mode)
}

// optional .ECitadelGameMode game_mode = 20 [default = k_ECitadelGameMode_Invalid];
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_game_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_game_mode() const {
  return _internal_has_game_mode();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_game_mode() {
  _impl_.game_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline ::ECitadelGameMode CMsgClientToGCGetMatchHistoryResponse_Match::_internal_game_mode() const {
  return static_cast< ::ECitadelGameMode >(_impl_.game_mode_);
}
inline ::ECitadelGameMode CMsgClientToGCGetMatchHistoryResponse_Match::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.game_mode)
  return _internal_game_mode();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_game_mode(::ECitadelGameMode value) {
  assert(::ECitadelGameMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00080000u;
  _impl_.game_mode_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_game_mode(::ECitadelGameMode value) {
  _internal_set_game_mode(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.game_mode)
}

// optional bool not_scored = 21;
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_has_not_scored() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::has_not_scored() const {
  return _internal_has_not_scored();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::clear_not_scored() {
  _impl_.not_scored_ = false;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::_internal_not_scored() const {
  return _impl_.not_scored_;
}
inline bool CMsgClientToGCGetMatchHistoryResponse_Match::not_scored() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.Match.not_scored)
  return _internal_not_scored();
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::_internal_set_not_scored(bool value) {
  _impl_._has_bits_[0] |= 0x00040000u;
  _impl_.not_scored_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse_Match::set_not_scored(bool value) {
  _internal_set_not_scored(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.Match.not_scored)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetMatchHistoryResponse

// optional .CMsgClientToGCGetMatchHistoryResponse.EResult result = 1 [default = k_eResult_InternalError];
inline bool CMsgClientToGCGetMatchHistoryResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCGetMatchHistoryResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCGetMatchHistoryResponse_EResult CMsgClientToGCGetMatchHistoryResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCGetMatchHistoryResponse_EResult >(_impl_.result_);
}
inline ::CMsgClientToGCGetMatchHistoryResponse_EResult CMsgClientToGCGetMatchHistoryResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCGetMatchHistoryResponse::_internal_set_result(::CMsgClientToGCGetMatchHistoryResponse_EResult value) {
  assert(::CMsgClientToGCGetMatchHistoryResponse_EResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse::set_result(::CMsgClientToGCGetMatchHistoryResponse_EResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.result)
}

// optional uint64 continue_cursor = 2;
inline bool CMsgClientToGCGetMatchHistoryResponse::_internal_has_continue_cursor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchHistoryResponse::has_continue_cursor() const {
  return _internal_has_continue_cursor();
}
inline void CMsgClientToGCGetMatchHistoryResponse::clear_continue_cursor() {
  _impl_.continue_cursor_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCGetMatchHistoryResponse::_internal_continue_cursor() const {
  return _impl_.continue_cursor_;
}
inline uint64_t CMsgClientToGCGetMatchHistoryResponse::continue_cursor() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.continue_cursor)
  return _internal_continue_cursor();
}
inline void CMsgClientToGCGetMatchHistoryResponse::_internal_set_continue_cursor(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.continue_cursor_ = value;
}
inline void CMsgClientToGCGetMatchHistoryResponse::set_continue_cursor(uint64_t value) {
  _internal_set_continue_cursor(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchHistoryResponse.continue_cursor)
}

// repeated .CMsgClientToGCGetMatchHistoryResponse.Match matches = 3;
inline int CMsgClientToGCGetMatchHistoryResponse::_internal_matches_size() const {
  return _impl_.matches_.size();
}
inline int CMsgClientToGCGetMatchHistoryResponse::matches_size() const {
  return _internal_matches_size();
}
inline void CMsgClientToGCGetMatchHistoryResponse::clear_matches() {
  _impl_.matches_.Clear();
}
inline ::CMsgClientToGCGetMatchHistoryResponse_Match* CMsgClientToGCGetMatchHistoryResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetMatchHistoryResponse.matches)
  return _impl_.matches_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetMatchHistoryResponse_Match >*
CMsgClientToGCGetMatchHistoryResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetMatchHistoryResponse.matches)
  return &_impl_.matches_;
}
inline const ::CMsgClientToGCGetMatchHistoryResponse_Match& CMsgClientToGCGetMatchHistoryResponse::_internal_matches(int index) const {
  return _impl_.matches_.Get(index);
}
inline const ::CMsgClientToGCGetMatchHistoryResponse_Match& CMsgClientToGCGetMatchHistoryResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchHistoryResponse.matches)
  return _internal_matches(index);
}
inline ::CMsgClientToGCGetMatchHistoryResponse_Match* CMsgClientToGCGetMatchHistoryResponse::_internal_add_matches() {
  return _impl_.matches_.Add();
}
inline ::CMsgClientToGCGetMatchHistoryResponse_Match* CMsgClientToGCGetMatchHistoryResponse::add_matches() {
  ::CMsgClientToGCGetMatchHistoryResponse_Match* _add = _internal_add_matches();
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetMatchHistoryResponse.matches)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetMatchHistoryResponse_Match >&
CMsgClientToGCGetMatchHistoryResponse::matches() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetMatchHistoryResponse.matches)
  return _impl_.matches_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSpectateUser

// optional uint32 spectate_account_id = 1;
inline bool CMsgClientToGCSpectateUser::_internal_has_spectate_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSpectateUser::has_spectate_account_id() const {
  return _internal_has_spectate_account_id();
}
inline void CMsgClientToGCSpectateUser::clear_spectate_account_id() {
  _impl_.spectate_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCSpectateUser::_internal_spectate_account_id() const {
  return _impl_.spectate_account_id_;
}
inline uint32_t CMsgClientToGCSpectateUser::spectate_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateUser.spectate_account_id)
  return _internal_spectate_account_id();
}
inline void CMsgClientToGCSpectateUser::_internal_set_spectate_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.spectate_account_id_ = value;
}
inline void CMsgClientToGCSpectateUser::set_spectate_account_id(uint32_t value) {
  _internal_set_spectate_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSpectateUser.spectate_account_id)
}

// optional uint32 client_version = 3;
inline bool CMsgClientToGCSpectateUser::_internal_has_client_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCSpectateUser::has_client_version() const {
  return _internal_has_client_version();
}
inline void CMsgClientToGCSpectateUser::clear_client_version() {
  _impl_.client_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCSpectateUser::_internal_client_version() const {
  return _impl_.client_version_;
}
inline uint32_t CMsgClientToGCSpectateUser::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateUser.client_version)
  return _internal_client_version();
}
inline void CMsgClientToGCSpectateUser::_internal_set_client_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.client_version_ = value;
}
inline void CMsgClientToGCSpectateUser::set_client_version(uint32_t value) {
  _internal_set_client_version(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSpectateUser.client_version)
}

// optional .EGCPlatform client_platform = 4 [default = k_eGCPlatform_None];
inline bool CMsgClientToGCSpectateUser::_internal_has_client_platform() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCSpectateUser::has_client_platform() const {
  return _internal_has_client_platform();
}
inline void CMsgClientToGCSpectateUser::clear_client_platform() {
  _impl_.client_platform_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::EGCPlatform CMsgClientToGCSpectateUser::_internal_client_platform() const {
  return static_cast< ::EGCPlatform >(_impl_.client_platform_);
}
inline ::EGCPlatform CMsgClientToGCSpectateUser::client_platform() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateUser.client_platform)
  return _internal_client_platform();
}
inline void CMsgClientToGCSpectateUser::_internal_set_client_platform(::EGCPlatform value) {
  assert(::EGCPlatform_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.client_platform_ = value;
}
inline void CMsgClientToGCSpectateUser::set_client_platform(::EGCPlatform value) {
  _internal_set_client_platform(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSpectateUser.client_platform)
}

// -------------------------------------------------------------------

// CMsgClientToGCSpectateUserResponse

// optional .CMsgClientToGCSpectateUserResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCSpectateUserResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCSpectateUserResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCSpectateUserResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCSpectateUserResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateUserResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCSpectateUserResponse::_internal_set_result(::CMsgClientToGCSpectateUserResponse_EResponse value) {
  assert(::CMsgClientToGCSpectateUserResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCSpectateUserResponse::set_result(::CMsgClientToGCSpectateUserResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSpectateUserResponse.result)
}

// optional fixed64 server_steam_id = 3;
inline bool CMsgClientToGCSpectateUserResponse::_internal_has_server_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCSpectateUserResponse::has_server_steam_id() const {
  return _internal_has_server_steam_id();
}
inline void CMsgClientToGCSpectateUserResponse::clear_server_steam_id() {
  _impl_.server_steam_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CMsgClientToGCSpectateUserResponse::_internal_server_steam_id() const {
  return _impl_.server_steam_id_;
}
inline uint64_t CMsgClientToGCSpectateUserResponse::server_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateUserResponse.server_steam_id)
  return _internal_server_steam_id();
}
inline void CMsgClientToGCSpectateUserResponse::_internal_set_server_steam_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.server_steam_id_ = value;
}
inline void CMsgClientToGCSpectateUserResponse::set_server_steam_id(uint64_t value) {
  _internal_set_server_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSpectateUserResponse.server_steam_id)
}

// optional bytes sdr_key = 4;
inline bool CMsgClientToGCSpectateUserResponse::_internal_has_sdr_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSpectateUserResponse::has_sdr_key() const {
  return _internal_has_sdr_key();
}
inline void CMsgClientToGCSpectateUserResponse::clear_sdr_key() {
  _impl_.sdr_key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCSpectateUserResponse::sdr_key() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateUserResponse.sdr_key)
  return _internal_sdr_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCSpectateUserResponse::set_sdr_key(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.sdr_key_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCSpectateUserResponse.sdr_key)
}
inline std::string* CMsgClientToGCSpectateUserResponse::mutable_sdr_key() {
  std::string* _s = _internal_mutable_sdr_key();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSpectateUserResponse.sdr_key)
  return _s;
}
inline const std::string& CMsgClientToGCSpectateUserResponse::_internal_sdr_key() const {
  return _impl_.sdr_key_.Get();
}
inline void CMsgClientToGCSpectateUserResponse::_internal_set_sdr_key(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.sdr_key_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCSpectateUserResponse::_internal_mutable_sdr_key() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.sdr_key_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCSpectateUserResponse::release_sdr_key() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCSpectateUserResponse.sdr_key)
  if (!_internal_has_sdr_key()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.sdr_key_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.sdr_key_.IsDefault()) {
    _impl_.sdr_key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCSpectateUserResponse::set_allocated_sdr_key(std::string* sdr_key) {
  if (sdr_key != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.sdr_key_.SetAllocated(sdr_key, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.sdr_key_.IsDefault()) {
    _impl_.sdr_key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSpectateUserResponse.sdr_key)
}

// optional uint32 udp_connect_ip = 5;
inline bool CMsgClientToGCSpectateUserResponse::_internal_has_udp_connect_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientToGCSpectateUserResponse::has_udp_connect_ip() const {
  return _internal_has_udp_connect_ip();
}
inline void CMsgClientToGCSpectateUserResponse::clear_udp_connect_ip() {
  _impl_.udp_connect_ip_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgClientToGCSpectateUserResponse::_internal_udp_connect_ip() const {
  return _impl_.udp_connect_ip_;
}
inline uint32_t CMsgClientToGCSpectateUserResponse::udp_connect_ip() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateUserResponse.udp_connect_ip)
  return _internal_udp_connect_ip();
}
inline void CMsgClientToGCSpectateUserResponse::_internal_set_udp_connect_ip(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.udp_connect_ip_ = value;
}
inline void CMsgClientToGCSpectateUserResponse::set_udp_connect_ip(uint32_t value) {
  _internal_set_udp_connect_ip(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSpectateUserResponse.udp_connect_ip)
}

// optional uint32 udp_connect_port = 6;
inline bool CMsgClientToGCSpectateUserResponse::_internal_has_udp_connect_port() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientToGCSpectateUserResponse::has_udp_connect_port() const {
  return _internal_has_udp_connect_port();
}
inline void CMsgClientToGCSpectateUserResponse::clear_udp_connect_port() {
  _impl_.udp_connect_port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CMsgClientToGCSpectateUserResponse::_internal_udp_connect_port() const {
  return _impl_.udp_connect_port_;
}
inline uint32_t CMsgClientToGCSpectateUserResponse::udp_connect_port() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateUserResponse.udp_connect_port)
  return _internal_udp_connect_port();
}
inline void CMsgClientToGCSpectateUserResponse::_internal_set_udp_connect_port(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.udp_connect_port_ = value;
}
inline void CMsgClientToGCSpectateUserResponse::set_udp_connect_port(uint32_t value) {
  _internal_set_udp_connect_port(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSpectateUserResponse.udp_connect_port)
}

// optional fixed64 lobby_id = 7;
inline bool CMsgClientToGCSpectateUserResponse::_internal_has_lobby_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientToGCSpectateUserResponse::has_lobby_id() const {
  return _internal_has_lobby_id();
}
inline void CMsgClientToGCSpectateUserResponse::clear_lobby_id() {
  _impl_.lobby_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint64_t CMsgClientToGCSpectateUserResponse::_internal_lobby_id() const {
  return _impl_.lobby_id_;
}
inline uint64_t CMsgClientToGCSpectateUserResponse::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateUserResponse.lobby_id)
  return _internal_lobby_id();
}
inline void CMsgClientToGCSpectateUserResponse::_internal_set_lobby_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.lobby_id_ = value;
}
inline void CMsgClientToGCSpectateUserResponse::set_lobby_id(uint64_t value) {
  _internal_set_lobby_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSpectateUserResponse.lobby_id)
}

// optional string client_broadcast_url = 8;
inline bool CMsgClientToGCSpectateUserResponse::_internal_has_client_broadcast_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCSpectateUserResponse::has_client_broadcast_url() const {
  return _internal_has_client_broadcast_url();
}
inline void CMsgClientToGCSpectateUserResponse::clear_client_broadcast_url() {
  _impl_.client_broadcast_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientToGCSpectateUserResponse::client_broadcast_url() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateUserResponse.client_broadcast_url)
  return _internal_client_broadcast_url();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCSpectateUserResponse::set_client_broadcast_url(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.client_broadcast_url_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCSpectateUserResponse.client_broadcast_url)
}
inline std::string* CMsgClientToGCSpectateUserResponse::mutable_client_broadcast_url() {
  std::string* _s = _internal_mutable_client_broadcast_url();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSpectateUserResponse.client_broadcast_url)
  return _s;
}
inline const std::string& CMsgClientToGCSpectateUserResponse::_internal_client_broadcast_url() const {
  return _impl_.client_broadcast_url_.Get();
}
inline void CMsgClientToGCSpectateUserResponse::_internal_set_client_broadcast_url(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.client_broadcast_url_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCSpectateUserResponse::_internal_mutable_client_broadcast_url() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.client_broadcast_url_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCSpectateUserResponse::release_client_broadcast_url() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCSpectateUserResponse.client_broadcast_url)
  if (!_internal_has_client_broadcast_url()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.client_broadcast_url_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.client_broadcast_url_.IsDefault()) {
    _impl_.client_broadcast_url_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCSpectateUserResponse::set_allocated_client_broadcast_url(std::string* client_broadcast_url) {
  if (client_broadcast_url != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.client_broadcast_url_.SetAllocated(client_broadcast_url, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.client_broadcast_url_.IsDefault()) {
    _impl_.client_broadcast_url_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSpectateUserResponse.client_broadcast_url)
}

// -------------------------------------------------------------------

// CMsgClientToGCSpectateLobby

// optional uint64 lobby_id = 1;
inline bool CMsgClientToGCSpectateLobby::_internal_has_lobby_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSpectateLobby::has_lobby_id() const {
  return _internal_has_lobby_id();
}
inline void CMsgClientToGCSpectateLobby::clear_lobby_id() {
  _impl_.lobby_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCSpectateLobby::_internal_lobby_id() const {
  return _impl_.lobby_id_;
}
inline uint64_t CMsgClientToGCSpectateLobby::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateLobby.lobby_id)
  return _internal_lobby_id();
}
inline void CMsgClientToGCSpectateLobby::_internal_set_lobby_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.lobby_id_ = value;
}
inline void CMsgClientToGCSpectateLobby::set_lobby_id(uint64_t value) {
  _internal_set_lobby_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSpectateLobby.lobby_id)
}

// optional uint32 client_version = 3;
inline bool CMsgClientToGCSpectateLobby::_internal_has_client_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCSpectateLobby::has_client_version() const {
  return _internal_has_client_version();
}
inline void CMsgClientToGCSpectateLobby::clear_client_version() {
  _impl_.client_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCSpectateLobby::_internal_client_version() const {
  return _impl_.client_version_;
}
inline uint32_t CMsgClientToGCSpectateLobby::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateLobby.client_version)
  return _internal_client_version();
}
inline void CMsgClientToGCSpectateLobby::_internal_set_client_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.client_version_ = value;
}
inline void CMsgClientToGCSpectateLobby::set_client_version(uint32_t value) {
  _internal_set_client_version(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSpectateLobby.client_version)
}

// optional .EGCPlatform client_platform = 4 [default = k_eGCPlatform_None];
inline bool CMsgClientToGCSpectateLobby::_internal_has_client_platform() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCSpectateLobby::has_client_platform() const {
  return _internal_has_client_platform();
}
inline void CMsgClientToGCSpectateLobby::clear_client_platform() {
  _impl_.client_platform_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::EGCPlatform CMsgClientToGCSpectateLobby::_internal_client_platform() const {
  return static_cast< ::EGCPlatform >(_impl_.client_platform_);
}
inline ::EGCPlatform CMsgClientToGCSpectateLobby::client_platform() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateLobby.client_platform)
  return _internal_client_platform();
}
inline void CMsgClientToGCSpectateLobby::_internal_set_client_platform(::EGCPlatform value) {
  assert(::EGCPlatform_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.client_platform_ = value;
}
inline void CMsgClientToGCSpectateLobby::set_client_platform(::EGCPlatform value) {
  _internal_set_client_platform(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSpectateLobby.client_platform)
}

// optional uint64 match_id = 5;
inline bool CMsgClientToGCSpectateLobby::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCSpectateLobby::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgClientToGCSpectateLobby::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CMsgClientToGCSpectateLobby::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CMsgClientToGCSpectateLobby::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateLobby.match_id)
  return _internal_match_id();
}
inline void CMsgClientToGCSpectateLobby::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.match_id_ = value;
}
inline void CMsgClientToGCSpectateLobby::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSpectateLobby.match_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCSpectateLobbyResponse

// optional .CMsgClientToGCSpectateUserResponse result = 1;
inline bool CMsgClientToGCSpectateLobbyResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.result_ != nullptr);
  return value;
}
inline bool CMsgClientToGCSpectateLobbyResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCSpectateLobbyResponse::clear_result() {
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgClientToGCSpectateUserResponse& CMsgClientToGCSpectateLobbyResponse::_internal_result() const {
  const ::CMsgClientToGCSpectateUserResponse* p = _impl_.result_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgClientToGCSpectateUserResponse&>(
      ::_CMsgClientToGCSpectateUserResponse_default_instance_);
}
inline const ::CMsgClientToGCSpectateUserResponse& CMsgClientToGCSpectateLobbyResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSpectateLobbyResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCSpectateLobbyResponse::unsafe_arena_set_allocated_result(
    ::CMsgClientToGCSpectateUserResponse* result) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.result_);
  }
  _impl_.result_ = result;
  if (result) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCSpectateLobbyResponse.result)
}
inline ::CMsgClientToGCSpectateUserResponse* CMsgClientToGCSpectateLobbyResponse::release_result() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgClientToGCSpectateUserResponse* temp = _impl_.result_;
  _impl_.result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgClientToGCSpectateUserResponse* CMsgClientToGCSpectateLobbyResponse::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCSpectateLobbyResponse.result)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgClientToGCSpectateUserResponse* temp = _impl_.result_;
  _impl_.result_ = nullptr;
  return temp;
}
inline ::CMsgClientToGCSpectateUserResponse* CMsgClientToGCSpectateLobbyResponse::_internal_mutable_result() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.result_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgClientToGCSpectateUserResponse>(GetArenaForAllocation());
    _impl_.result_ = p;
  }
  return _impl_.result_;
}
inline ::CMsgClientToGCSpectateUserResponse* CMsgClientToGCSpectateLobbyResponse::mutable_result() {
  ::CMsgClientToGCSpectateUserResponse* _msg = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSpectateLobbyResponse.result)
  return _msg;
}
inline void CMsgClientToGCSpectateLobbyResponse::set_allocated_result(::CMsgClientToGCSpectateUserResponse* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(result);
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.result_ = result;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSpectateLobbyResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetProfileCard

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetProfileCard::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetProfileCard::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCGetProfileCard::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCGetProfileCard::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCGetProfileCard::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetProfileCard.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCGetProfileCard::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCGetProfileCard::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetProfileCard.account_id)
}

// optional bool dev_access_hint = 2;
inline bool CMsgClientToGCGetProfileCard::_internal_has_dev_access_hint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetProfileCard::has_dev_access_hint() const {
  return _internal_has_dev_access_hint();
}
inline void CMsgClientToGCGetProfileCard::clear_dev_access_hint() {
  _impl_.dev_access_hint_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgClientToGCGetProfileCard::_internal_dev_access_hint() const {
  return _impl_.dev_access_hint_;
}
inline bool CMsgClientToGCGetProfileCard::dev_access_hint() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetProfileCard.dev_access_hint)
  return _internal_dev_access_hint();
}
inline void CMsgClientToGCGetProfileCard::_internal_set_dev_access_hint(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.dev_access_hint_ = value;
}
inline void CMsgClientToGCGetProfileCard::set_dev_access_hint(bool value) {
  _internal_set_dev_access_hint(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetProfileCard.dev_access_hint)
}

// optional bool friend_access_hint = 3;
inline bool CMsgClientToGCGetProfileCard::_internal_has_friend_access_hint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCGetProfileCard::has_friend_access_hint() const {
  return _internal_has_friend_access_hint();
}
inline void CMsgClientToGCGetProfileCard::clear_friend_access_hint() {
  _impl_.friend_access_hint_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgClientToGCGetProfileCard::_internal_friend_access_hint() const {
  return _impl_.friend_access_hint_;
}
inline bool CMsgClientToGCGetProfileCard::friend_access_hint() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetProfileCard.friend_access_hint)
  return _internal_friend_access_hint();
}
inline void CMsgClientToGCGetProfileCard::_internal_set_friend_access_hint(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.friend_access_hint_ = value;
}
inline void CMsgClientToGCGetProfileCard::set_friend_access_hint(bool value) {
  _internal_set_friend_access_hint(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetProfileCard.friend_access_hint)
}

// -------------------------------------------------------------------

// CMsgCitadelProfileCard_Slot_Stat

// optional .CMsgCitadelProfileCard.EStatID stat_id = 1 [default = k_eStat_Invalid];
inline bool CMsgCitadelProfileCard_Slot_Stat::_internal_has_stat_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCitadelProfileCard_Slot_Stat::has_stat_id() const {
  return _internal_has_stat_id();
}
inline void CMsgCitadelProfileCard_Slot_Stat::clear_stat_id() {
  _impl_.stat_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgCitadelProfileCard_EStatID CMsgCitadelProfileCard_Slot_Stat::_internal_stat_id() const {
  return static_cast< ::CMsgCitadelProfileCard_EStatID >(_impl_.stat_id_);
}
inline ::CMsgCitadelProfileCard_EStatID CMsgCitadelProfileCard_Slot_Stat::stat_id() const {
  // @@protoc_insertion_point(field_get:CMsgCitadelProfileCard.Slot.Stat.stat_id)
  return _internal_stat_id();
}
inline void CMsgCitadelProfileCard_Slot_Stat::_internal_set_stat_id(::CMsgCitadelProfileCard_EStatID value) {
  assert(::CMsgCitadelProfileCard_EStatID_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.stat_id_ = value;
}
inline void CMsgCitadelProfileCard_Slot_Stat::set_stat_id(::CMsgCitadelProfileCard_EStatID value) {
  _internal_set_stat_id(value);
  // @@protoc_insertion_point(field_set:CMsgCitadelProfileCard.Slot.Stat.stat_id)
}

// optional uint32 stat_score = 2;
inline bool CMsgCitadelProfileCard_Slot_Stat::_internal_has_stat_score() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgCitadelProfileCard_Slot_Stat::has_stat_score() const {
  return _internal_has_stat_score();
}
inline void CMsgCitadelProfileCard_Slot_Stat::clear_stat_score() {
  _impl_.stat_score_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgCitadelProfileCard_Slot_Stat::_internal_stat_score() const {
  return _impl_.stat_score_;
}
inline uint32_t CMsgCitadelProfileCard_Slot_Stat::stat_score() const {
  // @@protoc_insertion_point(field_get:CMsgCitadelProfileCard.Slot.Stat.stat_score)
  return _internal_stat_score();
}
inline void CMsgCitadelProfileCard_Slot_Stat::_internal_set_stat_score(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.stat_score_ = value;
}
inline void CMsgCitadelProfileCard_Slot_Stat::set_stat_score(uint32_t value) {
  _internal_set_stat_score(value);
  // @@protoc_insertion_point(field_set:CMsgCitadelProfileCard.Slot.Stat.stat_score)
}

// -------------------------------------------------------------------

// CMsgCitadelProfileCard_Slot_Hero

// optional uint32 hero_id = 1;
inline bool CMsgCitadelProfileCard_Slot_Hero::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCitadelProfileCard_Slot_Hero::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgCitadelProfileCard_Slot_Hero::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgCitadelProfileCard_Slot_Hero::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgCitadelProfileCard_Slot_Hero::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgCitadelProfileCard.Slot.Hero.hero_id)
  return _internal_hero_id();
}
inline void CMsgCitadelProfileCard_Slot_Hero::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.hero_id_ = value;
}
inline void CMsgCitadelProfileCard_Slot_Hero::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgCitadelProfileCard.Slot.Hero.hero_id)
}

// optional uint32 hero_wins = 2;
inline bool CMsgCitadelProfileCard_Slot_Hero::_internal_has_hero_wins() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgCitadelProfileCard_Slot_Hero::has_hero_wins() const {
  return _internal_has_hero_wins();
}
inline void CMsgCitadelProfileCard_Slot_Hero::clear_hero_wins() {
  _impl_.hero_wins_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgCitadelProfileCard_Slot_Hero::_internal_hero_wins() const {
  return _impl_.hero_wins_;
}
inline uint32_t CMsgCitadelProfileCard_Slot_Hero::hero_wins() const {
  // @@protoc_insertion_point(field_get:CMsgCitadelProfileCard.Slot.Hero.hero_wins)
  return _internal_hero_wins();
}
inline void CMsgCitadelProfileCard_Slot_Hero::_internal_set_hero_wins(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.hero_wins_ = value;
}
inline void CMsgCitadelProfileCard_Slot_Hero::set_hero_wins(uint32_t value) {
  _internal_set_hero_wins(value);
  // @@protoc_insertion_point(field_set:CMsgCitadelProfileCard.Slot.Hero.hero_wins)
}

// optional uint32 hero_kills = 3;
inline bool CMsgCitadelProfileCard_Slot_Hero::_internal_has_hero_kills() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgCitadelProfileCard_Slot_Hero::has_hero_kills() const {
  return _internal_has_hero_kills();
}
inline void CMsgCitadelProfileCard_Slot_Hero::clear_hero_kills() {
  _impl_.hero_kills_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgCitadelProfileCard_Slot_Hero::_internal_hero_kills() const {
  return _impl_.hero_kills_;
}
inline uint32_t CMsgCitadelProfileCard_Slot_Hero::hero_kills() const {
  // @@protoc_insertion_point(field_get:CMsgCitadelProfileCard.Slot.Hero.hero_kills)
  return _internal_hero_kills();
}
inline void CMsgCitadelProfileCard_Slot_Hero::_internal_set_hero_kills(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.hero_kills_ = value;
}
inline void CMsgCitadelProfileCard_Slot_Hero::set_hero_kills(uint32_t value) {
  _internal_set_hero_kills(value);
  // @@protoc_insertion_point(field_set:CMsgCitadelProfileCard.Slot.Hero.hero_kills)
}

// -------------------------------------------------------------------

// CMsgCitadelProfileCard_Slot

// optional uint32 slot_id = 1;
inline bool CMsgCitadelProfileCard_Slot::_internal_has_slot_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgCitadelProfileCard_Slot::has_slot_id() const {
  return _internal_has_slot_id();
}
inline void CMsgCitadelProfileCard_Slot::clear_slot_id() {
  _impl_.slot_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgCitadelProfileCard_Slot::_internal_slot_id() const {
  return _impl_.slot_id_;
}
inline uint32_t CMsgCitadelProfileCard_Slot::slot_id() const {
  // @@protoc_insertion_point(field_get:CMsgCitadelProfileCard.Slot.slot_id)
  return _internal_slot_id();
}
inline void CMsgCitadelProfileCard_Slot::_internal_set_slot_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.slot_id_ = value;
}
inline void CMsgCitadelProfileCard_Slot::set_slot_id(uint32_t value) {
  _internal_set_slot_id(value);
  // @@protoc_insertion_point(field_set:CMsgCitadelProfileCard.Slot.slot_id)
}

// optional .CMsgCitadelProfileCard.Slot.Stat stat = 2;
inline bool CMsgCitadelProfileCard_Slot::_internal_has_stat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stat_ != nullptr);
  return value;
}
inline bool CMsgCitadelProfileCard_Slot::has_stat() const {
  return _internal_has_stat();
}
inline void CMsgCitadelProfileCard_Slot::clear_stat() {
  if (_impl_.stat_ != nullptr) _impl_.stat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgCitadelProfileCard_Slot_Stat& CMsgCitadelProfileCard_Slot::_internal_stat() const {
  const ::CMsgCitadelProfileCard_Slot_Stat* p = _impl_.stat_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgCitadelProfileCard_Slot_Stat&>(
      ::_CMsgCitadelProfileCard_Slot_Stat_default_instance_);
}
inline const ::CMsgCitadelProfileCard_Slot_Stat& CMsgCitadelProfileCard_Slot::stat() const {
  // @@protoc_insertion_point(field_get:CMsgCitadelProfileCard.Slot.stat)
  return _internal_stat();
}
inline void CMsgCitadelProfileCard_Slot::unsafe_arena_set_allocated_stat(
    ::CMsgCitadelProfileCard_Slot_Stat* stat) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.stat_);
  }
  _impl_.stat_ = stat;
  if (stat) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgCitadelProfileCard.Slot.stat)
}
inline ::CMsgCitadelProfileCard_Slot_Stat* CMsgCitadelProfileCard_Slot::release_stat() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgCitadelProfileCard_Slot_Stat* temp = _impl_.stat_;
  _impl_.stat_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgCitadelProfileCard_Slot_Stat* CMsgCitadelProfileCard_Slot::unsafe_arena_release_stat() {
  // @@protoc_insertion_point(field_release:CMsgCitadelProfileCard.Slot.stat)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgCitadelProfileCard_Slot_Stat* temp = _impl_.stat_;
  _impl_.stat_ = nullptr;
  return temp;
}
inline ::CMsgCitadelProfileCard_Slot_Stat* CMsgCitadelProfileCard_Slot::_internal_mutable_stat() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.stat_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgCitadelProfileCard_Slot_Stat>(GetArenaForAllocation());
    _impl_.stat_ = p;
  }
  return _impl_.stat_;
}
inline ::CMsgCitadelProfileCard_Slot_Stat* CMsgCitadelProfileCard_Slot::mutable_stat() {
  ::CMsgCitadelProfileCard_Slot_Stat* _msg = _internal_mutable_stat();
  // @@protoc_insertion_point(field_mutable:CMsgCitadelProfileCard.Slot.stat)
  return _msg;
}
inline void CMsgCitadelProfileCard_Slot::set_allocated_stat(::CMsgCitadelProfileCard_Slot_Stat* stat) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.stat_;
  }
  if (stat) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(stat);
    if (message_arena != submessage_arena) {
      stat = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stat, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.stat_ = stat;
  // @@protoc_insertion_point(field_set_allocated:CMsgCitadelProfileCard.Slot.stat)
}

// optional .CMsgCitadelProfileCard.Slot.Hero hero = 3;
inline bool CMsgCitadelProfileCard_Slot::_internal_has_hero() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hero_ != nullptr);
  return value;
}
inline bool CMsgCitadelProfileCard_Slot::has_hero() const {
  return _internal_has_hero();
}
inline void CMsgCitadelProfileCard_Slot::clear_hero() {
  if (_impl_.hero_ != nullptr) _impl_.hero_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgCitadelProfileCard_Slot_Hero& CMsgCitadelProfileCard_Slot::_internal_hero() const {
  const ::CMsgCitadelProfileCard_Slot_Hero* p = _impl_.hero_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgCitadelProfileCard_Slot_Hero&>(
      ::_CMsgCitadelProfileCard_Slot_Hero_default_instance_);
}
inline const ::CMsgCitadelProfileCard_Slot_Hero& CMsgCitadelProfileCard_Slot::hero() const {
  // @@protoc_insertion_point(field_get:CMsgCitadelProfileCard.Slot.hero)
  return _internal_hero();
}
inline void CMsgCitadelProfileCard_Slot::unsafe_arena_set_allocated_hero(
    ::CMsgCitadelProfileCard_Slot_Hero* hero) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hero_);
  }
  _impl_.hero_ = hero;
  if (hero) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgCitadelProfileCard.Slot.hero)
}
inline ::CMsgCitadelProfileCard_Slot_Hero* CMsgCitadelProfileCard_Slot::release_hero() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgCitadelProfileCard_Slot_Hero* temp = _impl_.hero_;
  _impl_.hero_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgCitadelProfileCard_Slot_Hero* CMsgCitadelProfileCard_Slot::unsafe_arena_release_hero() {
  // @@protoc_insertion_point(field_release:CMsgCitadelProfileCard.Slot.hero)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgCitadelProfileCard_Slot_Hero* temp = _impl_.hero_;
  _impl_.hero_ = nullptr;
  return temp;
}
inline ::CMsgCitadelProfileCard_Slot_Hero* CMsgCitadelProfileCard_Slot::_internal_mutable_hero() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.hero_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgCitadelProfileCard_Slot_Hero>(GetArenaForAllocation());
    _impl_.hero_ = p;
  }
  return _impl_.hero_;
}
inline ::CMsgCitadelProfileCard_Slot_Hero* CMsgCitadelProfileCard_Slot::mutable_hero() {
  ::CMsgCitadelProfileCard_Slot_Hero* _msg = _internal_mutable_hero();
  // @@protoc_insertion_point(field_mutable:CMsgCitadelProfileCard.Slot.hero)
  return _msg;
}
inline void CMsgCitadelProfileCard_Slot::set_allocated_hero(::CMsgCitadelProfileCard_Slot_Hero* hero) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.hero_;
  }
  if (hero) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(hero);
    if (message_arena != submessage_arena) {
      hero = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hero, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.hero_ = hero;
  // @@protoc_insertion_point(field_set_allocated:CMsgCitadelProfileCard.Slot.hero)
}

// -------------------------------------------------------------------

// CMsgCitadelProfileCard

// optional uint32 account_id = 1;
inline bool CMsgCitadelProfileCard::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCitadelProfileCard::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgCitadelProfileCard::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgCitadelProfileCard::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgCitadelProfileCard::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgCitadelProfileCard.account_id)
  return _internal_account_id();
}
inline void CMsgCitadelProfileCard::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgCitadelProfileCard::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgCitadelProfileCard.account_id)
}

// repeated .CMsgCitadelProfileCard.Slot slots = 2;
inline int CMsgCitadelProfileCard::_internal_slots_size() const {
  return _impl_.slots_.size();
}
inline int CMsgCitadelProfileCard::slots_size() const {
  return _internal_slots_size();
}
inline void CMsgCitadelProfileCard::clear_slots() {
  _impl_.slots_.Clear();
}
inline ::CMsgCitadelProfileCard_Slot* CMsgCitadelProfileCard::mutable_slots(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgCitadelProfileCard.slots)
  return _impl_.slots_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCitadelProfileCard_Slot >*
CMsgCitadelProfileCard::mutable_slots() {
  // @@protoc_insertion_point(field_mutable_list:CMsgCitadelProfileCard.slots)
  return &_impl_.slots_;
}
inline const ::CMsgCitadelProfileCard_Slot& CMsgCitadelProfileCard::_internal_slots(int index) const {
  return _impl_.slots_.Get(index);
}
inline const ::CMsgCitadelProfileCard_Slot& CMsgCitadelProfileCard::slots(int index) const {
  // @@protoc_insertion_point(field_get:CMsgCitadelProfileCard.slots)
  return _internal_slots(index);
}
inline ::CMsgCitadelProfileCard_Slot* CMsgCitadelProfileCard::_internal_add_slots() {
  return _impl_.slots_.Add();
}
inline ::CMsgCitadelProfileCard_Slot* CMsgCitadelProfileCard::add_slots() {
  ::CMsgCitadelProfileCard_Slot* _add = _internal_add_slots();
  // @@protoc_insertion_point(field_add:CMsgCitadelProfileCard.slots)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCitadelProfileCard_Slot >&
CMsgCitadelProfileCard::slots() const {
  // @@protoc_insertion_point(field_list:CMsgCitadelProfileCard.slots)
  return _impl_.slots_;
}

// optional uint32 ranked_badge_level = 3;
inline bool CMsgCitadelProfileCard::_internal_has_ranked_badge_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgCitadelProfileCard::has_ranked_badge_level() const {
  return _internal_has_ranked_badge_level();
}
inline void CMsgCitadelProfileCard::clear_ranked_badge_level() {
  _impl_.ranked_badge_level_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgCitadelProfileCard::_internal_ranked_badge_level() const {
  return _impl_.ranked_badge_level_;
}
inline uint32_t CMsgCitadelProfileCard::ranked_badge_level() const {
  // @@protoc_insertion_point(field_get:CMsgCitadelProfileCard.ranked_badge_level)
  return _internal_ranked_badge_level();
}
inline void CMsgCitadelProfileCard::_internal_set_ranked_badge_level(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ranked_badge_level_ = value;
}
inline void CMsgCitadelProfileCard::set_ranked_badge_level(uint32_t value) {
  _internal_set_ranked_badge_level(value);
  // @@protoc_insertion_point(field_set:CMsgCitadelProfileCard.ranked_badge_level)
}

// -------------------------------------------------------------------

// CMsgClientToGCUpdateRoster

// optional .CMsgHeroSelectionMatchInfo heroes = 1;
inline bool CMsgClientToGCUpdateRoster::_internal_has_heroes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.heroes_ != nullptr);
  return value;
}
inline bool CMsgClientToGCUpdateRoster::has_heroes() const {
  return _internal_has_heroes();
}
inline const ::CMsgHeroSelectionMatchInfo& CMsgClientToGCUpdateRoster::_internal_heroes() const {
  const ::CMsgHeroSelectionMatchInfo* p = _impl_.heroes_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgHeroSelectionMatchInfo&>(
      ::_CMsgHeroSelectionMatchInfo_default_instance_);
}
inline const ::CMsgHeroSelectionMatchInfo& CMsgClientToGCUpdateRoster::heroes() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateRoster.heroes)
  return _internal_heroes();
}
inline void CMsgClientToGCUpdateRoster::unsafe_arena_set_allocated_heroes(
    ::CMsgHeroSelectionMatchInfo* heroes) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.heroes_);
  }
  _impl_.heroes_ = heroes;
  if (heroes) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCUpdateRoster.heroes)
}
inline ::CMsgHeroSelectionMatchInfo* CMsgClientToGCUpdateRoster::release_heroes() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgHeroSelectionMatchInfo* temp = _impl_.heroes_;
  _impl_.heroes_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgHeroSelectionMatchInfo* CMsgClientToGCUpdateRoster::unsafe_arena_release_heroes() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCUpdateRoster.heroes)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgHeroSelectionMatchInfo* temp = _impl_.heroes_;
  _impl_.heroes_ = nullptr;
  return temp;
}
inline ::CMsgHeroSelectionMatchInfo* CMsgClientToGCUpdateRoster::_internal_mutable_heroes() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.heroes_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgHeroSelectionMatchInfo>(GetArenaForAllocation());
    _impl_.heroes_ = p;
  }
  return _impl_.heroes_;
}
inline ::CMsgHeroSelectionMatchInfo* CMsgClientToGCUpdateRoster::mutable_heroes() {
  ::CMsgHeroSelectionMatchInfo* _msg = _internal_mutable_heroes();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCUpdateRoster.heroes)
  return _msg;
}
inline void CMsgClientToGCUpdateRoster::set_allocated_heroes(::CMsgHeroSelectionMatchInfo* heroes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.heroes_);
  }
  if (heroes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(heroes));
    if (message_arena != submessage_arena) {
      heroes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, heroes, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.heroes_ = heroes;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCUpdateRoster.heroes)
}

// optional .ECitadelGameMode game_mode = 2 [default = k_ECitadelGameMode_Invalid];
inline bool CMsgClientToGCUpdateRoster::_internal_has_game_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCUpdateRoster::has_game_mode() const {
  return _internal_has_game_mode();
}
inline void CMsgClientToGCUpdateRoster::clear_game_mode() {
  _impl_.game_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::ECitadelGameMode CMsgClientToGCUpdateRoster::_internal_game_mode() const {
  return static_cast< ::ECitadelGameMode >(_impl_.game_mode_);
}
inline ::ECitadelGameMode CMsgClientToGCUpdateRoster::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateRoster.game_mode)
  return _internal_game_mode();
}
inline void CMsgClientToGCUpdateRoster::_internal_set_game_mode(::ECitadelGameMode value) {
  assert(::ECitadelGameMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.game_mode_ = value;
}
inline void CMsgClientToGCUpdateRoster::set_game_mode(::ECitadelGameMode value) {
  _internal_set_game_mode(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUpdateRoster.game_mode)
}

// optional .ECitadelMatchMode match_mode = 3 [default = k_ECitadelMatchMode_Invalid];
inline bool CMsgClientToGCUpdateRoster::_internal_has_match_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCUpdateRoster::has_match_mode() const {
  return _internal_has_match_mode();
}
inline void CMsgClientToGCUpdateRoster::clear_match_mode() {
  _impl_.match_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::ECitadelMatchMode CMsgClientToGCUpdateRoster::_internal_match_mode() const {
  return static_cast< ::ECitadelMatchMode >(_impl_.match_mode_);
}
inline ::ECitadelMatchMode CMsgClientToGCUpdateRoster::match_mode() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateRoster.match_mode)
  return _internal_match_mode();
}
inline void CMsgClientToGCUpdateRoster::_internal_set_match_mode(::ECitadelMatchMode value) {
  assert(::ECitadelMatchMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.match_mode_ = value;
}
inline void CMsgClientToGCUpdateRoster::set_match_mode(::ECitadelMatchMode value) {
  _internal_set_match_mode(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUpdateRoster.match_mode)
}

// -------------------------------------------------------------------

// CMsgClientToGCUpdateRosterResponse

// optional .CMsgClientToGCUpdateRosterResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCUpdateRosterResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUpdateRosterResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCUpdateRosterResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCUpdateRosterResponse_EResponse CMsgClientToGCUpdateRosterResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCUpdateRosterResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCUpdateRosterResponse_EResponse CMsgClientToGCUpdateRosterResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateRosterResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCUpdateRosterResponse::_internal_set_result(::CMsgClientToGCUpdateRosterResponse_EResponse value) {
  assert(::CMsgClientToGCUpdateRosterResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCUpdateRosterResponse::set_result(::CMsgClientToGCUpdateRosterResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUpdateRosterResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAccountStats

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetAccountStats::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAccountStats::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCGetAccountStats::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCGetAccountStats::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCGetAccountStats::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountStats.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCGetAccountStats::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCGetAccountStats::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAccountStats.account_id)
}

// optional bool dev_access_hint = 2;
inline bool CMsgClientToGCGetAccountStats::_internal_has_dev_access_hint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAccountStats::has_dev_access_hint() const {
  return _internal_has_dev_access_hint();
}
inline void CMsgClientToGCGetAccountStats::clear_dev_access_hint() {
  _impl_.dev_access_hint_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgClientToGCGetAccountStats::_internal_dev_access_hint() const {
  return _impl_.dev_access_hint_;
}
inline bool CMsgClientToGCGetAccountStats::dev_access_hint() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountStats.dev_access_hint)
  return _internal_dev_access_hint();
}
inline void CMsgClientToGCGetAccountStats::_internal_set_dev_access_hint(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.dev_access_hint_ = value;
}
inline void CMsgClientToGCGetAccountStats::set_dev_access_hint(bool value) {
  _internal_set_dev_access_hint(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAccountStats.dev_access_hint)
}

// optional bool friend_access_hint = 3;
inline bool CMsgClientToGCGetAccountStats::_internal_has_friend_access_hint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAccountStats::has_friend_access_hint() const {
  return _internal_has_friend_access_hint();
}
inline void CMsgClientToGCGetAccountStats::clear_friend_access_hint() {
  _impl_.friend_access_hint_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgClientToGCGetAccountStats::_internal_friend_access_hint() const {
  return _impl_.friend_access_hint_;
}
inline bool CMsgClientToGCGetAccountStats::friend_access_hint() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountStats.friend_access_hint)
  return _internal_friend_access_hint();
}
inline void CMsgClientToGCGetAccountStats::_internal_set_friend_access_hint(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.friend_access_hint_ = value;
}
inline void CMsgClientToGCGetAccountStats::set_friend_access_hint(bool value) {
  _internal_set_friend_access_hint(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAccountStats.friend_access_hint)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAccountStatsResponse

// optional .CMsgClientToGCGetAccountStatsResponse.EResult result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCGetAccountStatsResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAccountStatsResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCGetAccountStatsResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCGetAccountStatsResponse_EResult CMsgClientToGCGetAccountStatsResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCGetAccountStatsResponse_EResult >(_impl_.result_);
}
inline ::CMsgClientToGCGetAccountStatsResponse_EResult CMsgClientToGCGetAccountStatsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountStatsResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCGetAccountStatsResponse::_internal_set_result(::CMsgClientToGCGetAccountStatsResponse_EResult value) {
  assert(::CMsgClientToGCGetAccountStatsResponse_EResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCGetAccountStatsResponse::set_result(::CMsgClientToGCGetAccountStatsResponse_EResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAccountStatsResponse.result)
}

// optional .CMsgAccountStats stats = 2;
inline bool CMsgClientToGCGetAccountStatsResponse::_internal_has_stats() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stats_ != nullptr);
  return value;
}
inline bool CMsgClientToGCGetAccountStatsResponse::has_stats() const {
  return _internal_has_stats();
}
inline const ::CMsgAccountStats& CMsgClientToGCGetAccountStatsResponse::_internal_stats() const {
  const ::CMsgAccountStats* p = _impl_.stats_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgAccountStats&>(
      ::_CMsgAccountStats_default_instance_);
}
inline const ::CMsgAccountStats& CMsgClientToGCGetAccountStatsResponse::stats() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountStatsResponse.stats)
  return _internal_stats();
}
inline void CMsgClientToGCGetAccountStatsResponse::unsafe_arena_set_allocated_stats(
    ::CMsgAccountStats* stats) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.stats_);
  }
  _impl_.stats_ = stats;
  if (stats) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCGetAccountStatsResponse.stats)
}
inline ::CMsgAccountStats* CMsgClientToGCGetAccountStatsResponse::release_stats() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountStats* temp = _impl_.stats_;
  _impl_.stats_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgAccountStats* CMsgClientToGCGetAccountStatsResponse::unsafe_arena_release_stats() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGetAccountStatsResponse.stats)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountStats* temp = _impl_.stats_;
  _impl_.stats_ = nullptr;
  return temp;
}
inline ::CMsgAccountStats* CMsgClientToGCGetAccountStatsResponse::_internal_mutable_stats() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgAccountStats>(GetArenaForAllocation());
    _impl_.stats_ = p;
  }
  return _impl_.stats_;
}
inline ::CMsgAccountStats* CMsgClientToGCGetAccountStatsResponse::mutable_stats() {
  ::CMsgAccountStats* _msg = _internal_mutable_stats();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetAccountStatsResponse.stats)
  return _msg;
}
inline void CMsgClientToGCGetAccountStatsResponse::set_allocated_stats(::CMsgAccountStats* stats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.stats_);
  }
  if (stats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stats));
    if (message_arena != submessage_arena) {
      stats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stats, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.stats_ = stats;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetAccountStatsResponse.stats)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetMatchMetaData

// optional uint64 match_id = 1;
inline bool CMsgClientToGCGetMatchMetaData::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchMetaData::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgClientToGCGetMatchMetaData::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCGetMatchMetaData::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CMsgClientToGCGetMatchMetaData::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchMetaData.match_id)
  return _internal_match_id();
}
inline void CMsgClientToGCGetMatchMetaData::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.match_id_ = value;
}
inline void CMsgClientToGCGetMatchMetaData::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchMetaData.match_id)
}

// optional uint32 metadata_salt = 3;
inline bool CMsgClientToGCGetMatchMetaData::_internal_has_metadata_salt() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchMetaData::has_metadata_salt() const {
  return _internal_has_metadata_salt();
}
inline void CMsgClientToGCGetMatchMetaData::clear_metadata_salt() {
  _impl_.metadata_salt_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCGetMatchMetaData::_internal_metadata_salt() const {
  return _impl_.metadata_salt_;
}
inline uint32_t CMsgClientToGCGetMatchMetaData::metadata_salt() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchMetaData.metadata_salt)
  return _internal_metadata_salt();
}
inline void CMsgClientToGCGetMatchMetaData::_internal_set_metadata_salt(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.metadata_salt_ = value;
}
inline void CMsgClientToGCGetMatchMetaData::set_metadata_salt(uint32_t value) {
  _internal_set_metadata_salt(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchMetaData.metadata_salt)
}

// optional uint32 target_account_id = 4;
inline bool CMsgClientToGCGetMatchMetaData::_internal_has_target_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchMetaData::has_target_account_id() const {
  return _internal_has_target_account_id();
}
inline void CMsgClientToGCGetMatchMetaData::clear_target_account_id() {
  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCGetMatchMetaData::_internal_target_account_id() const {
  return _impl_.target_account_id_;
}
inline uint32_t CMsgClientToGCGetMatchMetaData::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchMetaData.target_account_id)
  return _internal_target_account_id();
}
inline void CMsgClientToGCGetMatchMetaData::_internal_set_target_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.target_account_id_ = value;
}
inline void CMsgClientToGCGetMatchMetaData::set_target_account_id(uint32_t value) {
  _internal_set_target_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchMetaData.target_account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetMatchMetaDataResponse

// optional .CMsgClientToGCGetMatchMetaDataResponse.EResult result = 1 [default = k_eResult_InternalError];
inline bool CMsgClientToGCGetMatchMetaDataResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchMetaDataResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCGetMatchMetaDataResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCGetMatchMetaDataResponse_EResult CMsgClientToGCGetMatchMetaDataResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCGetMatchMetaDataResponse_EResult >(_impl_.result_);
}
inline ::CMsgClientToGCGetMatchMetaDataResponse_EResult CMsgClientToGCGetMatchMetaDataResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchMetaDataResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCGetMatchMetaDataResponse::_internal_set_result(::CMsgClientToGCGetMatchMetaDataResponse_EResult value) {
  assert(::CMsgClientToGCGetMatchMetaDataResponse_EResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCGetMatchMetaDataResponse::set_result(::CMsgClientToGCGetMatchMetaDataResponse_EResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchMetaDataResponse.result)
}

// optional uint32 replay_salt = 2;
inline bool CMsgClientToGCGetMatchMetaDataResponse::_internal_has_replay_salt() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchMetaDataResponse::has_replay_salt() const {
  return _internal_has_replay_salt();
}
inline void CMsgClientToGCGetMatchMetaDataResponse::clear_replay_salt() {
  _impl_.replay_salt_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCGetMatchMetaDataResponse::_internal_replay_salt() const {
  return _impl_.replay_salt_;
}
inline uint32_t CMsgClientToGCGetMatchMetaDataResponse::replay_salt() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchMetaDataResponse.replay_salt)
  return _internal_replay_salt();
}
inline void CMsgClientToGCGetMatchMetaDataResponse::_internal_set_replay_salt(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.replay_salt_ = value;
}
inline void CMsgClientToGCGetMatchMetaDataResponse::set_replay_salt(uint32_t value) {
  _internal_set_replay_salt(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchMetaDataResponse.replay_salt)
}

// optional uint32 metadata_salt = 3;
inline bool CMsgClientToGCGetMatchMetaDataResponse::_internal_has_metadata_salt() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchMetaDataResponse::has_metadata_salt() const {
  return _internal_has_metadata_salt();
}
inline void CMsgClientToGCGetMatchMetaDataResponse::clear_metadata_salt() {
  _impl_.metadata_salt_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCGetMatchMetaDataResponse::_internal_metadata_salt() const {
  return _impl_.metadata_salt_;
}
inline uint32_t CMsgClientToGCGetMatchMetaDataResponse::metadata_salt() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchMetaDataResponse.metadata_salt)
  return _internal_metadata_salt();
}
inline void CMsgClientToGCGetMatchMetaDataResponse::_internal_set_metadata_salt(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.metadata_salt_ = value;
}
inline void CMsgClientToGCGetMatchMetaDataResponse::set_metadata_salt(uint32_t value) {
  _internal_set_metadata_salt(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchMetaDataResponse.metadata_salt)
}

// optional uint32 replay_valid_through = 4;
inline bool CMsgClientToGCGetMatchMetaDataResponse::_internal_has_replay_valid_through() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchMetaDataResponse::has_replay_valid_through() const {
  return _internal_has_replay_valid_through();
}
inline void CMsgClientToGCGetMatchMetaDataResponse::clear_replay_valid_through() {
  _impl_.replay_valid_through_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgClientToGCGetMatchMetaDataResponse::_internal_replay_valid_through() const {
  return _impl_.replay_valid_through_;
}
inline uint32_t CMsgClientToGCGetMatchMetaDataResponse::replay_valid_through() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchMetaDataResponse.replay_valid_through)
  return _internal_replay_valid_through();
}
inline void CMsgClientToGCGetMatchMetaDataResponse::_internal_set_replay_valid_through(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.replay_valid_through_ = value;
}
inline void CMsgClientToGCGetMatchMetaDataResponse::set_replay_valid_through(uint32_t value) {
  _internal_set_replay_valid_through(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchMetaDataResponse.replay_valid_through)
}

// optional uint32 cluster_id = 5;
inline bool CMsgClientToGCGetMatchMetaDataResponse::_internal_has_cluster_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchMetaDataResponse::has_cluster_id() const {
  return _internal_has_cluster_id();
}
inline void CMsgClientToGCGetMatchMetaDataResponse::clear_cluster_id() {
  _impl_.cluster_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgClientToGCGetMatchMetaDataResponse::_internal_cluster_id() const {
  return _impl_.cluster_id_;
}
inline uint32_t CMsgClientToGCGetMatchMetaDataResponse::cluster_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchMetaDataResponse.cluster_id)
  return _internal_cluster_id();
}
inline void CMsgClientToGCGetMatchMetaDataResponse::_internal_set_cluster_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.cluster_id_ = value;
}
inline void CMsgClientToGCGetMatchMetaDataResponse::set_cluster_id(uint32_t value) {
  _internal_set_cluster_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchMetaDataResponse.cluster_id)
}

// optional uint32 replay_processing_through = 6;
inline bool CMsgClientToGCGetMatchMetaDataResponse::_internal_has_replay_processing_through() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientToGCGetMatchMetaDataResponse::has_replay_processing_through() const {
  return _internal_has_replay_processing_through();
}
inline void CMsgClientToGCGetMatchMetaDataResponse::clear_replay_processing_through() {
  _impl_.replay_processing_through_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgClientToGCGetMatchMetaDataResponse::_internal_replay_processing_through() const {
  return _impl_.replay_processing_through_;
}
inline uint32_t CMsgClientToGCGetMatchMetaDataResponse::replay_processing_through() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetMatchMetaDataResponse.replay_processing_through)
  return _internal_replay_processing_through();
}
inline void CMsgClientToGCGetMatchMetaDataResponse::_internal_set_replay_processing_through(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.replay_processing_through_ = value;
}
inline void CMsgClientToGCGetMatchMetaDataResponse::set_replay_processing_through(uint32_t value) {
  _internal_set_replay_processing_through(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetMatchMetaDataResponse.replay_processing_through)
}

// -------------------------------------------------------------------

// CMsgGCToClientDevAnnouncements_Announcement

// optional uint32 priority = 1;
inline bool CMsgGCToClientDevAnnouncements_Announcement::_internal_has_priority() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGCToClientDevAnnouncements_Announcement::has_priority() const {
  return _internal_has_priority();
}
inline void CMsgGCToClientDevAnnouncements_Announcement::clear_priority() {
  _impl_.priority_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgGCToClientDevAnnouncements_Announcement::_internal_priority() const {
  return _impl_.priority_;
}
inline uint32_t CMsgGCToClientDevAnnouncements_Announcement::priority() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevAnnouncements.Announcement.priority)
  return _internal_priority();
}
inline void CMsgGCToClientDevAnnouncements_Announcement::_internal_set_priority(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.priority_ = value;
}
inline void CMsgGCToClientDevAnnouncements_Announcement::set_priority(uint32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevAnnouncements.Announcement.priority)
}

// optional string title = 2;
inline bool CMsgGCToClientDevAnnouncements_Announcement::_internal_has_title() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientDevAnnouncements_Announcement::has_title() const {
  return _internal_has_title();
}
inline void CMsgGCToClientDevAnnouncements_Announcement::clear_title() {
  _impl_.title_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToClientDevAnnouncements_Announcement::title() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevAnnouncements.Announcement.title)
  return _internal_title();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToClientDevAnnouncements_Announcement::set_title(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.title_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevAnnouncements.Announcement.title)
}
inline std::string* CMsgGCToClientDevAnnouncements_Announcement::mutable_title() {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientDevAnnouncements.Announcement.title)
  return _s;
}
inline const std::string& CMsgGCToClientDevAnnouncements_Announcement::_internal_title() const {
  return _impl_.title_.Get();
}
inline void CMsgGCToClientDevAnnouncements_Announcement::_internal_set_title(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.title_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToClientDevAnnouncements_Announcement::_internal_mutable_title() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.title_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToClientDevAnnouncements_Announcement::release_title() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientDevAnnouncements.Announcement.title)
  if (!_internal_has_title()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.title_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToClientDevAnnouncements_Announcement::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.title_.SetAllocated(title, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientDevAnnouncements.Announcement.title)
}

// optional string message = 3;
inline bool CMsgGCToClientDevAnnouncements_Announcement::_internal_has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientDevAnnouncements_Announcement::has_message() const {
  return _internal_has_message();
}
inline void CMsgGCToClientDevAnnouncements_Announcement::clear_message() {
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgGCToClientDevAnnouncements_Announcement::message() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevAnnouncements.Announcement.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToClientDevAnnouncements_Announcement::set_message(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.message_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevAnnouncements.Announcement.message)
}
inline std::string* CMsgGCToClientDevAnnouncements_Announcement::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientDevAnnouncements.Announcement.message)
  return _s;
}
inline const std::string& CMsgGCToClientDevAnnouncements_Announcement::_internal_message() const {
  return _impl_.message_.Get();
}
inline void CMsgGCToClientDevAnnouncements_Announcement::_internal_set_message(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.message_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToClientDevAnnouncements_Announcement::_internal_mutable_message() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.message_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToClientDevAnnouncements_Announcement::release_message() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientDevAnnouncements.Announcement.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.message_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToClientDevAnnouncements_Announcement::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.message_.SetAllocated(message, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientDevAnnouncements.Announcement.message)
}

// optional string url = 4;
inline bool CMsgGCToClientDevAnnouncements_Announcement::_internal_has_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToClientDevAnnouncements_Announcement::has_url() const {
  return _internal_has_url();
}
inline void CMsgGCToClientDevAnnouncements_Announcement::clear_url() {
  _impl_.url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgGCToClientDevAnnouncements_Announcement::url() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevAnnouncements.Announcement.url)
  return _internal_url();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToClientDevAnnouncements_Announcement::set_url(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000004u;
 _impl_.url_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevAnnouncements.Announcement.url)
}
inline std::string* CMsgGCToClientDevAnnouncements_Announcement::mutable_url() {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientDevAnnouncements.Announcement.url)
  return _s;
}
inline const std::string& CMsgGCToClientDevAnnouncements_Announcement::_internal_url() const {
  return _impl_.url_.Get();
}
inline void CMsgGCToClientDevAnnouncements_Announcement::_internal_set_url(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.url_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToClientDevAnnouncements_Announcement::_internal_mutable_url() {
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.url_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToClientDevAnnouncements_Announcement::release_url() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientDevAnnouncements.Announcement.url)
  if (!_internal_has_url()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* p = _impl_.url_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.url_.IsDefault()) {
    _impl_.url_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToClientDevAnnouncements_Announcement::set_allocated_url(std::string* url) {
  if (url != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.url_.SetAllocated(url, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.url_.IsDefault()) {
    _impl_.url_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientDevAnnouncements.Announcement.url)
}

// optional uint32 unique_id = 5;
inline bool CMsgGCToClientDevAnnouncements_Announcement::_internal_has_unique_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgGCToClientDevAnnouncements_Announcement::has_unique_id() const {
  return _internal_has_unique_id();
}
inline void CMsgGCToClientDevAnnouncements_Announcement::clear_unique_id() {
  _impl_.unique_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgGCToClientDevAnnouncements_Announcement::_internal_unique_id() const {
  return _impl_.unique_id_;
}
inline uint32_t CMsgGCToClientDevAnnouncements_Announcement::unique_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevAnnouncements.Announcement.unique_id)
  return _internal_unique_id();
}
inline void CMsgGCToClientDevAnnouncements_Announcement::_internal_set_unique_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.unique_id_ = value;
}
inline void CMsgGCToClientDevAnnouncements_Announcement::set_unique_id(uint32_t value) {
  _internal_set_unique_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevAnnouncements.Announcement.unique_id)
}

// optional uint32 posted_time = 6;
inline bool CMsgGCToClientDevAnnouncements_Announcement::_internal_has_posted_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgGCToClientDevAnnouncements_Announcement::has_posted_time() const {
  return _internal_has_posted_time();
}
inline void CMsgGCToClientDevAnnouncements_Announcement::clear_posted_time() {
  _impl_.posted_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CMsgGCToClientDevAnnouncements_Announcement::_internal_posted_time() const {
  return _impl_.posted_time_;
}
inline uint32_t CMsgGCToClientDevAnnouncements_Announcement::posted_time() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevAnnouncements.Announcement.posted_time)
  return _internal_posted_time();
}
inline void CMsgGCToClientDevAnnouncements_Announcement::_internal_set_posted_time(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.posted_time_ = value;
}
inline void CMsgGCToClientDevAnnouncements_Announcement::set_posted_time(uint32_t value) {
  _internal_set_posted_time(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevAnnouncements.Announcement.posted_time)
}

// optional string patch_version = 7;
inline bool CMsgGCToClientDevAnnouncements_Announcement::_internal_has_patch_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCToClientDevAnnouncements_Announcement::has_patch_version() const {
  return _internal_has_patch_version();
}
inline void CMsgGCToClientDevAnnouncements_Announcement::clear_patch_version() {
  _impl_.patch_version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgGCToClientDevAnnouncements_Announcement::patch_version() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevAnnouncements.Announcement.patch_version)
  return _internal_patch_version();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToClientDevAnnouncements_Announcement::set_patch_version(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000008u;
 _impl_.patch_version_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToClientDevAnnouncements.Announcement.patch_version)
}
inline std::string* CMsgGCToClientDevAnnouncements_Announcement::mutable_patch_version() {
  std::string* _s = _internal_mutable_patch_version();
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientDevAnnouncements.Announcement.patch_version)
  return _s;
}
inline const std::string& CMsgGCToClientDevAnnouncements_Announcement::_internal_patch_version() const {
  return _impl_.patch_version_.Get();
}
inline void CMsgGCToClientDevAnnouncements_Announcement::_internal_set_patch_version(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.patch_version_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToClientDevAnnouncements_Announcement::_internal_mutable_patch_version() {
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.patch_version_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToClientDevAnnouncements_Announcement::release_patch_version() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientDevAnnouncements.Announcement.patch_version)
  if (!_internal_has_patch_version()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* p = _impl_.patch_version_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.patch_version_.IsDefault()) {
    _impl_.patch_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToClientDevAnnouncements_Announcement::set_allocated_patch_version(std::string* patch_version) {
  if (patch_version != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.patch_version_.SetAllocated(patch_version, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.patch_version_.IsDefault()) {
    _impl_.patch_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientDevAnnouncements.Announcement.patch_version)
}

// -------------------------------------------------------------------

// CMsgGCToClientDevAnnouncements

// repeated .CMsgGCToClientDevAnnouncements.Announcement announcements = 1;
inline int CMsgGCToClientDevAnnouncements::_internal_announcements_size() const {
  return _impl_.announcements_.size();
}
inline int CMsgGCToClientDevAnnouncements::announcements_size() const {
  return _internal_announcements_size();
}
inline void CMsgGCToClientDevAnnouncements::clear_announcements() {
  _impl_.announcements_.Clear();
}
inline ::CMsgGCToClientDevAnnouncements_Announcement* CMsgGCToClientDevAnnouncements::mutable_announcements(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientDevAnnouncements.announcements)
  return _impl_.announcements_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevAnnouncements_Announcement >*
CMsgGCToClientDevAnnouncements::mutable_announcements() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToClientDevAnnouncements.announcements)
  return &_impl_.announcements_;
}
inline const ::CMsgGCToClientDevAnnouncements_Announcement& CMsgGCToClientDevAnnouncements::_internal_announcements(int index) const {
  return _impl_.announcements_.Get(index);
}
inline const ::CMsgGCToClientDevAnnouncements_Announcement& CMsgGCToClientDevAnnouncements::announcements(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientDevAnnouncements.announcements)
  return _internal_announcements(index);
}
inline ::CMsgGCToClientDevAnnouncements_Announcement* CMsgGCToClientDevAnnouncements::_internal_add_announcements() {
  return _impl_.announcements_.Add();
}
inline ::CMsgGCToClientDevAnnouncements_Announcement* CMsgGCToClientDevAnnouncements::add_announcements() {
  ::CMsgGCToClientDevAnnouncements_Announcement* _add = _internal_add_announcements();
  // @@protoc_insertion_point(field_add:CMsgGCToClientDevAnnouncements.announcements)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToClientDevAnnouncements_Announcement >&
CMsgGCToClientDevAnnouncements::announcements() const {
  // @@protoc_insertion_point(field_list:CMsgGCToClientDevAnnouncements.announcements)
  return _impl_.announcements_;
}

// -------------------------------------------------------------------

// CMsgClientToGCModifyDevAnnouncements

// optional .CMsgClientToGCModifyDevAnnouncements.EOperation operation = 1 [default = k_eCreate];
inline bool CMsgClientToGCModifyDevAnnouncements::_internal_has_operation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientToGCModifyDevAnnouncements::has_operation() const {
  return _internal_has_operation();
}
inline void CMsgClientToGCModifyDevAnnouncements::clear_operation() {
  _impl_.operation_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::CMsgClientToGCModifyDevAnnouncements_EOperation CMsgClientToGCModifyDevAnnouncements::_internal_operation() const {
  return static_cast< ::CMsgClientToGCModifyDevAnnouncements_EOperation >(_impl_.operation_);
}
inline ::CMsgClientToGCModifyDevAnnouncements_EOperation CMsgClientToGCModifyDevAnnouncements::operation() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModifyDevAnnouncements.operation)
  return _internal_operation();
}
inline void CMsgClientToGCModifyDevAnnouncements::_internal_set_operation(::CMsgClientToGCModifyDevAnnouncements_EOperation value) {
  assert(::CMsgClientToGCModifyDevAnnouncements_EOperation_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.operation_ = value;
}
inline void CMsgClientToGCModifyDevAnnouncements::set_operation(::CMsgClientToGCModifyDevAnnouncements_EOperation value) {
  _internal_set_operation(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCModifyDevAnnouncements.operation)
}

// optional uint32 target_id = 2;
inline bool CMsgClientToGCModifyDevAnnouncements::_internal_has_target_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientToGCModifyDevAnnouncements::has_target_id() const {
  return _internal_has_target_id();
}
inline void CMsgClientToGCModifyDevAnnouncements::clear_target_id() {
  _impl_.target_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgClientToGCModifyDevAnnouncements::_internal_target_id() const {
  return _impl_.target_id_;
}
inline uint32_t CMsgClientToGCModifyDevAnnouncements::target_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModifyDevAnnouncements.target_id)
  return _internal_target_id();
}
inline void CMsgClientToGCModifyDevAnnouncements::_internal_set_target_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.target_id_ = value;
}
inline void CMsgClientToGCModifyDevAnnouncements::set_target_id(uint32_t value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCModifyDevAnnouncements.target_id)
}

// optional uint32 priority = 3;
inline bool CMsgClientToGCModifyDevAnnouncements::_internal_has_priority() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientToGCModifyDevAnnouncements::has_priority() const {
  return _internal_has_priority();
}
inline void CMsgClientToGCModifyDevAnnouncements::clear_priority() {
  _impl_.priority_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CMsgClientToGCModifyDevAnnouncements::_internal_priority() const {
  return _impl_.priority_;
}
inline uint32_t CMsgClientToGCModifyDevAnnouncements::priority() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModifyDevAnnouncements.priority)
  return _internal_priority();
}
inline void CMsgClientToGCModifyDevAnnouncements::_internal_set_priority(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.priority_ = value;
}
inline void CMsgClientToGCModifyDevAnnouncements::set_priority(uint32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCModifyDevAnnouncements.priority)
}

// optional string title = 4;
inline bool CMsgClientToGCModifyDevAnnouncements::_internal_has_title() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCModifyDevAnnouncements::has_title() const {
  return _internal_has_title();
}
inline void CMsgClientToGCModifyDevAnnouncements::clear_title() {
  _impl_.title_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCModifyDevAnnouncements::title() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModifyDevAnnouncements.title)
  return _internal_title();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCModifyDevAnnouncements::set_title(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.title_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCModifyDevAnnouncements.title)
}
inline std::string* CMsgClientToGCModifyDevAnnouncements::mutable_title() {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCModifyDevAnnouncements.title)
  return _s;
}
inline const std::string& CMsgClientToGCModifyDevAnnouncements::_internal_title() const {
  return _impl_.title_.Get();
}
inline void CMsgClientToGCModifyDevAnnouncements::_internal_set_title(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.title_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCModifyDevAnnouncements::_internal_mutable_title() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.title_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCModifyDevAnnouncements::release_title() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCModifyDevAnnouncements.title)
  if (!_internal_has_title()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.title_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCModifyDevAnnouncements::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.title_.SetAllocated(title, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCModifyDevAnnouncements.title)
}

// optional string message = 5;
inline bool CMsgClientToGCModifyDevAnnouncements::_internal_has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCModifyDevAnnouncements::has_message() const {
  return _internal_has_message();
}
inline void CMsgClientToGCModifyDevAnnouncements::clear_message() {
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientToGCModifyDevAnnouncements::message() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModifyDevAnnouncements.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCModifyDevAnnouncements::set_message(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.message_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCModifyDevAnnouncements.message)
}
inline std::string* CMsgClientToGCModifyDevAnnouncements::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCModifyDevAnnouncements.message)
  return _s;
}
inline const std::string& CMsgClientToGCModifyDevAnnouncements::_internal_message() const {
  return _impl_.message_.Get();
}
inline void CMsgClientToGCModifyDevAnnouncements::_internal_set_message(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.message_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCModifyDevAnnouncements::_internal_mutable_message() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.message_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCModifyDevAnnouncements::release_message() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCModifyDevAnnouncements.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.message_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCModifyDevAnnouncements::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.message_.SetAllocated(message, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCModifyDevAnnouncements.message)
}

// optional string url = 6;
inline bool CMsgClientToGCModifyDevAnnouncements::_internal_has_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCModifyDevAnnouncements::has_url() const {
  return _internal_has_url();
}
inline void CMsgClientToGCModifyDevAnnouncements::clear_url() {
  _impl_.url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientToGCModifyDevAnnouncements::url() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModifyDevAnnouncements.url)
  return _internal_url();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCModifyDevAnnouncements::set_url(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000004u;
 _impl_.url_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCModifyDevAnnouncements.url)
}
inline std::string* CMsgClientToGCModifyDevAnnouncements::mutable_url() {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCModifyDevAnnouncements.url)
  return _s;
}
inline const std::string& CMsgClientToGCModifyDevAnnouncements::_internal_url() const {
  return _impl_.url_.Get();
}
inline void CMsgClientToGCModifyDevAnnouncements::_internal_set_url(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.url_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCModifyDevAnnouncements::_internal_mutable_url() {
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.url_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCModifyDevAnnouncements::release_url() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCModifyDevAnnouncements.url)
  if (!_internal_has_url()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* p = _impl_.url_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.url_.IsDefault()) {
    _impl_.url_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCModifyDevAnnouncements::set_allocated_url(std::string* url) {
  if (url != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.url_.SetAllocated(url, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.url_.IsDefault()) {
    _impl_.url_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCModifyDevAnnouncements.url)
}

// optional string patch_version = 7;
inline bool CMsgClientToGCModifyDevAnnouncements::_internal_has_patch_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCModifyDevAnnouncements::has_patch_version() const {
  return _internal_has_patch_version();
}
inline void CMsgClientToGCModifyDevAnnouncements::clear_patch_version() {
  _impl_.patch_version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgClientToGCModifyDevAnnouncements::patch_version() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModifyDevAnnouncements.patch_version)
  return _internal_patch_version();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCModifyDevAnnouncements::set_patch_version(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000008u;
 _impl_.patch_version_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCModifyDevAnnouncements.patch_version)
}
inline std::string* CMsgClientToGCModifyDevAnnouncements::mutable_patch_version() {
  std::string* _s = _internal_mutable_patch_version();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCModifyDevAnnouncements.patch_version)
  return _s;
}
inline const std::string& CMsgClientToGCModifyDevAnnouncements::_internal_patch_version() const {
  return _impl_.patch_version_.Get();
}
inline void CMsgClientToGCModifyDevAnnouncements::_internal_set_patch_version(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.patch_version_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCModifyDevAnnouncements::_internal_mutable_patch_version() {
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.patch_version_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCModifyDevAnnouncements::release_patch_version() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCModifyDevAnnouncements.patch_version)
  if (!_internal_has_patch_version()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* p = _impl_.patch_version_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.patch_version_.IsDefault()) {
    _impl_.patch_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCModifyDevAnnouncements::set_allocated_patch_version(std::string* patch_version) {
  if (patch_version != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.patch_version_.SetAllocated(patch_version, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.patch_version_.IsDefault()) {
    _impl_.patch_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCModifyDevAnnouncements.patch_version)
}

// -------------------------------------------------------------------

// CMsgClientToGCModifyDevAnnouncementsResponse

// optional .CMsgClientToGCModifyDevAnnouncementsResponse.EResult result = 1 [default = k_eSuccess];
inline bool CMsgClientToGCModifyDevAnnouncementsResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCModifyDevAnnouncementsResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCModifyDevAnnouncementsResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCModifyDevAnnouncementsResponse_EResult CMsgClientToGCModifyDevAnnouncementsResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCModifyDevAnnouncementsResponse_EResult >(_impl_.result_);
}
inline ::CMsgClientToGCModifyDevAnnouncementsResponse_EResult CMsgClientToGCModifyDevAnnouncementsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModifyDevAnnouncementsResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCModifyDevAnnouncementsResponse::_internal_set_result(::CMsgClientToGCModifyDevAnnouncementsResponse_EResult value) {
  assert(::CMsgClientToGCModifyDevAnnouncementsResponse_EResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCModifyDevAnnouncementsResponse::set_result(::CMsgClientToGCModifyDevAnnouncementsResponse_EResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCModifyDevAnnouncementsResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCDevAction

// optional .CMsgClientToGCDevAction.EAction action = 1 [default = k_eSetDeveloper];
inline bool CMsgClientToGCDevAction::_internal_has_action() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientToGCDevAction::has_action() const {
  return _internal_has_action();
}
inline void CMsgClientToGCDevAction::clear_action() {
  _impl_.action_ = 1;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::_internal_action() const {
  return static_cast< ::CMsgClientToGCDevAction_EAction >(_impl_.action_);
}
inline ::CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::action() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDevAction.action)
  return _internal_action();
}
inline void CMsgClientToGCDevAction::_internal_set_action(::CMsgClientToGCDevAction_EAction value) {
  assert(::CMsgClientToGCDevAction_EAction_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.action_ = value;
}
inline void CMsgClientToGCDevAction::set_action(::CMsgClientToGCDevAction_EAction value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDevAction.action)
}

// optional uint32 account_id = 2;
inline bool CMsgClientToGCDevAction::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCDevAction::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCDevAction::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCDevAction::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCDevAction::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDevAction.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCDevAction::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCDevAction::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDevAction.account_id)
}

// optional uint32 uint_value = 3;
inline bool CMsgClientToGCDevAction::_internal_has_uint_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCDevAction::has_uint_value() const {
  return _internal_has_uint_value();
}
inline void CMsgClientToGCDevAction::clear_uint_value() {
  _impl_.uint_value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCDevAction::_internal_uint_value() const {
  return _impl_.uint_value_;
}
inline uint32_t CMsgClientToGCDevAction::uint_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDevAction.uint_value)
  return _internal_uint_value();
}
inline void CMsgClientToGCDevAction::_internal_set_uint_value(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.uint_value_ = value;
}
inline void CMsgClientToGCDevAction::set_uint_value(uint32_t value) {
  _internal_set_uint_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDevAction.uint_value)
}

// optional int32 int_value = 4;
inline bool CMsgClientToGCDevAction::_internal_has_int_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCDevAction::has_int_value() const {
  return _internal_has_int_value();
}
inline void CMsgClientToGCDevAction::clear_int_value() {
  _impl_.int_value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CMsgClientToGCDevAction::_internal_int_value() const {
  return _impl_.int_value_;
}
inline int32_t CMsgClientToGCDevAction::int_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDevAction.int_value)
  return _internal_int_value();
}
inline void CMsgClientToGCDevAction::_internal_set_int_value(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.int_value_ = value;
}
inline void CMsgClientToGCDevAction::set_int_value(int32_t value) {
  _internal_set_int_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDevAction.int_value)
}

// optional bool bool_value = 5;
inline bool CMsgClientToGCDevAction::_internal_has_bool_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientToGCDevAction::has_bool_value() const {
  return _internal_has_bool_value();
}
inline void CMsgClientToGCDevAction::clear_bool_value() {
  _impl_.bool_value_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgClientToGCDevAction::_internal_bool_value() const {
  return _impl_.bool_value_;
}
inline bool CMsgClientToGCDevAction::bool_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDevAction.bool_value)
  return _internal_bool_value();
}
inline void CMsgClientToGCDevAction::_internal_set_bool_value(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.bool_value_ = value;
}
inline void CMsgClientToGCDevAction::set_bool_value(bool value) {
  _internal_set_bool_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDevAction.bool_value)
}

// optional string str_value = 6;
inline bool CMsgClientToGCDevAction::_internal_has_str_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCDevAction::has_str_value() const {
  return _internal_has_str_value();
}
inline void CMsgClientToGCDevAction::clear_str_value() {
  _impl_.str_value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCDevAction::str_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDevAction.str_value)
  return _internal_str_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCDevAction::set_str_value(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.str_value_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCDevAction.str_value)
}
inline std::string* CMsgClientToGCDevAction::mutable_str_value() {
  std::string* _s = _internal_mutable_str_value();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCDevAction.str_value)
  return _s;
}
inline const std::string& CMsgClientToGCDevAction::_internal_str_value() const {
  return _impl_.str_value_.Get();
}
inline void CMsgClientToGCDevAction::_internal_set_str_value(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.str_value_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCDevAction::_internal_mutable_str_value() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.str_value_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCDevAction::release_str_value() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCDevAction.str_value)
  if (!_internal_has_str_value()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.str_value_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.str_value_.IsDefault()) {
    _impl_.str_value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCDevAction::set_allocated_str_value(std::string* str_value) {
  if (str_value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.str_value_.SetAllocated(str_value, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.str_value_.IsDefault()) {
    _impl_.str_value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCDevAction.str_value)
}

// optional uint64 match_id = 7;
inline bool CMsgClientToGCDevAction::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientToGCDevAction::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgClientToGCDevAction::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint64_t CMsgClientToGCDevAction::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CMsgClientToGCDevAction::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDevAction.match_id)
  return _internal_match_id();
}
inline void CMsgClientToGCDevAction::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.match_id_ = value;
}
inline void CMsgClientToGCDevAction::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDevAction.match_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCDevActionResponse

// optional .CMsgClientToGCDevActionResponse.EResult result = 1 [default = k_eSuccess];
inline bool CMsgClientToGCDevActionResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCDevActionResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCDevActionResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCDevActionResponse_EResult CMsgClientToGCDevActionResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCDevActionResponse_EResult >(_impl_.result_);
}
inline ::CMsgClientToGCDevActionResponse_EResult CMsgClientToGCDevActionResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDevActionResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCDevActionResponse::_internal_set_result(::CMsgClientToGCDevActionResponse_EResult value) {
  assert(::CMsgClientToGCDevActionResponse_EResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCDevActionResponse::set_result(::CMsgClientToGCDevActionResponse_EResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDevActionResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCRecordClientEvents_Event

// optional uint32 time_stamp = 1;
inline bool CMsgClientToGCRecordClientEvents_Event::_internal_has_time_stamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRecordClientEvents_Event::has_time_stamp() const {
  return _internal_has_time_stamp();
}
inline void CMsgClientToGCRecordClientEvents_Event::clear_time_stamp() {
  _impl_.time_stamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCRecordClientEvents_Event::_internal_time_stamp() const {
  return _impl_.time_stamp_;
}
inline uint32_t CMsgClientToGCRecordClientEvents_Event::time_stamp() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordClientEvents.Event.time_stamp)
  return _internal_time_stamp();
}
inline void CMsgClientToGCRecordClientEvents_Event::_internal_set_time_stamp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.time_stamp_ = value;
}
inline void CMsgClientToGCRecordClientEvents_Event::set_time_stamp(uint32_t value) {
  _internal_set_time_stamp(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordClientEvents.Event.time_stamp)
}

// optional .ECitadelClientAccountEvent event_id = 2 [default = k_eLaunchedHeroTest];
inline bool CMsgClientToGCRecordClientEvents_Event::_internal_has_event_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCRecordClientEvents_Event::has_event_id() const {
  return _internal_has_event_id();
}
inline void CMsgClientToGCRecordClientEvents_Event::clear_event_id() {
  _impl_.event_id_ = 1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::ECitadelClientAccountEvent CMsgClientToGCRecordClientEvents_Event::_internal_event_id() const {
  return static_cast< ::ECitadelClientAccountEvent >(_impl_.event_id_);
}
inline ::ECitadelClientAccountEvent CMsgClientToGCRecordClientEvents_Event::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordClientEvents.Event.event_id)
  return _internal_event_id();
}
inline void CMsgClientToGCRecordClientEvents_Event::_internal_set_event_id(::ECitadelClientAccountEvent value) {
  assert(::ECitadelClientAccountEvent_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.event_id_ = value;
}
inline void CMsgClientToGCRecordClientEvents_Event::set_event_id(::ECitadelClientAccountEvent value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordClientEvents.Event.event_id)
}

// optional uint64 event_data = 3;
inline bool CMsgClientToGCRecordClientEvents_Event::_internal_has_event_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCRecordClientEvents_Event::has_event_data() const {
  return _internal_has_event_data();
}
inline void CMsgClientToGCRecordClientEvents_Event::clear_event_data() {
  _impl_.event_data_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CMsgClientToGCRecordClientEvents_Event::_internal_event_data() const {
  return _impl_.event_data_;
}
inline uint64_t CMsgClientToGCRecordClientEvents_Event::event_data() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordClientEvents.Event.event_data)
  return _internal_event_data();
}
inline void CMsgClientToGCRecordClientEvents_Event::_internal_set_event_data(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.event_data_ = value;
}
inline void CMsgClientToGCRecordClientEvents_Event::set_event_data(uint64_t value) {
  _internal_set_event_data(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordClientEvents.Event.event_data)
}

// optional uint32 client_event_index = 4;
inline bool CMsgClientToGCRecordClientEvents_Event::_internal_has_client_event_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRecordClientEvents_Event::has_client_event_index() const {
  return _internal_has_client_event_index();
}
inline void CMsgClientToGCRecordClientEvents_Event::clear_client_event_index() {
  _impl_.client_event_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCRecordClientEvents_Event::_internal_client_event_index() const {
  return _impl_.client_event_index_;
}
inline uint32_t CMsgClientToGCRecordClientEvents_Event::client_event_index() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordClientEvents.Event.client_event_index)
  return _internal_client_event_index();
}
inline void CMsgClientToGCRecordClientEvents_Event::_internal_set_client_event_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.client_event_index_ = value;
}
inline void CMsgClientToGCRecordClientEvents_Event::set_client_event_index(uint32_t value) {
  _internal_set_client_event_index(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordClientEvents.Event.client_event_index)
}

// -------------------------------------------------------------------

// CMsgClientToGCRecordClientEvents

// repeated .CMsgClientToGCRecordClientEvents.Event events = 1;
inline int CMsgClientToGCRecordClientEvents::_internal_events_size() const {
  return _impl_.events_.size();
}
inline int CMsgClientToGCRecordClientEvents::events_size() const {
  return _internal_events_size();
}
inline void CMsgClientToGCRecordClientEvents::clear_events() {
  _impl_.events_.Clear();
}
inline ::CMsgClientToGCRecordClientEvents_Event* CMsgClientToGCRecordClientEvents::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRecordClientEvents.events)
  return _impl_.events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCRecordClientEvents_Event >*
CMsgClientToGCRecordClientEvents::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCRecordClientEvents.events)
  return &_impl_.events_;
}
inline const ::CMsgClientToGCRecordClientEvents_Event& CMsgClientToGCRecordClientEvents::_internal_events(int index) const {
  return _impl_.events_.Get(index);
}
inline const ::CMsgClientToGCRecordClientEvents_Event& CMsgClientToGCRecordClientEvents::events(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordClientEvents.events)
  return _internal_events(index);
}
inline ::CMsgClientToGCRecordClientEvents_Event* CMsgClientToGCRecordClientEvents::_internal_add_events() {
  return _impl_.events_.Add();
}
inline ::CMsgClientToGCRecordClientEvents_Event* CMsgClientToGCRecordClientEvents::add_events() {
  ::CMsgClientToGCRecordClientEvents_Event* _add = _internal_add_events();
  // @@protoc_insertion_point(field_add:CMsgClientToGCRecordClientEvents.events)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCRecordClientEvents_Event >&
CMsgClientToGCRecordClientEvents::events() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCRecordClientEvents.events)
  return _impl_.events_;
}

// optional uint32 client_run_token = 2;
inline bool CMsgClientToGCRecordClientEvents::_internal_has_client_run_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRecordClientEvents::has_client_run_token() const {
  return _internal_has_client_run_token();
}
inline void CMsgClientToGCRecordClientEvents::clear_client_run_token() {
  _impl_.client_run_token_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCRecordClientEvents::_internal_client_run_token() const {
  return _impl_.client_run_token_;
}
inline uint32_t CMsgClientToGCRecordClientEvents::client_run_token() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordClientEvents.client_run_token)
  return _internal_client_run_token();
}
inline void CMsgClientToGCRecordClientEvents::_internal_set_client_run_token(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.client_run_token_ = value;
}
inline void CMsgClientToGCRecordClientEvents::set_client_run_token(uint32_t value) {
  _internal_set_client_run_token(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordClientEvents.client_run_token)
}

// -------------------------------------------------------------------

// CMsgClientToGCRecordClientEventsResponse

// optional bool success = 1;
inline bool CMsgClientToGCRecordClientEventsResponse::_internal_has_success() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRecordClientEventsResponse::has_success() const {
  return _internal_has_success();
}
inline void CMsgClientToGCRecordClientEventsResponse::clear_success() {
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCRecordClientEventsResponse::_internal_success() const {
  return _impl_.success_;
}
inline bool CMsgClientToGCRecordClientEventsResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRecordClientEventsResponse.success)
  return _internal_success();
}
inline void CMsgClientToGCRecordClientEventsResponse::_internal_set_success(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.success_ = value;
}
inline void CMsgClientToGCRecordClientEventsResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRecordClientEventsResponse.success)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetNewPlayerProgress

// optional .ECitadelNewPlayerProgressFlag flag = 1 [default = k_eNewPlayerProgress_GettingStarted];
inline bool CMsgClientToGCSetNewPlayerProgress::_internal_has_flag() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSetNewPlayerProgress::has_flag() const {
  return _internal_has_flag();
}
inline void CMsgClientToGCSetNewPlayerProgress::clear_flag() {
  _impl_.flag_ = 1;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::ECitadelNewPlayerProgressFlag CMsgClientToGCSetNewPlayerProgress::_internal_flag() const {
  return static_cast< ::ECitadelNewPlayerProgressFlag >(_impl_.flag_);
}
inline ::ECitadelNewPlayerProgressFlag CMsgClientToGCSetNewPlayerProgress::flag() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetNewPlayerProgress.flag)
  return _internal_flag();
}
inline void CMsgClientToGCSetNewPlayerProgress::_internal_set_flag(::ECitadelNewPlayerProgressFlag value) {
  assert(::ECitadelNewPlayerProgressFlag_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.flag_ = value;
}
inline void CMsgClientToGCSetNewPlayerProgress::set_flag(::ECitadelNewPlayerProgressFlag value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetNewPlayerProgress.flag)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetNewPlayerProgressResponse

// optional bool success = 1;
inline bool CMsgClientToGCSetNewPlayerProgressResponse::_internal_has_success() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSetNewPlayerProgressResponse::has_success() const {
  return _internal_has_success();
}
inline void CMsgClientToGCSetNewPlayerProgressResponse::clear_success() {
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCSetNewPlayerProgressResponse::_internal_success() const {
  return _impl_.success_;
}
inline bool CMsgClientToGCSetNewPlayerProgressResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetNewPlayerProgressResponse.success)
  return _internal_success();
}
inline void CMsgClientToGCSetNewPlayerProgressResponse::_internal_set_success(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.success_ = value;
}
inline void CMsgClientToGCSetNewPlayerProgressResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetNewPlayerProgressResponse.success)
}

// -------------------------------------------------------------------

// CMsgClientToGCUpdateAccountSync

// repeated uint32 ids = 1;
inline int CMsgClientToGCUpdateAccountSync::_internal_ids_size() const {
  return _impl_.ids_.size();
}
inline int CMsgClientToGCUpdateAccountSync::ids_size() const {
  return _internal_ids_size();
}
inline void CMsgClientToGCUpdateAccountSync::clear_ids() {
  _impl_.ids_.Clear();
}
inline uint32_t CMsgClientToGCUpdateAccountSync::_internal_ids(int index) const {
  return _impl_.ids_.Get(index);
}
inline uint32_t CMsgClientToGCUpdateAccountSync::ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateAccountSync.ids)
  return _internal_ids(index);
}
inline void CMsgClientToGCUpdateAccountSync::set_ids(int index, uint32_t value) {
  _impl_.ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUpdateAccountSync.ids)
}
inline void CMsgClientToGCUpdateAccountSync::_internal_add_ids(uint32_t value) {
  _impl_.ids_.Add(value);
}
inline void CMsgClientToGCUpdateAccountSync::add_ids(uint32_t value) {
  _internal_add_ids(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCUpdateAccountSync.ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCUpdateAccountSync::_internal_ids() const {
  return _impl_.ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCUpdateAccountSync::ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCUpdateAccountSync.ids)
  return _internal_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCUpdateAccountSync::_internal_mutable_ids() {
  return &_impl_.ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCUpdateAccountSync::mutable_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCUpdateAccountSync.ids)
  return _internal_mutable_ids();
}

// repeated uint32 values = 2;
inline int CMsgClientToGCUpdateAccountSync::_internal_values_size() const {
  return _impl_.values_.size();
}
inline int CMsgClientToGCUpdateAccountSync::values_size() const {
  return _internal_values_size();
}
inline void CMsgClientToGCUpdateAccountSync::clear_values() {
  _impl_.values_.Clear();
}
inline uint32_t CMsgClientToGCUpdateAccountSync::_internal_values(int index) const {
  return _impl_.values_.Get(index);
}
inline uint32_t CMsgClientToGCUpdateAccountSync::values(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateAccountSync.values)
  return _internal_values(index);
}
inline void CMsgClientToGCUpdateAccountSync::set_values(int index, uint32_t value) {
  _impl_.values_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUpdateAccountSync.values)
}
inline void CMsgClientToGCUpdateAccountSync::_internal_add_values(uint32_t value) {
  _impl_.values_.Add(value);
}
inline void CMsgClientToGCUpdateAccountSync::add_values(uint32_t value) {
  _internal_add_values(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCUpdateAccountSync.values)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCUpdateAccountSync::_internal_values() const {
  return _impl_.values_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCUpdateAccountSync::values() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCUpdateAccountSync.values)
  return _internal_values();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCUpdateAccountSync::_internal_mutable_values() {
  return &_impl_.values_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCUpdateAccountSync::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCUpdateAccountSync.values)
  return _internal_mutable_values();
}

// -------------------------------------------------------------------

// CMsgClientToGCUpdateAccountSyncResponse

// optional .CMsgClientToGCUpdateAccountSyncResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCUpdateAccountSyncResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUpdateAccountSyncResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCUpdateAccountSyncResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCUpdateAccountSyncResponse_EResponse CMsgClientToGCUpdateAccountSyncResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCUpdateAccountSyncResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCUpdateAccountSyncResponse_EResponse CMsgClientToGCUpdateAccountSyncResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateAccountSyncResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCUpdateAccountSyncResponse::_internal_set_result(::CMsgClientToGCUpdateAccountSyncResponse_EResponse value) {
  assert(::CMsgClientToGCUpdateAccountSyncResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCUpdateAccountSyncResponse::set_result(::CMsgClientToGCUpdateAccountSyncResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUpdateAccountSyncResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetHeroChoice

// -------------------------------------------------------------------

// CMsgClientToGCGetHeroChoiceResponse_Hero

// optional uint32 hero_id = 1;
inline bool CMsgClientToGCGetHeroChoiceResponse_Hero::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetHeroChoiceResponse_Hero::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgClientToGCGetHeroChoiceResponse_Hero::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCGetHeroChoiceResponse_Hero::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgClientToGCGetHeroChoiceResponse_Hero::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetHeroChoiceResponse.Hero.hero_id)
  return _internal_hero_id();
}
inline void CMsgClientToGCGetHeroChoiceResponse_Hero::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.hero_id_ = value;
}
inline void CMsgClientToGCGetHeroChoiceResponse_Hero::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetHeroChoiceResponse.Hero.hero_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetHeroChoiceResponse

// optional .CMsgClientToGCGetHeroChoiceResponse.EResult result = 1 [default = k_eSuccess];
inline bool CMsgClientToGCGetHeroChoiceResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetHeroChoiceResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCGetHeroChoiceResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCGetHeroChoiceResponse_EResult CMsgClientToGCGetHeroChoiceResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCGetHeroChoiceResponse_EResult >(_impl_.result_);
}
inline ::CMsgClientToGCGetHeroChoiceResponse_EResult CMsgClientToGCGetHeroChoiceResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetHeroChoiceResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCGetHeroChoiceResponse::_internal_set_result(::CMsgClientToGCGetHeroChoiceResponse_EResult value) {
  assert(::CMsgClientToGCGetHeroChoiceResponse_EResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCGetHeroChoiceResponse::set_result(::CMsgClientToGCGetHeroChoiceResponse_EResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetHeroChoiceResponse.result)
}

// repeated .CMsgClientToGCGetHeroChoiceResponse.Hero hero_selections = 2;
inline int CMsgClientToGCGetHeroChoiceResponse::_internal_hero_selections_size() const {
  return _impl_.hero_selections_.size();
}
inline int CMsgClientToGCGetHeroChoiceResponse::hero_selections_size() const {
  return _internal_hero_selections_size();
}
inline void CMsgClientToGCGetHeroChoiceResponse::clear_hero_selections() {
  _impl_.hero_selections_.Clear();
}
inline ::CMsgClientToGCGetHeroChoiceResponse_Hero* CMsgClientToGCGetHeroChoiceResponse::mutable_hero_selections(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetHeroChoiceResponse.hero_selections)
  return _impl_.hero_selections_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetHeroChoiceResponse_Hero >*
CMsgClientToGCGetHeroChoiceResponse::mutable_hero_selections() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetHeroChoiceResponse.hero_selections)
  return &_impl_.hero_selections_;
}
inline const ::CMsgClientToGCGetHeroChoiceResponse_Hero& CMsgClientToGCGetHeroChoiceResponse::_internal_hero_selections(int index) const {
  return _impl_.hero_selections_.Get(index);
}
inline const ::CMsgClientToGCGetHeroChoiceResponse_Hero& CMsgClientToGCGetHeroChoiceResponse::hero_selections(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetHeroChoiceResponse.hero_selections)
  return _internal_hero_selections(index);
}
inline ::CMsgClientToGCGetHeroChoiceResponse_Hero* CMsgClientToGCGetHeroChoiceResponse::_internal_add_hero_selections() {
  return _impl_.hero_selections_.Add();
}
inline ::CMsgClientToGCGetHeroChoiceResponse_Hero* CMsgClientToGCGetHeroChoiceResponse::add_hero_selections() {
  ::CMsgClientToGCGetHeroChoiceResponse_Hero* _add = _internal_add_hero_selections();
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetHeroChoiceResponse.hero_selections)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetHeroChoiceResponse_Hero >&
CMsgClientToGCGetHeroChoiceResponse::hero_selections() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetHeroChoiceResponse.hero_selections)
  return _impl_.hero_selections_;
}

// optional uint32 hero_choice_id = 3;
inline bool CMsgClientToGCGetHeroChoiceResponse::_internal_has_hero_choice_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetHeroChoiceResponse::has_hero_choice_id() const {
  return _internal_has_hero_choice_id();
}
inline void CMsgClientToGCGetHeroChoiceResponse::clear_hero_choice_id() {
  _impl_.hero_choice_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCGetHeroChoiceResponse::_internal_hero_choice_id() const {
  return _impl_.hero_choice_id_;
}
inline uint32_t CMsgClientToGCGetHeroChoiceResponse::hero_choice_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetHeroChoiceResponse.hero_choice_id)
  return _internal_hero_choice_id();
}
inline void CMsgClientToGCGetHeroChoiceResponse::_internal_set_hero_choice_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.hero_choice_id_ = value;
}
inline void CMsgClientToGCGetHeroChoiceResponse::set_hero_choice_id(uint32_t value) {
  _internal_set_hero_choice_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetHeroChoiceResponse.hero_choice_id)
}

// optional uint32 select_count = 4;
inline bool CMsgClientToGCGetHeroChoiceResponse::_internal_has_select_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCGetHeroChoiceResponse::has_select_count() const {
  return _internal_has_select_count();
}
inline void CMsgClientToGCGetHeroChoiceResponse::clear_select_count() {
  _impl_.select_count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCGetHeroChoiceResponse::_internal_select_count() const {
  return _impl_.select_count_;
}
inline uint32_t CMsgClientToGCGetHeroChoiceResponse::select_count() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetHeroChoiceResponse.select_count)
  return _internal_select_count();
}
inline void CMsgClientToGCGetHeroChoiceResponse::_internal_set_select_count(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.select_count_ = value;
}
inline void CMsgClientToGCGetHeroChoiceResponse::set_select_count(uint32_t value) {
  _internal_set_select_count(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetHeroChoiceResponse.select_count)
}

// -------------------------------------------------------------------

// CMsgClientToGCUnlockHero

// repeated uint32 hero_ids = 1;
inline int CMsgClientToGCUnlockHero::_internal_hero_ids_size() const {
  return _impl_.hero_ids_.size();
}
inline int CMsgClientToGCUnlockHero::hero_ids_size() const {
  return _internal_hero_ids_size();
}
inline void CMsgClientToGCUnlockHero::clear_hero_ids() {
  _impl_.hero_ids_.Clear();
}
inline uint32_t CMsgClientToGCUnlockHero::_internal_hero_ids(int index) const {
  return _impl_.hero_ids_.Get(index);
}
inline uint32_t CMsgClientToGCUnlockHero::hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockHero.hero_ids)
  return _internal_hero_ids(index);
}
inline void CMsgClientToGCUnlockHero::set_hero_ids(int index, uint32_t value) {
  _impl_.hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockHero.hero_ids)
}
inline void CMsgClientToGCUnlockHero::_internal_add_hero_ids(uint32_t value) {
  _impl_.hero_ids_.Add(value);
}
inline void CMsgClientToGCUnlockHero::add_hero_ids(uint32_t value) {
  _internal_add_hero_ids(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCUnlockHero.hero_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCUnlockHero::_internal_hero_ids() const {
  return _impl_.hero_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCUnlockHero::hero_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCUnlockHero.hero_ids)
  return _internal_hero_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCUnlockHero::_internal_mutable_hero_ids() {
  return &_impl_.hero_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCUnlockHero::mutable_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCUnlockHero.hero_ids)
  return _internal_mutable_hero_ids();
}

// optional uint32 hero_choice_id = 2;
inline bool CMsgClientToGCUnlockHero::_internal_has_hero_choice_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUnlockHero::has_hero_choice_id() const {
  return _internal_has_hero_choice_id();
}
inline void CMsgClientToGCUnlockHero::clear_hero_choice_id() {
  _impl_.hero_choice_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCUnlockHero::_internal_hero_choice_id() const {
  return _impl_.hero_choice_id_;
}
inline uint32_t CMsgClientToGCUnlockHero::hero_choice_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockHero.hero_choice_id)
  return _internal_hero_choice_id();
}
inline void CMsgClientToGCUnlockHero::_internal_set_hero_choice_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.hero_choice_id_ = value;
}
inline void CMsgClientToGCUnlockHero::set_hero_choice_id(uint32_t value) {
  _internal_set_hero_choice_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockHero.hero_choice_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCUnlockHeroResponse

// optional .CMsgClientToGCUnlockHeroResponse.EResult result = 1 [default = k_eSuccess];
inline bool CMsgClientToGCUnlockHeroResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUnlockHeroResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCUnlockHeroResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCUnlockHeroResponse_EResult CMsgClientToGCUnlockHeroResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCUnlockHeroResponse_EResult >(_impl_.result_);
}
inline ::CMsgClientToGCUnlockHeroResponse_EResult CMsgClientToGCUnlockHeroResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUnlockHeroResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCUnlockHeroResponse::_internal_set_result(::CMsgClientToGCUnlockHeroResponse_EResult value) {
  assert(::CMsgClientToGCUnlockHeroResponse_EResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCUnlockHeroResponse::set_result(::CMsgClientToGCUnlockHeroResponse_EResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUnlockHeroResponse.result)
}

// -------------------------------------------------------------------

// CMsgAccountBook_Unlock

// optional uint32 unlock_id = 1;
inline bool CMsgAccountBook_Unlock::_internal_has_unlock_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAccountBook_Unlock::has_unlock_id() const {
  return _internal_has_unlock_id();
}
inline void CMsgAccountBook_Unlock::clear_unlock_id() {
  _impl_.unlock_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgAccountBook_Unlock::_internal_unlock_id() const {
  return _impl_.unlock_id_;
}
inline uint32_t CMsgAccountBook_Unlock::unlock_id() const {
  // @@protoc_insertion_point(field_get:CMsgAccountBook.Unlock.unlock_id)
  return _internal_unlock_id();
}
inline void CMsgAccountBook_Unlock::_internal_set_unlock_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.unlock_id_ = value;
}
inline void CMsgAccountBook_Unlock::set_unlock_id(uint32_t value) {
  _internal_set_unlock_id(value);
  // @@protoc_insertion_point(field_set:CMsgAccountBook.Unlock.unlock_id)
}

// optional uint32 flags = 2;
inline bool CMsgAccountBook_Unlock::_internal_has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgAccountBook_Unlock::has_flags() const {
  return _internal_has_flags();
}
inline void CMsgAccountBook_Unlock::clear_flags() {
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgAccountBook_Unlock::_internal_flags() const {
  return _impl_.flags_;
}
inline uint32_t CMsgAccountBook_Unlock::flags() const {
  // @@protoc_insertion_point(field_get:CMsgAccountBook.Unlock.flags)
  return _internal_flags();
}
inline void CMsgAccountBook_Unlock::_internal_set_flags(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.flags_ = value;
}
inline void CMsgAccountBook_Unlock::set_flags(uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:CMsgAccountBook.Unlock.flags)
}

// -------------------------------------------------------------------

// CMsgAccountBook

// optional uint32 book_id = 1;
inline bool CMsgAccountBook::_internal_has_book_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAccountBook::has_book_id() const {
  return _internal_has_book_id();
}
inline void CMsgAccountBook::clear_book_id() {
  _impl_.book_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgAccountBook::_internal_book_id() const {
  return _impl_.book_id_;
}
inline uint32_t CMsgAccountBook::book_id() const {
  // @@protoc_insertion_point(field_get:CMsgAccountBook.book_id)
  return _internal_book_id();
}
inline void CMsgAccountBook::_internal_set_book_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.book_id_ = value;
}
inline void CMsgAccountBook::set_book_id(uint32_t value) {
  _internal_set_book_id(value);
  // @@protoc_insertion_point(field_set:CMsgAccountBook.book_id)
}

// optional uint32 book_xp = 2;
inline bool CMsgAccountBook::_internal_has_book_xp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgAccountBook::has_book_xp() const {
  return _internal_has_book_xp();
}
inline void CMsgAccountBook::clear_book_xp() {
  _impl_.book_xp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgAccountBook::_internal_book_xp() const {
  return _impl_.book_xp_;
}
inline uint32_t CMsgAccountBook::book_xp() const {
  // @@protoc_insertion_point(field_get:CMsgAccountBook.book_xp)
  return _internal_book_xp();
}
inline void CMsgAccountBook::_internal_set_book_xp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.book_xp_ = value;
}
inline void CMsgAccountBook::set_book_xp(uint32_t value) {
  _internal_set_book_xp(value);
  // @@protoc_insertion_point(field_set:CMsgAccountBook.book_xp)
}

// optional uint32 spent_xp = 3;
inline bool CMsgAccountBook::_internal_has_spent_xp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgAccountBook::has_spent_xp() const {
  return _internal_has_spent_xp();
}
inline void CMsgAccountBook::clear_spent_xp() {
  _impl_.spent_xp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgAccountBook::_internal_spent_xp() const {
  return _impl_.spent_xp_;
}
inline uint32_t CMsgAccountBook::spent_xp() const {
  // @@protoc_insertion_point(field_get:CMsgAccountBook.spent_xp)
  return _internal_spent_xp();
}
inline void CMsgAccountBook::_internal_set_spent_xp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.spent_xp_ = value;
}
inline void CMsgAccountBook::set_spent_xp(uint32_t value) {
  _internal_set_spent_xp(value);
  // @@protoc_insertion_point(field_set:CMsgAccountBook.spent_xp)
}

// repeated .CMsgAccountBook.Unlock unlocks = 4;
inline int CMsgAccountBook::_internal_unlocks_size() const {
  return _impl_.unlocks_.size();
}
inline int CMsgAccountBook::unlocks_size() const {
  return _internal_unlocks_size();
}
inline void CMsgAccountBook::clear_unlocks() {
  _impl_.unlocks_.Clear();
}
inline ::CMsgAccountBook_Unlock* CMsgAccountBook::mutable_unlocks(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgAccountBook.unlocks)
  return _impl_.unlocks_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountBook_Unlock >*
CMsgAccountBook::mutable_unlocks() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAccountBook.unlocks)
  return &_impl_.unlocks_;
}
inline const ::CMsgAccountBook_Unlock& CMsgAccountBook::_internal_unlocks(int index) const {
  return _impl_.unlocks_.Get(index);
}
inline const ::CMsgAccountBook_Unlock& CMsgAccountBook::unlocks(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAccountBook.unlocks)
  return _internal_unlocks(index);
}
inline ::CMsgAccountBook_Unlock* CMsgAccountBook::_internal_add_unlocks() {
  return _impl_.unlocks_.Add();
}
inline ::CMsgAccountBook_Unlock* CMsgAccountBook::add_unlocks() {
  ::CMsgAccountBook_Unlock* _add = _internal_add_unlocks();
  // @@protoc_insertion_point(field_add:CMsgAccountBook.unlocks)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountBook_Unlock >&
CMsgAccountBook::unlocks() const {
  // @@protoc_insertion_point(field_list:CMsgAccountBook.unlocks)
  return _impl_.unlocks_;
}

// -------------------------------------------------------------------

// CMsgClientToGCBookUnlock

// optional uint32 book_id = 1;
inline bool CMsgClientToGCBookUnlock::_internal_has_book_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCBookUnlock::has_book_id() const {
  return _internal_has_book_id();
}
inline void CMsgClientToGCBookUnlock::clear_book_id() {
  _impl_.book_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCBookUnlock::_internal_book_id() const {
  return _impl_.book_id_;
}
inline uint32_t CMsgClientToGCBookUnlock::book_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCBookUnlock.book_id)
  return _internal_book_id();
}
inline void CMsgClientToGCBookUnlock::_internal_set_book_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.book_id_ = value;
}
inline void CMsgClientToGCBookUnlock::set_book_id(uint32_t value) {
  _internal_set_book_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCBookUnlock.book_id)
}

// optional uint32 unlock_id = 2;
inline bool CMsgClientToGCBookUnlock::_internal_has_unlock_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCBookUnlock::has_unlock_id() const {
  return _internal_has_unlock_id();
}
inline void CMsgClientToGCBookUnlock::clear_unlock_id() {
  _impl_.unlock_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCBookUnlock::_internal_unlock_id() const {
  return _impl_.unlock_id_;
}
inline uint32_t CMsgClientToGCBookUnlock::unlock_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCBookUnlock.unlock_id)
  return _internal_unlock_id();
}
inline void CMsgClientToGCBookUnlock::_internal_set_unlock_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unlock_id_ = value;
}
inline void CMsgClientToGCBookUnlock::set_unlock_id(uint32_t value) {
  _internal_set_unlock_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCBookUnlock.unlock_id)
}

// optional uint32 expected_cost = 3;
inline bool CMsgClientToGCBookUnlock::_internal_has_expected_cost() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCBookUnlock::has_expected_cost() const {
  return _internal_has_expected_cost();
}
inline void CMsgClientToGCBookUnlock::clear_expected_cost() {
  _impl_.expected_cost_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCBookUnlock::_internal_expected_cost() const {
  return _impl_.expected_cost_;
}
inline uint32_t CMsgClientToGCBookUnlock::expected_cost() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCBookUnlock.expected_cost)
  return _internal_expected_cost();
}
inline void CMsgClientToGCBookUnlock::_internal_set_expected_cost(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.expected_cost_ = value;
}
inline void CMsgClientToGCBookUnlock::set_expected_cost(uint32_t value) {
  _internal_set_expected_cost(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCBookUnlock.expected_cost)
}

// optional uint32 client_version = 4;
inline bool CMsgClientToGCBookUnlock::_internal_has_client_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCBookUnlock::has_client_version() const {
  return _internal_has_client_version();
}
inline void CMsgClientToGCBookUnlock::clear_client_version() {
  _impl_.client_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgClientToGCBookUnlock::_internal_client_version() const {
  return _impl_.client_version_;
}
inline uint32_t CMsgClientToGCBookUnlock::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCBookUnlock.client_version)
  return _internal_client_version();
}
inline void CMsgClientToGCBookUnlock::_internal_set_client_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.client_version_ = value;
}
inline void CMsgClientToGCBookUnlock::set_client_version(uint32_t value) {
  _internal_set_client_version(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCBookUnlock.client_version)
}

// -------------------------------------------------------------------

// CMsgClientToGCBookUnlockResponse

// optional .CMsgClientToGCBookUnlockResponse.EResult result = 1 [default = k_eSuccess];
inline bool CMsgClientToGCBookUnlockResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCBookUnlockResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCBookUnlockResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCBookUnlockResponse_EResult CMsgClientToGCBookUnlockResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCBookUnlockResponse_EResult >(_impl_.result_);
}
inline ::CMsgClientToGCBookUnlockResponse_EResult CMsgClientToGCBookUnlockResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCBookUnlockResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCBookUnlockResponse::_internal_set_result(::CMsgClientToGCBookUnlockResponse_EResult value) {
  assert(::CMsgClientToGCBookUnlockResponse_EResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCBookUnlockResponse::set_result(::CMsgClientToGCBookUnlockResponse_EResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCBookUnlockResponse.result)
}

// optional .CMsgAccountBook updated_book = 2;
inline bool CMsgClientToGCBookUnlockResponse::_internal_has_updated_book() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_book_ != nullptr);
  return value;
}
inline bool CMsgClientToGCBookUnlockResponse::has_updated_book() const {
  return _internal_has_updated_book();
}
inline void CMsgClientToGCBookUnlockResponse::clear_updated_book() {
  if (_impl_.updated_book_ != nullptr) _impl_.updated_book_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgAccountBook& CMsgClientToGCBookUnlockResponse::_internal_updated_book() const {
  const ::CMsgAccountBook* p = _impl_.updated_book_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgAccountBook&>(
      ::_CMsgAccountBook_default_instance_);
}
inline const ::CMsgAccountBook& CMsgClientToGCBookUnlockResponse::updated_book() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCBookUnlockResponse.updated_book)
  return _internal_updated_book();
}
inline void CMsgClientToGCBookUnlockResponse::unsafe_arena_set_allocated_updated_book(
    ::CMsgAccountBook* updated_book) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.updated_book_);
  }
  _impl_.updated_book_ = updated_book;
  if (updated_book) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCBookUnlockResponse.updated_book)
}
inline ::CMsgAccountBook* CMsgClientToGCBookUnlockResponse::release_updated_book() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountBook* temp = _impl_.updated_book_;
  _impl_.updated_book_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgAccountBook* CMsgClientToGCBookUnlockResponse::unsafe_arena_release_updated_book() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCBookUnlockResponse.updated_book)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountBook* temp = _impl_.updated_book_;
  _impl_.updated_book_ = nullptr;
  return temp;
}
inline ::CMsgAccountBook* CMsgClientToGCBookUnlockResponse::_internal_mutable_updated_book() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.updated_book_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgAccountBook>(GetArenaForAllocation());
    _impl_.updated_book_ = p;
  }
  return _impl_.updated_book_;
}
inline ::CMsgAccountBook* CMsgClientToGCBookUnlockResponse::mutable_updated_book() {
  ::CMsgAccountBook* _msg = _internal_mutable_updated_book();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCBookUnlockResponse.updated_book)
  return _msg;
}
inline void CMsgClientToGCBookUnlockResponse::set_allocated_updated_book(::CMsgAccountBook* updated_book) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.updated_book_;
  }
  if (updated_book) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(updated_book);
    if (message_arena != submessage_arena) {
      updated_book = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updated_book, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.updated_book_ = updated_book;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCBookUnlockResponse.updated_book)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetBook

// optional uint32 book_id = 1;
inline bool CMsgClientToGCGetBook::_internal_has_book_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetBook::has_book_id() const {
  return _internal_has_book_id();
}
inline void CMsgClientToGCGetBook::clear_book_id() {
  _impl_.book_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCGetBook::_internal_book_id() const {
  return _impl_.book_id_;
}
inline uint32_t CMsgClientToGCGetBook::book_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetBook.book_id)
  return _internal_book_id();
}
inline void CMsgClientToGCGetBook::_internal_set_book_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.book_id_ = value;
}
inline void CMsgClientToGCGetBook::set_book_id(uint32_t value) {
  _internal_set_book_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetBook.book_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetBookResponse

// optional .CMsgClientToGCGetBookResponse.EResult result = 1 [default = k_eSuccess];
inline bool CMsgClientToGCGetBookResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetBookResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCGetBookResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCGetBookResponse_EResult CMsgClientToGCGetBookResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCGetBookResponse_EResult >(_impl_.result_);
}
inline ::CMsgClientToGCGetBookResponse_EResult CMsgClientToGCGetBookResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetBookResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCGetBookResponse::_internal_set_result(::CMsgClientToGCGetBookResponse_EResult value) {
  assert(::CMsgClientToGCGetBookResponse_EResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCGetBookResponse::set_result(::CMsgClientToGCGetBookResponse_EResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetBookResponse.result)
}

// optional .CMsgAccountBook book = 2;
inline bool CMsgClientToGCGetBookResponse::_internal_has_book() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.book_ != nullptr);
  return value;
}
inline bool CMsgClientToGCGetBookResponse::has_book() const {
  return _internal_has_book();
}
inline void CMsgClientToGCGetBookResponse::clear_book() {
  if (_impl_.book_ != nullptr) _impl_.book_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgAccountBook& CMsgClientToGCGetBookResponse::_internal_book() const {
  const ::CMsgAccountBook* p = _impl_.book_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgAccountBook&>(
      ::_CMsgAccountBook_default_instance_);
}
inline const ::CMsgAccountBook& CMsgClientToGCGetBookResponse::book() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetBookResponse.book)
  return _internal_book();
}
inline void CMsgClientToGCGetBookResponse::unsafe_arena_set_allocated_book(
    ::CMsgAccountBook* book) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.book_);
  }
  _impl_.book_ = book;
  if (book) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCGetBookResponse.book)
}
inline ::CMsgAccountBook* CMsgClientToGCGetBookResponse::release_book() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountBook* temp = _impl_.book_;
  _impl_.book_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgAccountBook* CMsgClientToGCGetBookResponse::unsafe_arena_release_book() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGetBookResponse.book)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountBook* temp = _impl_.book_;
  _impl_.book_ = nullptr;
  return temp;
}
inline ::CMsgAccountBook* CMsgClientToGCGetBookResponse::_internal_mutable_book() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.book_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgAccountBook>(GetArenaForAllocation());
    _impl_.book_ = p;
  }
  return _impl_.book_;
}
inline ::CMsgAccountBook* CMsgClientToGCGetBookResponse::mutable_book() {
  ::CMsgAccountBook* _msg = _internal_mutable_book();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetBookResponse.book)
  return _msg;
}
inline void CMsgClientToGCGetBookResponse::set_allocated_book(::CMsgAccountBook* book) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.book_;
  }
  if (book) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(book);
    if (message_arena != submessage_arena) {
      book = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, book, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.book_ = book;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetBookResponse.book)
}

// -------------------------------------------------------------------

// CMsgGCToClientBookUpdated

// optional .CMsgAccountBook book = 1;
inline bool CMsgGCToClientBookUpdated::_internal_has_book() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.book_ != nullptr);
  return value;
}
inline bool CMsgGCToClientBookUpdated::has_book() const {
  return _internal_has_book();
}
inline void CMsgGCToClientBookUpdated::clear_book() {
  if (_impl_.book_ != nullptr) _impl_.book_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgAccountBook& CMsgGCToClientBookUpdated::_internal_book() const {
  const ::CMsgAccountBook* p = _impl_.book_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgAccountBook&>(
      ::_CMsgAccountBook_default_instance_);
}
inline const ::CMsgAccountBook& CMsgGCToClientBookUpdated::book() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientBookUpdated.book)
  return _internal_book();
}
inline void CMsgGCToClientBookUpdated::unsafe_arena_set_allocated_book(
    ::CMsgAccountBook* book) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.book_);
  }
  _impl_.book_ = book;
  if (book) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToClientBookUpdated.book)
}
inline ::CMsgAccountBook* CMsgGCToClientBookUpdated::release_book() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountBook* temp = _impl_.book_;
  _impl_.book_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgAccountBook* CMsgGCToClientBookUpdated::unsafe_arena_release_book() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientBookUpdated.book)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountBook* temp = _impl_.book_;
  _impl_.book_ = nullptr;
  return temp;
}
inline ::CMsgAccountBook* CMsgGCToClientBookUpdated::_internal_mutable_book() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.book_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgAccountBook>(GetArenaForAllocation());
    _impl_.book_ = p;
  }
  return _impl_.book_;
}
inline ::CMsgAccountBook* CMsgGCToClientBookUpdated::mutable_book() {
  ::CMsgAccountBook* _msg = _internal_mutable_book();
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientBookUpdated.book)
  return _msg;
}
inline void CMsgGCToClientBookUpdated::set_allocated_book(::CMsgAccountBook* book) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.book_;
  }
  if (book) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(book);
    if (message_arena != submessage_arena) {
      book = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, book, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.book_ = book;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientBookUpdated.book)
}

// -------------------------------------------------------------------

// CMsgClientToGCSubmitPlaytestUser

// optional string location = 3;
inline bool CMsgClientToGCSubmitPlaytestUser::_internal_has_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSubmitPlaytestUser::has_location() const {
  return _internal_has_location();
}
inline void CMsgClientToGCSubmitPlaytestUser::clear_location() {
  _impl_.location_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCSubmitPlaytestUser::location() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSubmitPlaytestUser.location)
  return _internal_location();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCSubmitPlaytestUser::set_location(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.location_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCSubmitPlaytestUser.location)
}
inline std::string* CMsgClientToGCSubmitPlaytestUser::mutable_location() {
  std::string* _s = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSubmitPlaytestUser.location)
  return _s;
}
inline const std::string& CMsgClientToGCSubmitPlaytestUser::_internal_location() const {
  return _impl_.location_.Get();
}
inline void CMsgClientToGCSubmitPlaytestUser::_internal_set_location(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.location_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCSubmitPlaytestUser::_internal_mutable_location() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.location_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCSubmitPlaytestUser::release_location() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCSubmitPlaytestUser.location)
  if (!_internal_has_location()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.location_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.location_.IsDefault()) {
    _impl_.location_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCSubmitPlaytestUser::set_allocated_location(std::string* location) {
  if (location != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.location_.SetAllocated(location, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.location_.IsDefault()) {
    _impl_.location_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSubmitPlaytestUser.location)
}

// optional uint32 target_account_id = 4;
inline bool CMsgClientToGCSubmitPlaytestUser::_internal_has_target_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCSubmitPlaytestUser::has_target_account_id() const {
  return _internal_has_target_account_id();
}
inline void CMsgClientToGCSubmitPlaytestUser::clear_target_account_id() {
  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCSubmitPlaytestUser::_internal_target_account_id() const {
  return _impl_.target_account_id_;
}
inline uint32_t CMsgClientToGCSubmitPlaytestUser::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSubmitPlaytestUser.target_account_id)
  return _internal_target_account_id();
}
inline void CMsgClientToGCSubmitPlaytestUser::_internal_set_target_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.target_account_id_ = value;
}
inline void CMsgClientToGCSubmitPlaytestUser::set_target_account_id(uint32_t value) {
  _internal_set_target_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSubmitPlaytestUser.target_account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCSubmitPlaytestUserResponse

// optional .CMsgClientToGCSubmitPlaytestUserResponse.EResponse response = 1 [default = eResponse_Success];
inline bool CMsgClientToGCSubmitPlaytestUserResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSubmitPlaytestUserResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCSubmitPlaytestUserResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCSubmitPlaytestUserResponse_EResponse CMsgClientToGCSubmitPlaytestUserResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCSubmitPlaytestUserResponse_EResponse >(_impl_.response_);
}
inline ::CMsgClientToGCSubmitPlaytestUserResponse_EResponse CMsgClientToGCSubmitPlaytestUserResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSubmitPlaytestUserResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCSubmitPlaytestUserResponse::_internal_set_response(::CMsgClientToGCSubmitPlaytestUserResponse_EResponse value) {
  assert(::CMsgClientToGCSubmitPlaytestUserResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCSubmitPlaytestUserResponse::set_response(::CMsgClientToGCSubmitPlaytestUserResponse_EResponse value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSubmitPlaytestUserResponse.response)
}

// -------------------------------------------------------------------

// CMsgHeroBuild_BuildModEntry

// optional uint32 ability_id = 1;
inline bool CMsgHeroBuild_BuildModEntry::_internal_has_ability_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgHeroBuild_BuildModEntry::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CMsgHeroBuild_BuildModEntry::clear_ability_id() {
  _impl_.ability_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgHeroBuild_BuildModEntry::_internal_ability_id() const {
  return _impl_.ability_id_;
}
inline uint32_t CMsgHeroBuild_BuildModEntry::ability_id() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.BuildModEntry.ability_id)
  return _internal_ability_id();
}
inline void CMsgHeroBuild_BuildModEntry::_internal_set_ability_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ability_id_ = value;
}
inline void CMsgHeroBuild_BuildModEntry::set_ability_id(uint32_t value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.BuildModEntry.ability_id)
}

// optional string annotation = 2;
inline bool CMsgHeroBuild_BuildModEntry::_internal_has_annotation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgHeroBuild_BuildModEntry::has_annotation() const {
  return _internal_has_annotation();
}
inline void CMsgHeroBuild_BuildModEntry::clear_annotation() {
  _impl_.annotation_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgHeroBuild_BuildModEntry::annotation() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.BuildModEntry.annotation)
  return _internal_annotation();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgHeroBuild_BuildModEntry::set_annotation(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.annotation_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.BuildModEntry.annotation)
}
inline std::string* CMsgHeroBuild_BuildModEntry::mutable_annotation() {
  std::string* _s = _internal_mutable_annotation();
  // @@protoc_insertion_point(field_mutable:CMsgHeroBuild.BuildModEntry.annotation)
  return _s;
}
inline const std::string& CMsgHeroBuild_BuildModEntry::_internal_annotation() const {
  return _impl_.annotation_.Get();
}
inline void CMsgHeroBuild_BuildModEntry::_internal_set_annotation(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.annotation_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgHeroBuild_BuildModEntry::_internal_mutable_annotation() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.annotation_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgHeroBuild_BuildModEntry::release_annotation() {
  // @@protoc_insertion_point(field_release:CMsgHeroBuild.BuildModEntry.annotation)
  if (!_internal_has_annotation()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.annotation_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.annotation_.IsDefault()) {
    _impl_.annotation_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgHeroBuild_BuildModEntry::set_allocated_annotation(std::string* annotation) {
  if (annotation != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.annotation_.SetAllocated(annotation, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.annotation_.IsDefault()) {
    _impl_.annotation_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgHeroBuild.BuildModEntry.annotation)
}

// -------------------------------------------------------------------

// CMsgHeroBuild_BuildModCategory

// repeated .CMsgHeroBuild.BuildModEntry mods = 1;
inline int CMsgHeroBuild_BuildModCategory::_internal_mods_size() const {
  return _impl_.mods_.size();
}
inline int CMsgHeroBuild_BuildModCategory::mods_size() const {
  return _internal_mods_size();
}
inline void CMsgHeroBuild_BuildModCategory::clear_mods() {
  _impl_.mods_.Clear();
}
inline ::CMsgHeroBuild_BuildModEntry* CMsgHeroBuild_BuildModCategory::mutable_mods(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgHeroBuild.BuildModCategory.mods)
  return _impl_.mods_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_BuildModEntry >*
CMsgHeroBuild_BuildModCategory::mutable_mods() {
  // @@protoc_insertion_point(field_mutable_list:CMsgHeroBuild.BuildModCategory.mods)
  return &_impl_.mods_;
}
inline const ::CMsgHeroBuild_BuildModEntry& CMsgHeroBuild_BuildModCategory::_internal_mods(int index) const {
  return _impl_.mods_.Get(index);
}
inline const ::CMsgHeroBuild_BuildModEntry& CMsgHeroBuild_BuildModCategory::mods(int index) const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.BuildModCategory.mods)
  return _internal_mods(index);
}
inline ::CMsgHeroBuild_BuildModEntry* CMsgHeroBuild_BuildModCategory::_internal_add_mods() {
  return _impl_.mods_.Add();
}
inline ::CMsgHeroBuild_BuildModEntry* CMsgHeroBuild_BuildModCategory::add_mods() {
  ::CMsgHeroBuild_BuildModEntry* _add = _internal_add_mods();
  // @@protoc_insertion_point(field_add:CMsgHeroBuild.BuildModCategory.mods)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_BuildModEntry >&
CMsgHeroBuild_BuildModCategory::mods() const {
  // @@protoc_insertion_point(field_list:CMsgHeroBuild.BuildModCategory.mods)
  return _impl_.mods_;
}

// optional string name = 2;
inline bool CMsgHeroBuild_BuildModCategory::_internal_has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgHeroBuild_BuildModCategory::has_name() const {
  return _internal_has_name();
}
inline void CMsgHeroBuild_BuildModCategory::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgHeroBuild_BuildModCategory::name() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.BuildModCategory.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgHeroBuild_BuildModCategory::set_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.BuildModCategory.name)
}
inline std::string* CMsgHeroBuild_BuildModCategory::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CMsgHeroBuild.BuildModCategory.name)
  return _s;
}
inline const std::string& CMsgHeroBuild_BuildModCategory::_internal_name() const {
  return _impl_.name_.Get();
}
inline void CMsgHeroBuild_BuildModCategory::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgHeroBuild_BuildModCategory::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgHeroBuild_BuildModCategory::release_name() {
  // @@protoc_insertion_point(field_release:CMsgHeroBuild.BuildModCategory.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgHeroBuild_BuildModCategory::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgHeroBuild.BuildModCategory.name)
}

// optional string description = 3;
inline bool CMsgHeroBuild_BuildModCategory::_internal_has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgHeroBuild_BuildModCategory::has_description() const {
  return _internal_has_description();
}
inline void CMsgHeroBuild_BuildModCategory::clear_description() {
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgHeroBuild_BuildModCategory::description() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.BuildModCategory.description)
  return _internal_description();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgHeroBuild_BuildModCategory::set_description(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.description_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.BuildModCategory.description)
}
inline std::string* CMsgHeroBuild_BuildModCategory::mutable_description() {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:CMsgHeroBuild.BuildModCategory.description)
  return _s;
}
inline const std::string& CMsgHeroBuild_BuildModCategory::_internal_description() const {
  return _impl_.description_.Get();
}
inline void CMsgHeroBuild_BuildModCategory::_internal_set_description(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgHeroBuild_BuildModCategory::_internal_mutable_description() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.description_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgHeroBuild_BuildModCategory::release_description() {
  // @@protoc_insertion_point(field_release:CMsgHeroBuild.BuildModCategory.description)
  if (!_internal_has_description()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.description_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgHeroBuild_BuildModCategory::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.description_.SetAllocated(description, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgHeroBuild.BuildModCategory.description)
}

// optional float width = 4;
inline bool CMsgHeroBuild_BuildModCategory::_internal_has_width() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgHeroBuild_BuildModCategory::has_width() const {
  return _internal_has_width();
}
inline void CMsgHeroBuild_BuildModCategory::clear_width() {
  _impl_.width_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CMsgHeroBuild_BuildModCategory::_internal_width() const {
  return _impl_.width_;
}
inline float CMsgHeroBuild_BuildModCategory::width() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.BuildModCategory.width)
  return _internal_width();
}
inline void CMsgHeroBuild_BuildModCategory::_internal_set_width(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.width_ = value;
}
inline void CMsgHeroBuild_BuildModCategory::set_width(float value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.BuildModCategory.width)
}

// optional float height = 5;
inline bool CMsgHeroBuild_BuildModCategory::_internal_has_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgHeroBuild_BuildModCategory::has_height() const {
  return _internal_has_height();
}
inline void CMsgHeroBuild_BuildModCategory::clear_height() {
  _impl_.height_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CMsgHeroBuild_BuildModCategory::_internal_height() const {
  return _impl_.height_;
}
inline float CMsgHeroBuild_BuildModCategory::height() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.BuildModCategory.height)
  return _internal_height();
}
inline void CMsgHeroBuild_BuildModCategory::_internal_set_height(float value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.height_ = value;
}
inline void CMsgHeroBuild_BuildModCategory::set_height(float value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.BuildModCategory.height)
}

// -------------------------------------------------------------------

// CMsgHeroBuild_CurrencyChange

// optional uint32 ability_id = 1;
inline bool CMsgHeroBuild_CurrencyChange::_internal_has_ability_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgHeroBuild_CurrencyChange::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CMsgHeroBuild_CurrencyChange::clear_ability_id() {
  _impl_.ability_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgHeroBuild_CurrencyChange::_internal_ability_id() const {
  return _impl_.ability_id_;
}
inline uint32_t CMsgHeroBuild_CurrencyChange::ability_id() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.CurrencyChange.ability_id)
  return _internal_ability_id();
}
inline void CMsgHeroBuild_CurrencyChange::_internal_set_ability_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ability_id_ = value;
}
inline void CMsgHeroBuild_CurrencyChange::set_ability_id(uint32_t value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.CurrencyChange.ability_id)
}

// optional int32 currency_type = 2;
inline bool CMsgHeroBuild_CurrencyChange::_internal_has_currency_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgHeroBuild_CurrencyChange::has_currency_type() const {
  return _internal_has_currency_type();
}
inline void CMsgHeroBuild_CurrencyChange::clear_currency_type() {
  _impl_.currency_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CMsgHeroBuild_CurrencyChange::_internal_currency_type() const {
  return _impl_.currency_type_;
}
inline int32_t CMsgHeroBuild_CurrencyChange::currency_type() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.CurrencyChange.currency_type)
  return _internal_currency_type();
}
inline void CMsgHeroBuild_CurrencyChange::_internal_set_currency_type(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.currency_type_ = value;
}
inline void CMsgHeroBuild_CurrencyChange::set_currency_type(int32_t value) {
  _internal_set_currency_type(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.CurrencyChange.currency_type)
}

// optional int32 delta = 3;
inline bool CMsgHeroBuild_CurrencyChange::_internal_has_delta() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgHeroBuild_CurrencyChange::has_delta() const {
  return _internal_has_delta();
}
inline void CMsgHeroBuild_CurrencyChange::clear_delta() {
  _impl_.delta_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CMsgHeroBuild_CurrencyChange::_internal_delta() const {
  return _impl_.delta_;
}
inline int32_t CMsgHeroBuild_CurrencyChange::delta() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.CurrencyChange.delta)
  return _internal_delta();
}
inline void CMsgHeroBuild_CurrencyChange::_internal_set_delta(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.delta_ = value;
}
inline void CMsgHeroBuild_CurrencyChange::set_delta(int32_t value) {
  _internal_set_delta(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.CurrencyChange.delta)
}

// optional string annotation = 4;
inline bool CMsgHeroBuild_CurrencyChange::_internal_has_annotation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgHeroBuild_CurrencyChange::has_annotation() const {
  return _internal_has_annotation();
}
inline void CMsgHeroBuild_CurrencyChange::clear_annotation() {
  _impl_.annotation_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgHeroBuild_CurrencyChange::annotation() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.CurrencyChange.annotation)
  return _internal_annotation();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgHeroBuild_CurrencyChange::set_annotation(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.annotation_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.CurrencyChange.annotation)
}
inline std::string* CMsgHeroBuild_CurrencyChange::mutable_annotation() {
  std::string* _s = _internal_mutable_annotation();
  // @@protoc_insertion_point(field_mutable:CMsgHeroBuild.CurrencyChange.annotation)
  return _s;
}
inline const std::string& CMsgHeroBuild_CurrencyChange::_internal_annotation() const {
  return _impl_.annotation_.Get();
}
inline void CMsgHeroBuild_CurrencyChange::_internal_set_annotation(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.annotation_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgHeroBuild_CurrencyChange::_internal_mutable_annotation() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.annotation_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgHeroBuild_CurrencyChange::release_annotation() {
  // @@protoc_insertion_point(field_release:CMsgHeroBuild.CurrencyChange.annotation)
  if (!_internal_has_annotation()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.annotation_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.annotation_.IsDefault()) {
    _impl_.annotation_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgHeroBuild_CurrencyChange::set_allocated_annotation(std::string* annotation) {
  if (annotation != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.annotation_.SetAllocated(annotation, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.annotation_.IsDefault()) {
    _impl_.annotation_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgHeroBuild.CurrencyChange.annotation)
}

// -------------------------------------------------------------------

// CMsgHeroBuild_AbilityOrder

// repeated .CMsgHeroBuild.CurrencyChange currency_changes = 1;
inline int CMsgHeroBuild_AbilityOrder::_internal_currency_changes_size() const {
  return _impl_.currency_changes_.size();
}
inline int CMsgHeroBuild_AbilityOrder::currency_changes_size() const {
  return _internal_currency_changes_size();
}
inline void CMsgHeroBuild_AbilityOrder::clear_currency_changes() {
  _impl_.currency_changes_.Clear();
}
inline ::CMsgHeroBuild_CurrencyChange* CMsgHeroBuild_AbilityOrder::mutable_currency_changes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgHeroBuild.AbilityOrder.currency_changes)
  return _impl_.currency_changes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_CurrencyChange >*
CMsgHeroBuild_AbilityOrder::mutable_currency_changes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgHeroBuild.AbilityOrder.currency_changes)
  return &_impl_.currency_changes_;
}
inline const ::CMsgHeroBuild_CurrencyChange& CMsgHeroBuild_AbilityOrder::_internal_currency_changes(int index) const {
  return _impl_.currency_changes_.Get(index);
}
inline const ::CMsgHeroBuild_CurrencyChange& CMsgHeroBuild_AbilityOrder::currency_changes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.AbilityOrder.currency_changes)
  return _internal_currency_changes(index);
}
inline ::CMsgHeroBuild_CurrencyChange* CMsgHeroBuild_AbilityOrder::_internal_add_currency_changes() {
  return _impl_.currency_changes_.Add();
}
inline ::CMsgHeroBuild_CurrencyChange* CMsgHeroBuild_AbilityOrder::add_currency_changes() {
  ::CMsgHeroBuild_CurrencyChange* _add = _internal_add_currency_changes();
  // @@protoc_insertion_point(field_add:CMsgHeroBuild.AbilityOrder.currency_changes)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_CurrencyChange >&
CMsgHeroBuild_AbilityOrder::currency_changes() const {
  // @@protoc_insertion_point(field_list:CMsgHeroBuild.AbilityOrder.currency_changes)
  return _impl_.currency_changes_;
}

// -------------------------------------------------------------------

// CMsgHeroBuild_Details_V0

// repeated .CMsgHeroBuild.BuildModCategory mod_categories = 1;
inline int CMsgHeroBuild_Details_V0::_internal_mod_categories_size() const {
  return _impl_.mod_categories_.size();
}
inline int CMsgHeroBuild_Details_V0::mod_categories_size() const {
  return _internal_mod_categories_size();
}
inline void CMsgHeroBuild_Details_V0::clear_mod_categories() {
  _impl_.mod_categories_.Clear();
}
inline ::CMsgHeroBuild_BuildModCategory* CMsgHeroBuild_Details_V0::mutable_mod_categories(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgHeroBuild.Details_V0.mod_categories)
  return _impl_.mod_categories_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_BuildModCategory >*
CMsgHeroBuild_Details_V0::mutable_mod_categories() {
  // @@protoc_insertion_point(field_mutable_list:CMsgHeroBuild.Details_V0.mod_categories)
  return &_impl_.mod_categories_;
}
inline const ::CMsgHeroBuild_BuildModCategory& CMsgHeroBuild_Details_V0::_internal_mod_categories(int index) const {
  return _impl_.mod_categories_.Get(index);
}
inline const ::CMsgHeroBuild_BuildModCategory& CMsgHeroBuild_Details_V0::mod_categories(int index) const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.Details_V0.mod_categories)
  return _internal_mod_categories(index);
}
inline ::CMsgHeroBuild_BuildModCategory* CMsgHeroBuild_Details_V0::_internal_add_mod_categories() {
  return _impl_.mod_categories_.Add();
}
inline ::CMsgHeroBuild_BuildModCategory* CMsgHeroBuild_Details_V0::add_mod_categories() {
  ::CMsgHeroBuild_BuildModCategory* _add = _internal_add_mod_categories();
  // @@protoc_insertion_point(field_add:CMsgHeroBuild.Details_V0.mod_categories)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroBuild_BuildModCategory >&
CMsgHeroBuild_Details_V0::mod_categories() const {
  // @@protoc_insertion_point(field_list:CMsgHeroBuild.Details_V0.mod_categories)
  return _impl_.mod_categories_;
}

// optional .CMsgHeroBuild.AbilityOrder ability_order = 2;
inline bool CMsgHeroBuild_Details_V0::_internal_has_ability_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ability_order_ != nullptr);
  return value;
}
inline bool CMsgHeroBuild_Details_V0::has_ability_order() const {
  return _internal_has_ability_order();
}
inline void CMsgHeroBuild_Details_V0::clear_ability_order() {
  if (_impl_.ability_order_ != nullptr) _impl_.ability_order_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgHeroBuild_AbilityOrder& CMsgHeroBuild_Details_V0::_internal_ability_order() const {
  const ::CMsgHeroBuild_AbilityOrder* p = _impl_.ability_order_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgHeroBuild_AbilityOrder&>(
      ::_CMsgHeroBuild_AbilityOrder_default_instance_);
}
inline const ::CMsgHeroBuild_AbilityOrder& CMsgHeroBuild_Details_V0::ability_order() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.Details_V0.ability_order)
  return _internal_ability_order();
}
inline void CMsgHeroBuild_Details_V0::unsafe_arena_set_allocated_ability_order(
    ::CMsgHeroBuild_AbilityOrder* ability_order) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ability_order_);
  }
  _impl_.ability_order_ = ability_order;
  if (ability_order) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgHeroBuild.Details_V0.ability_order)
}
inline ::CMsgHeroBuild_AbilityOrder* CMsgHeroBuild_Details_V0::release_ability_order() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgHeroBuild_AbilityOrder* temp = _impl_.ability_order_;
  _impl_.ability_order_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgHeroBuild_AbilityOrder* CMsgHeroBuild_Details_V0::unsafe_arena_release_ability_order() {
  // @@protoc_insertion_point(field_release:CMsgHeroBuild.Details_V0.ability_order)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgHeroBuild_AbilityOrder* temp = _impl_.ability_order_;
  _impl_.ability_order_ = nullptr;
  return temp;
}
inline ::CMsgHeroBuild_AbilityOrder* CMsgHeroBuild_Details_V0::_internal_mutable_ability_order() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ability_order_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgHeroBuild_AbilityOrder>(GetArenaForAllocation());
    _impl_.ability_order_ = p;
  }
  return _impl_.ability_order_;
}
inline ::CMsgHeroBuild_AbilityOrder* CMsgHeroBuild_Details_V0::mutable_ability_order() {
  ::CMsgHeroBuild_AbilityOrder* _msg = _internal_mutable_ability_order();
  // @@protoc_insertion_point(field_mutable:CMsgHeroBuild.Details_V0.ability_order)
  return _msg;
}
inline void CMsgHeroBuild_Details_V0::set_allocated_ability_order(::CMsgHeroBuild_AbilityOrder* ability_order) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.ability_order_;
  }
  if (ability_order) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ability_order);
    if (message_arena != submessage_arena) {
      ability_order = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ability_order, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.ability_order_ = ability_order;
  // @@protoc_insertion_point(field_set_allocated:CMsgHeroBuild.Details_V0.ability_order)
}

// -------------------------------------------------------------------

// CMsgHeroBuild

// optional uint32 hero_build_id = 1;
inline bool CMsgHeroBuild::_internal_has_hero_build_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgHeroBuild::has_hero_build_id() const {
  return _internal_has_hero_build_id();
}
inline void CMsgHeroBuild::clear_hero_build_id() {
  _impl_.hero_build_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgHeroBuild::_internal_hero_build_id() const {
  return _impl_.hero_build_id_;
}
inline uint32_t CMsgHeroBuild::hero_build_id() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.hero_build_id)
  return _internal_hero_build_id();
}
inline void CMsgHeroBuild::_internal_set_hero_build_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.hero_build_id_ = value;
}
inline void CMsgHeroBuild::set_hero_build_id(uint32_t value) {
  _internal_set_hero_build_id(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.hero_build_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgHeroBuild::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgHeroBuild::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgHeroBuild::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgHeroBuild::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgHeroBuild::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.hero_id)
  return _internal_hero_id();
}
inline void CMsgHeroBuild::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.hero_id_ = value;
}
inline void CMsgHeroBuild::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.hero_id)
}

// optional uint32 author_account_id = 3;
inline bool CMsgHeroBuild::_internal_has_author_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgHeroBuild::has_author_account_id() const {
  return _internal_has_author_account_id();
}
inline void CMsgHeroBuild::clear_author_account_id() {
  _impl_.author_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgHeroBuild::_internal_author_account_id() const {
  return _impl_.author_account_id_;
}
inline uint32_t CMsgHeroBuild::author_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.author_account_id)
  return _internal_author_account_id();
}
inline void CMsgHeroBuild::_internal_set_author_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.author_account_id_ = value;
}
inline void CMsgHeroBuild::set_author_account_id(uint32_t value) {
  _internal_set_author_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.author_account_id)
}

// optional uint32 last_updated_timestamp = 4;
inline bool CMsgHeroBuild::_internal_has_last_updated_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgHeroBuild::has_last_updated_timestamp() const {
  return _internal_has_last_updated_timestamp();
}
inline void CMsgHeroBuild::clear_last_updated_timestamp() {
  _impl_.last_updated_timestamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CMsgHeroBuild::_internal_last_updated_timestamp() const {
  return _impl_.last_updated_timestamp_;
}
inline uint32_t CMsgHeroBuild::last_updated_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.last_updated_timestamp)
  return _internal_last_updated_timestamp();
}
inline void CMsgHeroBuild::_internal_set_last_updated_timestamp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.last_updated_timestamp_ = value;
}
inline void CMsgHeroBuild::set_last_updated_timestamp(uint32_t value) {
  _internal_set_last_updated_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.last_updated_timestamp)
}

// optional string name = 5;
inline bool CMsgHeroBuild::_internal_has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgHeroBuild::has_name() const {
  return _internal_has_name();
}
inline void CMsgHeroBuild::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgHeroBuild::name() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgHeroBuild::set_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.name)
}
inline std::string* CMsgHeroBuild::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CMsgHeroBuild.name)
  return _s;
}
inline const std::string& CMsgHeroBuild::_internal_name() const {
  return _impl_.name_.Get();
}
inline void CMsgHeroBuild::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgHeroBuild::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgHeroBuild::release_name() {
  // @@protoc_insertion_point(field_release:CMsgHeroBuild.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgHeroBuild::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgHeroBuild.name)
}

// optional string description = 6;
inline bool CMsgHeroBuild::_internal_has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgHeroBuild::has_description() const {
  return _internal_has_description();
}
inline void CMsgHeroBuild::clear_description() {
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgHeroBuild::description() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.description)
  return _internal_description();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgHeroBuild::set_description(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.description_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.description)
}
inline std::string* CMsgHeroBuild::mutable_description() {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:CMsgHeroBuild.description)
  return _s;
}
inline const std::string& CMsgHeroBuild::_internal_description() const {
  return _impl_.description_.Get();
}
inline void CMsgHeroBuild::_internal_set_description(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgHeroBuild::_internal_mutable_description() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.description_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgHeroBuild::release_description() {
  // @@protoc_insertion_point(field_release:CMsgHeroBuild.description)
  if (!_internal_has_description()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.description_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgHeroBuild::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.description_.SetAllocated(description, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgHeroBuild.description)
}

// optional uint32 language = 7;
inline bool CMsgHeroBuild::_internal_has_language() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgHeroBuild::has_language() const {
  return _internal_has_language();
}
inline void CMsgHeroBuild::clear_language() {
  _impl_.language_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CMsgHeroBuild::_internal_language() const {
  return _impl_.language_;
}
inline uint32_t CMsgHeroBuild::language() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.language)
  return _internal_language();
}
inline void CMsgHeroBuild::_internal_set_language(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.language_ = value;
}
inline void CMsgHeroBuild::set_language(uint32_t value) {
  _internal_set_language(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.language)
}

// optional uint32 version = 8;
inline bool CMsgHeroBuild::_internal_has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgHeroBuild::has_version() const {
  return _internal_has_version();
}
inline void CMsgHeroBuild::clear_version() {
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline uint32_t CMsgHeroBuild::_internal_version() const {
  return _impl_.version_;
}
inline uint32_t CMsgHeroBuild::version() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.version)
  return _internal_version();
}
inline void CMsgHeroBuild::_internal_set_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.version_ = value;
}
inline void CMsgHeroBuild::set_version(uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.version)
}

// optional uint32 origin_build_id = 9;
inline bool CMsgHeroBuild::_internal_has_origin_build_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgHeroBuild::has_origin_build_id() const {
  return _internal_has_origin_build_id();
}
inline void CMsgHeroBuild::clear_origin_build_id() {
  _impl_.origin_build_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CMsgHeroBuild::_internal_origin_build_id() const {
  return _impl_.origin_build_id_;
}
inline uint32_t CMsgHeroBuild::origin_build_id() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.origin_build_id)
  return _internal_origin_build_id();
}
inline void CMsgHeroBuild::_internal_set_origin_build_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.origin_build_id_ = value;
}
inline void CMsgHeroBuild::set_origin_build_id(uint32_t value) {
  _internal_set_origin_build_id(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuild.origin_build_id)
}

// optional .CMsgHeroBuild.Details_V0 details = 10;
inline bool CMsgHeroBuild::_internal_has_details() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.details_ != nullptr);
  return value;
}
inline bool CMsgHeroBuild::has_details() const {
  return _internal_has_details();
}
inline void CMsgHeroBuild::clear_details() {
  if (_impl_.details_ != nullptr) _impl_.details_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::CMsgHeroBuild_Details_V0& CMsgHeroBuild::_internal_details() const {
  const ::CMsgHeroBuild_Details_V0* p = _impl_.details_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgHeroBuild_Details_V0&>(
      ::_CMsgHeroBuild_Details_V0_default_instance_);
}
inline const ::CMsgHeroBuild_Details_V0& CMsgHeroBuild::details() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuild.details)
  return _internal_details();
}
inline void CMsgHeroBuild::unsafe_arena_set_allocated_details(
    ::CMsgHeroBuild_Details_V0* details) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.details_);
  }
  _impl_.details_ = details;
  if (details) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgHeroBuild.details)
}
inline ::CMsgHeroBuild_Details_V0* CMsgHeroBuild::release_details() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgHeroBuild_Details_V0* temp = _impl_.details_;
  _impl_.details_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgHeroBuild_Details_V0* CMsgHeroBuild::unsafe_arena_release_details() {
  // @@protoc_insertion_point(field_release:CMsgHeroBuild.details)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgHeroBuild_Details_V0* temp = _impl_.details_;
  _impl_.details_ = nullptr;
  return temp;
}
inline ::CMsgHeroBuild_Details_V0* CMsgHeroBuild::_internal_mutable_details() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.details_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgHeroBuild_Details_V0>(GetArenaForAllocation());
    _impl_.details_ = p;
  }
  return _impl_.details_;
}
inline ::CMsgHeroBuild_Details_V0* CMsgHeroBuild::mutable_details() {
  ::CMsgHeroBuild_Details_V0* _msg = _internal_mutable_details();
  // @@protoc_insertion_point(field_mutable:CMsgHeroBuild.details)
  return _msg;
}
inline void CMsgHeroBuild::set_allocated_details(::CMsgHeroBuild_Details_V0* details) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.details_;
  }
  if (details) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(details);
    if (message_arena != submessage_arena) {
      details = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, details, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.details_ = details;
  // @@protoc_insertion_point(field_set_allocated:CMsgHeroBuild.details)
}

// -------------------------------------------------------------------

// CMsgClientToGCUpdateHeroBuild

// optional .CMsgHeroBuild hero_build = 1;
inline bool CMsgClientToGCUpdateHeroBuild::_internal_has_hero_build() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hero_build_ != nullptr);
  return value;
}
inline bool CMsgClientToGCUpdateHeroBuild::has_hero_build() const {
  return _internal_has_hero_build();
}
inline void CMsgClientToGCUpdateHeroBuild::clear_hero_build() {
  if (_impl_.hero_build_ != nullptr) _impl_.hero_build_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgHeroBuild& CMsgClientToGCUpdateHeroBuild::_internal_hero_build() const {
  const ::CMsgHeroBuild* p = _impl_.hero_build_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgHeroBuild&>(
      ::_CMsgHeroBuild_default_instance_);
}
inline const ::CMsgHeroBuild& CMsgClientToGCUpdateHeroBuild::hero_build() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateHeroBuild.hero_build)
  return _internal_hero_build();
}
inline void CMsgClientToGCUpdateHeroBuild::unsafe_arena_set_allocated_hero_build(
    ::CMsgHeroBuild* hero_build) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hero_build_);
  }
  _impl_.hero_build_ = hero_build;
  if (hero_build) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCUpdateHeroBuild.hero_build)
}
inline ::CMsgHeroBuild* CMsgClientToGCUpdateHeroBuild::release_hero_build() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgHeroBuild* temp = _impl_.hero_build_;
  _impl_.hero_build_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgHeroBuild* CMsgClientToGCUpdateHeroBuild::unsafe_arena_release_hero_build() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCUpdateHeroBuild.hero_build)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgHeroBuild* temp = _impl_.hero_build_;
  _impl_.hero_build_ = nullptr;
  return temp;
}
inline ::CMsgHeroBuild* CMsgClientToGCUpdateHeroBuild::_internal_mutable_hero_build() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.hero_build_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgHeroBuild>(GetArenaForAllocation());
    _impl_.hero_build_ = p;
  }
  return _impl_.hero_build_;
}
inline ::CMsgHeroBuild* CMsgClientToGCUpdateHeroBuild::mutable_hero_build() {
  ::CMsgHeroBuild* _msg = _internal_mutable_hero_build();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCUpdateHeroBuild.hero_build)
  return _msg;
}
inline void CMsgClientToGCUpdateHeroBuild::set_allocated_hero_build(::CMsgHeroBuild* hero_build) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.hero_build_;
  }
  if (hero_build) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(hero_build);
    if (message_arena != submessage_arena) {
      hero_build = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hero_build, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.hero_build_ = hero_build;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCUpdateHeroBuild.hero_build)
}

// -------------------------------------------------------------------

// CMsgClientToGCUpdateHeroBuildResponse

// optional .CMsgClientToGCUpdateHeroBuildResponse.EResponse response = 1 [default = k_eInternalError];
inline bool CMsgClientToGCUpdateHeroBuildResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUpdateHeroBuildResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCUpdateHeroBuildResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCUpdateHeroBuildResponse_EResponse CMsgClientToGCUpdateHeroBuildResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCUpdateHeroBuildResponse_EResponse >(_impl_.response_);
}
inline ::CMsgClientToGCUpdateHeroBuildResponse_EResponse CMsgClientToGCUpdateHeroBuildResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateHeroBuildResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCUpdateHeroBuildResponse::_internal_set_response(::CMsgClientToGCUpdateHeroBuildResponse_EResponse value) {
  assert(::CMsgClientToGCUpdateHeroBuildResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCUpdateHeroBuildResponse::set_response(::CMsgClientToGCUpdateHeroBuildResponse_EResponse value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUpdateHeroBuildResponse.response)
}

// optional uint32 hero_build_id = 2;
inline bool CMsgClientToGCUpdateHeroBuildResponse::_internal_has_hero_build_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCUpdateHeroBuildResponse::has_hero_build_id() const {
  return _internal_has_hero_build_id();
}
inline void CMsgClientToGCUpdateHeroBuildResponse::clear_hero_build_id() {
  _impl_.hero_build_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCUpdateHeroBuildResponse::_internal_hero_build_id() const {
  return _impl_.hero_build_id_;
}
inline uint32_t CMsgClientToGCUpdateHeroBuildResponse::hero_build_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateHeroBuildResponse.hero_build_id)
  return _internal_hero_build_id();
}
inline void CMsgClientToGCUpdateHeroBuildResponse::_internal_set_hero_build_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.hero_build_id_ = value;
}
inline void CMsgClientToGCUpdateHeroBuildResponse::set_hero_build_id(uint32_t value) {
  _internal_set_hero_build_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUpdateHeroBuildResponse.hero_build_id)
}

// optional uint32 version = 3;
inline bool CMsgClientToGCUpdateHeroBuildResponse::_internal_has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCUpdateHeroBuildResponse::has_version() const {
  return _internal_has_version();
}
inline void CMsgClientToGCUpdateHeroBuildResponse::clear_version() {
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCUpdateHeroBuildResponse::_internal_version() const {
  return _impl_.version_;
}
inline uint32_t CMsgClientToGCUpdateHeroBuildResponse::version() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateHeroBuildResponse.version)
  return _internal_version();
}
inline void CMsgClientToGCUpdateHeroBuildResponse::_internal_set_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.version_ = value;
}
inline void CMsgClientToGCUpdateHeroBuildResponse::set_version(uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUpdateHeroBuildResponse.version)
}

// -------------------------------------------------------------------

// CMsgClientToGCFindHeroBuilds

// optional uint32 author_account_id = 1;
inline bool CMsgClientToGCFindHeroBuilds::_internal_has_author_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCFindHeroBuilds::has_author_account_id() const {
  return _internal_has_author_account_id();
}
inline void CMsgClientToGCFindHeroBuilds::clear_author_account_id() {
  _impl_.author_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCFindHeroBuilds::_internal_author_account_id() const {
  return _impl_.author_account_id_;
}
inline uint32_t CMsgClientToGCFindHeroBuilds::author_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuilds.author_account_id)
  return _internal_author_account_id();
}
inline void CMsgClientToGCFindHeroBuilds::_internal_set_author_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.author_account_id_ = value;
}
inline void CMsgClientToGCFindHeroBuilds::set_author_account_id(uint32_t value) {
  _internal_set_author_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindHeroBuilds.author_account_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgClientToGCFindHeroBuilds::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCFindHeroBuilds::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgClientToGCFindHeroBuilds::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCFindHeroBuilds::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgClientToGCFindHeroBuilds::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuilds.hero_id)
  return _internal_hero_id();
}
inline void CMsgClientToGCFindHeroBuilds::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.hero_id_ = value;
}
inline void CMsgClientToGCFindHeroBuilds::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindHeroBuilds.hero_id)
}

// repeated int32 language = 3;
inline int CMsgClientToGCFindHeroBuilds::_internal_language_size() const {
  return _impl_.language_.size();
}
inline int CMsgClientToGCFindHeroBuilds::language_size() const {
  return _internal_language_size();
}
inline void CMsgClientToGCFindHeroBuilds::clear_language() {
  _impl_.language_.Clear();
}
inline int32_t CMsgClientToGCFindHeroBuilds::_internal_language(int index) const {
  return _impl_.language_.Get(index);
}
inline int32_t CMsgClientToGCFindHeroBuilds::language(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuilds.language)
  return _internal_language(index);
}
inline void CMsgClientToGCFindHeroBuilds::set_language(int index, int32_t value) {
  _impl_.language_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindHeroBuilds.language)
}
inline void CMsgClientToGCFindHeroBuilds::_internal_add_language(int32_t value) {
  _impl_.language_.Add(value);
}
inline void CMsgClientToGCFindHeroBuilds::add_language(int32_t value) {
  _internal_add_language(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCFindHeroBuilds.language)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CMsgClientToGCFindHeroBuilds::_internal_language() const {
  return _impl_.language_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CMsgClientToGCFindHeroBuilds::language() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCFindHeroBuilds.language)
  return _internal_language();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CMsgClientToGCFindHeroBuilds::_internal_mutable_language() {
  return &_impl_.language_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CMsgClientToGCFindHeroBuilds::mutable_language() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCFindHeroBuilds.language)
  return _internal_mutable_language();
}

// optional string search_text = 4;
inline bool CMsgClientToGCFindHeroBuilds::_internal_has_search_text() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCFindHeroBuilds::has_search_text() const {
  return _internal_has_search_text();
}
inline void CMsgClientToGCFindHeroBuilds::clear_search_text() {
  _impl_.search_text_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCFindHeroBuilds::search_text() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuilds.search_text)
  return _internal_search_text();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCFindHeroBuilds::set_search_text(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.search_text_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindHeroBuilds.search_text)
}
inline std::string* CMsgClientToGCFindHeroBuilds::mutable_search_text() {
  std::string* _s = _internal_mutable_search_text();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCFindHeroBuilds.search_text)
  return _s;
}
inline const std::string& CMsgClientToGCFindHeroBuilds::_internal_search_text() const {
  return _impl_.search_text_.Get();
}
inline void CMsgClientToGCFindHeroBuilds::_internal_set_search_text(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.search_text_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCFindHeroBuilds::_internal_mutable_search_text() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.search_text_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCFindHeroBuilds::release_search_text() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCFindHeroBuilds.search_text)
  if (!_internal_has_search_text()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.search_text_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.search_text_.IsDefault()) {
    _impl_.search_text_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCFindHeroBuilds::set_allocated_search_text(std::string* search_text) {
  if (search_text != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.search_text_.SetAllocated(search_text, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.search_text_.IsDefault()) {
    _impl_.search_text_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCFindHeroBuilds.search_text)
}

// optional uint32 hero_build_id = 5;
inline bool CMsgClientToGCFindHeroBuilds::_internal_has_hero_build_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCFindHeroBuilds::has_hero_build_id() const {
  return _internal_has_hero_build_id();
}
inline void CMsgClientToGCFindHeroBuilds::clear_hero_build_id() {
  _impl_.hero_build_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgClientToGCFindHeroBuilds::_internal_hero_build_id() const {
  return _impl_.hero_build_id_;
}
inline uint32_t CMsgClientToGCFindHeroBuilds::hero_build_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuilds.hero_build_id)
  return _internal_hero_build_id();
}
inline void CMsgClientToGCFindHeroBuilds::_internal_set_hero_build_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.hero_build_id_ = value;
}
inline void CMsgClientToGCFindHeroBuilds::set_hero_build_id(uint32_t value) {
  _internal_set_hero_build_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindHeroBuilds.hero_build_id)
}

// -------------------------------------------------------------------

// CMsgHeroBuildPreference

// optional bool favorited = 1;
inline bool CMsgHeroBuildPreference::_internal_has_favorited() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgHeroBuildPreference::has_favorited() const {
  return _internal_has_favorited();
}
inline void CMsgHeroBuildPreference::clear_favorited() {
  _impl_.favorited_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgHeroBuildPreference::_internal_favorited() const {
  return _impl_.favorited_;
}
inline bool CMsgHeroBuildPreference::favorited() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuildPreference.favorited)
  return _internal_favorited();
}
inline void CMsgHeroBuildPreference::_internal_set_favorited(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.favorited_ = value;
}
inline void CMsgHeroBuildPreference::set_favorited(bool value) {
  _internal_set_favorited(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuildPreference.favorited)
}

// optional bool ignored = 2;
inline bool CMsgHeroBuildPreference::_internal_has_ignored() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgHeroBuildPreference::has_ignored() const {
  return _internal_has_ignored();
}
inline void CMsgHeroBuildPreference::clear_ignored() {
  _impl_.ignored_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgHeroBuildPreference::_internal_ignored() const {
  return _impl_.ignored_;
}
inline bool CMsgHeroBuildPreference::ignored() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuildPreference.ignored)
  return _internal_ignored();
}
inline void CMsgHeroBuildPreference::_internal_set_ignored(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ignored_ = value;
}
inline void CMsgHeroBuildPreference::set_ignored(bool value) {
  _internal_set_ignored(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuildPreference.ignored)
}

// optional bool reported = 3;
inline bool CMsgHeroBuildPreference::_internal_has_reported() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgHeroBuildPreference::has_reported() const {
  return _internal_has_reported();
}
inline void CMsgHeroBuildPreference::clear_reported() {
  _impl_.reported_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgHeroBuildPreference::_internal_reported() const {
  return _impl_.reported_;
}
inline bool CMsgHeroBuildPreference::reported() const {
  // @@protoc_insertion_point(field_get:CMsgHeroBuildPreference.reported)
  return _internal_reported();
}
inline void CMsgHeroBuildPreference::_internal_set_reported(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.reported_ = value;
}
inline void CMsgHeroBuildPreference::set_reported(bool value) {
  _internal_set_reported(value);
  // @@protoc_insertion_point(field_set:CMsgHeroBuildPreference.reported)
}

// -------------------------------------------------------------------

// CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult

// optional .CMsgHeroBuild hero_build = 1;
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_has_hero_build() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hero_build_ != nullptr);
  return value;
}
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::has_hero_build() const {
  return _internal_has_hero_build();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::clear_hero_build() {
  if (_impl_.hero_build_ != nullptr) _impl_.hero_build_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgHeroBuild& CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_hero_build() const {
  const ::CMsgHeroBuild* p = _impl_.hero_build_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgHeroBuild&>(
      ::_CMsgHeroBuild_default_instance_);
}
inline const ::CMsgHeroBuild& CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::hero_build() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.hero_build)
  return _internal_hero_build();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::unsafe_arena_set_allocated_hero_build(
    ::CMsgHeroBuild* hero_build) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hero_build_);
  }
  _impl_.hero_build_ = hero_build;
  if (hero_build) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.hero_build)
}
inline ::CMsgHeroBuild* CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::release_hero_build() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgHeroBuild* temp = _impl_.hero_build_;
  _impl_.hero_build_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgHeroBuild* CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::unsafe_arena_release_hero_build() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.hero_build)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgHeroBuild* temp = _impl_.hero_build_;
  _impl_.hero_build_ = nullptr;
  return temp;
}
inline ::CMsgHeroBuild* CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_mutable_hero_build() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.hero_build_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgHeroBuild>(GetArenaForAllocation());
    _impl_.hero_build_ = p;
  }
  return _impl_.hero_build_;
}
inline ::CMsgHeroBuild* CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::mutable_hero_build() {
  ::CMsgHeroBuild* _msg = _internal_mutable_hero_build();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.hero_build)
  return _msg;
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::set_allocated_hero_build(::CMsgHeroBuild* hero_build) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.hero_build_;
  }
  if (hero_build) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(hero_build);
    if (message_arena != submessage_arena) {
      hero_build = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hero_build, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.hero_build_ = hero_build;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.hero_build)
}

// optional .CMsgHeroBuildPreference preference = 2;
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_has_preference() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.preference_ != nullptr);
  return value;
}
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::has_preference() const {
  return _internal_has_preference();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::clear_preference() {
  if (_impl_.preference_ != nullptr) _impl_.preference_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgHeroBuildPreference& CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_preference() const {
  const ::CMsgHeroBuildPreference* p = _impl_.preference_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgHeroBuildPreference&>(
      ::_CMsgHeroBuildPreference_default_instance_);
}
inline const ::CMsgHeroBuildPreference& CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::preference() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.preference)
  return _internal_preference();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::unsafe_arena_set_allocated_preference(
    ::CMsgHeroBuildPreference* preference) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.preference_);
  }
  _impl_.preference_ = preference;
  if (preference) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.preference)
}
inline ::CMsgHeroBuildPreference* CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::release_preference() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgHeroBuildPreference* temp = _impl_.preference_;
  _impl_.preference_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgHeroBuildPreference* CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::unsafe_arena_release_preference() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.preference)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgHeroBuildPreference* temp = _impl_.preference_;
  _impl_.preference_ = nullptr;
  return temp;
}
inline ::CMsgHeroBuildPreference* CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_mutable_preference() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.preference_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgHeroBuildPreference>(GetArenaForAllocation());
    _impl_.preference_ = p;
  }
  return _impl_.preference_;
}
inline ::CMsgHeroBuildPreference* CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::mutable_preference() {
  ::CMsgHeroBuildPreference* _msg = _internal_mutable_preference();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.preference)
  return _msg;
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::set_allocated_preference(::CMsgHeroBuildPreference* preference) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.preference_;
  }
  if (preference) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(preference);
    if (message_arena != submessage_arena) {
      preference = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, preference, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.preference_ = preference;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.preference)
}

// optional uint32 num_favorites = 3;
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_has_num_favorites() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::has_num_favorites() const {
  return _internal_has_num_favorites();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::clear_num_favorites() {
  _impl_.num_favorites_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_num_favorites() const {
  return _impl_.num_favorites_;
}
inline uint32_t CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::num_favorites() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.num_favorites)
  return _internal_num_favorites();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_set_num_favorites(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.num_favorites_ = value;
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::set_num_favorites(uint32_t value) {
  _internal_set_num_favorites(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.num_favorites)
}

// optional uint32 num_ignores = 4;
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_has_num_ignores() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::has_num_ignores() const {
  return _internal_has_num_ignores();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::clear_num_ignores() {
  _impl_.num_ignores_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_num_ignores() const {
  return _impl_.num_ignores_;
}
inline uint32_t CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::num_ignores() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.num_ignores)
  return _internal_num_ignores();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_set_num_ignores(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.num_ignores_ = value;
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::set_num_ignores(uint32_t value) {
  _internal_set_num_ignores(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.num_ignores)
}

// optional uint32 num_reports = 5;
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_has_num_reports() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::has_num_reports() const {
  return _internal_has_num_reports();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::clear_num_reports() {
  _impl_.num_reports_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_num_reports() const {
  return _impl_.num_reports_;
}
inline uint32_t CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::num_reports() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.num_reports)
  return _internal_num_reports();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_set_num_reports(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.num_reports_ = value;
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::set_num_reports(uint32_t value) {
  _internal_set_num_reports(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.num_reports)
}

// optional uint32 num_weekly_favorites = 6;
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_has_num_weekly_favorites() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::has_num_weekly_favorites() const {
  return _internal_has_num_weekly_favorites();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::clear_num_weekly_favorites() {
  _impl_.num_weekly_favorites_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_num_weekly_favorites() const {
  return _impl_.num_weekly_favorites_;
}
inline uint32_t CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::num_weekly_favorites() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.num_weekly_favorites)
  return _internal_num_weekly_favorites();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_set_num_weekly_favorites(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.num_weekly_favorites_ = value;
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::set_num_weekly_favorites(uint32_t value) {
  _internal_set_num_weekly_favorites(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.num_weekly_favorites)
}

// optional uint32 num_daily_favorites = 7;
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_has_num_daily_favorites() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::has_num_daily_favorites() const {
  return _internal_has_num_daily_favorites();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::clear_num_daily_favorites() {
  _impl_.num_daily_favorites_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_num_daily_favorites() const {
  return _impl_.num_daily_favorites_;
}
inline uint32_t CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::num_daily_favorites() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.num_daily_favorites)
  return _internal_num_daily_favorites();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_set_num_daily_favorites(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.num_daily_favorites_ = value;
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::set_num_daily_favorites(uint32_t value) {
  _internal_set_num_daily_favorites(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.num_daily_favorites)
}

// optional uint32 rollup_category = 8;
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_has_rollup_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::has_rollup_category() const {
  return _internal_has_rollup_category();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::clear_rollup_category() {
  _impl_.rollup_category_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_rollup_category() const {
  return _impl_.rollup_category_;
}
inline uint32_t CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::rollup_category() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.rollup_category)
  return _internal_rollup_category();
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_internal_set_rollup_category(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.rollup_category_ = value;
}
inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::set_rollup_category(uint32_t value) {
  _internal_set_rollup_category(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.rollup_category)
}

// -------------------------------------------------------------------

// CMsgClientToGCFindHeroBuildsResponse

// optional .CMsgClientToGCFindHeroBuildsResponse.EResponse response = 1 [default = k_eInternalError];
inline bool CMsgClientToGCFindHeroBuildsResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCFindHeroBuildsResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCFindHeroBuildsResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCFindHeroBuildsResponse_EResponse CMsgClientToGCFindHeroBuildsResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCFindHeroBuildsResponse_EResponse >(_impl_.response_);
}
inline ::CMsgClientToGCFindHeroBuildsResponse_EResponse CMsgClientToGCFindHeroBuildsResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuildsResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCFindHeroBuildsResponse::_internal_set_response(::CMsgClientToGCFindHeroBuildsResponse_EResponse value) {
  assert(::CMsgClientToGCFindHeroBuildsResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCFindHeroBuildsResponse::set_response(::CMsgClientToGCFindHeroBuildsResponse_EResponse value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCFindHeroBuildsResponse.response)
}

// repeated .CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult results = 2;
inline int CMsgClientToGCFindHeroBuildsResponse::_internal_results_size() const {
  return _impl_.results_.size();
}
inline int CMsgClientToGCFindHeroBuildsResponse::results_size() const {
  return _internal_results_size();
}
inline void CMsgClientToGCFindHeroBuildsResponse::clear_results() {
  _impl_.results_.Clear();
}
inline ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* CMsgClientToGCFindHeroBuildsResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCFindHeroBuildsResponse.results)
  return _impl_.results_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult >*
CMsgClientToGCFindHeroBuildsResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCFindHeroBuildsResponse.results)
  return &_impl_.results_;
}
inline const ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& CMsgClientToGCFindHeroBuildsResponse::_internal_results(int index) const {
  return _impl_.results_.Get(index);
}
inline const ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& CMsgClientToGCFindHeroBuildsResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCFindHeroBuildsResponse.results)
  return _internal_results(index);
}
inline ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* CMsgClientToGCFindHeroBuildsResponse::_internal_add_results() {
  return _impl_.results_.Add();
}
inline ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* CMsgClientToGCFindHeroBuildsResponse::add_results() {
  ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* _add = _internal_add_results();
  // @@protoc_insertion_point(field_add:CMsgClientToGCFindHeroBuildsResponse.results)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult >&
CMsgClientToGCFindHeroBuildsResponse::results() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCFindHeroBuildsResponse.results)
  return _impl_.results_;
}

// -------------------------------------------------------------------

// CMsgClientToGCUpdateHeroBuildPreference

// optional uint32 hero_build_id = 1;
inline bool CMsgClientToGCUpdateHeroBuildPreference::_internal_has_hero_build_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCUpdateHeroBuildPreference::has_hero_build_id() const {
  return _internal_has_hero_build_id();
}
inline void CMsgClientToGCUpdateHeroBuildPreference::clear_hero_build_id() {
  _impl_.hero_build_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCUpdateHeroBuildPreference::_internal_hero_build_id() const {
  return _impl_.hero_build_id_;
}
inline uint32_t CMsgClientToGCUpdateHeroBuildPreference::hero_build_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateHeroBuildPreference.hero_build_id)
  return _internal_hero_build_id();
}
inline void CMsgClientToGCUpdateHeroBuildPreference::_internal_set_hero_build_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.hero_build_id_ = value;
}
inline void CMsgClientToGCUpdateHeroBuildPreference::set_hero_build_id(uint32_t value) {
  _internal_set_hero_build_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUpdateHeroBuildPreference.hero_build_id)
}

// optional .CMsgHeroBuildPreference preference = 2;
inline bool CMsgClientToGCUpdateHeroBuildPreference::_internal_has_preference() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.preference_ != nullptr);
  return value;
}
inline bool CMsgClientToGCUpdateHeroBuildPreference::has_preference() const {
  return _internal_has_preference();
}
inline void CMsgClientToGCUpdateHeroBuildPreference::clear_preference() {
  if (_impl_.preference_ != nullptr) _impl_.preference_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgHeroBuildPreference& CMsgClientToGCUpdateHeroBuildPreference::_internal_preference() const {
  const ::CMsgHeroBuildPreference* p = _impl_.preference_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgHeroBuildPreference&>(
      ::_CMsgHeroBuildPreference_default_instance_);
}
inline const ::CMsgHeroBuildPreference& CMsgClientToGCUpdateHeroBuildPreference::preference() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateHeroBuildPreference.preference)
  return _internal_preference();
}
inline void CMsgClientToGCUpdateHeroBuildPreference::unsafe_arena_set_allocated_preference(
    ::CMsgHeroBuildPreference* preference) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.preference_);
  }
  _impl_.preference_ = preference;
  if (preference) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCUpdateHeroBuildPreference.preference)
}
inline ::CMsgHeroBuildPreference* CMsgClientToGCUpdateHeroBuildPreference::release_preference() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgHeroBuildPreference* temp = _impl_.preference_;
  _impl_.preference_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgHeroBuildPreference* CMsgClientToGCUpdateHeroBuildPreference::unsafe_arena_release_preference() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCUpdateHeroBuildPreference.preference)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgHeroBuildPreference* temp = _impl_.preference_;
  _impl_.preference_ = nullptr;
  return temp;
}
inline ::CMsgHeroBuildPreference* CMsgClientToGCUpdateHeroBuildPreference::_internal_mutable_preference() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.preference_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgHeroBuildPreference>(GetArenaForAllocation());
    _impl_.preference_ = p;
  }
  return _impl_.preference_;
}
inline ::CMsgHeroBuildPreference* CMsgClientToGCUpdateHeroBuildPreference::mutable_preference() {
  ::CMsgHeroBuildPreference* _msg = _internal_mutable_preference();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCUpdateHeroBuildPreference.preference)
  return _msg;
}
inline void CMsgClientToGCUpdateHeroBuildPreference::set_allocated_preference(::CMsgHeroBuildPreference* preference) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.preference_;
  }
  if (preference) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(preference);
    if (message_arena != submessage_arena) {
      preference = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, preference, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.preference_ = preference;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCUpdateHeroBuildPreference.preference)
}

// -------------------------------------------------------------------

// CMsgClientToGCUpdateHeroBuildPreferenceResponse

// optional .CMsgClientToGCUpdateHeroBuildPreferenceResponse.EResponse response = 1 [default = k_eInternalError];
inline bool CMsgClientToGCUpdateHeroBuildPreferenceResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUpdateHeroBuildPreferenceResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCUpdateHeroBuildPreferenceResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse CMsgClientToGCUpdateHeroBuildPreferenceResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse >(_impl_.response_);
}
inline ::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse CMsgClientToGCUpdateHeroBuildPreferenceResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateHeroBuildPreferenceResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCUpdateHeroBuildPreferenceResponse::_internal_set_response(::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse value) {
  assert(::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCUpdateHeroBuildPreferenceResponse::set_response(::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUpdateHeroBuildPreferenceResponse.response)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetOldHeroBuildData

// optional uint32 author_account_id = 1;
inline bool CMsgClientToGCGetOldHeroBuildData::_internal_has_author_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetOldHeroBuildData::has_author_account_id() const {
  return _internal_has_author_account_id();
}
inline void CMsgClientToGCGetOldHeroBuildData::clear_author_account_id() {
  _impl_.author_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCGetOldHeroBuildData::_internal_author_account_id() const {
  return _impl_.author_account_id_;
}
inline uint32_t CMsgClientToGCGetOldHeroBuildData::author_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetOldHeroBuildData.author_account_id)
  return _internal_author_account_id();
}
inline void CMsgClientToGCGetOldHeroBuildData::_internal_set_author_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.author_account_id_ = value;
}
inline void CMsgClientToGCGetOldHeroBuildData::set_author_account_id(uint32_t value) {
  _internal_set_author_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetOldHeroBuildData.author_account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0

// repeated uint32 recommended_mod_ability_ids = 1;
inline int CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::_internal_recommended_mod_ability_ids_size() const {
  return _impl_.recommended_mod_ability_ids_.size();
}
inline int CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::recommended_mod_ability_ids_size() const {
  return _internal_recommended_mod_ability_ids_size();
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::clear_recommended_mod_ability_ids() {
  _impl_.recommended_mod_ability_ids_.Clear();
}
inline uint32_t CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::_internal_recommended_mod_ability_ids(int index) const {
  return _impl_.recommended_mod_ability_ids_.Get(index);
}
inline uint32_t CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::recommended_mod_ability_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0.recommended_mod_ability_ids)
  return _internal_recommended_mod_ability_ids(index);
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::set_recommended_mod_ability_ids(int index, uint32_t value) {
  _impl_.recommended_mod_ability_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0.recommended_mod_ability_ids)
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::_internal_add_recommended_mod_ability_ids(uint32_t value) {
  _impl_.recommended_mod_ability_ids_.Add(value);
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::add_recommended_mod_ability_ids(uint32_t value) {
  _internal_add_recommended_mod_ability_ids(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0.recommended_mod_ability_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::_internal_recommended_mod_ability_ids() const {
  return _impl_.recommended_mod_ability_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::recommended_mod_ability_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0.recommended_mod_ability_ids)
  return _internal_recommended_mod_ability_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::_internal_mutable_recommended_mod_ability_ids() {
  return &_impl_.recommended_mod_ability_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::mutable_recommended_mod_ability_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0.recommended_mod_ability_ids)
  return _internal_mutable_recommended_mod_ability_ids();
}

// -------------------------------------------------------------------

// CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild

// optional string name = 1;
inline bool CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_internal_has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::has_name() const {
  return _internal_has_name();
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::set_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.name)
}
inline std::string* CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.name)
  return _s;
}
inline const std::string& CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_internal_name() const {
  return _impl_.name_.Get();
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::release_name() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.name)
}

// optional uint32 hero_id = 2;
inline bool CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.hero_id)
  return _internal_hero_id();
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.hero_id_ = value;
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.hero_id)
}

// optional string description = 3;
inline bool CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_internal_has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::has_description() const {
  return _internal_has_description();
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::clear_description() {
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::description() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.description)
  return _internal_description();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::set_description(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.description_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.description)
}
inline std::string* CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::mutable_description() {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.description)
  return _s;
}
inline const std::string& CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_internal_description() const {
  return _impl_.description_.Get();
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_internal_set_description(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_internal_mutable_description() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.description_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::release_description() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.description)
  if (!_internal_has_description()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.description_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.description_.SetAllocated(description, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.description)
}

// optional .CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0 details = 4;
inline bool CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_internal_has_details() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.details_ != nullptr);
  return value;
}
inline bool CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::has_details() const {
  return _internal_has_details();
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::clear_details() {
  if (_impl_.details_ != nullptr) _impl_.details_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_internal_details() const {
  const ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* p = _impl_.details_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0&>(
      ::_CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0_default_instance_);
}
inline const ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::details() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.details)
  return _internal_details();
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::unsafe_arena_set_allocated_details(
    ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* details) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.details_);
  }
  _impl_.details_ = details;
  if (details) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.details)
}
inline ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::release_details() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* temp = _impl_.details_;
  _impl_.details_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::unsafe_arena_release_details() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.details)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* temp = _impl_.details_;
  _impl_.details_ = nullptr;
  return temp;
}
inline ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_internal_mutable_details() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.details_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0>(GetArenaForAllocation());
    _impl_.details_ = p;
  }
  return _impl_.details_;
}
inline ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::mutable_details() {
  ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* _msg = _internal_mutable_details();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.details)
  return _msg;
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::set_allocated_details(::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* details) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.details_;
  }
  if (details) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(details);
    if (message_arena != submessage_arena) {
      details = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, details, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.details_ = details;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.details)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetOldHeroBuildDataResponse

// optional .CMsgClientToGCGetOldHeroBuildDataResponse.EResponse response = 1 [default = k_eInternalError];
inline bool CMsgClientToGCGetOldHeroBuildDataResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetOldHeroBuildDataResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse CMsgClientToGCGetOldHeroBuildDataResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse >(_impl_.response_);
}
inline ::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse CMsgClientToGCGetOldHeroBuildDataResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetOldHeroBuildDataResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse::_internal_set_response(::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse value) {
  assert(::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse::set_response(::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetOldHeroBuildDataResponse.response)
}

// optional uint32 author_account_id = 2;
inline bool CMsgClientToGCGetOldHeroBuildDataResponse::_internal_has_author_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetOldHeroBuildDataResponse::has_author_account_id() const {
  return _internal_has_author_account_id();
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse::clear_author_account_id() {
  _impl_.author_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCGetOldHeroBuildDataResponse::_internal_author_account_id() const {
  return _impl_.author_account_id_;
}
inline uint32_t CMsgClientToGCGetOldHeroBuildDataResponse::author_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetOldHeroBuildDataResponse.author_account_id)
  return _internal_author_account_id();
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse::_internal_set_author_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.author_account_id_ = value;
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse::set_author_account_id(uint32_t value) {
  _internal_set_author_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetOldHeroBuildDataResponse.author_account_id)
}

// repeated .CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild results = 3;
inline int CMsgClientToGCGetOldHeroBuildDataResponse::_internal_results_size() const {
  return _impl_.results_.size();
}
inline int CMsgClientToGCGetOldHeroBuildDataResponse::results_size() const {
  return _internal_results_size();
}
inline void CMsgClientToGCGetOldHeroBuildDataResponse::clear_results() {
  _impl_.results_.Clear();
}
inline ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* CMsgClientToGCGetOldHeroBuildDataResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetOldHeroBuildDataResponse.results)
  return _impl_.results_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild >*
CMsgClientToGCGetOldHeroBuildDataResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetOldHeroBuildDataResponse.results)
  return &_impl_.results_;
}
inline const ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& CMsgClientToGCGetOldHeroBuildDataResponse::_internal_results(int index) const {
  return _impl_.results_.Get(index);
}
inline const ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& CMsgClientToGCGetOldHeroBuildDataResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetOldHeroBuildDataResponse.results)
  return _internal_results(index);
}
inline ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* CMsgClientToGCGetOldHeroBuildDataResponse::_internal_add_results() {
  return _impl_.results_.Add();
}
inline ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* CMsgClientToGCGetOldHeroBuildDataResponse::add_results() {
  ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* _add = _internal_add_results();
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetOldHeroBuildDataResponse.results)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild >&
CMsgClientToGCGetOldHeroBuildDataResponse::results() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetOldHeroBuildDataResponse.results)
  return _impl_.results_;
}

// -------------------------------------------------------------------

// CMsgClientToGCReportPlayerFromMatch

// optional uint64 match_id = 1;
inline bool CMsgClientToGCReportPlayerFromMatch::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCReportPlayerFromMatch::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgClientToGCReportPlayerFromMatch::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgClientToGCReportPlayerFromMatch::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CMsgClientToGCReportPlayerFromMatch::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCReportPlayerFromMatch.match_id)
  return _internal_match_id();
}
inline void CMsgClientToGCReportPlayerFromMatch::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.match_id_ = value;
}
inline void CMsgClientToGCReportPlayerFromMatch::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCReportPlayerFromMatch.match_id)
}

// optional uint32 target_account_id = 2;
inline bool CMsgClientToGCReportPlayerFromMatch::_internal_has_target_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCReportPlayerFromMatch::has_target_account_id() const {
  return _internal_has_target_account_id();
}
inline void CMsgClientToGCReportPlayerFromMatch::clear_target_account_id() {
  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCReportPlayerFromMatch::_internal_target_account_id() const {
  return _impl_.target_account_id_;
}
inline uint32_t CMsgClientToGCReportPlayerFromMatch::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCReportPlayerFromMatch.target_account_id)
  return _internal_target_account_id();
}
inline void CMsgClientToGCReportPlayerFromMatch::_internal_set_target_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.target_account_id_ = value;
}
inline void CMsgClientToGCReportPlayerFromMatch::set_target_account_id(uint32_t value) {
  _internal_set_target_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCReportPlayerFromMatch.target_account_id)
}

// optional .CMsgClientToGCReportPlayerFromMatch.EReportType report_type = 3 [default = k_eReport_None];
inline bool CMsgClientToGCReportPlayerFromMatch::_internal_has_report_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCReportPlayerFromMatch::has_report_type() const {
  return _internal_has_report_type();
}
inline void CMsgClientToGCReportPlayerFromMatch::clear_report_type() {
  _impl_.report_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::CMsgClientToGCReportPlayerFromMatch_EReportType CMsgClientToGCReportPlayerFromMatch::_internal_report_type() const {
  return static_cast< ::CMsgClientToGCReportPlayerFromMatch_EReportType >(_impl_.report_type_);
}
inline ::CMsgClientToGCReportPlayerFromMatch_EReportType CMsgClientToGCReportPlayerFromMatch::report_type() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCReportPlayerFromMatch.report_type)
  return _internal_report_type();
}
inline void CMsgClientToGCReportPlayerFromMatch::_internal_set_report_type(::CMsgClientToGCReportPlayerFromMatch_EReportType value) {
  assert(::CMsgClientToGCReportPlayerFromMatch_EReportType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.report_type_ = value;
}
inline void CMsgClientToGCReportPlayerFromMatch::set_report_type(::CMsgClientToGCReportPlayerFromMatch_EReportType value) {
  _internal_set_report_type(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCReportPlayerFromMatch.report_type)
}

// optional string report_text = 4;
inline bool CMsgClientToGCReportPlayerFromMatch::_internal_has_report_text() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCReportPlayerFromMatch::has_report_text() const {
  return _internal_has_report_text();
}
inline void CMsgClientToGCReportPlayerFromMatch::clear_report_text() {
  _impl_.report_text_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCReportPlayerFromMatch::report_text() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCReportPlayerFromMatch.report_text)
  return _internal_report_text();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCReportPlayerFromMatch::set_report_text(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.report_text_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCReportPlayerFromMatch.report_text)
}
inline std::string* CMsgClientToGCReportPlayerFromMatch::mutable_report_text() {
  std::string* _s = _internal_mutable_report_text();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCReportPlayerFromMatch.report_text)
  return _s;
}
inline const std::string& CMsgClientToGCReportPlayerFromMatch::_internal_report_text() const {
  return _impl_.report_text_.Get();
}
inline void CMsgClientToGCReportPlayerFromMatch::_internal_set_report_text(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.report_text_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCReportPlayerFromMatch::_internal_mutable_report_text() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.report_text_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCReportPlayerFromMatch::release_report_text() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCReportPlayerFromMatch.report_text)
  if (!_internal_has_report_text()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.report_text_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.report_text_.IsDefault()) {
    _impl_.report_text_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCReportPlayerFromMatch::set_allocated_report_text(std::string* report_text) {
  if (report_text != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.report_text_.SetAllocated(report_text, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.report_text_.IsDefault()) {
    _impl_.report_text_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCReportPlayerFromMatch.report_text)
}

// -------------------------------------------------------------------

// CMsgClientToGCReportPlayerFromMatchResponse

// optional .CMsgClientToGCReportPlayerFromMatchResponse.EResponse response = 1 [default = k_eInternalError];
inline bool CMsgClientToGCReportPlayerFromMatchResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCReportPlayerFromMatchResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCReportPlayerFromMatchResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCReportPlayerFromMatchResponse_EResponse >(_impl_.response_);
}
inline ::CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCReportPlayerFromMatchResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCReportPlayerFromMatchResponse::_internal_set_response(::CMsgClientToGCReportPlayerFromMatchResponse_EResponse value) {
  assert(::CMsgClientToGCReportPlayerFromMatchResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCReportPlayerFromMatchResponse::set_response(::CMsgClientToGCReportPlayerFromMatchResponse_EResponse value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCReportPlayerFromMatchResponse.response)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAccountMatchReports

// optional uint64 match_id = 1;
inline bool CMsgClientToGCGetAccountMatchReports::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAccountMatchReports::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgClientToGCGetAccountMatchReports::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCGetAccountMatchReports::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CMsgClientToGCGetAccountMatchReports::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountMatchReports.match_id)
  return _internal_match_id();
}
inline void CMsgClientToGCGetAccountMatchReports::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.match_id_ = value;
}
inline void CMsgClientToGCGetAccountMatchReports::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAccountMatchReports.match_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAccountMatchReportsResponse_Report

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetAccountMatchReportsResponse_Report::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAccountMatchReportsResponse_Report::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCGetAccountMatchReportsResponse_Report::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCGetAccountMatchReportsResponse_Report::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCGetAccountMatchReportsResponse_Report::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountMatchReportsResponse.Report.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCGetAccountMatchReportsResponse_Report::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCGetAccountMatchReportsResponse_Report::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAccountMatchReportsResponse.Report.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAccountMatchReportsResponse_Commend

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetAccountMatchReportsResponse_Commend::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAccountMatchReportsResponse_Commend::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCGetAccountMatchReportsResponse_Commend::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCGetAccountMatchReportsResponse_Commend::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCGetAccountMatchReportsResponse_Commend::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountMatchReportsResponse.Commend.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCGetAccountMatchReportsResponse_Commend::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCGetAccountMatchReportsResponse_Commend::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAccountMatchReportsResponse.Commend.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAccountMatchReportsResponse

// optional .CMsgClientToGCGetAccountMatchReportsResponse.EResponse response = 1 [default = k_eInternalError];
inline bool CMsgClientToGCGetAccountMatchReportsResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAccountMatchReportsResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCGetAccountMatchReportsResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCGetAccountMatchReportsResponse_EResponse CMsgClientToGCGetAccountMatchReportsResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCGetAccountMatchReportsResponse_EResponse >(_impl_.response_);
}
inline ::CMsgClientToGCGetAccountMatchReportsResponse_EResponse CMsgClientToGCGetAccountMatchReportsResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountMatchReportsResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCGetAccountMatchReportsResponse::_internal_set_response(::CMsgClientToGCGetAccountMatchReportsResponse_EResponse value) {
  assert(::CMsgClientToGCGetAccountMatchReportsResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCGetAccountMatchReportsResponse::set_response(::CMsgClientToGCGetAccountMatchReportsResponse_EResponse value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAccountMatchReportsResponse.response)
}

// repeated .CMsgClientToGCGetAccountMatchReportsResponse.Report reports = 2;
inline int CMsgClientToGCGetAccountMatchReportsResponse::_internal_reports_size() const {
  return _impl_.reports_.size();
}
inline int CMsgClientToGCGetAccountMatchReportsResponse::reports_size() const {
  return _internal_reports_size();
}
inline void CMsgClientToGCGetAccountMatchReportsResponse::clear_reports() {
  _impl_.reports_.Clear();
}
inline ::CMsgClientToGCGetAccountMatchReportsResponse_Report* CMsgClientToGCGetAccountMatchReportsResponse::mutable_reports(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetAccountMatchReportsResponse.reports)
  return _impl_.reports_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountMatchReportsResponse_Report >*
CMsgClientToGCGetAccountMatchReportsResponse::mutable_reports() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetAccountMatchReportsResponse.reports)
  return &_impl_.reports_;
}
inline const ::CMsgClientToGCGetAccountMatchReportsResponse_Report& CMsgClientToGCGetAccountMatchReportsResponse::_internal_reports(int index) const {
  return _impl_.reports_.Get(index);
}
inline const ::CMsgClientToGCGetAccountMatchReportsResponse_Report& CMsgClientToGCGetAccountMatchReportsResponse::reports(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountMatchReportsResponse.reports)
  return _internal_reports(index);
}
inline ::CMsgClientToGCGetAccountMatchReportsResponse_Report* CMsgClientToGCGetAccountMatchReportsResponse::_internal_add_reports() {
  return _impl_.reports_.Add();
}
inline ::CMsgClientToGCGetAccountMatchReportsResponse_Report* CMsgClientToGCGetAccountMatchReportsResponse::add_reports() {
  ::CMsgClientToGCGetAccountMatchReportsResponse_Report* _add = _internal_add_reports();
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetAccountMatchReportsResponse.reports)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountMatchReportsResponse_Report >&
CMsgClientToGCGetAccountMatchReportsResponse::reports() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetAccountMatchReportsResponse.reports)
  return _impl_.reports_;
}

// repeated .CMsgClientToGCGetAccountMatchReportsResponse.Commend commends = 3;
inline int CMsgClientToGCGetAccountMatchReportsResponse::_internal_commends_size() const {
  return _impl_.commends_.size();
}
inline int CMsgClientToGCGetAccountMatchReportsResponse::commends_size() const {
  return _internal_commends_size();
}
inline void CMsgClientToGCGetAccountMatchReportsResponse::clear_commends() {
  _impl_.commends_.Clear();
}
inline ::CMsgClientToGCGetAccountMatchReportsResponse_Commend* CMsgClientToGCGetAccountMatchReportsResponse::mutable_commends(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetAccountMatchReportsResponse.commends)
  return _impl_.commends_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountMatchReportsResponse_Commend >*
CMsgClientToGCGetAccountMatchReportsResponse::mutable_commends() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetAccountMatchReportsResponse.commends)
  return &_impl_.commends_;
}
inline const ::CMsgClientToGCGetAccountMatchReportsResponse_Commend& CMsgClientToGCGetAccountMatchReportsResponse::_internal_commends(int index) const {
  return _impl_.commends_.Get(index);
}
inline const ::CMsgClientToGCGetAccountMatchReportsResponse_Commend& CMsgClientToGCGetAccountMatchReportsResponse::commends(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountMatchReportsResponse.commends)
  return _internal_commends(index);
}
inline ::CMsgClientToGCGetAccountMatchReportsResponse_Commend* CMsgClientToGCGetAccountMatchReportsResponse::_internal_add_commends() {
  return _impl_.commends_.Add();
}
inline ::CMsgClientToGCGetAccountMatchReportsResponse_Commend* CMsgClientToGCGetAccountMatchReportsResponse::add_commends() {
  ::CMsgClientToGCGetAccountMatchReportsResponse_Commend* _add = _internal_add_commends();
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetAccountMatchReportsResponse.commends)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountMatchReportsResponse_Commend >&
CMsgClientToGCGetAccountMatchReportsResponse::commends() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetAccountMatchReportsResponse.commends)
  return _impl_.commends_;
}

// -------------------------------------------------------------------

// CMsgClientToGCDeleteHeroBuild

// optional uint32 author_account_id = 1;
inline bool CMsgClientToGCDeleteHeroBuild::_internal_has_author_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCDeleteHeroBuild::has_author_account_id() const {
  return _internal_has_author_account_id();
}
inline void CMsgClientToGCDeleteHeroBuild::clear_author_account_id() {
  _impl_.author_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCDeleteHeroBuild::_internal_author_account_id() const {
  return _impl_.author_account_id_;
}
inline uint32_t CMsgClientToGCDeleteHeroBuild::author_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDeleteHeroBuild.author_account_id)
  return _internal_author_account_id();
}
inline void CMsgClientToGCDeleteHeroBuild::_internal_set_author_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.author_account_id_ = value;
}
inline void CMsgClientToGCDeleteHeroBuild::set_author_account_id(uint32_t value) {
  _internal_set_author_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDeleteHeroBuild.author_account_id)
}

// optional uint32 hero_build_id = 2;
inline bool CMsgClientToGCDeleteHeroBuild::_internal_has_hero_build_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCDeleteHeroBuild::has_hero_build_id() const {
  return _internal_has_hero_build_id();
}
inline void CMsgClientToGCDeleteHeroBuild::clear_hero_build_id() {
  _impl_.hero_build_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCDeleteHeroBuild::_internal_hero_build_id() const {
  return _impl_.hero_build_id_;
}
inline uint32_t CMsgClientToGCDeleteHeroBuild::hero_build_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDeleteHeroBuild.hero_build_id)
  return _internal_hero_build_id();
}
inline void CMsgClientToGCDeleteHeroBuild::_internal_set_hero_build_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.hero_build_id_ = value;
}
inline void CMsgClientToGCDeleteHeroBuild::set_hero_build_id(uint32_t value) {
  _internal_set_hero_build_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDeleteHeroBuild.hero_build_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCDeleteHeroBuildResponse

// optional .CMsgClientToGCDeleteHeroBuildResponse.EResponse response = 1 [default = k_eInternalError];
inline bool CMsgClientToGCDeleteHeroBuildResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCDeleteHeroBuildResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCDeleteHeroBuildResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCDeleteHeroBuildResponse_EResponse CMsgClientToGCDeleteHeroBuildResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCDeleteHeroBuildResponse_EResponse >(_impl_.response_);
}
inline ::CMsgClientToGCDeleteHeroBuildResponse_EResponse CMsgClientToGCDeleteHeroBuildResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDeleteHeroBuildResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCDeleteHeroBuildResponse::_internal_set_response(::CMsgClientToGCDeleteHeroBuildResponse_EResponse value) {
  assert(::CMsgClientToGCDeleteHeroBuildResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCDeleteHeroBuildResponse::set_response(::CMsgClientToGCDeleteHeroBuildResponse_EResponse value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDeleteHeroBuildResponse.response)
}

// optional uint32 builds_deleted = 2;
inline bool CMsgClientToGCDeleteHeroBuildResponse::_internal_has_builds_deleted() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCDeleteHeroBuildResponse::has_builds_deleted() const {
  return _internal_has_builds_deleted();
}
inline void CMsgClientToGCDeleteHeroBuildResponse::clear_builds_deleted() {
  _impl_.builds_deleted_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCDeleteHeroBuildResponse::_internal_builds_deleted() const {
  return _impl_.builds_deleted_;
}
inline uint32_t CMsgClientToGCDeleteHeroBuildResponse::builds_deleted() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCDeleteHeroBuildResponse.builds_deleted)
  return _internal_builds_deleted();
}
inline void CMsgClientToGCDeleteHeroBuildResponse::_internal_set_builds_deleted(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.builds_deleted_ = value;
}
inline void CMsgClientToGCDeleteHeroBuildResponse::set_builds_deleted(uint32_t value) {
  _internal_set_builds_deleted(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCDeleteHeroBuildResponse.builds_deleted)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetActiveMatches

// -------------------------------------------------------------------

// CMsgClientToGCGetActiveMatchesResponse

// repeated .CMsgDevMatchInfo active_matches = 1;
inline int CMsgClientToGCGetActiveMatchesResponse::_internal_active_matches_size() const {
  return _impl_.active_matches_.size();
}
inline int CMsgClientToGCGetActiveMatchesResponse::active_matches_size() const {
  return _internal_active_matches_size();
}
inline void CMsgClientToGCGetActiveMatchesResponse::clear_active_matches() {
  _impl_.active_matches_.Clear();
}
inline ::CMsgDevMatchInfo* CMsgClientToGCGetActiveMatchesResponse::mutable_active_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetActiveMatchesResponse.active_matches)
  return _impl_.active_matches_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDevMatchInfo >*
CMsgClientToGCGetActiveMatchesResponse::mutable_active_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetActiveMatchesResponse.active_matches)
  return &_impl_.active_matches_;
}
inline const ::CMsgDevMatchInfo& CMsgClientToGCGetActiveMatchesResponse::_internal_active_matches(int index) const {
  return _impl_.active_matches_.Get(index);
}
inline const ::CMsgDevMatchInfo& CMsgClientToGCGetActiveMatchesResponse::active_matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetActiveMatchesResponse.active_matches)
  return _internal_active_matches(index);
}
inline ::CMsgDevMatchInfo* CMsgClientToGCGetActiveMatchesResponse::_internal_add_active_matches() {
  return _impl_.active_matches_.Add();
}
inline ::CMsgDevMatchInfo* CMsgClientToGCGetActiveMatchesResponse::add_active_matches() {
  ::CMsgDevMatchInfo* _add = _internal_add_active_matches();
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetActiveMatchesResponse.active_matches)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDevMatchInfo >&
CMsgClientToGCGetActiveMatchesResponse::active_matches() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetActiveMatchesResponse.active_matches)
  return _impl_.active_matches_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetDiscordLink

// -------------------------------------------------------------------

// CMsgClientToGCGetDiscordLinkResponse

// optional .CMsgClientToGCGetDiscordLinkResponse.EResponse response = 1 [default = k_eInternalError];
inline bool CMsgClientToGCGetDiscordLinkResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetDiscordLinkResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCGetDiscordLinkResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCGetDiscordLinkResponse_EResponse CMsgClientToGCGetDiscordLinkResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCGetDiscordLinkResponse_EResponse >(_impl_.response_);
}
inline ::CMsgClientToGCGetDiscordLinkResponse_EResponse CMsgClientToGCGetDiscordLinkResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetDiscordLinkResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCGetDiscordLinkResponse::_internal_set_response(::CMsgClientToGCGetDiscordLinkResponse_EResponse value) {
  assert(::CMsgClientToGCGetDiscordLinkResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCGetDiscordLinkResponse::set_response(::CMsgClientToGCGetDiscordLinkResponse_EResponse value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetDiscordLinkResponse.response)
}

// optional string discord_link = 2;
inline bool CMsgClientToGCGetDiscordLinkResponse::_internal_has_discord_link() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetDiscordLinkResponse::has_discord_link() const {
  return _internal_has_discord_link();
}
inline void CMsgClientToGCGetDiscordLinkResponse::clear_discord_link() {
  _impl_.discord_link_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCGetDiscordLinkResponse::discord_link() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetDiscordLinkResponse.discord_link)
  return _internal_discord_link();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCGetDiscordLinkResponse::set_discord_link(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.discord_link_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetDiscordLinkResponse.discord_link)
}
inline std::string* CMsgClientToGCGetDiscordLinkResponse::mutable_discord_link() {
  std::string* _s = _internal_mutable_discord_link();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetDiscordLinkResponse.discord_link)
  return _s;
}
inline const std::string& CMsgClientToGCGetDiscordLinkResponse::_internal_discord_link() const {
  return _impl_.discord_link_.Get();
}
inline void CMsgClientToGCGetDiscordLinkResponse::_internal_set_discord_link(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.discord_link_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGetDiscordLinkResponse::_internal_mutable_discord_link() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.discord_link_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGetDiscordLinkResponse::release_discord_link() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGetDiscordLinkResponse.discord_link)
  if (!_internal_has_discord_link()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.discord_link_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.discord_link_.IsDefault()) {
    _impl_.discord_link_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCGetDiscordLinkResponse::set_allocated_discord_link(std::string* discord_link) {
  if (discord_link != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.discord_link_.SetAllocated(discord_link, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.discord_link_.IsDefault()) {
    _impl_.discord_link_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetDiscordLinkResponse.discord_link)
}

// optional uint32 valid_hours = 3;
inline bool CMsgClientToGCGetDiscordLinkResponse::_internal_has_valid_hours() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCGetDiscordLinkResponse::has_valid_hours() const {
  return _internal_has_valid_hours();
}
inline void CMsgClientToGCGetDiscordLinkResponse::clear_valid_hours() {
  _impl_.valid_hours_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCGetDiscordLinkResponse::_internal_valid_hours() const {
  return _impl_.valid_hours_;
}
inline uint32_t CMsgClientToGCGetDiscordLinkResponse::valid_hours() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetDiscordLinkResponse.valid_hours)
  return _internal_valid_hours();
}
inline void CMsgClientToGCGetDiscordLinkResponse::_internal_set_valid_hours(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.valid_hours_ = value;
}
inline void CMsgClientToGCGetDiscordLinkResponse::set_valid_hours(uint32_t value) {
  _internal_set_valid_hours(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetDiscordLinkResponse.valid_hours)
}

// -------------------------------------------------------------------

// CMsgClientToGCGrantForumAccess

// optional string email = 1;
inline bool CMsgClientToGCGrantForumAccess::_internal_has_email() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGrantForumAccess::has_email() const {
  return _internal_has_email();
}
inline void CMsgClientToGCGrantForumAccess::clear_email() {
  _impl_.email_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCGrantForumAccess::email() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGrantForumAccess.email)
  return _internal_email();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCGrantForumAccess::set_email(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.email_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCGrantForumAccess.email)
}
inline std::string* CMsgClientToGCGrantForumAccess::mutable_email() {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGrantForumAccess.email)
  return _s;
}
inline const std::string& CMsgClientToGCGrantForumAccess::_internal_email() const {
  return _impl_.email_.Get();
}
inline void CMsgClientToGCGrantForumAccess::_internal_set_email(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.email_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGrantForumAccess::_internal_mutable_email() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.email_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGrantForumAccess::release_email() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGrantForumAccess.email)
  if (!_internal_has_email()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.email_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.email_.IsDefault()) {
    _impl_.email_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCGrantForumAccess::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.email_.SetAllocated(email, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.email_.IsDefault()) {
    _impl_.email_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGrantForumAccess.email)
}

// -------------------------------------------------------------------

// CMsgClientToGCGrantForumAccessResponse

// optional .CMsgClientToGCGrantForumAccessResponse.EResponse response = 1 [default = k_eInternalError];
inline bool CMsgClientToGCGrantForumAccessResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCGrantForumAccessResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCGrantForumAccessResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::CMsgClientToGCGrantForumAccessResponse_EResponse CMsgClientToGCGrantForumAccessResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCGrantForumAccessResponse_EResponse >(_impl_.response_);
}
inline ::CMsgClientToGCGrantForumAccessResponse_EResponse CMsgClientToGCGrantForumAccessResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGrantForumAccessResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCGrantForumAccessResponse::_internal_set_response(::CMsgClientToGCGrantForumAccessResponse_EResponse value) {
  assert(::CMsgClientToGCGrantForumAccessResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCGrantForumAccessResponse::set_response(::CMsgClientToGCGrantForumAccessResponse_EResponse value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGrantForumAccessResponse.response)
}

// optional string email = 2;
inline bool CMsgClientToGCGrantForumAccessResponse::_internal_has_email() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGrantForumAccessResponse::has_email() const {
  return _internal_has_email();
}
inline void CMsgClientToGCGrantForumAccessResponse::clear_email() {
  _impl_.email_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCGrantForumAccessResponse::email() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGrantForumAccessResponse.email)
  return _internal_email();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCGrantForumAccessResponse::set_email(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.email_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCGrantForumAccessResponse.email)
}
inline std::string* CMsgClientToGCGrantForumAccessResponse::mutable_email() {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGrantForumAccessResponse.email)
  return _s;
}
inline const std::string& CMsgClientToGCGrantForumAccessResponse::_internal_email() const {
  return _impl_.email_.Get();
}
inline void CMsgClientToGCGrantForumAccessResponse::_internal_set_email(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.email_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGrantForumAccessResponse::_internal_mutable_email() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.email_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGrantForumAccessResponse::release_email() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGrantForumAccessResponse.email)
  if (!_internal_has_email()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.email_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.email_.IsDefault()) {
    _impl_.email_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCGrantForumAccessResponse::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.email_.SetAllocated(email, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.email_.IsDefault()) {
    _impl_.email_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGrantForumAccessResponse.email)
}

// optional string username = 3;
inline bool CMsgClientToGCGrantForumAccessResponse::_internal_has_username() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGrantForumAccessResponse::has_username() const {
  return _internal_has_username();
}
inline void CMsgClientToGCGrantForumAccessResponse::clear_username() {
  _impl_.username_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientToGCGrantForumAccessResponse::username() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGrantForumAccessResponse.username)
  return _internal_username();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCGrantForumAccessResponse::set_username(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.username_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCGrantForumAccessResponse.username)
}
inline std::string* CMsgClientToGCGrantForumAccessResponse::mutable_username() {
  std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGrantForumAccessResponse.username)
  return _s;
}
inline const std::string& CMsgClientToGCGrantForumAccessResponse::_internal_username() const {
  return _impl_.username_.Get();
}
inline void CMsgClientToGCGrantForumAccessResponse::_internal_set_username(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.username_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGrantForumAccessResponse::_internal_mutable_username() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.username_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGrantForumAccessResponse::release_username() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGrantForumAccessResponse.username)
  if (!_internal_has_username()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.username_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.username_.IsDefault()) {
    _impl_.username_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCGrantForumAccessResponse::set_allocated_username(std::string* username) {
  if (username != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.username_.SetAllocated(username, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.username_.IsDefault()) {
    _impl_.username_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGrantForumAccessResponse.username)
}

// optional string forum_password = 4;
inline bool CMsgClientToGCGrantForumAccessResponse::_internal_has_forum_password() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCGrantForumAccessResponse::has_forum_password() const {
  return _internal_has_forum_password();
}
inline void CMsgClientToGCGrantForumAccessResponse::clear_forum_password() {
  _impl_.forum_password_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientToGCGrantForumAccessResponse::forum_password() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGrantForumAccessResponse.forum_password)
  return _internal_forum_password();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCGrantForumAccessResponse::set_forum_password(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000004u;
 _impl_.forum_password_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCGrantForumAccessResponse.forum_password)
}
inline std::string* CMsgClientToGCGrantForumAccessResponse::mutable_forum_password() {
  std::string* _s = _internal_mutable_forum_password();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGrantForumAccessResponse.forum_password)
  return _s;
}
inline const std::string& CMsgClientToGCGrantForumAccessResponse::_internal_forum_password() const {
  return _impl_.forum_password_.Get();
}
inline void CMsgClientToGCGrantForumAccessResponse::_internal_set_forum_password(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.forum_password_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGrantForumAccessResponse::_internal_mutable_forum_password() {
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.forum_password_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGrantForumAccessResponse::release_forum_password() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGrantForumAccessResponse.forum_password)
  if (!_internal_has_forum_password()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* p = _impl_.forum_password_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.forum_password_.IsDefault()) {
    _impl_.forum_password_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCGrantForumAccessResponse::set_allocated_forum_password(std::string* forum_password) {
  if (forum_password != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.forum_password_.SetAllocated(forum_password, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.forum_password_.IsDefault()) {
    _impl_.forum_password_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGrantForumAccessResponse.forum_password)
}

// -------------------------------------------------------------------

// CMsgClientToGCModeratorRequest

// optional uint32 account_id = 1;
inline bool CMsgClientToGCModeratorRequest::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCModeratorRequest::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCModeratorRequest::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCModeratorRequest::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCModeratorRequest::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModeratorRequest.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCModeratorRequest::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCModeratorRequest::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCModeratorRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCModeratorRequestResponse

// optional bool success = 1;
inline bool CMsgClientToGCModeratorRequestResponse::_internal_has_success() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCModeratorRequestResponse::has_success() const {
  return _internal_has_success();
}
inline void CMsgClientToGCModeratorRequestResponse::clear_success() {
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCModeratorRequestResponse::_internal_success() const {
  return _impl_.success_;
}
inline bool CMsgClientToGCModeratorRequestResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModeratorRequestResponse.success)
  return _internal_success();
}
inline void CMsgClientToGCModeratorRequestResponse::_internal_set_success(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.success_ = value;
}
inline void CMsgClientToGCModeratorRequestResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCModeratorRequestResponse.success)
}

// repeated string response_text = 2;
inline int CMsgClientToGCModeratorRequestResponse::_internal_response_text_size() const {
  return _impl_.response_text_.size();
}
inline int CMsgClientToGCModeratorRequestResponse::response_text_size() const {
  return _internal_response_text_size();
}
inline void CMsgClientToGCModeratorRequestResponse::clear_response_text() {
  _impl_.response_text_.Clear();
}
inline std::string* CMsgClientToGCModeratorRequestResponse::add_response_text() {
  std::string* _s = _internal_add_response_text();
  // @@protoc_insertion_point(field_add_mutable:CMsgClientToGCModeratorRequestResponse.response_text)
  return _s;
}
inline const std::string& CMsgClientToGCModeratorRequestResponse::_internal_response_text(int index) const {
  return _impl_.response_text_.Get(index);
}
inline const std::string& CMsgClientToGCModeratorRequestResponse::response_text(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCModeratorRequestResponse.response_text)
  return _internal_response_text(index);
}
inline std::string* CMsgClientToGCModeratorRequestResponse::mutable_response_text(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCModeratorRequestResponse.response_text)
  return _impl_.response_text_.Mutable(index);
}
inline void CMsgClientToGCModeratorRequestResponse::set_response_text(int index, const std::string& value) {
  _impl_.response_text_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCModeratorRequestResponse.response_text)
}
inline void CMsgClientToGCModeratorRequestResponse::set_response_text(int index, std::string&& value) {
  _impl_.response_text_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CMsgClientToGCModeratorRequestResponse.response_text)
}
inline void CMsgClientToGCModeratorRequestResponse::set_response_text(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.response_text_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCModeratorRequestResponse.response_text)
}
inline void CMsgClientToGCModeratorRequestResponse::set_response_text(int index, const char* value, size_t size) {
  _impl_.response_text_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCModeratorRequestResponse.response_text)
}
inline std::string* CMsgClientToGCModeratorRequestResponse::_internal_add_response_text() {
  return _impl_.response_text_.Add();
}
inline void CMsgClientToGCModeratorRequestResponse::add_response_text(const std::string& value) {
  _impl_.response_text_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCModeratorRequestResponse.response_text)
}
inline void CMsgClientToGCModeratorRequestResponse::add_response_text(std::string&& value) {
  _impl_.response_text_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgClientToGCModeratorRequestResponse.response_text)
}
inline void CMsgClientToGCModeratorRequestResponse::add_response_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.response_text_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgClientToGCModeratorRequestResponse.response_text)
}
inline void CMsgClientToGCModeratorRequestResponse::add_response_text(const char* value, size_t size) {
  _impl_.response_text_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgClientToGCModeratorRequestResponse.response_text)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CMsgClientToGCModeratorRequestResponse::response_text() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCModeratorRequestResponse.response_text)
  return _impl_.response_text_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CMsgClientToGCModeratorRequestResponse::mutable_response_text() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCModeratorRequestResponse.response_text)
  return &_impl_.response_text_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetFriendGameStatus

// optional bool include_invited = 1;
inline bool CMsgClientToGCGetFriendGameStatus::_internal_has_include_invited() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetFriendGameStatus::has_include_invited() const {
  return _internal_has_include_invited();
}
inline void CMsgClientToGCGetFriendGameStatus::clear_include_invited() {
  _impl_.include_invited_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCGetFriendGameStatus::_internal_include_invited() const {
  return _impl_.include_invited_;
}
inline bool CMsgClientToGCGetFriendGameStatus::include_invited() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetFriendGameStatus.include_invited)
  return _internal_include_invited();
}
inline void CMsgClientToGCGetFriendGameStatus::_internal_set_include_invited(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.include_invited_ = value;
}
inline void CMsgClientToGCGetFriendGameStatus::set_include_invited(bool value) {
  _internal_set_include_invited(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetFriendGameStatus.include_invited)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetFriendGameStatusResponse

// optional .CMsgClientToGCGetFriendGameStatusResponse.EResponse response = 1 [default = k_eInternalError];
inline bool CMsgClientToGCGetFriendGameStatusResponse::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetFriendGameStatusResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCGetFriendGameStatusResponse::clear_response() {
  _impl_.response_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCGetFriendGameStatusResponse_EResponse CMsgClientToGCGetFriendGameStatusResponse::_internal_response() const {
  return static_cast< ::CMsgClientToGCGetFriendGameStatusResponse_EResponse >(_impl_.response_);
}
inline ::CMsgClientToGCGetFriendGameStatusResponse_EResponse CMsgClientToGCGetFriendGameStatusResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetFriendGameStatusResponse.response)
  return _internal_response();
}
inline void CMsgClientToGCGetFriendGameStatusResponse::_internal_set_response(::CMsgClientToGCGetFriendGameStatusResponse_EResponse value) {
  assert(::CMsgClientToGCGetFriendGameStatusResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_ = value;
}
inline void CMsgClientToGCGetFriendGameStatusResponse::set_response(::CMsgClientToGCGetFriendGameStatusResponse_EResponse value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetFriendGameStatusResponse.response)
}

// repeated uint32 friends_played_game = 2 [packed = true];
inline int CMsgClientToGCGetFriendGameStatusResponse::_internal_friends_played_game_size() const {
  return _impl_.friends_played_game_.size();
}
inline int CMsgClientToGCGetFriendGameStatusResponse::friends_played_game_size() const {
  return _internal_friends_played_game_size();
}
inline void CMsgClientToGCGetFriendGameStatusResponse::clear_friends_played_game() {
  _impl_.friends_played_game_.Clear();
}
inline uint32_t CMsgClientToGCGetFriendGameStatusResponse::_internal_friends_played_game(int index) const {
  return _impl_.friends_played_game_.Get(index);
}
inline uint32_t CMsgClientToGCGetFriendGameStatusResponse::friends_played_game(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetFriendGameStatusResponse.friends_played_game)
  return _internal_friends_played_game(index);
}
inline void CMsgClientToGCGetFriendGameStatusResponse::set_friends_played_game(int index, uint32_t value) {
  _impl_.friends_played_game_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetFriendGameStatusResponse.friends_played_game)
}
inline void CMsgClientToGCGetFriendGameStatusResponse::_internal_add_friends_played_game(uint32_t value) {
  _impl_.friends_played_game_.Add(value);
}
inline void CMsgClientToGCGetFriendGameStatusResponse::add_friends_played_game(uint32_t value) {
  _internal_add_friends_played_game(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetFriendGameStatusResponse.friends_played_game)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCGetFriendGameStatusResponse::_internal_friends_played_game() const {
  return _impl_.friends_played_game_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCGetFriendGameStatusResponse::friends_played_game() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetFriendGameStatusResponse.friends_played_game)
  return _internal_friends_played_game();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCGetFriendGameStatusResponse::_internal_mutable_friends_played_game() {
  return &_impl_.friends_played_game_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCGetFriendGameStatusResponse::mutable_friends_played_game() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetFriendGameStatusResponse.friends_played_game)
  return _internal_mutable_friends_played_game();
}

// repeated uint32 friends_invited = 3 [packed = true];
inline int CMsgClientToGCGetFriendGameStatusResponse::_internal_friends_invited_size() const {
  return _impl_.friends_invited_.size();
}
inline int CMsgClientToGCGetFriendGameStatusResponse::friends_invited_size() const {
  return _internal_friends_invited_size();
}
inline void CMsgClientToGCGetFriendGameStatusResponse::clear_friends_invited() {
  _impl_.friends_invited_.Clear();
}
inline uint32_t CMsgClientToGCGetFriendGameStatusResponse::_internal_friends_invited(int index) const {
  return _impl_.friends_invited_.Get(index);
}
inline uint32_t CMsgClientToGCGetFriendGameStatusResponse::friends_invited(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetFriendGameStatusResponse.friends_invited)
  return _internal_friends_invited(index);
}
inline void CMsgClientToGCGetFriendGameStatusResponse::set_friends_invited(int index, uint32_t value) {
  _impl_.friends_invited_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetFriendGameStatusResponse.friends_invited)
}
inline void CMsgClientToGCGetFriendGameStatusResponse::_internal_add_friends_invited(uint32_t value) {
  _impl_.friends_invited_.Add(value);
}
inline void CMsgClientToGCGetFriendGameStatusResponse::add_friends_invited(uint32_t value) {
  _internal_add_friends_invited(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetFriendGameStatusResponse.friends_invited)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCGetFriendGameStatusResponse::_internal_friends_invited() const {
  return _impl_.friends_invited_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCGetFriendGameStatusResponse::friends_invited() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetFriendGameStatusResponse.friends_invited)
  return _internal_friends_invited();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCGetFriendGameStatusResponse::_internal_mutable_friends_invited() {
  return &_impl_.friends_invited_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCGetFriendGameStatusResponse::mutable_friends_invited() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetFriendGameStatusResponse.friends_invited)
  return _internal_mutable_friends_invited();
}

// repeated uint32 friends_invites_sent = 4 [packed = true];
inline int CMsgClientToGCGetFriendGameStatusResponse::_internal_friends_invites_sent_size() const {
  return _impl_.friends_invites_sent_.size();
}
inline int CMsgClientToGCGetFriendGameStatusResponse::friends_invites_sent_size() const {
  return _internal_friends_invites_sent_size();
}
inline void CMsgClientToGCGetFriendGameStatusResponse::clear_friends_invites_sent() {
  _impl_.friends_invites_sent_.Clear();
}
inline uint32_t CMsgClientToGCGetFriendGameStatusResponse::_internal_friends_invites_sent(int index) const {
  return _impl_.friends_invites_sent_.Get(index);
}
inline uint32_t CMsgClientToGCGetFriendGameStatusResponse::friends_invites_sent(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetFriendGameStatusResponse.friends_invites_sent)
  return _internal_friends_invites_sent(index);
}
inline void CMsgClientToGCGetFriendGameStatusResponse::set_friends_invites_sent(int index, uint32_t value) {
  _impl_.friends_invites_sent_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetFriendGameStatusResponse.friends_invites_sent)
}
inline void CMsgClientToGCGetFriendGameStatusResponse::_internal_add_friends_invites_sent(uint32_t value) {
  _impl_.friends_invites_sent_.Add(value);
}
inline void CMsgClientToGCGetFriendGameStatusResponse::add_friends_invites_sent(uint32_t value) {
  _internal_add_friends_invites_sent(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetFriendGameStatusResponse.friends_invites_sent)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCGetFriendGameStatusResponse::_internal_friends_invites_sent() const {
  return _impl_.friends_invites_sent_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCGetFriendGameStatusResponse::friends_invites_sent() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetFriendGameStatusResponse.friends_invites_sent)
  return _internal_friends_invites_sent();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCGetFriendGameStatusResponse::_internal_mutable_friends_invites_sent() {
  return &_impl_.friends_invites_sent_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCGetFriendGameStatusResponse::mutable_friends_invites_sent() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetFriendGameStatusResponse.friends_invites_sent)
  return _internal_mutable_friends_invites_sent();
}

// -------------------------------------------------------------------

// CMsgClientToGCUpdateSpectatorStatus

// optional fixed64 spectating_lobby_id = 1;
inline bool CMsgClientToGCUpdateSpectatorStatus::_internal_has_spectating_lobby_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCUpdateSpectatorStatus::has_spectating_lobby_id() const {
  return _internal_has_spectating_lobby_id();
}
inline void CMsgClientToGCUpdateSpectatorStatus::clear_spectating_lobby_id() {
  _impl_.spectating_lobby_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCUpdateSpectatorStatus::_internal_spectating_lobby_id() const {
  return _impl_.spectating_lobby_id_;
}
inline uint64_t CMsgClientToGCUpdateSpectatorStatus::spectating_lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateSpectatorStatus.spectating_lobby_id)
  return _internal_spectating_lobby_id();
}
inline void CMsgClientToGCUpdateSpectatorStatus::_internal_set_spectating_lobby_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.spectating_lobby_id_ = value;
}
inline void CMsgClientToGCUpdateSpectatorStatus::set_spectating_lobby_id(uint64_t value) {
  _internal_set_spectating_lobby_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUpdateSpectatorStatus.spectating_lobby_id)
}

// optional bool stopped_spectating = 2;
inline bool CMsgClientToGCUpdateSpectatorStatus::_internal_has_stopped_spectating() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCUpdateSpectatorStatus::has_stopped_spectating() const {
  return _internal_has_stopped_spectating();
}
inline void CMsgClientToGCUpdateSpectatorStatus::clear_stopped_spectating() {
  _impl_.stopped_spectating_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgClientToGCUpdateSpectatorStatus::_internal_stopped_spectating() const {
  return _impl_.stopped_spectating_;
}
inline bool CMsgClientToGCUpdateSpectatorStatus::stopped_spectating() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCUpdateSpectatorStatus.stopped_spectating)
  return _internal_stopped_spectating();
}
inline void CMsgClientToGCUpdateSpectatorStatus::_internal_set_stopped_spectating(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.stopped_spectating_ = value;
}
inline void CMsgClientToGCUpdateSpectatorStatus::set_stopped_spectating(bool value) {
  _internal_set_stopped_spectating(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCUpdateSpectatorStatus.stopped_spectating)
}

// -------------------------------------------------------------------

// CMsgClientToGCCommendPlayerFromMatch

// optional uint64 match_id = 1;
inline bool CMsgClientToGCCommendPlayerFromMatch::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCCommendPlayerFromMatch::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgClientToGCCommendPlayerFromMatch::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCCommendPlayerFromMatch::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CMsgClientToGCCommendPlayerFromMatch::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCommendPlayerFromMatch.match_id)
  return _internal_match_id();
}
inline void CMsgClientToGCCommendPlayerFromMatch::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.match_id_ = value;
}
inline void CMsgClientToGCCommendPlayerFromMatch::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCommendPlayerFromMatch.match_id)
}

// optional uint32 target_account_id = 2;
inline bool CMsgClientToGCCommendPlayerFromMatch::_internal_has_target_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCCommendPlayerFromMatch::has_target_account_id() const {
  return _internal_has_target_account_id();
}
inline void CMsgClientToGCCommendPlayerFromMatch::clear_target_account_id() {
  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCCommendPlayerFromMatch::_internal_target_account_id() const {
  return _impl_.target_account_id_;
}
inline uint32_t CMsgClientToGCCommendPlayerFromMatch::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCommendPlayerFromMatch.target_account_id)
  return _internal_target_account_id();
}
inline void CMsgClientToGCCommendPlayerFromMatch::_internal_set_target_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.target_account_id_ = value;
}
inline void CMsgClientToGCCommendPlayerFromMatch::set_target_account_id(uint32_t value) {
  _internal_set_target_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCommendPlayerFromMatch.target_account_id)
}

// optional .ECommendType commend_type = 3 [default = k_eInvalid];
inline bool CMsgClientToGCCommendPlayerFromMatch::_internal_has_commend_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCCommendPlayerFromMatch::has_commend_type() const {
  return _internal_has_commend_type();
}
inline void CMsgClientToGCCommendPlayerFromMatch::clear_commend_type() {
  _impl_.commend_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::ECommendType CMsgClientToGCCommendPlayerFromMatch::_internal_commend_type() const {
  return static_cast< ::ECommendType >(_impl_.commend_type_);
}
inline ::ECommendType CMsgClientToGCCommendPlayerFromMatch::commend_type() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCommendPlayerFromMatch.commend_type)
  return _internal_commend_type();
}
inline void CMsgClientToGCCommendPlayerFromMatch::_internal_set_commend_type(::ECommendType value) {
  assert(::ECommendType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.commend_type_ = value;
}
inline void CMsgClientToGCCommendPlayerFromMatch::set_commend_type(::ECommendType value) {
  _internal_set_commend_type(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCommendPlayerFromMatch.commend_type)
}

// optional uint32 fake_commend_hero_id = 4;
inline bool CMsgClientToGCCommendPlayerFromMatch::_internal_has_fake_commend_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCCommendPlayerFromMatch::has_fake_commend_hero_id() const {
  return _internal_has_fake_commend_hero_id();
}
inline void CMsgClientToGCCommendPlayerFromMatch::clear_fake_commend_hero_id() {
  _impl_.fake_commend_hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgClientToGCCommendPlayerFromMatch::_internal_fake_commend_hero_id() const {
  return _impl_.fake_commend_hero_id_;
}
inline uint32_t CMsgClientToGCCommendPlayerFromMatch::fake_commend_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCommendPlayerFromMatch.fake_commend_hero_id)
  return _internal_fake_commend_hero_id();
}
inline void CMsgClientToGCCommendPlayerFromMatch::_internal_set_fake_commend_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.fake_commend_hero_id_ = value;
}
inline void CMsgClientToGCCommendPlayerFromMatch::set_fake_commend_hero_id(uint32_t value) {
  _internal_set_fake_commend_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCommendPlayerFromMatch.fake_commend_hero_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCCommendPlayerFromMatchResponse

// optional .CMsgClientToGCCommendPlayerFromMatchResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCCommendPlayerFromMatchResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCCommendPlayerFromMatchResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCCommendPlayerFromMatchResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse CMsgClientToGCCommendPlayerFromMatchResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse >(_impl_.result_);
}
inline ::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse CMsgClientToGCCommendPlayerFromMatchResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCommendPlayerFromMatchResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCCommendPlayerFromMatchResponse::_internal_set_result(::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse value) {
  assert(::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCCommendPlayerFromMatchResponse::set_result(::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCommendPlayerFromMatchResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCToClientCommendNotification

// optional uint32 commender_account_id = 1;
inline bool CMsgGCToClientCommendNotification::_internal_has_commender_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientCommendNotification::has_commender_account_id() const {
  return _internal_has_commender_account_id();
}
inline void CMsgGCToClientCommendNotification::clear_commender_account_id() {
  _impl_.commender_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCToClientCommendNotification::_internal_commender_account_id() const {
  return _impl_.commender_account_id_;
}
inline uint32_t CMsgGCToClientCommendNotification::commender_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCommendNotification.commender_account_id)
  return _internal_commender_account_id();
}
inline void CMsgGCToClientCommendNotification::_internal_set_commender_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.commender_account_id_ = value;
}
inline void CMsgGCToClientCommendNotification::set_commender_account_id(uint32_t value) {
  _internal_set_commender_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientCommendNotification.commender_account_id)
}

// optional string commender_name = 2;
inline bool CMsgGCToClientCommendNotification::_internal_has_commender_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientCommendNotification::has_commender_name() const {
  return _internal_has_commender_name();
}
inline void CMsgGCToClientCommendNotification::clear_commender_name() {
  _impl_.commender_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToClientCommendNotification::commender_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCommendNotification.commender_name)
  return _internal_commender_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCToClientCommendNotification::set_commender_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.commender_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCToClientCommendNotification.commender_name)
}
inline std::string* CMsgGCToClientCommendNotification::mutable_commender_name() {
  std::string* _s = _internal_mutable_commender_name();
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientCommendNotification.commender_name)
  return _s;
}
inline const std::string& CMsgGCToClientCommendNotification::_internal_commender_name() const {
  return _impl_.commender_name_.Get();
}
inline void CMsgGCToClientCommendNotification::_internal_set_commender_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.commender_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCToClientCommendNotification::_internal_mutable_commender_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.commender_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCToClientCommendNotification::release_commender_name() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientCommendNotification.commender_name)
  if (!_internal_has_commender_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.commender_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.commender_name_.IsDefault()) {
    _impl_.commender_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCToClientCommendNotification::set_allocated_commender_name(std::string* commender_name) {
  if (commender_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.commender_name_.SetAllocated(commender_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.commender_name_.IsDefault()) {
    _impl_.commender_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientCommendNotification.commender_name)
}

// optional uint32 commender_hero_id = 4;
inline bool CMsgGCToClientCommendNotification::_internal_has_commender_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToClientCommendNotification::has_commender_hero_id() const {
  return _internal_has_commender_hero_id();
}
inline void CMsgGCToClientCommendNotification::clear_commender_hero_id() {
  _impl_.commender_hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGCToClientCommendNotification::_internal_commender_hero_id() const {
  return _impl_.commender_hero_id_;
}
inline uint32_t CMsgGCToClientCommendNotification::commender_hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCommendNotification.commender_hero_id)
  return _internal_commender_hero_id();
}
inline void CMsgGCToClientCommendNotification::_internal_set_commender_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.commender_hero_id_ = value;
}
inline void CMsgGCToClientCommendNotification::set_commender_hero_id(uint32_t value) {
  _internal_set_commender_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientCommendNotification.commender_hero_id)
}

// optional .ECommendType commend_type = 5 [default = k_eInvalid];
inline bool CMsgGCToClientCommendNotification::_internal_has_commend_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGCToClientCommendNotification::has_commend_type() const {
  return _internal_has_commend_type();
}
inline void CMsgGCToClientCommendNotification::clear_commend_type() {
  _impl_.commend_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::ECommendType CMsgGCToClientCommendNotification::_internal_commend_type() const {
  return static_cast< ::ECommendType >(_impl_.commend_type_);
}
inline ::ECommendType CMsgGCToClientCommendNotification::commend_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCommendNotification.commend_type)
  return _internal_commend_type();
}
inline void CMsgGCToClientCommendNotification::_internal_set_commend_type(::ECommendType value) {
  assert(::ECommendType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.commend_type_ = value;
}
inline void CMsgGCToClientCommendNotification::set_commend_type(::ECommendType value) {
  _internal_set_commend_type(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientCommendNotification.commend_type)
}

// optional uint64 match_id = 6;
inline bool CMsgGCToClientCommendNotification::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCToClientCommendNotification::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgGCToClientCommendNotification::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CMsgGCToClientCommendNotification::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CMsgGCToClientCommendNotification::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCommendNotification.match_id)
  return _internal_match_id();
}
inline void CMsgGCToClientCommendNotification::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.match_id_ = value;
}
inline void CMsgGCToClientCommendNotification::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientCommendNotification.match_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestCheatReports

// -------------------------------------------------------------------

// CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport

// optional uint32 account_id = 1;
inline bool CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport.account_id)
}

// optional uint64 match_id = 2;
inline bool CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport.match_id)
  return _internal_match_id();
}
inline void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.match_id_ = value;
}
inline void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport.match_id)
}

// optional uint32 hero_id = 3;
inline bool CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport.hero_id)
  return _internal_hero_id();
}
inline void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.hero_id_ = value;
}
inline void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport.hero_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestCheatReportsResponse

// optional .CMsgClientToGCRequestCheatReportsResponse.EResult result = 1 [default = k_eSuccess];
inline bool CMsgClientToGCRequestCheatReportsResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestCheatReportsResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRequestCheatReportsResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCRequestCheatReportsResponse_EResult CMsgClientToGCRequestCheatReportsResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRequestCheatReportsResponse_EResult >(_impl_.result_);
}
inline ::CMsgClientToGCRequestCheatReportsResponse_EResult CMsgClientToGCRequestCheatReportsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestCheatReportsResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRequestCheatReportsResponse::_internal_set_result(::CMsgClientToGCRequestCheatReportsResponse_EResult value) {
  assert(::CMsgClientToGCRequestCheatReportsResponse_EResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCRequestCheatReportsResponse::set_result(::CMsgClientToGCRequestCheatReportsResponse_EResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestCheatReportsResponse.result)
}

// repeated .CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport cheat_reports = 2;
inline int CMsgClientToGCRequestCheatReportsResponse::_internal_cheat_reports_size() const {
  return _impl_.cheat_reports_.size();
}
inline int CMsgClientToGCRequestCheatReportsResponse::cheat_reports_size() const {
  return _internal_cheat_reports_size();
}
inline void CMsgClientToGCRequestCheatReportsResponse::clear_cheat_reports() {
  _impl_.cheat_reports_.Clear();
}
inline ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* CMsgClientToGCRequestCheatReportsResponse::mutable_cheat_reports(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestCheatReportsResponse.cheat_reports)
  return _impl_.cheat_reports_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport >*
CMsgClientToGCRequestCheatReportsResponse::mutable_cheat_reports() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCRequestCheatReportsResponse.cheat_reports)
  return &_impl_.cheat_reports_;
}
inline const ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& CMsgClientToGCRequestCheatReportsResponse::_internal_cheat_reports(int index) const {
  return _impl_.cheat_reports_.Get(index);
}
inline const ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& CMsgClientToGCRequestCheatReportsResponse::cheat_reports(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestCheatReportsResponse.cheat_reports)
  return _internal_cheat_reports(index);
}
inline ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* CMsgClientToGCRequestCheatReportsResponse::_internal_add_cheat_reports() {
  return _impl_.cheat_reports_.Add();
}
inline ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* CMsgClientToGCRequestCheatReportsResponse::add_cheat_reports() {
  ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* _add = _internal_add_cheat_reports();
  // @@protoc_insertion_point(field_add:CMsgClientToGCRequestCheatReportsResponse.cheat_reports)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport >&
CMsgClientToGCRequestCheatReportsResponse::cheat_reports() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCRequestCheatReportsResponse.cheat_reports)
  return _impl_.cheat_reports_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetHeroMMRRankings

// optional uint32 target_account_id = 1;
inline bool CMsgClientToGCGetHeroMMRRankings::_internal_has_target_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetHeroMMRRankings::has_target_account_id() const {
  return _internal_has_target_account_id();
}
inline void CMsgClientToGCGetHeroMMRRankings::clear_target_account_id() {
  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCGetHeroMMRRankings::_internal_target_account_id() const {
  return _impl_.target_account_id_;
}
inline uint32_t CMsgClientToGCGetHeroMMRRankings::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetHeroMMRRankings.target_account_id)
  return _internal_target_account_id();
}
inline void CMsgClientToGCGetHeroMMRRankings::_internal_set_target_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.target_account_id_ = value;
}
inline void CMsgClientToGCGetHeroMMRRankings::set_target_account_id(uint32_t value) {
  _internal_set_target_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetHeroMMRRankings.target_account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetHeroMMRRankingsResponse_Hero

// optional uint32 hero_id = 1;
inline bool CMsgClientToGCGetHeroMMRRankingsResponse_Hero::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetHeroMMRRankingsResponse_Hero::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgClientToGCGetHeroMMRRankingsResponse_Hero::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCGetHeroMMRRankingsResponse_Hero::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgClientToGCGetHeroMMRRankingsResponse_Hero::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetHeroMMRRankingsResponse.Hero.hero_id)
  return _internal_hero_id();
}
inline void CMsgClientToGCGetHeroMMRRankingsResponse_Hero::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.hero_id_ = value;
}
inline void CMsgClientToGCGetHeroMMRRankingsResponse_Hero::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetHeroMMRRankingsResponse.Hero.hero_id)
}

// optional int32 relative_mmr = 2;
inline bool CMsgClientToGCGetHeroMMRRankingsResponse_Hero::_internal_has_relative_mmr() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetHeroMMRRankingsResponse_Hero::has_relative_mmr() const {
  return _internal_has_relative_mmr();
}
inline void CMsgClientToGCGetHeroMMRRankingsResponse_Hero::clear_relative_mmr() {
  _impl_.relative_mmr_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CMsgClientToGCGetHeroMMRRankingsResponse_Hero::_internal_relative_mmr() const {
  return _impl_.relative_mmr_;
}
inline int32_t CMsgClientToGCGetHeroMMRRankingsResponse_Hero::relative_mmr() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetHeroMMRRankingsResponse.Hero.relative_mmr)
  return _internal_relative_mmr();
}
inline void CMsgClientToGCGetHeroMMRRankingsResponse_Hero::_internal_set_relative_mmr(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.relative_mmr_ = value;
}
inline void CMsgClientToGCGetHeroMMRRankingsResponse_Hero::set_relative_mmr(int32_t value) {
  _internal_set_relative_mmr(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetHeroMMRRankingsResponse.Hero.relative_mmr)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetHeroMMRRankingsResponse

// optional .CMsgClientToGCGetHeroMMRRankingsResponse.EResult result = 1 [default = k_eSuccess];
inline bool CMsgClientToGCGetHeroMMRRankingsResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetHeroMMRRankingsResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCGetHeroMMRRankingsResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCGetHeroMMRRankingsResponse_EResult CMsgClientToGCGetHeroMMRRankingsResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCGetHeroMMRRankingsResponse_EResult >(_impl_.result_);
}
inline ::CMsgClientToGCGetHeroMMRRankingsResponse_EResult CMsgClientToGCGetHeroMMRRankingsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetHeroMMRRankingsResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCGetHeroMMRRankingsResponse::_internal_set_result(::CMsgClientToGCGetHeroMMRRankingsResponse_EResult value) {
  assert(::CMsgClientToGCGetHeroMMRRankingsResponse_EResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCGetHeroMMRRankingsResponse::set_result(::CMsgClientToGCGetHeroMMRRankingsResponse_EResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetHeroMMRRankingsResponse.result)
}

// repeated .CMsgClientToGCGetHeroMMRRankingsResponse.Hero heroes = 2;
inline int CMsgClientToGCGetHeroMMRRankingsResponse::_internal_heroes_size() const {
  return _impl_.heroes_.size();
}
inline int CMsgClientToGCGetHeroMMRRankingsResponse::heroes_size() const {
  return _internal_heroes_size();
}
inline void CMsgClientToGCGetHeroMMRRankingsResponse::clear_heroes() {
  _impl_.heroes_.Clear();
}
inline ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero* CMsgClientToGCGetHeroMMRRankingsResponse::mutable_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetHeroMMRRankingsResponse.heroes)
  return _impl_.heroes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero >*
CMsgClientToGCGetHeroMMRRankingsResponse::mutable_heroes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetHeroMMRRankingsResponse.heroes)
  return &_impl_.heroes_;
}
inline const ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero& CMsgClientToGCGetHeroMMRRankingsResponse::_internal_heroes(int index) const {
  return _impl_.heroes_.Get(index);
}
inline const ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero& CMsgClientToGCGetHeroMMRRankingsResponse::heroes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetHeroMMRRankingsResponse.heroes)
  return _internal_heroes(index);
}
inline ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero* CMsgClientToGCGetHeroMMRRankingsResponse::_internal_add_heroes() {
  return _impl_.heroes_.Add();
}
inline ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero* CMsgClientToGCGetHeroMMRRankingsResponse::add_heroes() {
  ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero* _add = _internal_add_heroes();
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetHeroMMRRankingsResponse.heroes)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero >&
CMsgClientToGCGetHeroMMRRankingsResponse::heroes() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetHeroMMRRankingsResponse.heroes)
  return _impl_.heroes_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeaderboard

// optional .ECitadelLeaderboardRegion leaderboard_region = 1 [default = k_ECitadelLeaderboardRegion_None];
inline bool CMsgClientToGCGetLeaderboard::_internal_has_leaderboard_region() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetLeaderboard::has_leaderboard_region() const {
  return _internal_has_leaderboard_region();
}
inline void CMsgClientToGCGetLeaderboard::clear_leaderboard_region() {
  _impl_.leaderboard_region_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::ECitadelLeaderboardRegion CMsgClientToGCGetLeaderboard::_internal_leaderboard_region() const {
  return static_cast< ::ECitadelLeaderboardRegion >(_impl_.leaderboard_region_);
}
inline ::ECitadelLeaderboardRegion CMsgClientToGCGetLeaderboard::leaderboard_region() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeaderboard.leaderboard_region)
  return _internal_leaderboard_region();
}
inline void CMsgClientToGCGetLeaderboard::_internal_set_leaderboard_region(::ECitadelLeaderboardRegion value) {
  assert(::ECitadelLeaderboardRegion_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.leaderboard_region_ = value;
}
inline void CMsgClientToGCGetLeaderboard::set_leaderboard_region(::ECitadelLeaderboardRegion value) {
  _internal_set_leaderboard_region(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeaderboard.leaderboard_region)
}

// optional uint32 hero_id = 2;
inline bool CMsgClientToGCGetLeaderboard::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetLeaderboard::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgClientToGCGetLeaderboard::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCGetLeaderboard::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgClientToGCGetLeaderboard::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeaderboard.hero_id)
  return _internal_hero_id();
}
inline void CMsgClientToGCGetLeaderboard::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.hero_id_ = value;
}
inline void CMsgClientToGCGetLeaderboard::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeaderboard.hero_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry

// optional string account_name = 1;
inline bool CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_has_account_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::has_account_name() const {
  return _internal_has_account_name();
}
inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::clear_account_name() {
  _impl_.account_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::account_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.account_name)
  return _internal_account_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::set_account_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.account_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.account_name)
}
inline std::string* CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::mutable_account_name() {
  std::string* _s = _internal_mutable_account_name();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.account_name)
  return _s;
}
inline const std::string& CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_account_name() const {
  return _impl_.account_name_.Get();
}
inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_set_account_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_mutable_account_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.account_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::release_account_name() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.account_name)
  if (!_internal_has_account_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.account_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.account_name_.IsDefault()) {
    _impl_.account_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::set_allocated_account_name(std::string* account_name) {
  if (account_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.account_name_.SetAllocated(account_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.account_name_.IsDefault()) {
    _impl_.account_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.account_name)
}

// optional uint32 rank = 2;
inline bool CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_has_rank() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::has_rank() const {
  return _internal_has_rank();
}
inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::clear_rank() {
  _impl_.rank_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_rank() const {
  return _impl_.rank_;
}
inline uint32_t CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::rank() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.rank)
  return _internal_rank();
}
inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_set_rank(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.rank_ = value;
}
inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::set_rank(uint32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.rank)
}

// repeated uint32 top_hero_ids = 3;
inline int CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_top_hero_ids_size() const {
  return _impl_.top_hero_ids_.size();
}
inline int CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::top_hero_ids_size() const {
  return _internal_top_hero_ids_size();
}
inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::clear_top_hero_ids() {
  _impl_.top_hero_ids_.Clear();
}
inline uint32_t CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_top_hero_ids(int index) const {
  return _impl_.top_hero_ids_.Get(index);
}
inline uint32_t CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::top_hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.top_hero_ids)
  return _internal_top_hero_ids(index);
}
inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::set_top_hero_ids(int index, uint32_t value) {
  _impl_.top_hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.top_hero_ids)
}
inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_add_top_hero_ids(uint32_t value) {
  _impl_.top_hero_ids_.Add(value);
}
inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::add_top_hero_ids(uint32_t value) {
  _internal_add_top_hero_ids(value);
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.top_hero_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_top_hero_ids() const {
  return _impl_.top_hero_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::top_hero_ids() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.top_hero_ids)
  return _internal_top_hero_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_mutable_top_hero_ids() {
  return &_impl_.top_hero_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::mutable_top_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.top_hero_ids)
  return _internal_mutable_top_hero_ids();
}

// optional uint32 badge_level = 4;
inline bool CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_has_badge_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::has_badge_level() const {
  return _internal_has_badge_level();
}
inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::clear_badge_level() {
  _impl_.badge_level_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_badge_level() const {
  return _impl_.badge_level_;
}
inline uint32_t CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::badge_level() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.badge_level)
  return _internal_badge_level();
}
inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_internal_set_badge_level(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.badge_level_ = value;
}
inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::set_badge_level(uint32_t value) {
  _internal_set_badge_level(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.badge_level)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeaderboardResponse

// optional .CMsgClientToGCGetLeaderboardResponse.EResult result = 1 [default = k_eSuccess];
inline bool CMsgClientToGCGetLeaderboardResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetLeaderboardResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCGetLeaderboardResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCGetLeaderboardResponse_EResult CMsgClientToGCGetLeaderboardResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCGetLeaderboardResponse_EResult >(_impl_.result_);
}
inline ::CMsgClientToGCGetLeaderboardResponse_EResult CMsgClientToGCGetLeaderboardResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeaderboardResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCGetLeaderboardResponse::_internal_set_result(::CMsgClientToGCGetLeaderboardResponse_EResult value) {
  assert(::CMsgClientToGCGetLeaderboardResponse_EResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCGetLeaderboardResponse::set_result(::CMsgClientToGCGetLeaderboardResponse_EResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetLeaderboardResponse.result)
}

// repeated .CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry entries = 2;
inline int CMsgClientToGCGetLeaderboardResponse::_internal_entries_size() const {
  return _impl_.entries_.size();
}
inline int CMsgClientToGCGetLeaderboardResponse::entries_size() const {
  return _internal_entries_size();
}
inline void CMsgClientToGCGetLeaderboardResponse::clear_entries() {
  _impl_.entries_.Clear();
}
inline ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* CMsgClientToGCGetLeaderboardResponse::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetLeaderboardResponse.entries)
  return _impl_.entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry >*
CMsgClientToGCGetLeaderboardResponse::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetLeaderboardResponse.entries)
  return &_impl_.entries_;
}
inline const ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& CMsgClientToGCGetLeaderboardResponse::_internal_entries(int index) const {
  return _impl_.entries_.Get(index);
}
inline const ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& CMsgClientToGCGetLeaderboardResponse::entries(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetLeaderboardResponse.entries)
  return _internal_entries(index);
}
inline ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* CMsgClientToGCGetLeaderboardResponse::_internal_add_entries() {
  return _impl_.entries_.Add();
}
inline ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* CMsgClientToGCGetLeaderboardResponse::add_entries() {
  ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* _add = _internal_add_entries();
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetLeaderboardResponse.entries)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry >&
CMsgClientToGCGetLeaderboardResponse::entries() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetLeaderboardResponse.entries)
  return _impl_.entries_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAccountLeaderboards

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetAccountLeaderboards::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAccountLeaderboards::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgClientToGCGetAccountLeaderboards::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientToGCGetAccountLeaderboards::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgClientToGCGetAccountLeaderboards::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountLeaderboards.account_id)
  return _internal_account_id();
}
inline void CMsgClientToGCGetAccountLeaderboards::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgClientToGCGetAccountLeaderboards::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAccountLeaderboards.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry

// optional .ECitadelLeaderboardRegion region = 1 [default = k_ECitadelLeaderboardRegion_None];
inline bool CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::_internal_has_region() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::has_region() const {
  return _internal_has_region();
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::clear_region() {
  _impl_.region_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::ECitadelLeaderboardRegion CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::_internal_region() const {
  return static_cast< ::ECitadelLeaderboardRegion >(_impl_.region_);
}
inline ::ECitadelLeaderboardRegion CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::region() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry.region)
  return _internal_region();
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::_internal_set_region(::ECitadelLeaderboardRegion value) {
  assert(::ECitadelLeaderboardRegion_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.region_ = value;
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::set_region(::ECitadelLeaderboardRegion value) {
  _internal_set_region(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry.region)
}

// optional uint32 hero_id = 2;
inline bool CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry.hero_id)
  return _internal_hero_id();
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.hero_id_ = value;
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry.hero_id)
}

// optional uint32 rank = 3;
inline bool CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::_internal_has_rank() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::has_rank() const {
  return _internal_has_rank();
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::clear_rank() {
  _impl_.rank_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::_internal_rank() const {
  return _impl_.rank_;
}
inline uint32_t CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::rank() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry.rank)
  return _internal_rank();
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::_internal_set_rank(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.rank_ = value;
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::set_rank(uint32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry.rank)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAccountLeaderboardsResponse

// optional .CMsgClientToGCGetAccountLeaderboardsResponse.EResult result = 1 [default = k_eSuccess];
inline bool CMsgClientToGCGetAccountLeaderboardsResponse::_internal_has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAccountLeaderboardsResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCGetAccountLeaderboardsResponse_EResult CMsgClientToGCGetAccountLeaderboardsResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCGetAccountLeaderboardsResponse_EResult >(_impl_.result_);
}
inline ::CMsgClientToGCGetAccountLeaderboardsResponse_EResult CMsgClientToGCGetAccountLeaderboardsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountLeaderboardsResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse::_internal_set_result(::CMsgClientToGCGetAccountLeaderboardsResponse_EResult value) {
  assert(::CMsgClientToGCGetAccountLeaderboardsResponse_EResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse::set_result(::CMsgClientToGCGetAccountLeaderboardsResponse_EResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAccountLeaderboardsResponse.result)
}

// optional string account_name = 2;
inline bool CMsgClientToGCGetAccountLeaderboardsResponse::_internal_has_account_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAccountLeaderboardsResponse::has_account_name() const {
  return _internal_has_account_name();
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse::clear_account_name() {
  _impl_.account_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCGetAccountLeaderboardsResponse::account_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountLeaderboardsResponse.account_name)
  return _internal_account_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientToGCGetAccountLeaderboardsResponse::set_account_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.account_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAccountLeaderboardsResponse.account_name)
}
inline std::string* CMsgClientToGCGetAccountLeaderboardsResponse::mutable_account_name() {
  std::string* _s = _internal_mutable_account_name();
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetAccountLeaderboardsResponse.account_name)
  return _s;
}
inline const std::string& CMsgClientToGCGetAccountLeaderboardsResponse::_internal_account_name() const {
  return _impl_.account_name_.Get();
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse::_internal_set_account_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGetAccountLeaderboardsResponse::_internal_mutable_account_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.account_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgClientToGCGetAccountLeaderboardsResponse::release_account_name() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGetAccountLeaderboardsResponse.account_name)
  if (!_internal_has_account_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.account_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.account_name_.IsDefault()) {
    _impl_.account_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse::set_allocated_account_name(std::string* account_name) {
  if (account_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.account_name_.SetAllocated(account_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.account_name_.IsDefault()) {
    _impl_.account_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetAccountLeaderboardsResponse.account_name)
}

// repeated .CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry entries = 3;
inline int CMsgClientToGCGetAccountLeaderboardsResponse::_internal_entries_size() const {
  return _impl_.entries_.size();
}
inline int CMsgClientToGCGetAccountLeaderboardsResponse::entries_size() const {
  return _internal_entries_size();
}
inline void CMsgClientToGCGetAccountLeaderboardsResponse::clear_entries() {
  _impl_.entries_.Clear();
}
inline ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* CMsgClientToGCGetAccountLeaderboardsResponse::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetAccountLeaderboardsResponse.entries)
  return _impl_.entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry >*
CMsgClientToGCGetAccountLeaderboardsResponse::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCGetAccountLeaderboardsResponse.entries)
  return &_impl_.entries_;
}
inline const ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& CMsgClientToGCGetAccountLeaderboardsResponse::_internal_entries(int index) const {
  return _impl_.entries_.Get(index);
}
inline const ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& CMsgClientToGCGetAccountLeaderboardsResponse::entries(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAccountLeaderboardsResponse.entries)
  return _internal_entries(index);
}
inline ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* CMsgClientToGCGetAccountLeaderboardsResponse::_internal_add_entries() {
  return _impl_.entries_.Add();
}
inline ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* CMsgClientToGCGetAccountLeaderboardsResponse::add_entries() {
  ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* _add = _internal_add_entries();
  // @@protoc_insertion_point(field_add:CMsgClientToGCGetAccountLeaderboardsResponse.entries)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry >&
CMsgClientToGCGetAccountLeaderboardsResponse::entries() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCGetAccountLeaderboardsResponse.entries)
  return _impl_.entries_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSetHideHolidayModels

// optional bool hide_holiday_models = 1;
inline bool CMsgClientToGCSetHideHolidayModels::_internal_has_hide_holiday_models() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSetHideHolidayModels::has_hide_holiday_models() const {
  return _internal_has_hide_holiday_models();
}
inline void CMsgClientToGCSetHideHolidayModels::clear_hide_holiday_models() {
  _impl_.hide_holiday_models_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCSetHideHolidayModels::_internal_hide_holiday_models() const {
  return _impl_.hide_holiday_models_;
}
inline bool CMsgClientToGCSetHideHolidayModels::hide_holiday_models() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetHideHolidayModels.hide_holiday_models)
  return _internal_hide_holiday_models();
}
inline void CMsgClientToGCSetHideHolidayModels::_internal_set_hide_holiday_models(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.hide_holiday_models_ = value;
}
inline void CMsgClientToGCSetHideHolidayModels::set_hide_holiday_models(bool value) {
  _internal_set_hide_holiday_models(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetHideHolidayModels.hide_holiday_models)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetHideHolidayModelsResponse

// optional bool success = 1;
inline bool CMsgClientToGCSetHideHolidayModelsResponse::_internal_has_success() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSetHideHolidayModelsResponse::has_success() const {
  return _internal_has_success();
}
inline void CMsgClientToGCSetHideHolidayModelsResponse::clear_success() {
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCSetHideHolidayModelsResponse::_internal_success() const {
  return _impl_.success_;
}
inline bool CMsgClientToGCSetHideHolidayModelsResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSetHideHolidayModelsResponse.success)
  return _internal_success();
}
inline void CMsgClientToGCSetHideHolidayModelsResponse::_internal_set_success(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.success_ = value;
}
inline void CMsgClientToGCSetHideHolidayModelsResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSetHideHolidayModelsResponse.success)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::CSOGameAccountClient_EFlags> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOGameAccountClient_EFlags>() {
  return ::CSOGameAccountClient_EFlags_descriptor();
}
template <> struct is_proto_enum< ::CSOAccountHeroInfo_EHeroStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOAccountHeroInfo_EHeroStatus>() {
  return ::CSOAccountHeroInfo_EHeroStatus_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCStartMatchmakingResponse_EResultCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCStartMatchmakingResponse_EResultCode>() {
  return ::CMsgClientToGCStartMatchmakingResponse_EResultCode_descriptor();
}
template <> struct is_proto_enum< ::CMsgGCToClientMatchmakingStopped_EReason> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCToClientMatchmakingStopped_EReason>() {
  return ::CMsgGCToClientMatchmakingStopped_EReason_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCPartyCreateResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCPartyCreateResponse_EResponse>() {
  return ::CMsgClientToGCPartyCreateResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCPartyLeaveResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCPartyLeaveResponse_EResponse>() {
  return ::CMsgClientToGCPartyLeaveResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCPartyJoinResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCPartyJoinResponse_EResponse>() {
  return ::CMsgClientToGCPartyJoinResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCPartyAction_EAction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCPartyAction_EAction>() {
  return ::CMsgClientToGCPartyAction_EAction_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCPartyActionResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCPartyActionResponse_EResponse>() {
  return ::CMsgClientToGCPartyActionResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCPartySetModeResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCPartySetModeResponse_EResponse>() {
  return ::CMsgClientToGCPartySetModeResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCPartyStartMatchResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCPartyStartMatchResponse_EResponse>() {
  return ::CMsgClientToGCPartyStartMatchResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCPartyInviteUserResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCPartyInviteUserResponse_EResponse>() {
  return ::CMsgClientToGCPartyInviteUserResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgGCToClientPartyEvent_EEvent> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCToClientPartyEvent_EEvent>() {
  return ::CMsgGCToClientPartyEvent_EEvent_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCPartySetReadyStateResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCPartySetReadyStateResponse_EResponse>() {
  return ::CMsgClientToGCPartySetReadyStateResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetMatchHistoryResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetMatchHistoryResponse_EResult>() {
  return ::CMsgClientToGCGetMatchHistoryResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCSpectateUserResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCSpectateUserResponse_EResponse>() {
  return ::CMsgClientToGCSpectateUserResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgCitadelProfileCard_EStatID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgCitadelProfileCard_EStatID>() {
  return ::CMsgCitadelProfileCard_EStatID_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCUpdateRosterResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCUpdateRosterResponse_EResponse>() {
  return ::CMsgClientToGCUpdateRosterResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetAccountStatsResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetAccountStatsResponse_EResult>() {
  return ::CMsgClientToGCGetAccountStatsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetMatchMetaDataResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetMatchMetaDataResponse_EResult>() {
  return ::CMsgClientToGCGetMatchMetaDataResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCModifyDevAnnouncements_EOperation> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCModifyDevAnnouncements_EOperation>() {
  return ::CMsgClientToGCModifyDevAnnouncements_EOperation_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCModifyDevAnnouncementsResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCModifyDevAnnouncementsResponse_EResult>() {
  return ::CMsgClientToGCModifyDevAnnouncementsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCDevAction_EAction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCDevAction_EAction>() {
  return ::CMsgClientToGCDevAction_EAction_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCDevActionResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCDevActionResponse_EResult>() {
  return ::CMsgClientToGCDevActionResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCUpdateAccountSyncResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCUpdateAccountSyncResponse_EResponse>() {
  return ::CMsgClientToGCUpdateAccountSyncResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetHeroChoiceResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetHeroChoiceResponse_EResult>() {
  return ::CMsgClientToGCGetHeroChoiceResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCUnlockHeroResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCUnlockHeroResponse_EResult>() {
  return ::CMsgClientToGCUnlockHeroResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCBookUnlockResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCBookUnlockResponse_EResult>() {
  return ::CMsgClientToGCBookUnlockResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetBookResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetBookResponse_EResult>() {
  return ::CMsgClientToGCGetBookResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCSubmitPlaytestUserResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCSubmitPlaytestUserResponse_EResponse>() {
  return ::CMsgClientToGCSubmitPlaytestUserResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCUpdateHeroBuildResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCUpdateHeroBuildResponse_EResponse>() {
  return ::CMsgClientToGCUpdateHeroBuildResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCFindHeroBuildsResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCFindHeroBuildsResponse_EResponse>() {
  return ::CMsgClientToGCFindHeroBuildsResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse>() {
  return ::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse>() {
  return ::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCReportPlayerFromMatch_EReportType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCReportPlayerFromMatch_EReportType>() {
  return ::CMsgClientToGCReportPlayerFromMatch_EReportType_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCReportPlayerFromMatchResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCReportPlayerFromMatchResponse_EResponse>() {
  return ::CMsgClientToGCReportPlayerFromMatchResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetAccountMatchReportsResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetAccountMatchReportsResponse_EResponse>() {
  return ::CMsgClientToGCGetAccountMatchReportsResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCDeleteHeroBuildResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCDeleteHeroBuildResponse_EResponse>() {
  return ::CMsgClientToGCDeleteHeroBuildResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetDiscordLinkResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetDiscordLinkResponse_EResponse>() {
  return ::CMsgClientToGCGetDiscordLinkResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGrantForumAccessResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGrantForumAccessResponse_EResponse>() {
  return ::CMsgClientToGCGrantForumAccessResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetFriendGameStatusResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetFriendGameStatusResponse_EResponse>() {
  return ::CMsgClientToGCGetFriendGameStatusResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse>() {
  return ::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRequestCheatReportsResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRequestCheatReportsResponse_EResult>() {
  return ::CMsgClientToGCRequestCheatReportsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetHeroMMRRankingsResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetHeroMMRRankingsResponse_EResult>() {
  return ::CMsgClientToGCGetHeroMMRRankingsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetLeaderboardResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetLeaderboardResponse_EResult>() {
  return ::CMsgClientToGCGetLeaderboardResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetAccountLeaderboardsResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetAccountLeaderboardsResponse_EResult>() {
  return ::CMsgClientToGCGetAccountLeaderboardsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::EGCCitadelClientMessages> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCCitadelClientMessages>() {
  return ::EGCCitadelClientMessages_descriptor();
}
template <> struct is_proto_enum< ::ECitadelAccountPermissionFlag> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECitadelAccountPermissionFlag>() {
  return ::ECitadelAccountPermissionFlag_descriptor();
}
template <> struct is_proto_enum< ::ECitadelNewPlayerProgressFlag> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECitadelNewPlayerProgressFlag>() {
  return ::ECitadelNewPlayerProgressFlag_descriptor();
}
template <> struct is_proto_enum< ::EProfileCardSlotType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EProfileCardSlotType>() {
  return ::EProfileCardSlotType_descriptor();
}
template <> struct is_proto_enum< ::EDevBanReason> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EDevBanReason>() {
  return ::EDevBanReason_descriptor();
}
template <> struct is_proto_enum< ::ECitadelClientAccountEvent> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECitadelClientAccountEvent>() {
  return ::ECitadelClientAccountEvent_descriptor();
}
template <> struct is_proto_enum< ::ECommendType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECommendType>() {
  return ::ECommendType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_citadel_5fgcmessages_5fclient_2eproto
