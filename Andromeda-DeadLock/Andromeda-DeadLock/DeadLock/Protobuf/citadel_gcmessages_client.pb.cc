// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: citadel_gcmessages_client.proto

#include "citadel_gcmessages_client.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR CSOGameAccountClient::CSOGameAccountClient(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.flags_)*/uint64_t{0u}
  , /*decltype(_impl_.account_id_)*/0u
  , /*decltype(_impl_.wins_)*/0u
  , /*decltype(_impl_.losses_)*/0u
  , /*decltype(_impl_.kills_)*/0u
  , /*decltype(_impl_.permissions_)*/uint64_t{0u}
  , /*decltype(_impl_.most_played_hero_id_)*/0u
  , /*decltype(_impl_.hero_unlock_credits_)*/0u
  , /*decltype(_impl_.new_player_progress_)*/uint64_t{0u}
  , /*decltype(_impl_.mm_ban_until_)*/0u
  , /*decltype(_impl_.comms_ban_until_)*/0u
  , /*decltype(_impl_.low_priority_games_remaining_)*/0u
  , /*decltype(_impl_.report_ban_until_)*/0u
  , /*decltype(_impl_.ranked_badge_level_)*/0u
  , /*decltype(_impl_.hero_labs_matches_since_test_hero_)*/0u} {}
struct CSOGameAccountClientDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSOGameAccountClientDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSOGameAccountClientDefaultTypeInternal() {}
  union {
    CSOGameAccountClient _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSOGameAccountClientDefaultTypeInternal _CSOGameAccountClient_default_instance_;
PROTOBUF_CONSTEXPR CSOAccountSyncStorage::CSOAccountSyncStorage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_id_)*/0u
  , /*decltype(_impl_.id_)*/0u
  , /*decltype(_impl_.value_)*/0u} {}
struct CSOAccountSyncStorageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSOAccountSyncStorageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSOAccountSyncStorageDefaultTypeInternal() {}
  union {
    CSOAccountSyncStorage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSOAccountSyncStorageDefaultTypeInternal _CSOAccountSyncStorage_default_instance_;
PROTOBUF_CONSTEXPR CSOAccountHeroInfo::CSOAccountHeroInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_id_)*/0u
  , /*decltype(_impl_.hero_id_)*/0u
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_.wins_)*/0u
  , /*decltype(_impl_.kills_)*/0u} {}
struct CSOAccountHeroInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSOAccountHeroInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSOAccountHeroInfoDefaultTypeInternal() {}
  union {
    CSOAccountHeroInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSOAccountHeroInfoDefaultTypeInternal _CSOAccountHeroInfo_default_instance_;
PROTOBUF_CONSTEXPR CMsgCitadelClientHello::CMsgCitadelClientHello(
    ::_pbi::ConstantInitialized) {}
struct CMsgCitadelClientHelloDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgCitadelClientHelloDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgCitadelClientHelloDefaultTypeInternal() {}
  union {
    CMsgCitadelClientHello _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgCitadelClientHelloDefaultTypeInternal _CMsgCitadelClientHello_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCStartMatchmaking::CMsgClientToGCStartMatchmaking(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.match_info_)*/nullptr
  , /*decltype(_impl_.ping_times_)*/nullptr
  , /*decltype(_impl_.heroes_)*/nullptr
  , /*decltype(_impl_.client_version_)*/0u
  , /*decltype(_impl_.client_platform_)*/0} {}
struct CMsgClientToGCStartMatchmakingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCStartMatchmakingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCStartMatchmakingDefaultTypeInternal() {}
  union {
    CMsgClientToGCStartMatchmaking _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCStartMatchmakingDefaultTypeInternal _CMsgClientToGCStartMatchmaking_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCStartMatchmakingResponse::CMsgClientToGCStartMatchmakingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.debug_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.time_stamp_)*/0u} {}
struct CMsgClientToGCStartMatchmakingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCStartMatchmakingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCStartMatchmakingResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCStartMatchmakingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCStartMatchmakingResponseDefaultTypeInternal _CMsgClientToGCStartMatchmakingResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCStopMatchmaking::CMsgClientToGCStopMatchmaking(
    ::_pbi::ConstantInitialized) {}
struct CMsgClientToGCStopMatchmakingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCStopMatchmakingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCStopMatchmakingDefaultTypeInternal() {}
  union {
    CMsgClientToGCStopMatchmaking _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCStopMatchmakingDefaultTypeInternal _CMsgClientToGCStopMatchmaking_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCStopMatchmakingResponse::CMsgClientToGCStopMatchmakingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.success_)*/false} {}
struct CMsgClientToGCStopMatchmakingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCStopMatchmakingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCStopMatchmakingResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCStopMatchmakingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCStopMatchmakingResponseDefaultTypeInternal _CMsgClientToGCStopMatchmakingResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientMatchmakingStopped::CMsgGCToClientMatchmakingStopped(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.reason_)*/0} {}
struct CMsgGCToClientMatchmakingStoppedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientMatchmakingStoppedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientMatchmakingStoppedDefaultTypeInternal() {}
  union {
    CMsgGCToClientMatchmakingStopped _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientMatchmakingStoppedDefaultTypeInternal _CMsgGCToClientMatchmakingStopped_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCLeaveLobby::CMsgClientToGCLeaveLobby(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.lobby_id_)*/uint64_t{0u}} {}
struct CMsgClientToGCLeaveLobbyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCLeaveLobbyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCLeaveLobbyDefaultTypeInternal() {}
  union {
    CMsgClientToGCLeaveLobby _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCLeaveLobbyDefaultTypeInternal _CMsgClientToGCLeaveLobby_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCLeaveLobbyResponse::CMsgClientToGCLeaveLobbyResponse(
    ::_pbi::ConstantInitialized) {}
struct CMsgClientToGCLeaveLobbyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCLeaveLobbyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCLeaveLobbyResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCLeaveLobbyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCLeaveLobbyResponseDefaultTypeInternal _CMsgClientToGCLeaveLobbyResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientWelcomeCitadel::CMsgClientWelcomeCitadel(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.extra_messages_)*/{}
  , /*decltype(_impl_.currency_)*/0u
  , /*decltype(_impl_.compatibility_version_)*/0u
  , /*decltype(_impl_.region_mode_)*/0} {}
struct CMsgClientWelcomeCitadelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientWelcomeCitadelDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientWelcomeCitadelDefaultTypeInternal() {}
  union {
    CMsgClientWelcomeCitadel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientWelcomeCitadelDefaultTypeInternal _CMsgClientWelcomeCitadel_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCIsInMatchmaking::CMsgClientToGCIsInMatchmaking(
    ::_pbi::ConstantInitialized) {}
struct CMsgClientToGCIsInMatchmakingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCIsInMatchmakingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCIsInMatchmakingDefaultTypeInternal() {}
  union {
    CMsgClientToGCIsInMatchmaking _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCIsInMatchmakingDefaultTypeInternal _CMsgClientToGCIsInMatchmaking_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCIsInMatchmakingResponse::CMsgClientToGCIsInMatchmakingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.in_matchmaking_)*/false} {}
struct CMsgClientToGCIsInMatchmakingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCIsInMatchmakingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCIsInMatchmakingResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCIsInMatchmakingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCIsInMatchmakingResponseDefaultTypeInternal _CMsgClientToGCIsInMatchmakingResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgDevMatchInfo_MatchPlayer::CMsgDevMatchInfo_MatchPlayer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_id_)*/0u
  , /*decltype(_impl_.team_)*/0
  , /*decltype(_impl_.abandoned_)*/false
  , /*decltype(_impl_.hero_id_)*/0u} {}
struct CMsgDevMatchInfo_MatchPlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgDevMatchInfo_MatchPlayerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgDevMatchInfo_MatchPlayerDefaultTypeInternal() {}
  union {
    CMsgDevMatchInfo_MatchPlayer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgDevMatchInfo_MatchPlayerDefaultTypeInternal _CMsgDevMatchInfo_MatchPlayer_default_instance_;
PROTOBUF_CONSTEXPR CMsgDevMatchInfo::CMsgDevMatchInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.players_)*/{}
  , /*decltype(_impl_.start_time_)*/0u
  , /*decltype(_impl_.winning_team_)*/0
  , /*decltype(_impl_.match_id_)*/uint64_t{0u}
  , /*decltype(_impl_.lobby_id_)*/uint64_t{0u}
  , /*decltype(_impl_.net_worth_team_0_)*/0u
  , /*decltype(_impl_.net_worth_team_1_)*/0u
  , /*decltype(_impl_.duration_s_)*/0u
  , /*decltype(_impl_.spectators_)*/0u
  , /*decltype(_impl_.objectives_mask_team0_)*/uint64_t{0u}
  , /*decltype(_impl_.open_spectator_slots_)*/0u
  , /*decltype(_impl_.match_mode_)*/0
  , /*decltype(_impl_.objectives_mask_team1_)*/uint64_t{0u}
  , /*decltype(_impl_.game_mode_)*/0
  , /*decltype(_impl_.match_score_)*/0u
  , /*decltype(_impl_.region_mode_)*/0
  , /*decltype(_impl_.compat_version_)*/0u} {}
struct CMsgDevMatchInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgDevMatchInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgDevMatchInfoDefaultTypeInternal() {}
  union {
    CMsgDevMatchInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgDevMatchInfoDefaultTypeInternal _CMsgDevMatchInfo_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientHeroLabsSchedule_TimeRange::CMsgGCToClientHeroLabsSchedule_TimeRange(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.start_time_)*/0
  , /*decltype(_impl_.end_time_)*/0} {}
struct CMsgGCToClientHeroLabsSchedule_TimeRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientHeroLabsSchedule_TimeRangeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientHeroLabsSchedule_TimeRangeDefaultTypeInternal() {}
  union {
    CMsgGCToClientHeroLabsSchedule_TimeRange _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientHeroLabsSchedule_TimeRangeDefaultTypeInternal _CMsgGCToClientHeroLabsSchedule_TimeRange_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientHeroLabsSchedule_Schedule::CMsgGCToClientHeroLabsSchedule_Schedule(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.weekends_)*/{}
  , /*decltype(_impl_.weekdays_)*/{}
  , /*decltype(_impl_.regions_)*/{}
  , /*decltype(_impl_.schedule_id_)*/0u
  , /*decltype(_impl_.is_open_)*/false} {}
struct CMsgGCToClientHeroLabsSchedule_ScheduleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientHeroLabsSchedule_ScheduleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientHeroLabsSchedule_ScheduleDefaultTypeInternal() {}
  union {
    CMsgGCToClientHeroLabsSchedule_Schedule _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientHeroLabsSchedule_ScheduleDefaultTypeInternal _CMsgGCToClientHeroLabsSchedule_Schedule_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientHeroLabsSchedule::CMsgGCToClientHeroLabsSchedule(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.schedules_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CMsgGCToClientHeroLabsScheduleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientHeroLabsScheduleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientHeroLabsScheduleDefaultTypeInternal() {}
  union {
    CMsgGCToClientHeroLabsSchedule _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientHeroLabsScheduleDefaultTypeInternal _CMsgGCToClientHeroLabsSchedule_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientDevPlaytestStatus_HeroWhitelist::CMsgGCToClientDevPlaytestStatus_HeroWhitelist(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_ids_)*/{}
  , /*decltype(_impl_.hero_id_)*/0u} {}
struct CMsgGCToClientDevPlaytestStatus_HeroWhitelistDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientDevPlaytestStatus_HeroWhitelistDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientDevPlaytestStatus_HeroWhitelistDefaultTypeInternal() {}
  union {
    CMsgGCToClientDevPlaytestStatus_HeroWhitelist _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientDevPlaytestStatus_HeroWhitelistDefaultTypeInternal _CMsgGCToClientDevPlaytestStatus_HeroWhitelist_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientDevPlaytestStatus_DevQueueSize::CMsgGCToClientDevPlaytestStatus_DevQueueSize(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.match_mode_)*/0
  , /*decltype(_impl_.queue_size_)*/0u} {}
struct CMsgGCToClientDevPlaytestStatus_DevQueueSizeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientDevPlaytestStatus_DevQueueSizeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientDevPlaytestStatus_DevQueueSizeDefaultTypeInternal() {}
  union {
    CMsgGCToClientDevPlaytestStatus_DevQueueSize _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientDevPlaytestStatus_DevQueueSizeDefaultTypeInternal _CMsgGCToClientDevPlaytestStatus_DevQueueSize_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientDevPlaytestStatus::CMsgGCToClientDevPlaytestStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.dev_queue_size_)*/{}
  , /*decltype(_impl_.hero_whitelists_)*/{}
  , /*decltype(_impl_.valid_client_versions_)*/{}
  , /*decltype(_impl_.dev_available_servers_)*/0u
  , /*decltype(_impl_.is_mm_enabled_)*/false
  , /*decltype(_impl_.locked_heroes_)*/false
  , /*decltype(_impl_.party_shared_heroes_)*/false
  , /*decltype(_impl_.mm_pause_time_)*/0u
  , /*decltype(_impl_.active_match_count_)*/0u} {}
struct CMsgGCToClientDevPlaytestStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientDevPlaytestStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientDevPlaytestStatusDefaultTypeInternal() {}
  union {
    CMsgGCToClientDevPlaytestStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientDevPlaytestStatusDefaultTypeInternal _CMsgGCToClientDevPlaytestStatus_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientSDRTicket::CMsgGCToClientSDRTicket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.ticket_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct CMsgGCToClientSDRTicketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientSDRTicketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientSDRTicketDefaultTypeInternal() {}
  union {
    CMsgGCToClientSDRTicket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientSDRTicketDefaultTypeInternal _CMsgGCToClientSDRTicket_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCReplacementSDRTicket::CMsgClientToGCReplacementSDRTicket(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.lobby_id_)*/uint64_t{0u}} {}
struct CMsgClientToGCReplacementSDRTicketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCReplacementSDRTicketDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCReplacementSDRTicketDefaultTypeInternal() {}
  union {
    CMsgClientToGCReplacementSDRTicket _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCReplacementSDRTicketDefaultTypeInternal _CMsgClientToGCReplacementSDRTicket_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCReplacementSDRTicketResponse::CMsgClientToGCReplacementSDRTicketResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.ticket_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct CMsgClientToGCReplacementSDRTicketResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCReplacementSDRTicketResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCReplacementSDRTicketResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCReplacementSDRTicketResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCReplacementSDRTicketResponseDefaultTypeInternal _CMsgClientToGCReplacementSDRTicketResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSetServerConVar::CMsgClientToGCSetServerConVar(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.convar_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.convar_value_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.lobby_id_)*/uint64_t{0u}} {}
struct CMsgClientToGCSetServerConVarDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSetServerConVarDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSetServerConVarDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetServerConVar _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSetServerConVarDefaultTypeInternal _CMsgClientToGCSetServerConVar_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSetServerConVarResponse::CMsgClientToGCSetServerConVarResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct CMsgClientToGCSetServerConVarResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSetServerConVarResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSetServerConVarResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetServerConVarResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSetServerConVarResponseDefaultTypeInternal _CMsgClientToGCSetServerConVarResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.response_freeform_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.question_id_)*/0u
  , /*decltype(_impl_.response_value_)*/0u} {}
struct CMsgClientToGCPostMatchSurveyResponse_PostMatchSurveyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPostMatchSurveyResponse_PostMatchSurveyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPostMatchSurveyResponse_PostMatchSurveyDefaultTypeInternal() {}
  union {
    CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPostMatchSurveyResponse_PostMatchSurveyDefaultTypeInternal _CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPostMatchSurveyResponse::CMsgClientToGCPostMatchSurveyResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.post_match_survey_)*/{}
  , /*decltype(_impl_.match_id_)*/uint64_t{0u}} {}
struct CMsgClientToGCPostMatchSurveyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPostMatchSurveyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPostMatchSurveyResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCPostMatchSurveyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPostMatchSurveyResponseDefaultTypeInternal _CMsgClientToGCPostMatchSurveyResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgPartyMMInfo::CMsgPartyMMInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.ping_times_)*/nullptr
  , /*decltype(_impl_.platform_)*/0
  , /*decltype(_impl_.client_version_)*/0u
  , /*decltype(_impl_.region_mode_)*/0} {}
struct CMsgPartyMMInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgPartyMMInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgPartyMMInfoDefaultTypeInternal() {}
  union {
    CMsgPartyMMInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgPartyMMInfoDefaultTypeInternal _CMsgPartyMMInfo_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartyCreate::CMsgClientToGCPartyCreate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.server_search_key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.party_mm_info_)*/nullptr
  , /*decltype(_impl_.invite_account_id_)*/0u
  , /*decltype(_impl_.disable_party_code_)*/false
  , /*decltype(_impl_.is_private_lobby_)*/false
  , /*decltype(_impl_.region_mode_)*/0
  , /*decltype(_impl_.mm_preference_)*/0} {}
struct CMsgClientToGCPartyCreateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartyCreateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartyCreateDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartyCreate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartyCreateDefaultTypeInternal _CMsgClientToGCPartyCreate_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartyCreateResponse::CMsgClientToGCPartyCreateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.party_id_)*/uint64_t{0u}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCPartyCreateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartyCreateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartyCreateResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartyCreateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartyCreateResponseDefaultTypeInternal _CMsgClientToGCPartyCreateResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartyLeave::CMsgClientToGCPartyLeave(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.party_id_)*/uint64_t{0u}} {}
struct CMsgClientToGCPartyLeaveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartyLeaveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartyLeaveDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartyLeave _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartyLeaveDefaultTypeInternal _CMsgClientToGCPartyLeave_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartyLeaveResponse::CMsgClientToGCPartyLeaveResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCPartyLeaveResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartyLeaveResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartyLeaveResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartyLeaveResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartyLeaveResponseDefaultTypeInternal _CMsgClientToGCPartyLeaveResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartyJoin::CMsgClientToGCPartyJoin(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.party_mm_info_)*/nullptr
  , /*decltype(_impl_.party_id_)*/uint64_t{0u}
  , /*decltype(_impl_.is_rejoin_)*/false} {}
struct CMsgClientToGCPartyJoinDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartyJoinDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartyJoinDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartyJoin _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartyJoinDefaultTypeInternal _CMsgClientToGCPartyJoin_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartyJoinResponse::CMsgClientToGCPartyJoinResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCPartyJoinResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartyJoinResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartyJoinResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartyJoinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartyJoinResponseDefaultTypeInternal _CMsgClientToGCPartyJoinResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartyAction::CMsgClientToGCPartyAction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.str_value_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.party_id_)*/uint64_t{0u}
  , /*decltype(_impl_.target_account_id_)*/0u
  , /*decltype(_impl_.bool_value_)*/false
  , /*decltype(_impl_.uint_value_)*/uint64_t{0u}
  , /*decltype(_impl_.action_id_)*/1} {}
struct CMsgClientToGCPartyActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartyActionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartyActionDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartyAction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartyActionDefaultTypeInternal _CMsgClientToGCPartyAction_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartyActionResponse::CMsgClientToGCPartyActionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCPartyActionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartyActionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartyActionResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartyActionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartyActionResponseDefaultTypeInternal _CMsgClientToGCPartyActionResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartySetMode::CMsgClientToGCPartySetMode(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.dev_server_command_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.party_id_)*/uint64_t{0u}
  , /*decltype(_impl_.match_mode_)*/0
  , /*decltype(_impl_.game_mode_)*/0
  , /*decltype(_impl_.bot_difficulty_)*/0
  , /*decltype(_impl_.region_mode_)*/0} {}
struct CMsgClientToGCPartySetModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartySetModeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartySetModeDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartySetMode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartySetModeDefaultTypeInternal _CMsgClientToGCPartySetMode_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartySetModeResponse::CMsgClientToGCPartySetModeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.time_stamp_)*/0u
  , /*decltype(_impl_.account_id_)*/0u} {}
struct CMsgClientToGCPartySetModeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartySetModeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartySetModeResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartySetModeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartySetModeResponseDefaultTypeInternal _CMsgClientToGCPartySetModeResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartyStartMatch::CMsgClientToGCPartyStartMatch(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.party_id_)*/uint64_t{0u}} {}
struct CMsgClientToGCPartyStartMatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartyStartMatchDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartyStartMatchDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartyStartMatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartyStartMatchDefaultTypeInternal _CMsgClientToGCPartyStartMatch_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartyStartMatchResponse::CMsgClientToGCPartyStartMatchResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.account_id_)*/0u} {}
struct CMsgClientToGCPartyStartMatchResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartyStartMatchResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartyStartMatchResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartyStartMatchResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartyStartMatchResponseDefaultTypeInternal _CMsgClientToGCPartyStartMatchResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartyInviteUser::CMsgClientToGCPartyInviteUser(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.party_id_)*/uint64_t{0u}
  , /*decltype(_impl_.invite_account_id_)*/0u} {}
struct CMsgClientToGCPartyInviteUserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartyInviteUserDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartyInviteUserDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartyInviteUser _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartyInviteUserDefaultTypeInternal _CMsgClientToGCPartyInviteUser_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartyInviteUserResponse::CMsgClientToGCPartyInviteUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.user_online_)*/false} {}
struct CMsgClientToGCPartyInviteUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartyInviteUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartyInviteUserResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartyInviteUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartyInviteUserResponseDefaultTypeInternal _CMsgClientToGCPartyInviteUserResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientPartyEvent::CMsgGCToClientPartyEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.bytes_data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.str_data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.party_id_)*/uint64_t{0u}
  , /*decltype(_impl_.initiator_account_id_)*/0u
  , /*decltype(_impl_.target_account_id_)*/0u
  , /*decltype(_impl_.uint_data_)*/uint64_t{0u}
  , /*decltype(_impl_.event_)*/1} {}
struct CMsgGCToClientPartyEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientPartyEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientPartyEventDefaultTypeInternal() {}
  union {
    CMsgGCToClientPartyEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientPartyEventDefaultTypeInternal _CMsgGCToClientPartyEvent_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientCanRejoinParty::CMsgGCToClientCanRejoinParty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.party_id_)*/uint64_t{0u}} {}
struct CMsgGCToClientCanRejoinPartyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientCanRejoinPartyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientCanRejoinPartyDefaultTypeInternal() {}
  union {
    CMsgGCToClientCanRejoinParty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientCanRejoinPartyDefaultTypeInternal _CMsgGCToClientCanRejoinParty_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartyJoinViaCode::CMsgClientToGCPartyJoinViaCode(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.party_mm_info_)*/nullptr
  , /*decltype(_impl_.join_code_)*/uint64_t{0u}} {}
struct CMsgClientToGCPartyJoinViaCodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartyJoinViaCodeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartyJoinViaCodeDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartyJoinViaCode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartyJoinViaCodeDefaultTypeInternal _CMsgClientToGCPartyJoinViaCode_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartyJoinViaCodeResponse::CMsgClientToGCPartyJoinViaCodeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.party_id_)*/uint64_t{0u}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCPartyJoinViaCodeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartyJoinViaCodeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartyJoinViaCodeResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartyJoinViaCodeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartyJoinViaCodeResponseDefaultTypeInternal _CMsgClientToGCPartyJoinViaCodeResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartySetReadyState::CMsgClientToGCPartySetReadyState(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.hero_roster_)*/nullptr
  , /*decltype(_impl_.party_id_)*/uint64_t{0u}
  , /*decltype(_impl_.ready_state_)*/false} {}
struct CMsgClientToGCPartySetReadyStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartySetReadyStateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartySetReadyStateDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartySetReadyState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartySetReadyStateDefaultTypeInternal _CMsgClientToGCPartySetReadyState_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCPartySetReadyStateResponse::CMsgClientToGCPartySetReadyStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCPartySetReadyStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCPartySetReadyStateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCPartySetReadyStateResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCPartySetReadyStateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCPartySetReadyStateResponseDefaultTypeInternal _CMsgClientToGCPartySetReadyStateResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCDevSetMMBias::CMsgClientToGCDevSetMMBias(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_id_)*/0u
  , /*decltype(_impl_.value_)*/0u} {}
struct CMsgClientToGCDevSetMMBiasDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCDevSetMMBiasDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCDevSetMMBiasDefaultTypeInternal() {}
  union {
    CMsgClientToGCDevSetMMBias _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCDevSetMMBiasDefaultTypeInternal _CMsgClientToGCDevSetMMBias_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchHistory::CMsgClientToGCGetMatchHistory(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.continue_cursor_)*/uint64_t{0u}
  , /*decltype(_impl_.account_id_)*/0u
  , /*decltype(_impl_.ranked_interval_)*/0u} {}
struct CMsgClientToGCGetMatchHistoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchHistoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetMatchHistoryDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetMatchHistory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetMatchHistoryDefaultTypeInternal _CMsgClientToGCGetMatchHistory_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchHistoryResponse_Match::CMsgClientToGCGetMatchHistoryResponse_Match(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.match_id_)*/uint64_t{0u}
  , /*decltype(_impl_.hero_id_)*/0u
  , /*decltype(_impl_.match_duration_s_)*/0u
  , /*decltype(_impl_.start_time_)*/0u
  , /*decltype(_impl_.match_result_)*/0u
  , /*decltype(_impl_.player_team_)*/0
  , /*decltype(_impl_.player_kills_)*/0u
  , /*decltype(_impl_.player_deaths_)*/0u
  , /*decltype(_impl_.player_assists_)*/0u
  , /*decltype(_impl_.last_hits_)*/0u
  , /*decltype(_impl_.denies_)*/0u
  , /*decltype(_impl_.hero_level_)*/0u
  , /*decltype(_impl_.net_worth_)*/0u
  , /*decltype(_impl_.objectives_mask_team0_)*/uint64_t{0u}
  , /*decltype(_impl_.objectives_mask_team1_)*/uint64_t{0u}
  , /*decltype(_impl_.abandoned_time_s_)*/0u
  , /*decltype(_impl_.match_mode_)*/0
  , /*decltype(_impl_.team_abandoned_)*/false
  , /*decltype(_impl_.not_scored_)*/false
  , /*decltype(_impl_.game_mode_)*/0} {}
struct CMsgClientToGCGetMatchHistoryResponse_MatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchHistoryResponse_MatchDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetMatchHistoryResponse_MatchDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetMatchHistoryResponse_Match _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetMatchHistoryResponse_MatchDefaultTypeInternal _CMsgClientToGCGetMatchHistoryResponse_Match_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchHistoryResponse::CMsgClientToGCGetMatchHistoryResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.matches_)*/{}
  , /*decltype(_impl_.continue_cursor_)*/uint64_t{0u}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCGetMatchHistoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchHistoryResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetMatchHistoryResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetMatchHistoryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetMatchHistoryResponseDefaultTypeInternal _CMsgClientToGCGetMatchHistoryResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSpectateUser::CMsgClientToGCSpectateUser(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spectate_account_id_)*/0u
  , /*decltype(_impl_.client_version_)*/0u
  , /*decltype(_impl_.client_platform_)*/0} {}
struct CMsgClientToGCSpectateUserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSpectateUserDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSpectateUserDefaultTypeInternal() {}
  union {
    CMsgClientToGCSpectateUser _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSpectateUserDefaultTypeInternal _CMsgClientToGCSpectateUser_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSpectateUserResponse::CMsgClientToGCSpectateUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sdr_key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.client_broadcast_url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.server_steam_id_)*/uint64_t{0u}
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.udp_connect_ip_)*/0u
  , /*decltype(_impl_.lobby_id_)*/uint64_t{0u}
  , /*decltype(_impl_.udp_connect_port_)*/0u} {}
struct CMsgClientToGCSpectateUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSpectateUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSpectateUserResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSpectateUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSpectateUserResponseDefaultTypeInternal _CMsgClientToGCSpectateUserResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSpectateLobby::CMsgClientToGCSpectateLobby(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.lobby_id_)*/uint64_t{0u}
  , /*decltype(_impl_.client_version_)*/0u
  , /*decltype(_impl_.client_platform_)*/0
  , /*decltype(_impl_.match_id_)*/uint64_t{0u}} {}
struct CMsgClientToGCSpectateLobbyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSpectateLobbyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSpectateLobbyDefaultTypeInternal() {}
  union {
    CMsgClientToGCSpectateLobby _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSpectateLobbyDefaultTypeInternal _CMsgClientToGCSpectateLobby_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSpectateLobbyResponse::CMsgClientToGCSpectateLobbyResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/nullptr} {}
struct CMsgClientToGCSpectateLobbyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSpectateLobbyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSpectateLobbyResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSpectateLobbyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSpectateLobbyResponseDefaultTypeInternal _CMsgClientToGCSpectateLobbyResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetProfileCard::CMsgClientToGCGetProfileCard(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_id_)*/0u
  , /*decltype(_impl_.dev_access_hint_)*/false
  , /*decltype(_impl_.friend_access_hint_)*/false} {}
struct CMsgClientToGCGetProfileCardDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetProfileCardDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetProfileCardDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetProfileCard _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetProfileCardDefaultTypeInternal _CMsgClientToGCGetProfileCard_default_instance_;
PROTOBUF_CONSTEXPR CMsgCitadelProfileCard_Slot_Stat::CMsgCitadelProfileCard_Slot_Stat(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.stat_id_)*/0
  , /*decltype(_impl_.stat_score_)*/0u} {}
struct CMsgCitadelProfileCard_Slot_StatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgCitadelProfileCard_Slot_StatDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgCitadelProfileCard_Slot_StatDefaultTypeInternal() {}
  union {
    CMsgCitadelProfileCard_Slot_Stat _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgCitadelProfileCard_Slot_StatDefaultTypeInternal _CMsgCitadelProfileCard_Slot_Stat_default_instance_;
PROTOBUF_CONSTEXPR CMsgCitadelProfileCard_Slot_Hero::CMsgCitadelProfileCard_Slot_Hero(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.hero_id_)*/0u
  , /*decltype(_impl_.hero_wins_)*/0u
  , /*decltype(_impl_.hero_kills_)*/0u} {}
struct CMsgCitadelProfileCard_Slot_HeroDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgCitadelProfileCard_Slot_HeroDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgCitadelProfileCard_Slot_HeroDefaultTypeInternal() {}
  union {
    CMsgCitadelProfileCard_Slot_Hero _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgCitadelProfileCard_Slot_HeroDefaultTypeInternal _CMsgCitadelProfileCard_Slot_Hero_default_instance_;
PROTOBUF_CONSTEXPR CMsgCitadelProfileCard_Slot::CMsgCitadelProfileCard_Slot(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.stat_)*/nullptr
  , /*decltype(_impl_.hero_)*/nullptr
  , /*decltype(_impl_.slot_id_)*/0u} {}
struct CMsgCitadelProfileCard_SlotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgCitadelProfileCard_SlotDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgCitadelProfileCard_SlotDefaultTypeInternal() {}
  union {
    CMsgCitadelProfileCard_Slot _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgCitadelProfileCard_SlotDefaultTypeInternal _CMsgCitadelProfileCard_Slot_default_instance_;
PROTOBUF_CONSTEXPR CMsgCitadelProfileCard::CMsgCitadelProfileCard(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.slots_)*/{}
  , /*decltype(_impl_.account_id_)*/0u
  , /*decltype(_impl_.ranked_badge_level_)*/0u} {}
struct CMsgCitadelProfileCardDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgCitadelProfileCardDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgCitadelProfileCardDefaultTypeInternal() {}
  union {
    CMsgCitadelProfileCard _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgCitadelProfileCardDefaultTypeInternal _CMsgCitadelProfileCard_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCUpdateRoster::CMsgClientToGCUpdateRoster(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.heroes_)*/nullptr
  , /*decltype(_impl_.game_mode_)*/0
  , /*decltype(_impl_.match_mode_)*/0} {}
struct CMsgClientToGCUpdateRosterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCUpdateRosterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCUpdateRosterDefaultTypeInternal() {}
  union {
    CMsgClientToGCUpdateRoster _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCUpdateRosterDefaultTypeInternal _CMsgClientToGCUpdateRoster_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCUpdateRosterResponse::CMsgClientToGCUpdateRosterResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCUpdateRosterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCUpdateRosterResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCUpdateRosterResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCUpdateRosterResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCUpdateRosterResponseDefaultTypeInternal _CMsgClientToGCUpdateRosterResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountStats::CMsgClientToGCGetAccountStats(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_id_)*/0u
  , /*decltype(_impl_.dev_access_hint_)*/false
  , /*decltype(_impl_.friend_access_hint_)*/false} {}
struct CMsgClientToGCGetAccountStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountStatsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAccountStatsDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAccountStats _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetAccountStatsDefaultTypeInternal _CMsgClientToGCGetAccountStats_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountStatsResponse::CMsgClientToGCGetAccountStatsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.stats_)*/nullptr
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCGetAccountStatsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountStatsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAccountStatsResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAccountStatsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetAccountStatsResponseDefaultTypeInternal _CMsgClientToGCGetAccountStatsResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchMetaData::CMsgClientToGCGetMatchMetaData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.match_id_)*/uint64_t{0u}
  , /*decltype(_impl_.metadata_salt_)*/0u
  , /*decltype(_impl_.target_account_id_)*/0u} {}
struct CMsgClientToGCGetMatchMetaDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchMetaDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetMatchMetaDataDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetMatchMetaData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetMatchMetaDataDefaultTypeInternal _CMsgClientToGCGetMatchMetaData_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchMetaDataResponse::CMsgClientToGCGetMatchMetaDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.replay_salt_)*/0u
  , /*decltype(_impl_.metadata_salt_)*/0u
  , /*decltype(_impl_.replay_valid_through_)*/0u
  , /*decltype(_impl_.cluster_id_)*/0u
  , /*decltype(_impl_.replay_processing_through_)*/0u} {}
struct CMsgClientToGCGetMatchMetaDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetMatchMetaDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetMatchMetaDataResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetMatchMetaDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetMatchMetaDataResponseDefaultTypeInternal _CMsgClientToGCGetMatchMetaDataResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientDevAnnouncements_Announcement::CMsgGCToClientDevAnnouncements_Announcement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.title_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.patch_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.priority_)*/0u
  , /*decltype(_impl_.unique_id_)*/0u
  , /*decltype(_impl_.posted_time_)*/0u} {}
struct CMsgGCToClientDevAnnouncements_AnnouncementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientDevAnnouncements_AnnouncementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientDevAnnouncements_AnnouncementDefaultTypeInternal() {}
  union {
    CMsgGCToClientDevAnnouncements_Announcement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientDevAnnouncements_AnnouncementDefaultTypeInternal _CMsgGCToClientDevAnnouncements_Announcement_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientDevAnnouncements::CMsgGCToClientDevAnnouncements(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.announcements_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CMsgGCToClientDevAnnouncementsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientDevAnnouncementsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientDevAnnouncementsDefaultTypeInternal() {}
  union {
    CMsgGCToClientDevAnnouncements _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientDevAnnouncementsDefaultTypeInternal _CMsgGCToClientDevAnnouncements_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCModifyDevAnnouncements::CMsgClientToGCModifyDevAnnouncements(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.title_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.patch_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.operation_)*/0
  , /*decltype(_impl_.target_id_)*/0u
  , /*decltype(_impl_.priority_)*/0u} {}
struct CMsgClientToGCModifyDevAnnouncementsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCModifyDevAnnouncementsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCModifyDevAnnouncementsDefaultTypeInternal() {}
  union {
    CMsgClientToGCModifyDevAnnouncements _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCModifyDevAnnouncementsDefaultTypeInternal _CMsgClientToGCModifyDevAnnouncements_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCModifyDevAnnouncementsResponse::CMsgClientToGCModifyDevAnnouncementsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCModifyDevAnnouncementsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCModifyDevAnnouncementsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCModifyDevAnnouncementsResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCModifyDevAnnouncementsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCModifyDevAnnouncementsResponseDefaultTypeInternal _CMsgClientToGCModifyDevAnnouncementsResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCDevAction::CMsgClientToGCDevAction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.str_value_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.account_id_)*/0u
  , /*decltype(_impl_.uint_value_)*/0u
  , /*decltype(_impl_.int_value_)*/0
  , /*decltype(_impl_.bool_value_)*/false
  , /*decltype(_impl_.match_id_)*/uint64_t{0u}
  , /*decltype(_impl_.action_)*/1} {}
struct CMsgClientToGCDevActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCDevActionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCDevActionDefaultTypeInternal() {}
  union {
    CMsgClientToGCDevAction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCDevActionDefaultTypeInternal _CMsgClientToGCDevAction_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCDevActionResponse::CMsgClientToGCDevActionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCDevActionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCDevActionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCDevActionResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCDevActionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCDevActionResponseDefaultTypeInternal _CMsgClientToGCDevActionResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRecordClientEvents_Event::CMsgClientToGCRecordClientEvents_Event(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.time_stamp_)*/0u
  , /*decltype(_impl_.client_event_index_)*/0u
  , /*decltype(_impl_.event_data_)*/uint64_t{0u}
  , /*decltype(_impl_.event_id_)*/1} {}
struct CMsgClientToGCRecordClientEvents_EventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRecordClientEvents_EventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRecordClientEvents_EventDefaultTypeInternal() {}
  union {
    CMsgClientToGCRecordClientEvents_Event _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRecordClientEvents_EventDefaultTypeInternal _CMsgClientToGCRecordClientEvents_Event_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRecordClientEvents::CMsgClientToGCRecordClientEvents(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.events_)*/{}
  , /*decltype(_impl_.client_run_token_)*/0u} {}
struct CMsgClientToGCRecordClientEventsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRecordClientEventsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRecordClientEventsDefaultTypeInternal() {}
  union {
    CMsgClientToGCRecordClientEvents _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRecordClientEventsDefaultTypeInternal _CMsgClientToGCRecordClientEvents_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRecordClientEventsResponse::CMsgClientToGCRecordClientEventsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.success_)*/false} {}
struct CMsgClientToGCRecordClientEventsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRecordClientEventsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRecordClientEventsResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRecordClientEventsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRecordClientEventsResponseDefaultTypeInternal _CMsgClientToGCRecordClientEventsResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSetNewPlayerProgress::CMsgClientToGCSetNewPlayerProgress(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.flag_)*/1} {}
struct CMsgClientToGCSetNewPlayerProgressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSetNewPlayerProgressDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSetNewPlayerProgressDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetNewPlayerProgress _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSetNewPlayerProgressDefaultTypeInternal _CMsgClientToGCSetNewPlayerProgress_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSetNewPlayerProgressResponse::CMsgClientToGCSetNewPlayerProgressResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.success_)*/false} {}
struct CMsgClientToGCSetNewPlayerProgressResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSetNewPlayerProgressResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSetNewPlayerProgressResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetNewPlayerProgressResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSetNewPlayerProgressResponseDefaultTypeInternal _CMsgClientToGCSetNewPlayerProgressResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCUpdateAccountSync::CMsgClientToGCUpdateAccountSync(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ids_)*/{}
  , /*decltype(_impl_.values_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CMsgClientToGCUpdateAccountSyncDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCUpdateAccountSyncDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCUpdateAccountSyncDefaultTypeInternal() {}
  union {
    CMsgClientToGCUpdateAccountSync _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCUpdateAccountSyncDefaultTypeInternal _CMsgClientToGCUpdateAccountSync_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCUpdateAccountSyncResponse::CMsgClientToGCUpdateAccountSyncResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCUpdateAccountSyncResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCUpdateAccountSyncResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCUpdateAccountSyncResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCUpdateAccountSyncResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCUpdateAccountSyncResponseDefaultTypeInternal _CMsgClientToGCUpdateAccountSyncResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroChoice::CMsgClientToGCGetHeroChoice(
    ::_pbi::ConstantInitialized) {}
struct CMsgClientToGCGetHeroChoiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroChoiceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetHeroChoiceDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetHeroChoice _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetHeroChoiceDefaultTypeInternal _CMsgClientToGCGetHeroChoice_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroChoiceResponse_Hero::CMsgClientToGCGetHeroChoiceResponse_Hero(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.hero_id_)*/0u} {}
struct CMsgClientToGCGetHeroChoiceResponse_HeroDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroChoiceResponse_HeroDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetHeroChoiceResponse_HeroDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetHeroChoiceResponse_Hero _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetHeroChoiceResponse_HeroDefaultTypeInternal _CMsgClientToGCGetHeroChoiceResponse_Hero_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroChoiceResponse::CMsgClientToGCGetHeroChoiceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.hero_selections_)*/{}
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.hero_choice_id_)*/0u
  , /*decltype(_impl_.select_count_)*/0u} {}
struct CMsgClientToGCGetHeroChoiceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroChoiceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetHeroChoiceResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetHeroChoiceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetHeroChoiceResponseDefaultTypeInternal _CMsgClientToGCGetHeroChoiceResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCUnlockHero::CMsgClientToGCUnlockHero(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.hero_ids_)*/{}
  , /*decltype(_impl_.hero_choice_id_)*/0u} {}
struct CMsgClientToGCUnlockHeroDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCUnlockHeroDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCUnlockHeroDefaultTypeInternal() {}
  union {
    CMsgClientToGCUnlockHero _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCUnlockHeroDefaultTypeInternal _CMsgClientToGCUnlockHero_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCUnlockHeroResponse::CMsgClientToGCUnlockHeroResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCUnlockHeroResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCUnlockHeroResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCUnlockHeroResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCUnlockHeroResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCUnlockHeroResponseDefaultTypeInternal _CMsgClientToGCUnlockHeroResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgAccountBook_Unlock::CMsgAccountBook_Unlock(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unlock_id_)*/0u
  , /*decltype(_impl_.flags_)*/0u} {}
struct CMsgAccountBook_UnlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAccountBook_UnlockDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAccountBook_UnlockDefaultTypeInternal() {}
  union {
    CMsgAccountBook_Unlock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAccountBook_UnlockDefaultTypeInternal _CMsgAccountBook_Unlock_default_instance_;
PROTOBUF_CONSTEXPR CMsgAccountBook::CMsgAccountBook(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unlocks_)*/{}
  , /*decltype(_impl_.book_id_)*/0u
  , /*decltype(_impl_.book_xp_)*/0u
  , /*decltype(_impl_.spent_xp_)*/0u} {}
struct CMsgAccountBookDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAccountBookDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAccountBookDefaultTypeInternal() {}
  union {
    CMsgAccountBook _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAccountBookDefaultTypeInternal _CMsgAccountBook_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCBookUnlock::CMsgClientToGCBookUnlock(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.book_id_)*/0u
  , /*decltype(_impl_.unlock_id_)*/0u
  , /*decltype(_impl_.expected_cost_)*/0u
  , /*decltype(_impl_.client_version_)*/0u} {}
struct CMsgClientToGCBookUnlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCBookUnlockDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCBookUnlockDefaultTypeInternal() {}
  union {
    CMsgClientToGCBookUnlock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCBookUnlockDefaultTypeInternal _CMsgClientToGCBookUnlock_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCBookUnlockResponse::CMsgClientToGCBookUnlockResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.updated_book_)*/nullptr
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCBookUnlockResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCBookUnlockResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCBookUnlockResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCBookUnlockResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCBookUnlockResponseDefaultTypeInternal _CMsgClientToGCBookUnlockResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetBook::CMsgClientToGCGetBook(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.book_id_)*/0u} {}
struct CMsgClientToGCGetBookDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetBookDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetBookDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetBook _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetBookDefaultTypeInternal _CMsgClientToGCGetBook_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetBookResponse::CMsgClientToGCGetBookResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.book_)*/nullptr
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCGetBookResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetBookResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetBookResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetBookResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetBookResponseDefaultTypeInternal _CMsgClientToGCGetBookResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientBookUpdated::CMsgGCToClientBookUpdated(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.book_)*/nullptr} {}
struct CMsgGCToClientBookUpdatedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientBookUpdatedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientBookUpdatedDefaultTypeInternal() {}
  union {
    CMsgGCToClientBookUpdated _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientBookUpdatedDefaultTypeInternal _CMsgGCToClientBookUpdated_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSubmitPlaytestUser::CMsgClientToGCSubmitPlaytestUser(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.location_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.target_account_id_)*/0u} {}
struct CMsgClientToGCSubmitPlaytestUserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSubmitPlaytestUserDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSubmitPlaytestUserDefaultTypeInternal() {}
  union {
    CMsgClientToGCSubmitPlaytestUser _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSubmitPlaytestUserDefaultTypeInternal _CMsgClientToGCSubmitPlaytestUser_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSubmitPlaytestUserResponse::CMsgClientToGCSubmitPlaytestUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.response_)*/0} {}
struct CMsgClientToGCSubmitPlaytestUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSubmitPlaytestUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSubmitPlaytestUserResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSubmitPlaytestUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSubmitPlaytestUserResponseDefaultTypeInternal _CMsgClientToGCSubmitPlaytestUserResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgHeroBuild_BuildModEntry::CMsgHeroBuild_BuildModEntry(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.annotation_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ability_id_)*/0u} {}
struct CMsgHeroBuild_BuildModEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgHeroBuild_BuildModEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgHeroBuild_BuildModEntryDefaultTypeInternal() {}
  union {
    CMsgHeroBuild_BuildModEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgHeroBuild_BuildModEntryDefaultTypeInternal _CMsgHeroBuild_BuildModEntry_default_instance_;
PROTOBUF_CONSTEXPR CMsgHeroBuild_BuildModCategory::CMsgHeroBuild_BuildModCategory(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.mods_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.width_)*/0
  , /*decltype(_impl_.height_)*/0} {}
struct CMsgHeroBuild_BuildModCategoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgHeroBuild_BuildModCategoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgHeroBuild_BuildModCategoryDefaultTypeInternal() {}
  union {
    CMsgHeroBuild_BuildModCategory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgHeroBuild_BuildModCategoryDefaultTypeInternal _CMsgHeroBuild_BuildModCategory_default_instance_;
PROTOBUF_CONSTEXPR CMsgHeroBuild_CurrencyChange::CMsgHeroBuild_CurrencyChange(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.annotation_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ability_id_)*/0u
  , /*decltype(_impl_.currency_type_)*/0
  , /*decltype(_impl_.delta_)*/0} {}
struct CMsgHeroBuild_CurrencyChangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgHeroBuild_CurrencyChangeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgHeroBuild_CurrencyChangeDefaultTypeInternal() {}
  union {
    CMsgHeroBuild_CurrencyChange _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgHeroBuild_CurrencyChangeDefaultTypeInternal _CMsgHeroBuild_CurrencyChange_default_instance_;
PROTOBUF_CONSTEXPR CMsgHeroBuild_AbilityOrder::CMsgHeroBuild_AbilityOrder(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.currency_changes_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CMsgHeroBuild_AbilityOrderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgHeroBuild_AbilityOrderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgHeroBuild_AbilityOrderDefaultTypeInternal() {}
  union {
    CMsgHeroBuild_AbilityOrder _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgHeroBuild_AbilityOrderDefaultTypeInternal _CMsgHeroBuild_AbilityOrder_default_instance_;
PROTOBUF_CONSTEXPR CMsgHeroBuild_Details_V0::CMsgHeroBuild_Details_V0(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.mod_categories_)*/{}
  , /*decltype(_impl_.ability_order_)*/nullptr} {}
struct CMsgHeroBuild_Details_V0DefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgHeroBuild_Details_V0DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgHeroBuild_Details_V0DefaultTypeInternal() {}
  union {
    CMsgHeroBuild_Details_V0 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgHeroBuild_Details_V0DefaultTypeInternal _CMsgHeroBuild_Details_V0_default_instance_;
PROTOBUF_CONSTEXPR CMsgHeroBuild::CMsgHeroBuild(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.details_)*/nullptr
  , /*decltype(_impl_.hero_build_id_)*/0u
  , /*decltype(_impl_.hero_id_)*/0u
  , /*decltype(_impl_.author_account_id_)*/0u
  , /*decltype(_impl_.last_updated_timestamp_)*/0u
  , /*decltype(_impl_.language_)*/0u
  , /*decltype(_impl_.version_)*/0u
  , /*decltype(_impl_.origin_build_id_)*/0u} {}
struct CMsgHeroBuildDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgHeroBuildDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgHeroBuildDefaultTypeInternal() {}
  union {
    CMsgHeroBuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgHeroBuildDefaultTypeInternal _CMsgHeroBuild_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCUpdateHeroBuild::CMsgClientToGCUpdateHeroBuild(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.hero_build_)*/nullptr} {}
struct CMsgClientToGCUpdateHeroBuildDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCUpdateHeroBuildDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCUpdateHeroBuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCUpdateHeroBuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCUpdateHeroBuildDefaultTypeInternal _CMsgClientToGCUpdateHeroBuild_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCUpdateHeroBuildResponse::CMsgClientToGCUpdateHeroBuildResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.response_)*/0
  , /*decltype(_impl_.hero_build_id_)*/0u
  , /*decltype(_impl_.version_)*/0u} {}
struct CMsgClientToGCUpdateHeroBuildResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCUpdateHeroBuildResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCUpdateHeroBuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCUpdateHeroBuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCUpdateHeroBuildResponseDefaultTypeInternal _CMsgClientToGCUpdateHeroBuildResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCFindHeroBuilds::CMsgClientToGCFindHeroBuilds(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.language_)*/{}
  , /*decltype(_impl_.search_text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.author_account_id_)*/0u
  , /*decltype(_impl_.hero_id_)*/0u
  , /*decltype(_impl_.hero_build_id_)*/0u} {}
struct CMsgClientToGCFindHeroBuildsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCFindHeroBuildsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCFindHeroBuildsDefaultTypeInternal() {}
  union {
    CMsgClientToGCFindHeroBuilds _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCFindHeroBuildsDefaultTypeInternal _CMsgClientToGCFindHeroBuilds_default_instance_;
PROTOBUF_CONSTEXPR CMsgHeroBuildPreference::CMsgHeroBuildPreference(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.favorited_)*/false
  , /*decltype(_impl_.ignored_)*/false
  , /*decltype(_impl_.reported_)*/false} {}
struct CMsgHeroBuildPreferenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgHeroBuildPreferenceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgHeroBuildPreferenceDefaultTypeInternal() {}
  union {
    CMsgHeroBuildPreference _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgHeroBuildPreferenceDefaultTypeInternal _CMsgHeroBuildPreference_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.hero_build_)*/nullptr
  , /*decltype(_impl_.preference_)*/nullptr
  , /*decltype(_impl_.num_favorites_)*/0u
  , /*decltype(_impl_.num_ignores_)*/0u
  , /*decltype(_impl_.num_reports_)*/0u
  , /*decltype(_impl_.num_weekly_favorites_)*/0u
  , /*decltype(_impl_.num_daily_favorites_)*/0u
  , /*decltype(_impl_.rollup_category_)*/0u} {}
struct CMsgClientToGCFindHeroBuildsResponse_HeroBuildResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCFindHeroBuildsResponse_HeroBuildResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCFindHeroBuildsResponse_HeroBuildResultDefaultTypeInternal() {}
  union {
    CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCFindHeroBuildsResponse_HeroBuildResultDefaultTypeInternal _CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCFindHeroBuildsResponse::CMsgClientToGCFindHeroBuildsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.results_)*/{}
  , /*decltype(_impl_.response_)*/0} {}
struct CMsgClientToGCFindHeroBuildsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCFindHeroBuildsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCFindHeroBuildsResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCFindHeroBuildsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCFindHeroBuildsResponseDefaultTypeInternal _CMsgClientToGCFindHeroBuildsResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCUpdateHeroBuildPreference::CMsgClientToGCUpdateHeroBuildPreference(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.preference_)*/nullptr
  , /*decltype(_impl_.hero_build_id_)*/0u} {}
struct CMsgClientToGCUpdateHeroBuildPreferenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCUpdateHeroBuildPreferenceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCUpdateHeroBuildPreferenceDefaultTypeInternal() {}
  union {
    CMsgClientToGCUpdateHeroBuildPreference _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCUpdateHeroBuildPreferenceDefaultTypeInternal _CMsgClientToGCUpdateHeroBuildPreference_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCUpdateHeroBuildPreferenceResponse::CMsgClientToGCUpdateHeroBuildPreferenceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.response_)*/0} {}
struct CMsgClientToGCUpdateHeroBuildPreferenceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCUpdateHeroBuildPreferenceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCUpdateHeroBuildPreferenceResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCUpdateHeroBuildPreferenceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCUpdateHeroBuildPreferenceResponseDefaultTypeInternal _CMsgClientToGCUpdateHeroBuildPreferenceResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetOldHeroBuildData::CMsgClientToGCGetOldHeroBuildData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.author_account_id_)*/0u} {}
struct CMsgClientToGCGetOldHeroBuildDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetOldHeroBuildDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetOldHeroBuildDataDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetOldHeroBuildData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetOldHeroBuildDataDefaultTypeInternal _CMsgClientToGCGetOldHeroBuildData_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.recommended_mod_ability_ids_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0DefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0DefaultTypeInternal() {}
  union {
    CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0DefaultTypeInternal _CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.details_)*/nullptr
  , /*decltype(_impl_.hero_id_)*/0u} {}
struct CMsgClientToGCGetOldHeroBuildDataResponse_OldBuildDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetOldHeroBuildDataResponse_OldBuildDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetOldHeroBuildDataResponse_OldBuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetOldHeroBuildDataResponse_OldBuildDefaultTypeInternal _CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetOldHeroBuildDataResponse::CMsgClientToGCGetOldHeroBuildDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.results_)*/{}
  , /*decltype(_impl_.response_)*/0
  , /*decltype(_impl_.author_account_id_)*/0u} {}
struct CMsgClientToGCGetOldHeroBuildDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetOldHeroBuildDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetOldHeroBuildDataResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetOldHeroBuildDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetOldHeroBuildDataResponseDefaultTypeInternal _CMsgClientToGCGetOldHeroBuildDataResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCReportPlayerFromMatch::CMsgClientToGCReportPlayerFromMatch(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.report_text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.match_id_)*/uint64_t{0u}
  , /*decltype(_impl_.target_account_id_)*/0u
  , /*decltype(_impl_.report_type_)*/0} {}
struct CMsgClientToGCReportPlayerFromMatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCReportPlayerFromMatchDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCReportPlayerFromMatchDefaultTypeInternal() {}
  union {
    CMsgClientToGCReportPlayerFromMatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCReportPlayerFromMatchDefaultTypeInternal _CMsgClientToGCReportPlayerFromMatch_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCReportPlayerFromMatchResponse::CMsgClientToGCReportPlayerFromMatchResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.response_)*/0} {}
struct CMsgClientToGCReportPlayerFromMatchResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCReportPlayerFromMatchResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCReportPlayerFromMatchResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCReportPlayerFromMatchResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCReportPlayerFromMatchResponseDefaultTypeInternal _CMsgClientToGCReportPlayerFromMatchResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountMatchReports::CMsgClientToGCGetAccountMatchReports(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.match_id_)*/uint64_t{0u}} {}
struct CMsgClientToGCGetAccountMatchReportsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountMatchReportsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAccountMatchReportsDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAccountMatchReports _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetAccountMatchReportsDefaultTypeInternal _CMsgClientToGCGetAccountMatchReports_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountMatchReportsResponse_Report::CMsgClientToGCGetAccountMatchReportsResponse_Report(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_id_)*/0u} {}
struct CMsgClientToGCGetAccountMatchReportsResponse_ReportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountMatchReportsResponse_ReportDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAccountMatchReportsResponse_ReportDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAccountMatchReportsResponse_Report _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetAccountMatchReportsResponse_ReportDefaultTypeInternal _CMsgClientToGCGetAccountMatchReportsResponse_Report_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountMatchReportsResponse_Commend::CMsgClientToGCGetAccountMatchReportsResponse_Commend(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_id_)*/0u} {}
struct CMsgClientToGCGetAccountMatchReportsResponse_CommendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountMatchReportsResponse_CommendDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAccountMatchReportsResponse_CommendDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAccountMatchReportsResponse_Commend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetAccountMatchReportsResponse_CommendDefaultTypeInternal _CMsgClientToGCGetAccountMatchReportsResponse_Commend_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountMatchReportsResponse::CMsgClientToGCGetAccountMatchReportsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.reports_)*/{}
  , /*decltype(_impl_.commends_)*/{}
  , /*decltype(_impl_.response_)*/0} {}
struct CMsgClientToGCGetAccountMatchReportsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountMatchReportsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAccountMatchReportsResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAccountMatchReportsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetAccountMatchReportsResponseDefaultTypeInternal _CMsgClientToGCGetAccountMatchReportsResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCDeleteHeroBuild::CMsgClientToGCDeleteHeroBuild(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.author_account_id_)*/0u
  , /*decltype(_impl_.hero_build_id_)*/0u} {}
struct CMsgClientToGCDeleteHeroBuildDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCDeleteHeroBuildDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCDeleteHeroBuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCDeleteHeroBuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCDeleteHeroBuildDefaultTypeInternal _CMsgClientToGCDeleteHeroBuild_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCDeleteHeroBuildResponse::CMsgClientToGCDeleteHeroBuildResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.response_)*/0
  , /*decltype(_impl_.builds_deleted_)*/0u} {}
struct CMsgClientToGCDeleteHeroBuildResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCDeleteHeroBuildResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCDeleteHeroBuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCDeleteHeroBuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCDeleteHeroBuildResponseDefaultTypeInternal _CMsgClientToGCDeleteHeroBuildResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetActiveMatches::CMsgClientToGCGetActiveMatches(
    ::_pbi::ConstantInitialized) {}
struct CMsgClientToGCGetActiveMatchesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetActiveMatchesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetActiveMatchesDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetActiveMatches _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetActiveMatchesDefaultTypeInternal _CMsgClientToGCGetActiveMatches_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetActiveMatchesResponse::CMsgClientToGCGetActiveMatchesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.active_matches_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CMsgClientToGCGetActiveMatchesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetActiveMatchesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetActiveMatchesResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetActiveMatchesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetActiveMatchesResponseDefaultTypeInternal _CMsgClientToGCGetActiveMatchesResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetDiscordLink::CMsgClientToGCGetDiscordLink(
    ::_pbi::ConstantInitialized) {}
struct CMsgClientToGCGetDiscordLinkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetDiscordLinkDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetDiscordLinkDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetDiscordLink _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetDiscordLinkDefaultTypeInternal _CMsgClientToGCGetDiscordLink_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetDiscordLinkResponse::CMsgClientToGCGetDiscordLinkResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.discord_link_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.response_)*/0
  , /*decltype(_impl_.valid_hours_)*/0u} {}
struct CMsgClientToGCGetDiscordLinkResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetDiscordLinkResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetDiscordLinkResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetDiscordLinkResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetDiscordLinkResponseDefaultTypeInternal _CMsgClientToGCGetDiscordLinkResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGrantForumAccess::CMsgClientToGCGrantForumAccess(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct CMsgClientToGCGrantForumAccessDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGrantForumAccessDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGrantForumAccessDefaultTypeInternal() {}
  union {
    CMsgClientToGCGrantForumAccess _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGrantForumAccessDefaultTypeInternal _CMsgClientToGCGrantForumAccess_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGrantForumAccessResponse::CMsgClientToGCGrantForumAccessResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.username_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.forum_password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.response_)*/0} {}
struct CMsgClientToGCGrantForumAccessResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGrantForumAccessResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGrantForumAccessResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGrantForumAccessResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGrantForumAccessResponseDefaultTypeInternal _CMsgClientToGCGrantForumAccessResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCModeratorRequest::CMsgClientToGCModeratorRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_id_)*/0u} {}
struct CMsgClientToGCModeratorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCModeratorRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCModeratorRequestDefaultTypeInternal() {}
  union {
    CMsgClientToGCModeratorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCModeratorRequestDefaultTypeInternal _CMsgClientToGCModeratorRequest_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCModeratorRequestResponse::CMsgClientToGCModeratorRequestResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.response_text_)*/{}
  , /*decltype(_impl_.success_)*/false} {}
struct CMsgClientToGCModeratorRequestResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCModeratorRequestResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCModeratorRequestResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCModeratorRequestResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCModeratorRequestResponseDefaultTypeInternal _CMsgClientToGCModeratorRequestResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetFriendGameStatus::CMsgClientToGCGetFriendGameStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.include_invited_)*/false} {}
struct CMsgClientToGCGetFriendGameStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetFriendGameStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetFriendGameStatusDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetFriendGameStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetFriendGameStatusDefaultTypeInternal _CMsgClientToGCGetFriendGameStatus_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetFriendGameStatusResponse::CMsgClientToGCGetFriendGameStatusResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.friends_played_game_)*/{}
  , /*decltype(_impl_._friends_played_game_cached_byte_size_)*/{0}
  , /*decltype(_impl_.friends_invited_)*/{}
  , /*decltype(_impl_._friends_invited_cached_byte_size_)*/{0}
  , /*decltype(_impl_.friends_invites_sent_)*/{}
  , /*decltype(_impl_._friends_invites_sent_cached_byte_size_)*/{0}
  , /*decltype(_impl_.response_)*/0} {}
struct CMsgClientToGCGetFriendGameStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetFriendGameStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetFriendGameStatusResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetFriendGameStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetFriendGameStatusResponseDefaultTypeInternal _CMsgClientToGCGetFriendGameStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCUpdateSpectatorStatus::CMsgClientToGCUpdateSpectatorStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spectating_lobby_id_)*/uint64_t{0u}
  , /*decltype(_impl_.stopped_spectating_)*/false} {}
struct CMsgClientToGCUpdateSpectatorStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCUpdateSpectatorStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCUpdateSpectatorStatusDefaultTypeInternal() {}
  union {
    CMsgClientToGCUpdateSpectatorStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCUpdateSpectatorStatusDefaultTypeInternal _CMsgClientToGCUpdateSpectatorStatus_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCCommendPlayerFromMatch::CMsgClientToGCCommendPlayerFromMatch(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.match_id_)*/uint64_t{0u}
  , /*decltype(_impl_.target_account_id_)*/0u
  , /*decltype(_impl_.commend_type_)*/0
  , /*decltype(_impl_.fake_commend_hero_id_)*/0u} {}
struct CMsgClientToGCCommendPlayerFromMatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCCommendPlayerFromMatchDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCCommendPlayerFromMatchDefaultTypeInternal() {}
  union {
    CMsgClientToGCCommendPlayerFromMatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCCommendPlayerFromMatchDefaultTypeInternal _CMsgClientToGCCommendPlayerFromMatch_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCCommendPlayerFromMatchResponse::CMsgClientToGCCommendPlayerFromMatchResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCCommendPlayerFromMatchResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCCommendPlayerFromMatchResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCCommendPlayerFromMatchResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCCommendPlayerFromMatchResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCCommendPlayerFromMatchResponseDefaultTypeInternal _CMsgClientToGCCommendPlayerFromMatchResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgGCToClientCommendNotification::CMsgGCToClientCommendNotification(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.commender_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.commender_account_id_)*/0u
  , /*decltype(_impl_.commender_hero_id_)*/0u
  , /*decltype(_impl_.match_id_)*/uint64_t{0u}
  , /*decltype(_impl_.commend_type_)*/0} {}
struct CMsgGCToClientCommendNotificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientCommendNotificationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientCommendNotificationDefaultTypeInternal() {}
  union {
    CMsgGCToClientCommendNotification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientCommendNotificationDefaultTypeInternal _CMsgGCToClientCommendNotification_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestCheatReports::CMsgClientToGCRequestCheatReports(
    ::_pbi::ConstantInitialized) {}
struct CMsgClientToGCRequestCheatReportsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestCheatReportsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestCheatReportsDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestCheatReports _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestCheatReportsDefaultTypeInternal _CMsgClientToGCRequestCheatReports_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.match_id_)*/uint64_t{0u}
  , /*decltype(_impl_.account_id_)*/0u
  , /*decltype(_impl_.hero_id_)*/0u} {}
struct CMsgClientToGCRequestCheatReportsResponse_RecentCheatReportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestCheatReportsResponse_RecentCheatReportDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestCheatReportsResponse_RecentCheatReportDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestCheatReportsResponse_RecentCheatReportDefaultTypeInternal _CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCRequestCheatReportsResponse::CMsgClientToGCRequestCheatReportsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.cheat_reports_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCRequestCheatReportsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCRequestCheatReportsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestCheatReportsResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestCheatReportsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCRequestCheatReportsResponseDefaultTypeInternal _CMsgClientToGCRequestCheatReportsResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroMMRRankings::CMsgClientToGCGetHeroMMRRankings(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.target_account_id_)*/0u} {}
struct CMsgClientToGCGetHeroMMRRankingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroMMRRankingsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetHeroMMRRankingsDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetHeroMMRRankings _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetHeroMMRRankingsDefaultTypeInternal _CMsgClientToGCGetHeroMMRRankings_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroMMRRankingsResponse_Hero::CMsgClientToGCGetHeroMMRRankingsResponse_Hero(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.hero_id_)*/0u
  , /*decltype(_impl_.relative_mmr_)*/0} {}
struct CMsgClientToGCGetHeroMMRRankingsResponse_HeroDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroMMRRankingsResponse_HeroDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetHeroMMRRankingsResponse_HeroDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetHeroMMRRankingsResponse_Hero _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetHeroMMRRankingsResponse_HeroDefaultTypeInternal _CMsgClientToGCGetHeroMMRRankingsResponse_Hero_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroMMRRankingsResponse::CMsgClientToGCGetHeroMMRRankingsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.heroes_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCGetHeroMMRRankingsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetHeroMMRRankingsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetHeroMMRRankingsResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetHeroMMRRankingsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetHeroMMRRankingsResponseDefaultTypeInternal _CMsgClientToGCGetHeroMMRRankingsResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetLeaderboard::CMsgClientToGCGetLeaderboard(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.leaderboard_region_)*/0
  , /*decltype(_impl_.hero_id_)*/0u} {}
struct CMsgClientToGCGetLeaderboardDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetLeaderboardDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetLeaderboardDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetLeaderboard _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetLeaderboardDefaultTypeInternal _CMsgClientToGCGetLeaderboard_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.top_hero_ids_)*/{}
  , /*decltype(_impl_.account_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rank_)*/0u
  , /*decltype(_impl_.badge_level_)*/0u} {}
struct CMsgClientToGCGetLeaderboardResponse_LeaderboardEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetLeaderboardResponse_LeaderboardEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetLeaderboardResponse_LeaderboardEntryDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetLeaderboardResponse_LeaderboardEntryDefaultTypeInternal _CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetLeaderboardResponse::CMsgClientToGCGetLeaderboardResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.entries_)*/{}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCGetLeaderboardResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetLeaderboardResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetLeaderboardResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetLeaderboardResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetLeaderboardResponseDefaultTypeInternal _CMsgClientToGCGetLeaderboardResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountLeaderboards::CMsgClientToGCGetAccountLeaderboards(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.account_id_)*/0u} {}
struct CMsgClientToGCGetAccountLeaderboardsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountLeaderboardsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAccountLeaderboardsDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAccountLeaderboards _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetAccountLeaderboardsDefaultTypeInternal _CMsgClientToGCGetAccountLeaderboards_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.region_)*/0
  , /*decltype(_impl_.hero_id_)*/0u
  , /*decltype(_impl_.rank_)*/0u} {}
struct CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntryDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntryDefaultTypeInternal _CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountLeaderboardsResponse::CMsgClientToGCGetAccountLeaderboardsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.entries_)*/{}
  , /*decltype(_impl_.account_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.result_)*/0} {}
struct CMsgClientToGCGetAccountLeaderboardsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCGetAccountLeaderboardsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAccountLeaderboardsResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAccountLeaderboardsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCGetAccountLeaderboardsResponseDefaultTypeInternal _CMsgClientToGCGetAccountLeaderboardsResponse_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSetHideHolidayModels::CMsgClientToGCSetHideHolidayModels(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.hide_holiday_models_)*/false} {}
struct CMsgClientToGCSetHideHolidayModelsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSetHideHolidayModelsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSetHideHolidayModelsDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetHideHolidayModels _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSetHideHolidayModelsDefaultTypeInternal _CMsgClientToGCSetHideHolidayModels_default_instance_;
PROTOBUF_CONSTEXPR CMsgClientToGCSetHideHolidayModelsResponse::CMsgClientToGCSetHideHolidayModelsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.success_)*/false} {}
struct CMsgClientToGCSetHideHolidayModelsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgClientToGCSetHideHolidayModelsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgClientToGCSetHideHolidayModelsResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetHideHolidayModelsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgClientToGCSetHideHolidayModelsResponseDefaultTypeInternal _CMsgClientToGCSetHideHolidayModelsResponse_default_instance_;
static ::_pb::Metadata file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[150];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[53];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_citadel_5fgcmessages_5fclient_2eproto = nullptr;

const uint32_t TableStruct_citadel_5fgcmessages_5fclient_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.flags_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.wins_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.losses_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.kills_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.most_played_hero_id_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.permissions_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.new_player_progress_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.hero_unlock_credits_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.mm_ban_until_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.comms_ban_until_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.low_priority_games_remaining_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.report_ban_until_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.ranked_badge_level_),
  PROTOBUF_FIELD_OFFSET(::CSOGameAccountClient, _impl_.hero_labs_matches_since_test_hero_),
  1,
  0,
  2,
  3,
  4,
  6,
  5,
  8,
  7,
  9,
  10,
  11,
  12,
  13,
  14,
  PROTOBUF_FIELD_OFFSET(::CSOAccountSyncStorage, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CSOAccountSyncStorage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CSOAccountSyncStorage, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::CSOAccountSyncStorage, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::CSOAccountSyncStorage, _impl_.value_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CSOAccountHeroInfo, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CSOAccountHeroInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CSOAccountHeroInfo, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::CSOAccountHeroInfo, _impl_.hero_id_),
  PROTOBUF_FIELD_OFFSET(::CSOAccountHeroInfo, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::CSOAccountHeroInfo, _impl_.wins_),
  PROTOBUF_FIELD_OFFSET(::CSOAccountHeroInfo, _impl_.kills_),
  0,
  1,
  2,
  3,
  4,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelClientHello, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStartMatchmaking, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStartMatchmaking, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStartMatchmaking, _impl_.client_version_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStartMatchmaking, _impl_.client_platform_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStartMatchmaking, _impl_.match_info_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStartMatchmaking, _impl_.ping_times_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStartMatchmaking, _impl_.heroes_),
  3,
  4,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStartMatchmakingResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStartMatchmakingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStartMatchmakingResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStartMatchmakingResponse, _impl_.time_stamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStartMatchmakingResponse, _impl_.debug_message_),
  1,
  2,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStopMatchmaking, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStopMatchmakingResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStopMatchmakingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCStopMatchmakingResponse, _impl_.success_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientMatchmakingStopped, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientMatchmakingStopped, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientMatchmakingStopped, _impl_.reason_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveLobby, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveLobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveLobby, _impl_.lobby_id_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveLobbyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientWelcomeCitadel, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientWelcomeCitadel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientWelcomeCitadel, _impl_.currency_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientWelcomeCitadel, _impl_.extra_messages_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientWelcomeCitadel, _impl_.compatibility_version_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientWelcomeCitadel, _impl_.region_mode_),
  0,
  ~0u,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCIsInMatchmaking, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCIsInMatchmakingResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCIsInMatchmakingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCIsInMatchmakingResponse, _impl_.in_matchmaking_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo_MatchPlayer, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo_MatchPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo_MatchPlayer, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo_MatchPlayer, _impl_.team_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo_MatchPlayer, _impl_.abandoned_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo_MatchPlayer, _impl_.hero_id_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.start_time_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.winning_team_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.match_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.players_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.lobby_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.net_worth_team_0_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.net_worth_team_1_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.duration_s_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.spectators_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.open_spectator_slots_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.objectives_mask_team0_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.objectives_mask_team1_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.match_mode_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.game_mode_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.match_score_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.region_mode_),
  PROTOBUF_FIELD_OFFSET(::CMsgDevMatchInfo, _impl_.compat_version_),
  0,
  1,
  2,
  ~0u,
  3,
  4,
  5,
  6,
  7,
  9,
  8,
  11,
  10,
  12,
  13,
  14,
  15,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientHeroLabsSchedule_TimeRange, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientHeroLabsSchedule_TimeRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientHeroLabsSchedule_TimeRange, _impl_.start_time_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientHeroLabsSchedule_TimeRange, _impl_.end_time_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientHeroLabsSchedule_Schedule, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientHeroLabsSchedule_Schedule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientHeroLabsSchedule_Schedule, _impl_.schedule_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientHeroLabsSchedule_Schedule, _impl_.weekends_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientHeroLabsSchedule_Schedule, _impl_.weekdays_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientHeroLabsSchedule_Schedule, _impl_.is_open_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientHeroLabsSchedule_Schedule, _impl_.regions_),
  0,
  ~0u,
  ~0u,
  1,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientHeroLabsSchedule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientHeroLabsSchedule, _impl_.schedules_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus_HeroWhitelist, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus_HeroWhitelist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus_HeroWhitelist, _impl_.hero_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus_HeroWhitelist, _impl_.account_ids_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus_DevQueueSize, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus_DevQueueSize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus_DevQueueSize, _impl_.match_mode_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus_DevQueueSize, _impl_.queue_size_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus, _impl_.dev_queue_size_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus, _impl_.dev_available_servers_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus, _impl_.is_mm_enabled_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus, _impl_.locked_heroes_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus, _impl_.party_shared_heroes_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus, _impl_.hero_whitelists_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus, _impl_.mm_pause_time_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus, _impl_.valid_client_versions_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevPlaytestStatus, _impl_.active_match_count_),
  ~0u,
  0,
  1,
  2,
  3,
  ~0u,
  4,
  ~0u,
  5,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientSDRTicket, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientSDRTicket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientSDRTicket, _impl_.ticket_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReplacementSDRTicket, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReplacementSDRTicket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReplacementSDRTicket, _impl_.lobby_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReplacementSDRTicketResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReplacementSDRTicketResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReplacementSDRTicketResponse, _impl_.ticket_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReplacementSDRTicketResponse, _impl_.error_message_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetServerConVar, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetServerConVar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetServerConVar, _impl_.convar_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetServerConVar, _impl_.convar_value_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetServerConVar, _impl_.lobby_id_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetServerConVarResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetServerConVarResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetServerConVarResponse, _impl_.message_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey, _impl_.question_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey, _impl_.response_value_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey, _impl_.response_freeform_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPostMatchSurveyResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPostMatchSurveyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPostMatchSurveyResponse, _impl_.post_match_survey_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPostMatchSurveyResponse, _impl_.match_id_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgPartyMMInfo, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgPartyMMInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgPartyMMInfo, _impl_.platform_),
  PROTOBUF_FIELD_OFFSET(::CMsgPartyMMInfo, _impl_.ping_times_),
  PROTOBUF_FIELD_OFFSET(::CMsgPartyMMInfo, _impl_.client_version_),
  PROTOBUF_FIELD_OFFSET(::CMsgPartyMMInfo, _impl_.region_mode_),
  1,
  0,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyCreate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyCreate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyCreate, _impl_.party_mm_info_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyCreate, _impl_.invite_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyCreate, _impl_.disable_party_code_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyCreate, _impl_.is_private_lobby_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyCreate, _impl_.region_mode_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyCreate, _impl_.server_search_key_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyCreate, _impl_.mm_preference_),
  1,
  2,
  3,
  4,
  5,
  0,
  6,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyCreateResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyCreateResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyCreateResponse, _impl_.party_id_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyLeave, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyLeave, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyLeave, _impl_.party_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyLeaveResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyLeaveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyLeaveResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoin, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoin, _impl_.party_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoin, _impl_.is_rejoin_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoin, _impl_.party_mm_info_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoinResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoinResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyAction, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyAction, _impl_.party_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyAction, _impl_.target_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyAction, _impl_.action_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyAction, _impl_.uint_value_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyAction, _impl_.bool_value_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyAction, _impl_.str_value_),
  1,
  2,
  5,
  4,
  3,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyActionResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyActionResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetMode, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetMode, _impl_.party_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetMode, _impl_.match_mode_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetMode, _impl_.game_mode_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetMode, _impl_.bot_difficulty_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetMode, _impl_.dev_server_command_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetMode, _impl_.region_mode_),
  1,
  2,
  3,
  4,
  0,
  5,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetModeResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetModeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetModeResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetModeResponse, _impl_.time_stamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetModeResponse, _impl_.account_id_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyStartMatch, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyStartMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyStartMatch, _impl_.party_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyStartMatchResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyStartMatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyStartMatchResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyStartMatchResponse, _impl_.account_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyInviteUser, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyInviteUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyInviteUser, _impl_.party_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyInviteUser, _impl_.invite_account_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyInviteUserResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyInviteUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyInviteUserResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyInviteUserResponse, _impl_.user_online_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPartyEvent, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPartyEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPartyEvent, _impl_.party_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPartyEvent, _impl_.event_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPartyEvent, _impl_.initiator_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPartyEvent, _impl_.target_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPartyEvent, _impl_.bytes_data_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPartyEvent, _impl_.str_data_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPartyEvent, _impl_.uint_data_),
  2,
  6,
  3,
  4,
  0,
  1,
  5,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCanRejoinParty, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCanRejoinParty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCanRejoinParty, _impl_.party_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoinViaCode, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoinViaCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoinViaCode, _impl_.join_code_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoinViaCode, _impl_.party_mm_info_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoinViaCodeResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoinViaCodeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoinViaCodeResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartyJoinViaCodeResponse, _impl_.party_id_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetReadyState, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetReadyState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetReadyState, _impl_.party_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetReadyState, _impl_.ready_state_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetReadyState, _impl_.hero_roster_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetReadyStateResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetReadyStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCPartySetReadyStateResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevSetMMBias, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevSetMMBias, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevSetMMBias, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevSetMMBias, _impl_.value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistory, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistory, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistory, _impl_.continue_cursor_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistory, _impl_.ranked_interval_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.match_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.hero_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.match_duration_s_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.start_time_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.match_result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.player_team_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.player_kills_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.player_deaths_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.player_assists_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.last_hits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.denies_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.hero_level_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.net_worth_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.objectives_mask_team0_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.objectives_mask_team1_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.team_abandoned_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.abandoned_time_s_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.match_mode_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.game_mode_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.not_scored_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  17,
  15,
  16,
  19,
  18,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse, _impl_.continue_cursor_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchHistoryResponse, _impl_.matches_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateUser, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateUser, _impl_.spectate_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateUser, _impl_.client_version_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateUser, _impl_.client_platform_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateUserResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateUserResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateUserResponse, _impl_.server_steam_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateUserResponse, _impl_.sdr_key_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateUserResponse, _impl_.udp_connect_ip_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateUserResponse, _impl_.udp_connect_port_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateUserResponse, _impl_.lobby_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateUserResponse, _impl_.client_broadcast_url_),
  3,
  2,
  0,
  4,
  6,
  5,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateLobby, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateLobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateLobby, _impl_.lobby_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateLobby, _impl_.client_version_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateLobby, _impl_.client_platform_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateLobby, _impl_.match_id_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateLobbyResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateLobbyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSpectateLobbyResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetProfileCard, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetProfileCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetProfileCard, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetProfileCard, _impl_.dev_access_hint_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetProfileCard, _impl_.friend_access_hint_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard_Slot_Stat, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard_Slot_Stat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard_Slot_Stat, _impl_.stat_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard_Slot_Stat, _impl_.stat_score_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard_Slot_Hero, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard_Slot_Hero, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard_Slot_Hero, _impl_.hero_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard_Slot_Hero, _impl_.hero_wins_),
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard_Slot_Hero, _impl_.hero_kills_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard_Slot, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard_Slot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard_Slot, _impl_.slot_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard_Slot, _impl_.stat_),
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard_Slot, _impl_.hero_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard, _impl_.slots_),
  PROTOBUF_FIELD_OFFSET(::CMsgCitadelProfileCard, _impl_.ranked_badge_level_),
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateRoster, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateRoster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateRoster, _impl_.heroes_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateRoster, _impl_.game_mode_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateRoster, _impl_.match_mode_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateRosterResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateRosterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateRosterResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountStats, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountStats, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountStats, _impl_.dev_access_hint_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountStats, _impl_.friend_access_hint_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountStatsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountStatsResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountStatsResponse, _impl_.stats_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchMetaData, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchMetaData, _impl_.match_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchMetaData, _impl_.metadata_salt_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchMetaData, _impl_.target_account_id_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchMetaDataResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchMetaDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchMetaDataResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchMetaDataResponse, _impl_.replay_salt_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchMetaDataResponse, _impl_.metadata_salt_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchMetaDataResponse, _impl_.replay_valid_through_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchMetaDataResponse, _impl_.cluster_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetMatchMetaDataResponse, _impl_.replay_processing_through_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevAnnouncements_Announcement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevAnnouncements_Announcement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevAnnouncements_Announcement, _impl_.priority_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevAnnouncements_Announcement, _impl_.title_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevAnnouncements_Announcement, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevAnnouncements_Announcement, _impl_.url_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevAnnouncements_Announcement, _impl_.unique_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevAnnouncements_Announcement, _impl_.posted_time_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevAnnouncements_Announcement, _impl_.patch_version_),
  4,
  0,
  1,
  2,
  5,
  6,
  3,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevAnnouncements, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientDevAnnouncements, _impl_.announcements_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyDevAnnouncements, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyDevAnnouncements, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyDevAnnouncements, _impl_.operation_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyDevAnnouncements, _impl_.target_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyDevAnnouncements, _impl_.priority_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyDevAnnouncements, _impl_.title_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyDevAnnouncements, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyDevAnnouncements, _impl_.url_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyDevAnnouncements, _impl_.patch_version_),
  4,
  5,
  6,
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyDevAnnouncementsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyDevAnnouncementsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyDevAnnouncementsResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevAction, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevAction, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevAction, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevAction, _impl_.uint_value_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevAction, _impl_.int_value_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevAction, _impl_.bool_value_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevAction, _impl_.str_value_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevAction, _impl_.match_id_),
  6,
  1,
  2,
  3,
  4,
  0,
  5,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevActionResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDevActionResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRecordClientEvents_Event, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRecordClientEvents_Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRecordClientEvents_Event, _impl_.time_stamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRecordClientEvents_Event, _impl_.event_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRecordClientEvents_Event, _impl_.event_data_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRecordClientEvents_Event, _impl_.client_event_index_),
  0,
  3,
  2,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRecordClientEvents, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRecordClientEvents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRecordClientEvents, _impl_.events_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRecordClientEvents, _impl_.client_run_token_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRecordClientEventsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRecordClientEventsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRecordClientEventsResponse, _impl_.success_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetNewPlayerProgress, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetNewPlayerProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetNewPlayerProgress, _impl_.flag_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetNewPlayerProgressResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetNewPlayerProgressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetNewPlayerProgressResponse, _impl_.success_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateAccountSync, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateAccountSync, _impl_.ids_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateAccountSync, _impl_.values_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateAccountSyncResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateAccountSyncResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateAccountSyncResponse, _impl_.result_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroChoice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroChoiceResponse_Hero, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroChoiceResponse_Hero, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroChoiceResponse_Hero, _impl_.hero_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroChoiceResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroChoiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroChoiceResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroChoiceResponse, _impl_.hero_selections_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroChoiceResponse, _impl_.hero_choice_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroChoiceResponse, _impl_.select_count_),
  0,
  ~0u,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUnlockHero, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUnlockHero, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUnlockHero, _impl_.hero_ids_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUnlockHero, _impl_.hero_choice_id_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUnlockHeroResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUnlockHeroResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUnlockHeroResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgAccountBook_Unlock, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgAccountBook_Unlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgAccountBook_Unlock, _impl_.unlock_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgAccountBook_Unlock, _impl_.flags_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgAccountBook, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgAccountBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgAccountBook, _impl_.book_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgAccountBook, _impl_.book_xp_),
  PROTOBUF_FIELD_OFFSET(::CMsgAccountBook, _impl_.spent_xp_),
  PROTOBUF_FIELD_OFFSET(::CMsgAccountBook, _impl_.unlocks_),
  0,
  1,
  2,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCBookUnlock, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCBookUnlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCBookUnlock, _impl_.book_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCBookUnlock, _impl_.unlock_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCBookUnlock, _impl_.expected_cost_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCBookUnlock, _impl_.client_version_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCBookUnlockResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCBookUnlockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCBookUnlockResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCBookUnlockResponse, _impl_.updated_book_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetBook, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetBook, _impl_.book_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetBookResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetBookResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetBookResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetBookResponse, _impl_.book_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientBookUpdated, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientBookUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientBookUpdated, _impl_.book_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPlaytestUser, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPlaytestUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPlaytestUser, _impl_.location_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPlaytestUser, _impl_.target_account_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPlaytestUserResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPlaytestUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPlaytestUserResponse, _impl_.response_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_BuildModEntry, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_BuildModEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_BuildModEntry, _impl_.ability_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_BuildModEntry, _impl_.annotation_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_BuildModCategory, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_BuildModCategory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_BuildModCategory, _impl_.mods_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_BuildModCategory, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_BuildModCategory, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_BuildModCategory, _impl_.width_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_BuildModCategory, _impl_.height_),
  ~0u,
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_CurrencyChange, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_CurrencyChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_CurrencyChange, _impl_.ability_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_CurrencyChange, _impl_.currency_type_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_CurrencyChange, _impl_.delta_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_CurrencyChange, _impl_.annotation_),
  1,
  2,
  3,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_AbilityOrder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_AbilityOrder, _impl_.currency_changes_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_Details_V0, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_Details_V0, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_Details_V0, _impl_.mod_categories_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild_Details_V0, _impl_.ability_order_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild, _impl_.hero_build_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild, _impl_.hero_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild, _impl_.author_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild, _impl_.last_updated_timestamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild, _impl_.language_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild, _impl_.origin_build_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuild, _impl_.details_),
  3,
  4,
  5,
  6,
  0,
  1,
  7,
  8,
  9,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuild, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuild, _impl_.hero_build_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuildResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuildResponse, _impl_.response_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuildResponse, _impl_.hero_build_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuildResponse, _impl_.version_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuilds, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuilds, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuilds, _impl_.author_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuilds, _impl_.hero_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuilds, _impl_.language_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuilds, _impl_.search_text_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuilds, _impl_.hero_build_id_),
  1,
  2,
  ~0u,
  0,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuildPreference, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuildPreference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuildPreference, _impl_.favorited_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuildPreference, _impl_.ignored_),
  PROTOBUF_FIELD_OFFSET(::CMsgHeroBuildPreference, _impl_.reported_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult, _impl_.hero_build_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult, _impl_.preference_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult, _impl_.num_favorites_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult, _impl_.num_ignores_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult, _impl_.num_reports_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult, _impl_.num_weekly_favorites_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult, _impl_.num_daily_favorites_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult, _impl_.rollup_category_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuildsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuildsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuildsResponse, _impl_.response_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCFindHeroBuildsResponse, _impl_.results_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuildPreference, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuildPreference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuildPreference, _impl_.hero_build_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuildPreference, _impl_.preference_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuildPreferenceResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuildPreferenceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateHeroBuildPreferenceResponse, _impl_.response_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildData, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildData, _impl_.author_account_id_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0, _impl_.recommended_mod_ability_ids_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild, _impl_.hero_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild, _impl_.details_),
  0,
  3,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildDataResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildDataResponse, _impl_.response_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildDataResponse, _impl_.author_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetOldHeroBuildDataResponse, _impl_.results_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportPlayerFromMatch, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportPlayerFromMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportPlayerFromMatch, _impl_.match_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportPlayerFromMatch, _impl_.target_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportPlayerFromMatch, _impl_.report_type_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportPlayerFromMatch, _impl_.report_text_),
  1,
  2,
  3,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportPlayerFromMatchResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportPlayerFromMatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportPlayerFromMatchResponse, _impl_.response_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountMatchReports, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountMatchReports, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountMatchReports, _impl_.match_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountMatchReportsResponse_Report, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountMatchReportsResponse_Report, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountMatchReportsResponse_Report, _impl_.account_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountMatchReportsResponse_Commend, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountMatchReportsResponse_Commend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountMatchReportsResponse_Commend, _impl_.account_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountMatchReportsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountMatchReportsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountMatchReportsResponse, _impl_.response_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountMatchReportsResponse, _impl_.reports_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountMatchReportsResponse, _impl_.commends_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeleteHeroBuild, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeleteHeroBuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeleteHeroBuild, _impl_.author_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeleteHeroBuild, _impl_.hero_build_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeleteHeroBuildResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeleteHeroBuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeleteHeroBuildResponse, _impl_.response_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeleteHeroBuildResponse, _impl_.builds_deleted_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetActiveMatches, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetActiveMatchesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetActiveMatchesResponse, _impl_.active_matches_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetDiscordLink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetDiscordLinkResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetDiscordLinkResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetDiscordLinkResponse, _impl_.response_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetDiscordLinkResponse, _impl_.discord_link_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetDiscordLinkResponse, _impl_.valid_hours_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGrantForumAccess, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGrantForumAccess, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGrantForumAccess, _impl_.email_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGrantForumAccessResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGrantForumAccessResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGrantForumAccessResponse, _impl_.response_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGrantForumAccessResponse, _impl_.email_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGrantForumAccessResponse, _impl_.username_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGrantForumAccessResponse, _impl_.forum_password_),
  3,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModeratorRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModeratorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModeratorRequest, _impl_.account_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModeratorRequestResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModeratorRequestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModeratorRequestResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModeratorRequestResponse, _impl_.response_text_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetFriendGameStatus, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetFriendGameStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetFriendGameStatus, _impl_.include_invited_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetFriendGameStatusResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetFriendGameStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetFriendGameStatusResponse, _impl_.response_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetFriendGameStatusResponse, _impl_.friends_played_game_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetFriendGameStatusResponse, _impl_.friends_invited_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetFriendGameStatusResponse, _impl_.friends_invites_sent_),
  0,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateSpectatorStatus, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateSpectatorStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateSpectatorStatus, _impl_.spectating_lobby_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCUpdateSpectatorStatus, _impl_.stopped_spectating_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCommendPlayerFromMatch, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCommendPlayerFromMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCommendPlayerFromMatch, _impl_.match_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCommendPlayerFromMatch, _impl_.target_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCommendPlayerFromMatch, _impl_.commend_type_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCommendPlayerFromMatch, _impl_.fake_commend_hero_id_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCommendPlayerFromMatchResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCommendPlayerFromMatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCommendPlayerFromMatchResponse, _impl_.result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCommendNotification, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCommendNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCommendNotification, _impl_.commender_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCommendNotification, _impl_.commender_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCommendNotification, _impl_.commender_hero_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCommendNotification, _impl_.commend_type_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCommendNotification, _impl_.match_id_),
  1,
  0,
  2,
  4,
  3,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestCheatReports, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport, _impl_.account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport, _impl_.match_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport, _impl_.hero_id_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestCheatReportsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestCheatReportsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestCheatReportsResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestCheatReportsResponse, _impl_.cheat_reports_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroMMRRankings, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroMMRRankings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroMMRRankings, _impl_.target_account_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroMMRRankingsResponse_Hero, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroMMRRankingsResponse_Hero, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroMMRRankingsResponse_Hero, _impl_.hero_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroMMRRankingsResponse_Hero, _impl_.relative_mmr_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroMMRRankingsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroMMRRankingsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroMMRRankingsResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetHeroMMRRankingsResponse, _impl_.heroes_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetLeaderboard, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetLeaderboard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetLeaderboard, _impl_.leaderboard_region_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetLeaderboard, _impl_.hero_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry, _impl_.account_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry, _impl_.rank_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry, _impl_.top_hero_ids_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry, _impl_.badge_level_),
  0,
  1,
  ~0u,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetLeaderboardResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetLeaderboardResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetLeaderboardResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetLeaderboardResponse, _impl_.entries_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountLeaderboards, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountLeaderboards, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountLeaderboards, _impl_.account_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry, _impl_.region_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry, _impl_.hero_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry, _impl_.rank_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountLeaderboardsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountLeaderboardsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountLeaderboardsResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountLeaderboardsResponse, _impl_.account_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAccountLeaderboardsResponse, _impl_.entries_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetHideHolidayModels, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetHideHolidayModels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetHideHolidayModels, _impl_.hide_holiday_models_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetHideHolidayModelsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetHideHolidayModelsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetHideHolidayModelsResponse, _impl_.success_),
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 21, -1, sizeof(::CSOGameAccountClient)},
  { 36, 45, -1, sizeof(::CSOAccountSyncStorage)},
  { 48, 59, -1, sizeof(::CSOAccountHeroInfo)},
  { 64, -1, -1, sizeof(::CMsgCitadelClientHello)},
  { 70, 81, -1, sizeof(::CMsgClientToGCStartMatchmaking)},
  { 86, 95, -1, sizeof(::CMsgClientToGCStartMatchmakingResponse)},
  { 98, -1, -1, sizeof(::CMsgClientToGCStopMatchmaking)},
  { 104, 111, -1, sizeof(::CMsgClientToGCStopMatchmakingResponse)},
  { 112, 119, -1, sizeof(::CMsgGCToClientMatchmakingStopped)},
  { 120, 127, -1, sizeof(::CMsgClientToGCLeaveLobby)},
  { 128, -1, -1, sizeof(::CMsgClientToGCLeaveLobbyResponse)},
  { 134, 144, -1, sizeof(::CMsgClientWelcomeCitadel)},
  { 148, -1, -1, sizeof(::CMsgClientToGCIsInMatchmaking)},
  { 154, 161, -1, sizeof(::CMsgClientToGCIsInMatchmakingResponse)},
  { 162, 172, -1, sizeof(::CMsgDevMatchInfo_MatchPlayer)},
  { 176, 199, -1, sizeof(::CMsgDevMatchInfo)},
  { 216, 224, -1, sizeof(::CMsgGCToClientHeroLabsSchedule_TimeRange)},
  { 226, 237, -1, sizeof(::CMsgGCToClientHeroLabsSchedule_Schedule)},
  { 242, -1, -1, sizeof(::CMsgGCToClientHeroLabsSchedule)},
  { 249, 257, -1, sizeof(::CMsgGCToClientDevPlaytestStatus_HeroWhitelist)},
  { 259, 267, -1, sizeof(::CMsgGCToClientDevPlaytestStatus_DevQueueSize)},
  { 269, 284, -1, sizeof(::CMsgGCToClientDevPlaytestStatus)},
  { 293, 300, -1, sizeof(::CMsgGCToClientSDRTicket)},
  { 301, 308, -1, sizeof(::CMsgClientToGCReplacementSDRTicket)},
  { 309, 317, -1, sizeof(::CMsgClientToGCReplacementSDRTicketResponse)},
  { 319, 328, -1, sizeof(::CMsgClientToGCSetServerConVar)},
  { 331, 338, -1, sizeof(::CMsgClientToGCSetServerConVarResponse)},
  { 339, 348, -1, sizeof(::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey)},
  { 351, 359, -1, sizeof(::CMsgClientToGCPostMatchSurveyResponse)},
  { 361, 371, -1, sizeof(::CMsgPartyMMInfo)},
  { 375, 388, -1, sizeof(::CMsgClientToGCPartyCreate)},
  { 395, 403, -1, sizeof(::CMsgClientToGCPartyCreateResponse)},
  { 405, 412, -1, sizeof(::CMsgClientToGCPartyLeave)},
  { 413, 420, -1, sizeof(::CMsgClientToGCPartyLeaveResponse)},
  { 421, 430, -1, sizeof(::CMsgClientToGCPartyJoin)},
  { 433, 440, -1, sizeof(::CMsgClientToGCPartyJoinResponse)},
  { 441, 453, -1, sizeof(::CMsgClientToGCPartyAction)},
  { 459, 466, -1, sizeof(::CMsgClientToGCPartyActionResponse)},
  { 467, 479, -1, sizeof(::CMsgClientToGCPartySetMode)},
  { 485, 494, -1, sizeof(::CMsgClientToGCPartySetModeResponse)},
  { 497, 504, -1, sizeof(::CMsgClientToGCPartyStartMatch)},
  { 505, 513, -1, sizeof(::CMsgClientToGCPartyStartMatchResponse)},
  { 515, 523, -1, sizeof(::CMsgClientToGCPartyInviteUser)},
  { 525, 533, -1, sizeof(::CMsgClientToGCPartyInviteUserResponse)},
  { 535, 548, -1, sizeof(::CMsgGCToClientPartyEvent)},
  { 555, 562, -1, sizeof(::CMsgGCToClientCanRejoinParty)},
  { 563, 571, -1, sizeof(::CMsgClientToGCPartyJoinViaCode)},
  { 573, 581, -1, sizeof(::CMsgClientToGCPartyJoinViaCodeResponse)},
  { 583, 592, -1, sizeof(::CMsgClientToGCPartySetReadyState)},
  { 595, 602, -1, sizeof(::CMsgClientToGCPartySetReadyStateResponse)},
  { 603, 611, -1, sizeof(::CMsgClientToGCDevSetMMBias)},
  { 613, 622, -1, sizeof(::CMsgClientToGCGetMatchHistory)},
  { 625, 651, -1, sizeof(::CMsgClientToGCGetMatchHistoryResponse_Match)},
  { 671, 680, -1, sizeof(::CMsgClientToGCGetMatchHistoryResponse)},
  { 683, 692, -1, sizeof(::CMsgClientToGCSpectateUser)},
  { 695, 708, -1, sizeof(::CMsgClientToGCSpectateUserResponse)},
  { 715, 725, -1, sizeof(::CMsgClientToGCSpectateLobby)},
  { 729, 736, -1, sizeof(::CMsgClientToGCSpectateLobbyResponse)},
  { 737, 746, -1, sizeof(::CMsgClientToGCGetProfileCard)},
  { 749, 757, -1, sizeof(::CMsgCitadelProfileCard_Slot_Stat)},
  { 759, 768, -1, sizeof(::CMsgCitadelProfileCard_Slot_Hero)},
  { 771, 780, -1, sizeof(::CMsgCitadelProfileCard_Slot)},
  { 783, 792, -1, sizeof(::CMsgCitadelProfileCard)},
  { 795, 804, -1, sizeof(::CMsgClientToGCUpdateRoster)},
  { 807, 814, -1, sizeof(::CMsgClientToGCUpdateRosterResponse)},
  { 815, 824, -1, sizeof(::CMsgClientToGCGetAccountStats)},
  { 827, 835, -1, sizeof(::CMsgClientToGCGetAccountStatsResponse)},
  { 837, 846, -1, sizeof(::CMsgClientToGCGetMatchMetaData)},
  { 849, 861, -1, sizeof(::CMsgClientToGCGetMatchMetaDataResponse)},
  { 867, 880, -1, sizeof(::CMsgGCToClientDevAnnouncements_Announcement)},
  { 887, -1, -1, sizeof(::CMsgGCToClientDevAnnouncements)},
  { 894, 907, -1, sizeof(::CMsgClientToGCModifyDevAnnouncements)},
  { 914, 921, -1, sizeof(::CMsgClientToGCModifyDevAnnouncementsResponse)},
  { 922, 935, -1, sizeof(::CMsgClientToGCDevAction)},
  { 942, 949, -1, sizeof(::CMsgClientToGCDevActionResponse)},
  { 950, 960, -1, sizeof(::CMsgClientToGCRecordClientEvents_Event)},
  { 964, 972, -1, sizeof(::CMsgClientToGCRecordClientEvents)},
  { 974, 981, -1, sizeof(::CMsgClientToGCRecordClientEventsResponse)},
  { 982, 989, -1, sizeof(::CMsgClientToGCSetNewPlayerProgress)},
  { 990, 997, -1, sizeof(::CMsgClientToGCSetNewPlayerProgressResponse)},
  { 998, -1, -1, sizeof(::CMsgClientToGCUpdateAccountSync)},
  { 1006, 1013, -1, sizeof(::CMsgClientToGCUpdateAccountSyncResponse)},
  { 1014, -1, -1, sizeof(::CMsgClientToGCGetHeroChoice)},
  { 1020, 1027, -1, sizeof(::CMsgClientToGCGetHeroChoiceResponse_Hero)},
  { 1028, 1038, -1, sizeof(::CMsgClientToGCGetHeroChoiceResponse)},
  { 1042, 1050, -1, sizeof(::CMsgClientToGCUnlockHero)},
  { 1052, 1059, -1, sizeof(::CMsgClientToGCUnlockHeroResponse)},
  { 1060, 1068, -1, sizeof(::CMsgAccountBook_Unlock)},
  { 1070, 1080, -1, sizeof(::CMsgAccountBook)},
  { 1084, 1094, -1, sizeof(::CMsgClientToGCBookUnlock)},
  { 1098, 1106, -1, sizeof(::CMsgClientToGCBookUnlockResponse)},
  { 1108, 1115, -1, sizeof(::CMsgClientToGCGetBook)},
  { 1116, 1124, -1, sizeof(::CMsgClientToGCGetBookResponse)},
  { 1126, 1133, -1, sizeof(::CMsgGCToClientBookUpdated)},
  { 1134, 1142, -1, sizeof(::CMsgClientToGCSubmitPlaytestUser)},
  { 1144, 1151, -1, sizeof(::CMsgClientToGCSubmitPlaytestUserResponse)},
  { 1152, 1160, -1, sizeof(::CMsgHeroBuild_BuildModEntry)},
  { 1162, 1173, -1, sizeof(::CMsgHeroBuild_BuildModCategory)},
  { 1178, 1188, -1, sizeof(::CMsgHeroBuild_CurrencyChange)},
  { 1192, -1, -1, sizeof(::CMsgHeroBuild_AbilityOrder)},
  { 1199, 1207, -1, sizeof(::CMsgHeroBuild_Details_V0)},
  { 1209, 1225, -1, sizeof(::CMsgHeroBuild)},
  { 1235, 1242, -1, sizeof(::CMsgClientToGCUpdateHeroBuild)},
  { 1243, 1252, -1, sizeof(::CMsgClientToGCUpdateHeroBuildResponse)},
  { 1255, 1266, -1, sizeof(::CMsgClientToGCFindHeroBuilds)},
  { 1271, 1280, -1, sizeof(::CMsgHeroBuildPreference)},
  { 1283, 1297, -1, sizeof(::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult)},
  { 1305, 1313, -1, sizeof(::CMsgClientToGCFindHeroBuildsResponse)},
  { 1315, 1323, -1, sizeof(::CMsgClientToGCUpdateHeroBuildPreference)},
  { 1325, 1332, -1, sizeof(::CMsgClientToGCUpdateHeroBuildPreferenceResponse)},
  { 1333, 1340, -1, sizeof(::CMsgClientToGCGetOldHeroBuildData)},
  { 1341, -1, -1, sizeof(::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0)},
  { 1348, 1358, -1, sizeof(::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild)},
  { 1362, 1371, -1, sizeof(::CMsgClientToGCGetOldHeroBuildDataResponse)},
  { 1374, 1384, -1, sizeof(::CMsgClientToGCReportPlayerFromMatch)},
  { 1388, 1395, -1, sizeof(::CMsgClientToGCReportPlayerFromMatchResponse)},
  { 1396, 1403, -1, sizeof(::CMsgClientToGCGetAccountMatchReports)},
  { 1404, 1411, -1, sizeof(::CMsgClientToGCGetAccountMatchReportsResponse_Report)},
  { 1412, 1419, -1, sizeof(::CMsgClientToGCGetAccountMatchReportsResponse_Commend)},
  { 1420, 1429, -1, sizeof(::CMsgClientToGCGetAccountMatchReportsResponse)},
  { 1432, 1440, -1, sizeof(::CMsgClientToGCDeleteHeroBuild)},
  { 1442, 1450, -1, sizeof(::CMsgClientToGCDeleteHeroBuildResponse)},
  { 1452, -1, -1, sizeof(::CMsgClientToGCGetActiveMatches)},
  { 1458, -1, -1, sizeof(::CMsgClientToGCGetActiveMatchesResponse)},
  { 1465, -1, -1, sizeof(::CMsgClientToGCGetDiscordLink)},
  { 1471, 1480, -1, sizeof(::CMsgClientToGCGetDiscordLinkResponse)},
  { 1483, 1490, -1, sizeof(::CMsgClientToGCGrantForumAccess)},
  { 1491, 1501, -1, sizeof(::CMsgClientToGCGrantForumAccessResponse)},
  { 1505, 1512, -1, sizeof(::CMsgClientToGCModeratorRequest)},
  { 1513, 1521, -1, sizeof(::CMsgClientToGCModeratorRequestResponse)},
  { 1523, 1530, -1, sizeof(::CMsgClientToGCGetFriendGameStatus)},
  { 1531, 1541, -1, sizeof(::CMsgClientToGCGetFriendGameStatusResponse)},
  { 1545, 1553, -1, sizeof(::CMsgClientToGCUpdateSpectatorStatus)},
  { 1555, 1565, -1, sizeof(::CMsgClientToGCCommendPlayerFromMatch)},
  { 1569, 1576, -1, sizeof(::CMsgClientToGCCommendPlayerFromMatchResponse)},
  { 1577, 1588, -1, sizeof(::CMsgGCToClientCommendNotification)},
  { 1593, -1, -1, sizeof(::CMsgClientToGCRequestCheatReports)},
  { 1599, 1608, -1, sizeof(::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport)},
  { 1611, 1619, -1, sizeof(::CMsgClientToGCRequestCheatReportsResponse)},
  { 1621, 1628, -1, sizeof(::CMsgClientToGCGetHeroMMRRankings)},
  { 1629, 1637, -1, sizeof(::CMsgClientToGCGetHeroMMRRankingsResponse_Hero)},
  { 1639, 1647, -1, sizeof(::CMsgClientToGCGetHeroMMRRankingsResponse)},
  { 1649, 1657, -1, sizeof(::CMsgClientToGCGetLeaderboard)},
  { 1659, 1669, -1, sizeof(::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry)},
  { 1673, 1681, -1, sizeof(::CMsgClientToGCGetLeaderboardResponse)},
  { 1683, 1690, -1, sizeof(::CMsgClientToGCGetAccountLeaderboards)},
  { 1691, 1700, -1, sizeof(::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry)},
  { 1703, 1712, -1, sizeof(::CMsgClientToGCGetAccountLeaderboardsResponse)},
  { 1715, 1722, -1, sizeof(::CMsgClientToGCSetHideHolidayModels)},
  { 1723, 1730, -1, sizeof(::CMsgClientToGCSetHideHolidayModelsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_CSOGameAccountClient_default_instance_._instance,
  &::_CSOAccountSyncStorage_default_instance_._instance,
  &::_CSOAccountHeroInfo_default_instance_._instance,
  &::_CMsgCitadelClientHello_default_instance_._instance,
  &::_CMsgClientToGCStartMatchmaking_default_instance_._instance,
  &::_CMsgClientToGCStartMatchmakingResponse_default_instance_._instance,
  &::_CMsgClientToGCStopMatchmaking_default_instance_._instance,
  &::_CMsgClientToGCStopMatchmakingResponse_default_instance_._instance,
  &::_CMsgGCToClientMatchmakingStopped_default_instance_._instance,
  &::_CMsgClientToGCLeaveLobby_default_instance_._instance,
  &::_CMsgClientToGCLeaveLobbyResponse_default_instance_._instance,
  &::_CMsgClientWelcomeCitadel_default_instance_._instance,
  &::_CMsgClientToGCIsInMatchmaking_default_instance_._instance,
  &::_CMsgClientToGCIsInMatchmakingResponse_default_instance_._instance,
  &::_CMsgDevMatchInfo_MatchPlayer_default_instance_._instance,
  &::_CMsgDevMatchInfo_default_instance_._instance,
  &::_CMsgGCToClientHeroLabsSchedule_TimeRange_default_instance_._instance,
  &::_CMsgGCToClientHeroLabsSchedule_Schedule_default_instance_._instance,
  &::_CMsgGCToClientHeroLabsSchedule_default_instance_._instance,
  &::_CMsgGCToClientDevPlaytestStatus_HeroWhitelist_default_instance_._instance,
  &::_CMsgGCToClientDevPlaytestStatus_DevQueueSize_default_instance_._instance,
  &::_CMsgGCToClientDevPlaytestStatus_default_instance_._instance,
  &::_CMsgGCToClientSDRTicket_default_instance_._instance,
  &::_CMsgClientToGCReplacementSDRTicket_default_instance_._instance,
  &::_CMsgClientToGCReplacementSDRTicketResponse_default_instance_._instance,
  &::_CMsgClientToGCSetServerConVar_default_instance_._instance,
  &::_CMsgClientToGCSetServerConVarResponse_default_instance_._instance,
  &::_CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey_default_instance_._instance,
  &::_CMsgClientToGCPostMatchSurveyResponse_default_instance_._instance,
  &::_CMsgPartyMMInfo_default_instance_._instance,
  &::_CMsgClientToGCPartyCreate_default_instance_._instance,
  &::_CMsgClientToGCPartyCreateResponse_default_instance_._instance,
  &::_CMsgClientToGCPartyLeave_default_instance_._instance,
  &::_CMsgClientToGCPartyLeaveResponse_default_instance_._instance,
  &::_CMsgClientToGCPartyJoin_default_instance_._instance,
  &::_CMsgClientToGCPartyJoinResponse_default_instance_._instance,
  &::_CMsgClientToGCPartyAction_default_instance_._instance,
  &::_CMsgClientToGCPartyActionResponse_default_instance_._instance,
  &::_CMsgClientToGCPartySetMode_default_instance_._instance,
  &::_CMsgClientToGCPartySetModeResponse_default_instance_._instance,
  &::_CMsgClientToGCPartyStartMatch_default_instance_._instance,
  &::_CMsgClientToGCPartyStartMatchResponse_default_instance_._instance,
  &::_CMsgClientToGCPartyInviteUser_default_instance_._instance,
  &::_CMsgClientToGCPartyInviteUserResponse_default_instance_._instance,
  &::_CMsgGCToClientPartyEvent_default_instance_._instance,
  &::_CMsgGCToClientCanRejoinParty_default_instance_._instance,
  &::_CMsgClientToGCPartyJoinViaCode_default_instance_._instance,
  &::_CMsgClientToGCPartyJoinViaCodeResponse_default_instance_._instance,
  &::_CMsgClientToGCPartySetReadyState_default_instance_._instance,
  &::_CMsgClientToGCPartySetReadyStateResponse_default_instance_._instance,
  &::_CMsgClientToGCDevSetMMBias_default_instance_._instance,
  &::_CMsgClientToGCGetMatchHistory_default_instance_._instance,
  &::_CMsgClientToGCGetMatchHistoryResponse_Match_default_instance_._instance,
  &::_CMsgClientToGCGetMatchHistoryResponse_default_instance_._instance,
  &::_CMsgClientToGCSpectateUser_default_instance_._instance,
  &::_CMsgClientToGCSpectateUserResponse_default_instance_._instance,
  &::_CMsgClientToGCSpectateLobby_default_instance_._instance,
  &::_CMsgClientToGCSpectateLobbyResponse_default_instance_._instance,
  &::_CMsgClientToGCGetProfileCard_default_instance_._instance,
  &::_CMsgCitadelProfileCard_Slot_Stat_default_instance_._instance,
  &::_CMsgCitadelProfileCard_Slot_Hero_default_instance_._instance,
  &::_CMsgCitadelProfileCard_Slot_default_instance_._instance,
  &::_CMsgCitadelProfileCard_default_instance_._instance,
  &::_CMsgClientToGCUpdateRoster_default_instance_._instance,
  &::_CMsgClientToGCUpdateRosterResponse_default_instance_._instance,
  &::_CMsgClientToGCGetAccountStats_default_instance_._instance,
  &::_CMsgClientToGCGetAccountStatsResponse_default_instance_._instance,
  &::_CMsgClientToGCGetMatchMetaData_default_instance_._instance,
  &::_CMsgClientToGCGetMatchMetaDataResponse_default_instance_._instance,
  &::_CMsgGCToClientDevAnnouncements_Announcement_default_instance_._instance,
  &::_CMsgGCToClientDevAnnouncements_default_instance_._instance,
  &::_CMsgClientToGCModifyDevAnnouncements_default_instance_._instance,
  &::_CMsgClientToGCModifyDevAnnouncementsResponse_default_instance_._instance,
  &::_CMsgClientToGCDevAction_default_instance_._instance,
  &::_CMsgClientToGCDevActionResponse_default_instance_._instance,
  &::_CMsgClientToGCRecordClientEvents_Event_default_instance_._instance,
  &::_CMsgClientToGCRecordClientEvents_default_instance_._instance,
  &::_CMsgClientToGCRecordClientEventsResponse_default_instance_._instance,
  &::_CMsgClientToGCSetNewPlayerProgress_default_instance_._instance,
  &::_CMsgClientToGCSetNewPlayerProgressResponse_default_instance_._instance,
  &::_CMsgClientToGCUpdateAccountSync_default_instance_._instance,
  &::_CMsgClientToGCUpdateAccountSyncResponse_default_instance_._instance,
  &::_CMsgClientToGCGetHeroChoice_default_instance_._instance,
  &::_CMsgClientToGCGetHeroChoiceResponse_Hero_default_instance_._instance,
  &::_CMsgClientToGCGetHeroChoiceResponse_default_instance_._instance,
  &::_CMsgClientToGCUnlockHero_default_instance_._instance,
  &::_CMsgClientToGCUnlockHeroResponse_default_instance_._instance,
  &::_CMsgAccountBook_Unlock_default_instance_._instance,
  &::_CMsgAccountBook_default_instance_._instance,
  &::_CMsgClientToGCBookUnlock_default_instance_._instance,
  &::_CMsgClientToGCBookUnlockResponse_default_instance_._instance,
  &::_CMsgClientToGCGetBook_default_instance_._instance,
  &::_CMsgClientToGCGetBookResponse_default_instance_._instance,
  &::_CMsgGCToClientBookUpdated_default_instance_._instance,
  &::_CMsgClientToGCSubmitPlaytestUser_default_instance_._instance,
  &::_CMsgClientToGCSubmitPlaytestUserResponse_default_instance_._instance,
  &::_CMsgHeroBuild_BuildModEntry_default_instance_._instance,
  &::_CMsgHeroBuild_BuildModCategory_default_instance_._instance,
  &::_CMsgHeroBuild_CurrencyChange_default_instance_._instance,
  &::_CMsgHeroBuild_AbilityOrder_default_instance_._instance,
  &::_CMsgHeroBuild_Details_V0_default_instance_._instance,
  &::_CMsgHeroBuild_default_instance_._instance,
  &::_CMsgClientToGCUpdateHeroBuild_default_instance_._instance,
  &::_CMsgClientToGCUpdateHeroBuildResponse_default_instance_._instance,
  &::_CMsgClientToGCFindHeroBuilds_default_instance_._instance,
  &::_CMsgHeroBuildPreference_default_instance_._instance,
  &::_CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult_default_instance_._instance,
  &::_CMsgClientToGCFindHeroBuildsResponse_default_instance_._instance,
  &::_CMsgClientToGCUpdateHeroBuildPreference_default_instance_._instance,
  &::_CMsgClientToGCUpdateHeroBuildPreferenceResponse_default_instance_._instance,
  &::_CMsgClientToGCGetOldHeroBuildData_default_instance_._instance,
  &::_CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0_default_instance_._instance,
  &::_CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild_default_instance_._instance,
  &::_CMsgClientToGCGetOldHeroBuildDataResponse_default_instance_._instance,
  &::_CMsgClientToGCReportPlayerFromMatch_default_instance_._instance,
  &::_CMsgClientToGCReportPlayerFromMatchResponse_default_instance_._instance,
  &::_CMsgClientToGCGetAccountMatchReports_default_instance_._instance,
  &::_CMsgClientToGCGetAccountMatchReportsResponse_Report_default_instance_._instance,
  &::_CMsgClientToGCGetAccountMatchReportsResponse_Commend_default_instance_._instance,
  &::_CMsgClientToGCGetAccountMatchReportsResponse_default_instance_._instance,
  &::_CMsgClientToGCDeleteHeroBuild_default_instance_._instance,
  &::_CMsgClientToGCDeleteHeroBuildResponse_default_instance_._instance,
  &::_CMsgClientToGCGetActiveMatches_default_instance_._instance,
  &::_CMsgClientToGCGetActiveMatchesResponse_default_instance_._instance,
  &::_CMsgClientToGCGetDiscordLink_default_instance_._instance,
  &::_CMsgClientToGCGetDiscordLinkResponse_default_instance_._instance,
  &::_CMsgClientToGCGrantForumAccess_default_instance_._instance,
  &::_CMsgClientToGCGrantForumAccessResponse_default_instance_._instance,
  &::_CMsgClientToGCModeratorRequest_default_instance_._instance,
  &::_CMsgClientToGCModeratorRequestResponse_default_instance_._instance,
  &::_CMsgClientToGCGetFriendGameStatus_default_instance_._instance,
  &::_CMsgClientToGCGetFriendGameStatusResponse_default_instance_._instance,
  &::_CMsgClientToGCUpdateSpectatorStatus_default_instance_._instance,
  &::_CMsgClientToGCCommendPlayerFromMatch_default_instance_._instance,
  &::_CMsgClientToGCCommendPlayerFromMatchResponse_default_instance_._instance,
  &::_CMsgGCToClientCommendNotification_default_instance_._instance,
  &::_CMsgClientToGCRequestCheatReports_default_instance_._instance,
  &::_CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport_default_instance_._instance,
  &::_CMsgClientToGCRequestCheatReportsResponse_default_instance_._instance,
  &::_CMsgClientToGCGetHeroMMRRankings_default_instance_._instance,
  &::_CMsgClientToGCGetHeroMMRRankingsResponse_Hero_default_instance_._instance,
  &::_CMsgClientToGCGetHeroMMRRankingsResponse_default_instance_._instance,
  &::_CMsgClientToGCGetLeaderboard_default_instance_._instance,
  &::_CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry_default_instance_._instance,
  &::_CMsgClientToGCGetLeaderboardResponse_default_instance_._instance,
  &::_CMsgClientToGCGetAccountLeaderboards_default_instance_._instance,
  &::_CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry_default_instance_._instance,
  &::_CMsgClientToGCGetAccountLeaderboardsResponse_default_instance_._instance,
  &::_CMsgClientToGCSetHideHolidayModels_default_instance_._instance,
  &::_CMsgClientToGCSetHideHolidayModelsResponse_default_instance_._instance,
};

const char descriptor_table_protodef_citadel_5fgcmessages_5fclient_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037citadel_gcmessages_client.proto\032\023steam"
  "messages.proto\032\026gcsdk_gcmessages.proto\032\037"
  "citadel_gcmessages_common.proto\"\276\004\n\024CSOG"
  "ameAccountClient\022\030\n\naccount_id\030\001 \001(\rB\004\200\246"
  "\035\001\022\r\n\005flags\030\002 \001(\004\022\014\n\004wins\030\003 \001(\r\022\016\n\006losse"
  "s\030\004 \001(\r\022\r\n\005kills\030\005 \001(\r\022\033\n\023most_played_he"
  "ro_id\030\006 \001(\r\022\023\n\013permissions\030\007 \001(\004\022\033\n\023new_"
  "player_progress\030\010 \001(\004\022\033\n\023hero_unlock_cre"
  "dits\030\t \001(\r\022\024\n\014mm_ban_until\030\n \001(\r\022\027\n\017comm"
  "s_ban_until\030\013 \001(\r\022$\n\034low_priority_games_"
  "remaining\030\014 \001(\r\022\030\n\020report_ban_until\030\r \001("
  "\r\022\032\n\022ranked_badge_level\030\016 \001(\r\022)\n!hero_la"
  "bs_matches_since_test_hero\030\025 \001(\r\"\255\001\n\006EFl"
  "ags\022\020\n\014k_eDeveloper\020\001\022\030\n\024k_eExternalMode"
  "rator\020\002\022\027\n\023k_eGotInitialHeroes\020\004\022\030\n\024k_eH"
  "ideHolidayModels\020\010\022\031\n\025k_eClaimedDiscordL"
  "ink\020\020\022\023\n\017k_eClaimedForum\020 \022\024\n\020k_eAccount"
  "Banned\020@\"F\n\025CSOAccountSyncStorage\022\022\n\nacc"
  "ount_id\030\001 \001(\r\022\n\n\002id\030\002 \001(\r\022\r\n\005value\030\003 \001(\r"
  "\"\304\001\n\022CSOAccountHeroInfo\022\030\n\naccount_id\030\001 "
  "\001(\rB\004\200\246\035\001\022\017\n\007hero_id\030\002 \001(\r\022:\n\006status\030\003 \001"
  "(\0162\037.CSOAccountHeroInfo.EHeroStatus:\tk_e"
  "Locked\022\014\n\004wins\030\004 \001(\r\022\r\n\005kills\030\005 \001(\r\"*\n\013E"
  "HeroStatus\022\r\n\tk_eLocked\020\000\022\014\n\010k_eOwned\020\001\""
  "\030\n\026CMsgCitadelClientHello\"\200\002\n\036CMsgClient"
  "ToGCStartMatchmaking\022\026\n\016client_version\030\001"
  " \001(\r\0229\n\017client_platform\030\002 \001(\0162\014.EGCPlatf"
  "orm:\022k_eGCPlatform_None\022.\n\nmatch_info\030\003 "
  "\001(\0132\032.CMsgStartFindingMatchInfo\022.\n\nping_"
  "times\030\004 \001(\0132\032.CMsgRegionPingTimesClient\022"
  "+\n\006heroes\030\005 \001(\0132\033.CMsgHeroSelectionMatch"
  "Info\"\345\007\n&CMsgClientToGCStartMatchmakingR"
  "esponse\022Q\n\006result\030\001 \001(\01623.CMsgClientToGC"
  "StartMatchmakingResponse.EResultCode:\014k_"
  "EResult_OK\022\022\n\ntime_stamp\030\002 \001(\r\022\025\n\rdebug_"
  "message\030\003 \001(\t\"\274\006\n\013EResultCode\022\020\n\014k_EResu"
  "lt_OK\020\000\022!\n\035k_EResult_AlreadyFindingMatch"
  "\020\001\022 \n\034k_EResult_PartyMemberInLobby\020\002\022\"\n\036"
  "k_EResult_InvalidClientVersion\020\003\022!\n\035k_ER"
  "esult_MatchmakingDisabled\020\004\022 \n\034k_EResult"
  "_MatchmakingTooBusy\020\005\022\033\n\027k_EResult_Inter"
  "nalError\020\006\022\033\n\027k_EResult_NoRegionPings\020\007\022"
  "\025\n\021k_EResult_InParty\020\010\022\030\n\024k_EResult_Mode"
  "Locked\020\t\022\030\n\024k_EResult_ModeBanned\020\n\022#\n\037k_"
  "EResult_RegionInfoNotProvided\020\013\022$\n k_ERe"
  "sult_DurationControlBlocked\020\014\022\"\n\036k_EResu"
  "lt_InvalidHeroSelection\020\r\022\037\n\033k_EResult_H"
  "eroesNotUnlocked\020\016\022\032\n\026k_EResult_Permanen"
  "tBan\020\017\022\035\n\031k_EResult_RankedMMNotOpen\020\020\022\037\n"
  "\033k_EResult_RankedNotUnlocked\020\021\022#\n\037k_ERes"
  "ult_NoRankedWhileInLowPri\020\022\022&\n\"k_EResult"
  "_NoRankedWhileCommsBanned\020\023\022\'\n#k_EResult"
  "_NoRankedWhileReportBanned\020\024\022\037\n\033k_EResul"
  "t_HeroLabsMMNotOpen\020\025\022!\n\035k_EResult_HeroL"
  "absNotUnlocked\020\026\022%\n!k_EResult_NoHeroLabs"
  "WhileInLowPri\020\027\022\033\n\027k_EResult_AccountLock"
  "ed\020\030\"\037\n\035CMsgClientToGCStopMatchmaking\"8\n"
  "%CMsgClientToGCStopMatchmakingResponse\022\017"
  "\n\007success\030\001 \001(\010\"\362\001\n CMsgGCToClientMatchm"
  "akingStopped\022P\n\006reason\030\001 \001(\0162).CMsgGCToC"
  "lientMatchmakingStopped.EReason:\025k_EResu"
  "lt_Unspecified\"|\n\007EReason\022\031\n\025k_EResult_U"
  "nspecified\020\000\022\034\n\030k_EResult_VersionUpdated"
  "\020\001\022\032\n\026k_EResult_RankedClosed\020\002\022\034\n\030k_ERes"
  "ult_HeroLabsClosed\020\003\",\n\030CMsgClientToGCLe"
  "aveLobby\022\020\n\010lobby_id\030\001 \001(\004\"\"\n CMsgClient"
  "ToGCLeaveLobbyResponse\"\270\001\n\030CMsgClientWel"
  "comeCitadel\022\020\n\010currency\030\001 \001(\r\022\'\n\016extra_m"
  "essages\030\002 \003(\0132\017.CExtraMsgBlock\022\035\n\025compat"
  "ibility_version\030\003 \001(\r\022B\n\013region_mode\030\004 \001"
  "(\0162\023.ECitadelRegionMode:\030k_ECitadelRegio"
  "nMode_ROW\"\037\n\035CMsgClientToGCIsInMatchmaki"
  "ng\"\?\n%CMsgClientToGCIsInMatchmakingRespo"
  "nse\022\026\n\016in_matchmaking\030\001 \001(\010\"\364\005\n\020CMsgDevM"
  "atchInfo\022\022\n\nstart_time\030\001 \001(\r\022C\n\014winning_"
  "team\030\002 \001(\0162\022.ECitadelLobbyTeam:\031k_ECitad"
  "elLobbyTeam_Team0\022\020\n\010match_id\030\003 \001(\004\022.\n\007p"
  "layers\030\004 \003(\0132\035.CMsgDevMatchInfo.MatchPla"
  "yer\022\020\n\010lobby_id\030\005 \001(\006\022\030\n\020net_worth_team_"
  "0\030\t \001(\r\022\030\n\020net_worth_team_1\030\n \001(\r\022\022\n\ndur"
  "ation_s\030\013 \001(\r\022\022\n\nspectators\030\014 \001(\r\022\034\n\024ope"
  "n_spectator_slots\030\r \001(\r\022\035\n\025objectives_ma"
  "sk_team0\030\016 \001(\004\022\035\n\025objectives_mask_team1\030"
  "\017 \001(\004\022C\n\nmatch_mode\030\020 \001(\0162\022.ECitadelMatc"
  "hMode:\033k_ECitadelMatchMode_Invalid\022@\n\tga"
  "me_mode\030\021 \001(\0162\021.ECitadelGameMode:\032k_ECit"
  "adelGameMode_Invalid\022\023\n\013match_score\030\022 \001("
  "\r\022B\n\013region_mode\030\023 \001(\0162\023.ECitadelRegionM"
  "ode:\030k_ECitadelRegionMode_ROW\022\026\n\016compat_"
  "version\030\024 \001(\r\032\202\001\n\013MatchPlayer\022\022\n\naccount"
  "_id\030\001 \001(\r\022;\n\004team\030\002 \001(\0162\022.ECitadelLobbyT"
  "eam:\031k_ECitadelLobbyTeam_Team0\022\021\n\tabando"
  "ned\030\003 \001(\010\022\017\n\007hero_id\030\004 \001(\r\"\343\002\n\036CMsgGCToC"
  "lientHeroLabsSchedule\022;\n\tschedules\030\001 \003(\013"
  "2(.CMsgGCToClientHeroLabsSchedule.Schedu"
  "le\0321\n\tTimeRange\022\022\n\nstart_time\030\001 \001(\005\022\020\n\010e"
  "nd_time\030\002 \001(\005\032\320\001\n\010Schedule\022\023\n\013schedule_i"
  "d\030\001 \001(\r\022;\n\010weekends\030\002 \003(\0132).CMsgGCToClie"
  "ntHeroLabsSchedule.TimeRange\022;\n\010weekdays"
  "\030\003 \003(\0132).CMsgGCToClientHeroLabsSchedule."
  "TimeRange\022\017\n\007is_open\030\004 \001(\010\022$\n\007regions\030\005 "
  "\003(\0162\023.ECitadelRegionMode\"\215\004\n\037CMsgGCToCli"
  "entDevPlaytestStatus\022E\n\016dev_queue_size\030\001"
  " \003(\0132-.CMsgGCToClientDevPlaytestStatus.D"
  "evQueueSize\022\035\n\025dev_available_servers\030\002 \001"
  "(\r\022\025\n\ris_mm_enabled\030\004 \001(\010\022\025\n\rlocked_hero"
  "es\030\010 \001(\010\022\033\n\023party_shared_heroes\030\t \001(\010\022G\n"
  "\017hero_whitelists\030\n \003(\0132..CMsgGCToClientD"
  "evPlaytestStatus.HeroWhitelist\022\025\n\rmm_pau"
  "se_time\030\016 \001(\r\022\035\n\025valid_client_versions\030\017"
  " \003(\r\022\032\n\022active_match_count\030\025 \001(\r\0325\n\rHero"
  "Whitelist\022\017\n\007hero_id\030\001 \001(\r\022\023\n\013account_id"
  "s\030\002 \003(\r\032g\n\014DevQueueSize\022C\n\nmatch_mode\030\001 "
  "\001(\0162\022.ECitadelMatchMode:\033k_ECitadelMatch"
  "Mode_Invalid\022\022\n\nqueue_size\030\002 \001(\r\")\n\027CMsg"
  "GCToClientSDRTicket\022\016\n\006ticket\030\001 \001(\014\"6\n\"C"
  "MsgClientToGCReplacementSDRTicket\022\020\n\010lob"
  "by_id\030\001 \001(\006\"S\n*CMsgClientToGCReplacement"
  "SDRTicketResponse\022\016\n\006ticket\030\001 \001(\014\022\025\n\rerr"
  "or_message\030\002 \001(\t\"\\\n\035CMsgClientToGCSetSer"
  "verConVar\022\023\n\013convar_name\030\001 \001(\t\022\024\n\014convar"
  "_value\030\002 \001(\t\022\020\n\010lobby_id\030\003 \001(\006\"8\n%CMsgCl"
  "ientToGCSetServerConVarResponse\022\017\n\007messa"
  "ge\030\001 \001(\t\"\347\001\n%CMsgClientToGCPostMatchSurv"
  "eyResponse\022Q\n\021post_match_survey\030\001 \003(\01326."
  "CMsgClientToGCPostMatchSurveyResponse.Po"
  "stMatchSurvey\022\020\n\010match_id\030\002 \001(\004\032Y\n\017PostM"
  "atchSurvey\022\023\n\013question_id\030\001 \001(\r\022\026\n\016respo"
  "nse_value\030\002 \001(\r\022\031\n\021response_freeform\030\003 \001"
  "(\t\"\321\001\n\017CMsgPartyMMInfo\0222\n\010platform\030\001 \001(\016"
  "2\014.EGCPlatform:\022k_eGCPlatform_None\022.\n\npi"
  "ng_times\030\002 \001(\0132\032.CMsgRegionPingTimesClie"
  "nt\022\026\n\016client_version\030\003 \001(\r\022B\n\013region_mod"
  "e\030\004 \001(\0162\023.ECitadelRegionMode:\030k_ECitadel"
  "RegionMode_ROW\"\302\002\n\031CMsgClientToGCPartyCr"
  "eate\022\'\n\rparty_mm_info\030\001 \001(\0132\020.CMsgPartyM"
  "MInfo\022\031\n\021invite_account_id\030\003 \001(\r\022\032\n\022disa"
  "ble_party_code\030\004 \001(\010\022\030\n\020is_private_lobby"
  "\030\005 \001(\010\022B\n\013region_mode\030\006 \001(\0162\023.ECitadelRe"
  "gionMode:\030k_ECitadelRegionMode_ROW\022\031\n\021se"
  "rver_search_key\030\007 \001(\t\022L\n\rmm_preference\030\010"
  " \001(\0162\025.ECitadelMMPreference:\036k_ECitadelM"
  "MPreference_Invalid\"\265\003\n!CMsgClientToGCPa"
  "rtyCreateResponse\022N\n\006result\030\001 \001(\0162,.CMsg"
  "ClientToGCPartyCreateResponse.EResponse:"
  "\020k_eInternalError\022\020\n\010party_id\030\002 \001(\006\"\255\002\n\t"
  "EResponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSu"
  "ccess\020\001\022\025\n\021k_eAlreadyInParty\020\002\022\017\n\013k_eDis"
  "abled\020\003\022\025\n\021k_eInvalidVersion\020\004\022\024\n\020k_eNoR"
  "egionPings\020\005\022\016\n\nk_eTooBusy\020\006\022\022\n\016k_eRateL"
  "imited\020\007\022\021\n\rk_eNotFriends\020\010\022\034\n\030k_eRegion"
  "InfoNotProvided\020\t\022\035\n\031k_eDurationControlB"
  "locked\020\n\022\024\n\020k_eInMatchmaking\020\013\022\033\n\027k_ePla"
  "yerDoesntHaveGame\020\014\",\n\030CMsgClientToGCPar"
  "tyLeave\022\020\n\010party_id\030\001 \001(\006\"\315\001\n CMsgClient"
  "ToGCPartyLeaveResponse\022M\n\006result\030\001 \001(\0162+"
  ".CMsgClientToGCPartyLeaveResponse.ERespo"
  "nse:\020k_eInternalError\"Z\n\tEResponse\022\024\n\020k_"
  "eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\021\n\rk_eN"
  "otInParty\020\002\022\024\n\020k_eInMatchMaking\020\003\"g\n\027CMs"
  "gClientToGCPartyJoin\022\020\n\010party_id\030\001 \001(\006\022\021"
  "\n\tis_rejoin\030\002 \001(\010\022\'\n\rparty_mm_info\030\003 \001(\013"
  "2\020.CMsgPartyMMInfo\"\342\003\n\037CMsgClientToGCPar"
  "tyJoinResponse\022L\n\006result\030\001 \001(\0162*.CMsgCli"
  "entToGCPartyJoinResponse.EResponse:\020k_eI"
  "nternalError\"\360\002\n\tEResponse\022\024\n\020k_eInterna"
  "lError\020\000\022\016\n\nk_eSuccess\020\001\022\025\n\021k_eAlreadyIn"
  "Party\020\002\022\017\n\013k_eDisabled\020\003\022\025\n\021k_eInvalidPa"
  "rtyID\020\004\022\031\n\025k_eInvalidPermissions\020\005\022\025\n\021k_"
  "eInvalidVersion\020\006\022\024\n\020k_eNoRegionPings\020\007\022"
  "\016\n\nk_eTooBusy\020\010\022\022\n\016k_eInvalidCode\020\t\022\022\n\016k"
  "_eRateLimited\020\n\022\034\n\030k_eRegionInfoNotProvi"
  "ded\020\013\022\035\n\031k_eDurationControlBlocked\020\014\022\031\n\025"
  "k_ePartyInMatchMaking\020\r\022\024\n\020k_eInMatchmak"
  "ing\020\016\022\020\n\014k_ePartyFull\020\017\"\346\005\n\031CMsgClientTo"
  "GCPartyAction\022\020\n\010party_id\030\001 \001(\006\022\031\n\021targe"
  "t_account_id\030\002 \001(\r\022B\n\taction_id\030\003 \001(\0162\"."
  "CMsgClientToGCPartyAction.EAction:\013k_eKi"
  "ckUser\022\022\n\nuint_value\030\004 \001(\004\022\022\n\nbool_value"
  "\030\005 \001(\010\022\021\n\tstr_value\030\006 \001(\t\"\234\004\n\007EAction\022\017\n"
  "\013k_eKickUser\020\001\022\023\n\017k_eCancelInvite\020\002\022\026\n\022k"
  "_eCancelFindMatch\020\003\022\024\n\020k_eSetPlayerType\020"
  "\005\022\026\n\022k_eEnablePartyCode\020\007\022\024\n\020k_eSetMembe"
  "rTeam\020\010\022\022\n\016k_eSetChatMode\020\t\022\024\n\020k_eSetPla"
  "yerSlot\020\n\022\024\n\020k_eSetRegionMode\020\013\022\023\n\017k_eSe"
  "tSearchKey\020\014\022\027\n\023k_eSetBotDifficulty\020\r\022\031\n"
  "\025k_eSetRandomizedLanes\020\016\022\026\n\022k_eSetServer"
  "Region\020\017\022\031\n\025k_eSetPubliclyVisible\020\020\022\027\n\023k"
  "_eSetCheatsEnabled\020\021\022\020\n\014k_eSwapTeams\020\022\022\023"
  "\n\017k_eShuffleLobby\020\023\022\023\n\017k_eShuffleLanes\020\024"
  "\022 \n\034k_eSetDuplicateHeroesEnabled\020\025\022#\n\037k_"
  "eSetExperimentalHeroesEnabled\020\026\022\037\n\033k_eSe"
  "tDesiresLaningTogether\020\027\022\026\n\022k_eSetMMPref"
  "erence\020\030\"\220\003\n!CMsgClientToGCPartyActionRe"
  "sponse\022N\n\006result\030\001 \001(\0162,.CMsgClientToGCP"
  "artyActionResponse.EResponse:\020k_eInterna"
  "lError\"\232\002\n\tEResponse\022\024\n\020k_eInternalError"
  "\020\000\022\016\n\nk_eSuccess\020\001\022\025\n\021k_eInvalidPartyID\020"
  "\002\022\031\n\025k_eInvalidPermissions\020\003\022\024\n\020k_eInval"
  "idTarget\020\004\022\023\n\017k_eInvalidValue\020\005\022\024\n\020k_eIn"
  "MatchMaking\020\006\022\016\n\nk_eInMatch\020\007\022\017\n\013k_eDisa"
  "bled\020\010\022\016\n\nk_eTooBusy\020\t\022\022\n\016k_eRateLimited"
  "\020\n\022\035\n\031k_eCannotChangeWhileReady\020\014\022\020\n\014k_e"
  "SlotTaken\020\r\"\343\002\n\032CMsgClientToGCPartySetMo"
  "de\022\020\n\010party_id\030\001 \001(\006\022C\n\nmatch_mode\030\002 \001(\016"
  "2\022.ECitadelMatchMode:\033k_ECitadelMatchMod"
  "e_Invalid\022@\n\tgame_mode\030\003 \001(\0162\021.ECitadelG"
  "ameMode:\032k_ECitadelGameMode_Invalid\022L\n\016b"
  "ot_difficulty\030\004 \001(\0162\026.ECitadelBotDifficu"
  "lty:\034k_ECitadelBotDifficulty_None\022\032\n\022dev"
  "_server_command\030\005 \001(\t\022B\n\013region_mode\030\006 \001"
  "(\0162\023.ECitadelRegionMode:\030k_ECitadelRegio"
  "nMode_ROW\"\371\005\n\"CMsgClientToGCPartySetMode"
  "Response\022O\n\006result\030\001 \001(\0162-.CMsgClientToG"
  "CPartySetModeResponse.EResponse:\020k_eInte"
  "rnalError\022\022\n\ntime_stamp\030\002 \001(\r\022\022\n\naccount"
  "_id\030\003 \001(\r\"\331\004\n\tEResponse\022\024\n\020k_eInternalEr"
  "ror\020\000\022\016\n\nk_eSuccess\020\001\022\025\n\021k_eInvalidParty"
  "ID\020\002\022\031\n\025k_eInvalidPermissions\020\003\022\034\n\030k_ePl"
  "ayerPermanentBanned\020\004\022\023\n\017k_eInvalidValue"
  "\020\005\022\024\n\020k_eInMatchMaking\020\006\022\016\n\nk_eInMatch\020\007"
  "\022\017\n\013k_eDisabled\020\010\022\016\n\nk_eTooBusy\020\t\022\022\n\016k_e"
  "RateLimited\020\n\022\026\n\022k_eAlreadyDrafting\020\013\022\035\n"
  "\031k_eCannotChangeWhileReady\020\014\022\024\n\020k_eTooFe"
  "wPlayers\020\r\022\025\n\021k_eTooManyPlayers\020\016\022\023\n\017k_e"
  "PlayerBanned\020\017\022\025\n\021k_eTooManyHighMMR\020\020\022\033\n"
  "\027k_eFiveStacksNotAllowed\020\022\022\026\n\022k_eRankedM"
  "MNotOpen\020\023\022\030\n\024k_eRankedNotunlocked\020\024\022\030\n\024"
  "k_eHeroLabsMMNotOpen\020\025\022\032\n\026k_eHeroLabsNot"
  "Unlocked\020\026\022\036\n\032k_eNoHeroLabsWhileInLowPri"
  "\020\027\022\033\n\027k_eNoHighRangeFiveStack\020\030\022\024\n\020k_eAc"
  "countLocked\020\031\"1\n\035CMsgClientToGCPartyStar"
  "tMatch\022\020\n\010party_id\030\001 \001(\006\"\250\007\n%CMsgClientT"
  "oGCPartyStartMatchResponse\022R\n\006result\030\001 \001"
  "(\01620.CMsgClientToGCPartyStartMatchRespon"
  "se.EResponse:\020k_eInternalError\022\022\n\naccoun"
  "t_id\030\002 \001(\r\"\226\006\n\tEResponse\022\024\n\020k_eInternalE"
  "rror\020\000\022\016\n\nk_eSuccess\020\001\022\017\n\013k_eDisabled\020\002\022"
  "\025\n\021k_eInvalidPartyID\020\003\022\031\n\025k_eInvalidPerm"
  "issions\020\004\022\016\n\nk_eTooBusy\020\005\022\024\n\020k_eInMatchm"
  "aking\020\006\022\016\n\nk_eInMatch\020\007\022\025\n\021k_eInvalidVer"
  "sion\020\n\022\026\n\022k_ePlayersNotReady\020\013\022\031\n\025k_eCan"
  "notSelectRegion\020\014\022\035\n\031k_eNotAllPlayersAva"
  "ilable\020\r\022\032\n\026k_eTooManyPlayersForMM\020\016\022\037\n\033"
  "k_eTooManyPlayersForPrivate\020\017\022\035\n\031k_eTooM"
  "anySpectatorsForMM\020\020\022\"\n\036k_eTooManySpecta"
  "torsForPrivate\020\021\022\031\n\025k_eTooFewPlayersForM"
  "M\020\022\022\036\n\032k_eTooFewPlayersForPrivate\020\023\022\031\n\025k"
  "_eMismatchedVersions\020\024\022\034\n\030k_eInvalidPart"
  "yMatchMode\020\025\022\033\n\027k_ePlayerBannedFromMode\020"
  "\026\022\033\n\027k_eTooManyPlayersOnTeam\020\027\022\022\n\016k_eInv"
  "alidTeam\020\030\022\030\n\024k_eInvalidHeroLineup\020\031\022\035\n\031"
  "k_eInvalidGroupHeroLineup\020\032\022\030\n\024k_eUnassi"
  "gnedPlayers\020\033\022\026\n\022k_eRankedMMNotOpen\020\034\022\030\n"
  "\024k_eHeroLabsMMNotOpen\020\035\022\032\n\026k_eHeroLabsNo"
  "tUnlocked\020\036\022\036\n\032k_eNoHeroLabsWhileInLowPr"
  "i\020\037\"L\n\035CMsgClientToGCPartyInviteUser\022\020\n\010"
  "party_id\030\001 \001(\006\022\031\n\021invite_account_id\030\002 \001("
  "\r\"\242\003\n%CMsgClientToGCPartyInviteUserRespo"
  "nse\022R\n\006result\030\001 \001(\01620.CMsgClientToGCPart"
  "yInviteUserResponse.EResponse:\020k_eIntern"
  "alError\022\023\n\013user_online\030\002 \001(\010\"\217\002\n\tERespon"
  "se\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001"
  "\022\025\n\021k_eAlreadyInvited\020\002\022\031\n\025k_eInvalidPer"
  "missions\020\003\022\025\n\021k_eInvalidPartyID\020\004\022\017\n\013k_e"
  "Disabled\020\005\022\025\n\021k_eTooManyInvites\020\006\022\021\n\rk_e"
  "NotFriends\020\007\022\016\n\nk_eTooBusy\020\010\022\022\n\016k_eRateL"
  "imited\020\t\022\027\n\023k_eInvalidPartyMode\020\n\022\033\n\027k_e"
  "PlayerDoesntHaveGame\020\013\"\300\004\n\030CMsgGCToClien"
  "tPartyEvent\022\020\n\010party_id\030\001 \001(\006\022@\n\005event\030\002"
  " \001(\0162 .CMsgGCToClientPartyEvent.EEvent:\017"
  "k_ePlayerKicked\022\034\n\024initiator_account_id\030"
  "\003 \001(\r\022\031\n\021target_account_id\030\004 \001(\r\022\022\n\nbyte"
  "s_data\030\005 \001(\014\022\020\n\010str_data\030\006 \001(\t\022\021\n\tuint_d"
  "ata\030\007 \001(\004\"\335\002\n\006EEvent\022\023\n\017k_ePlayerKicked\020"
  "\001\022\022\n\016k_eJoinedParty\020\003\022\025\n\021k_eMatchComplet"
  "ed\020\004\022\036\n\032k_eMatchMakingStopped_User\020\005\022!\n\035"
  "k_eMatchMakingStopped_Version\020\006\022(\n$k_eMa"
  "tchMakingStopped_NoServerRegion\020\007\022\020\n\014k_e"
  "LeftParty\020\010\022\025\n\021k_eDeclinedInvite\020\t\022%\n!k_"
  "eMatchMakingStopped_FailedOther\020\n\022\026\n\022k_e"
  "DraftEnded_User\020\013\022\031\n\025k_eStartDraftMMFail"
  "ed\020\014\022#\n\037k_eMatchMakingStopped_Cancelled\020"
  "\r\"0\n\034CMsgGCToClientCanRejoinParty\022\020\n\010par"
  "ty_id\030\001 \001(\006\"\\\n\036CMsgClientToGCPartyJoinVi"
  "aCode\022\021\n\tjoin_code\030\001 \001(\004\022\'\n\rparty_mm_inf"
  "o\030\002 \001(\0132\020.CMsgPartyMMInfo\"\210\001\n&CMsgClient"
  "ToGCPartyJoinViaCodeResponse\022L\n\006result\030\001"
  " \001(\0162*.CMsgClientToGCPartyJoinResponse.E"
  "Response:\020k_eInternalError\022\020\n\010party_id\030\002"
  " \001(\006\"{\n CMsgClientToGCPartySetReadyState"
  "\022\020\n\010party_id\030\001 \001(\006\022\023\n\013ready_state\030\002 \001(\010\022"
  "0\n\013hero_roster\030\003 \001(\0132\033.CMsgHeroSelection"
  "MatchInfo\"\233\003\n(CMsgClientToGCPartySetRead"
  "yStateResponse\022U\n\006result\030\001 \001(\01623.CMsgCli"
  "entToGCPartySetReadyStateResponse.ERespo"
  "nse:\020k_eInternalError\"\227\002\n\tEResponse\022\024\n\020k"
  "_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\031\n\025k_e"
  "InvalidPermissions\020\002\022\017\n\013k_eDisabled\020\003\022\016\n"
  "\nk_eTooBusy\020\004\022\022\n\016k_eRateLimited\020\005\022\024\n\020k_e"
  "InvalidRoster\020\006\022\023\n\017k_eMatchForming\020\007\022\031\n\025"
  "k_eInvalidGroupRoster\020\010\022\016\n\nk_eInMatch\020\t\022"
  "\030\n\024k_eHeroesNotUnlocked\020\n\022\021\n\rk_eModeLock"
  "ed\020\013\022\021\n\rk_eModeBanned\020\014\"\?\n\032CMsgClientToG"
  "CDevSetMMBias\022\022\n\naccount_id\030\001 \001(\r\022\r\n\005val"
  "ue\030\002 \001(\r\"e\n\035CMsgClientToGCGetMatchHistor"
  "y\022\022\n\naccount_id\030\001 \001(\r\022\027\n\017continue_cursor"
  "\030\002 \001(\004\022\027\n\017ranked_interval\030\003 \001(\r\"\335\007\n%CMsg"
  "ClientToGCGetMatchHistoryResponse\022W\n\006res"
  "ult\030\001 \001(\0162..CMsgClientToGCGetMatchHistor"
  "yResponse.EResult:\027k_eResult_InternalErr"
  "or\022\027\n\017continue_cursor\030\002 \001(\004\022=\n\007matches\030\003"
  " \003(\0132,.CMsgClientToGCGetMatchHistoryResp"
  "onse.Match\032\314\004\n\005Match\022\020\n\010match_id\030\001 \001(\004\022\017"
  "\n\007hero_id\030\002 \001(\r\022\030\n\020match_duration_s\030\003 \001("
  "\r\022\022\n\nstart_time\030\004 \001(\r\022\024\n\014match_result\030\005 "
  "\001(\r\022B\n\013player_team\030\006 \001(\0162\022.ECitadelLobby"
  "Team:\031k_ECitadelLobbyTeam_Team0\022\024\n\014playe"
  "r_kills\030\007 \001(\r\022\025\n\rplayer_deaths\030\010 \001(\r\022\026\n\016"
  "player_assists\030\t \001(\r\022\021\n\tlast_hits\030\013 \001(\r\022"
  "\016\n\006denies\030\014 \001(\r\022\022\n\nhero_level\030\r \001(\r\022\021\n\tn"
  "et_worth\030\016 \001(\r\022\035\n\025objectives_mask_team0\030"
  "\017 \001(\004\022\035\n\025objectives_mask_team1\030\020 \001(\004\022\026\n\016"
  "team_abandoned\030\021 \001(\010\022\030\n\020abandoned_time_s"
  "\030\022 \001(\r\022C\n\nmatch_mode\030\023 \001(\0162\022.ECitadelMat"
  "chMode:\033k_ECitadelMatchMode_Invalid\022@\n\tg"
  "ame_mode\030\024 \001(\0162\021.ECitadelGameMode:\032k_ECi"
  "tadelGameMode_Invalid\022\022\n\nnot_scored\030\025 \001("
  "\010\"\263\001\n\007EResult\022\033\n\027k_eResult_InternalError"
  "\020\000\022\025\n\021k_eResult_Success\020\001\022\037\n\033k_eResult_I"
  "nvalidPermission\020\002\022!\n\035k_eResult_Temporar"
  "ilyDisabled\020\003\022\025\n\021k_eResult_TooBusy\020\004\022\031\n\025"
  "k_eResult_RateLimited\020\005\"\214\001\n\032CMsgClientTo"
  "GCSpectateUser\022\033\n\023spectate_account_id\030\001 "
  "\001(\r\022\026\n\016client_version\030\003 \001(\r\0229\n\017client_pl"
  "atform\030\004 \001(\0162\014.EGCPlatform:\022k_eGCPlatfor"
  "m_None\"\252\004\n\"CMsgClientToGCSpectateUserRes"
  "ponse\022O\n\006result\030\001 \001(\0162-.CMsgClientToGCSp"
  "ectateUserResponse.EResponse:\020k_eInterna"
  "lError\022\027\n\017server_steam_id\030\003 \001(\006\022\017\n\007sdr_k"
  "ey\030\004 \001(\014\022\026\n\016udp_connect_ip\030\005 \001(\r\022\030\n\020udp_"
  "connect_port\030\006 \001(\r\022\020\n\010lobby_id\030\007 \001(\006\022\034\n\024"
  "client_broadcast_url\030\010 \001(\t\"\246\002\n\tEResponse"
  "\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\017"
  "\n\013k_eDisabled\020\002\022\016\n\nk_eTooBusy\020\003\022\022\n\016k_eRa"
  "teLimited\020\004\022\020\n\014k_eNotInGame\020\005\022\026\n\022k_eDisa"
  "bledForGame\020\006\022\021\n\rk_eServerFull\020\007\022\021\n\rk_eN"
  "otFriends\020\010\022\034\n\030k_eRegionInfoNotProvided\020"
  "\t\022\035\n\031k_eDurationControlBlocked\020\n\022\033\n\027k_eI"
  "nvalidClientVersion\020\013\022\024\n\020k_eInvalidRegio"
  "n\020\014\"\224\001\n\033CMsgClientToGCSpectateLobby\022\020\n\010l"
  "obby_id\030\001 \001(\004\022\026\n\016client_version\030\003 \001(\r\0229\n"
  "\017client_platform\030\004 \001(\0162\014.EGCPlatform:\022k_"
  "eGCPlatform_None\022\020\n\010match_id\030\005 \001(\004\"Z\n#CM"
  "sgClientToGCSpectateLobbyResponse\0223\n\006res"
  "ult\030\001 \001(\0132#.CMsgClientToGCSpectateUserRe"
  "sponse\"g\n\034CMsgClientToGCGetProfileCard\022\022"
  "\n\naccount_id\030\001 \001(\r\022\027\n\017dev_access_hint\030\002 "
  "\001(\010\022\032\n\022friend_access_hint\030\003 \001(\010\"\356\003\n\026CMsg"
  "CitadelProfileCard\022\022\n\naccount_id\030\001 \001(\r\022+"
  "\n\005slots\030\002 \003(\0132\034.CMsgCitadelProfileCard.S"
  "lot\022\032\n\022ranked_badge_level\030\003 \001(\r\032\230\002\n\004Slot"
  "\022\017\n\007slot_id\030\001 \001(\r\022/\n\004stat\030\002 \001(\0132!.CMsgCi"
  "tadelProfileCard.Slot.Stat\022/\n\004hero\030\003 \001(\013"
  "2!.CMsgCitadelProfileCard.Slot.Hero\032]\n\004S"
  "tat\022A\n\007stat_id\030\001 \001(\0162\037.CMsgCitadelProfil"
  "eCard.EStatID:\017k_eStat_Invalid\022\022\n\nstat_s"
  "core\030\002 \001(\r\032>\n\004Hero\022\017\n\007hero_id\030\001 \001(\r\022\021\n\th"
  "ero_wins\030\002 \001(\r\022\022\n\nhero_kills\030\003 \001(\r\"\\\n\007ES"
  "tatID\022\023\n\017k_eStat_Invalid\020\000\022\020\n\014k_eStat_Wi"
  "ns\020\001\022\021\n\rk_eStat_Kills\020\002\022\027\n\023k_eStat_Games"
  "Played\020\003\"\320\001\n\032CMsgClientToGCUpdateRoster\022"
  "+\n\006heroes\030\001 \001(\0132\033.CMsgHeroSelectionMatch"
  "Info\022@\n\tgame_mode\030\002 \001(\0162\021.ECitadelGameMo"
  "de:\032k_ECitadelGameMode_Invalid\022C\n\nmatch_"
  "mode\030\003 \001(\0162\022.ECitadelMatchMode:\033k_ECitad"
  "elMatchMode_Invalid\"\244\002\n\"CMsgClientToGCUp"
  "dateRosterResponse\022O\n\006result\030\001 \001(\0162-.CMs"
  "gClientToGCUpdateRosterResponse.ERespons"
  "e:\020k_eInternalError\"\254\001\n\tEResponse\022\024\n\020k_e"
  "InternalError\020\000\022\016\n\nk_eSuccess\020\001\022\017\n\013k_eDi"
  "sabled\020\002\022\016\n\nk_eTooBusy\020\003\022\022\n\016k_eRateLimit"
  "ed\020\004\022\r\n\tk_eMMBusy\020\005\022\033\n\027k_eInvalidHeroSel"
  "ection\020\006\022\030\n\024k_eHeroesNotUnlocked\020\007\"h\n\035CM"
  "sgClientToGCGetAccountStats\022\022\n\naccount_i"
  "d\030\001 \001(\r\022\027\n\017dev_access_hint\030\002 \001(\010\022\032\n\022frie"
  "nd_access_hint\030\003 \001(\010\"\234\002\n%CMsgClientToGCG"
  "etAccountStatsResponse\022P\n\006result\030\001 \001(\0162."
  ".CMsgClientToGCGetAccountStatsResponse.E"
  "Result:\020k_eInternalError\022 \n\005stats\030\002 \001(\0132"
  "\021.CMsgAccountStats\"\177\n\007EResult\022\024\n\020k_eInte"
  "rnalError\020\000\022\016\n\nk_eSuccess\020\001\022\017\n\013k_eDisabl"
  "ed\020\002\022\016\n\nk_eTooBusy\020\003\022\022\n\016k_eRateLimited\020\004"
  "\022\031\n\025k_eInvalidPermissions\020\005\"d\n\036CMsgClien"
  "tToGCGetMatchMetaData\022\020\n\010match_id\030\001 \001(\004\022"
  "\025\n\rmetadata_salt\030\003 \001(\r\022\031\n\021target_account"
  "_id\030\004 \001(\r\"\362\003\n&CMsgClientToGCGetMatchMeta"
  "DataResponse\022X\n\006result\030\001 \001(\0162/.CMsgClien"
  "tToGCGetMatchMetaDataResponse.EResult:\027k"
  "_eResult_InternalError\022\023\n\013replay_salt\030\002 "
  "\001(\r\022\025\n\rmetadata_salt\030\003 \001(\r\022\034\n\024replay_val"
  "id_through\030\004 \001(\r\022\022\n\ncluster_id\030\005 \001(\r\022!\n\031"
  "replay_processing_through\030\006 \001(\r\"\354\001\n\007ERes"
  "ult\022\033\n\027k_eResult_InternalError\020\000\022\025\n\021k_eR"
  "esult_Success\020\001\022\037\n\033k_eResult_InvalidPerm"
  "ission\020\002\022!\n\035k_eResult_TemporarilyDisable"
  "d\020\003\022\025\n\021k_eResult_TooBusy\020\004\022\031\n\025k_eResult_"
  "RateLimited\020\005\022\032\n\026k_eResult_InvalidMatch\020"
  "\006\022\033\n\027k_eResult_MatchInFlight\020\007\"\364\001\n\036CMsgG"
  "CToClientDevAnnouncements\022C\n\rannouncemen"
  "ts\030\001 \003(\0132,.CMsgGCToClientDevAnnouncement"
  "s.Announcement\032\214\001\n\014Announcement\022\020\n\010prior"
  "ity\030\001 \001(\r\022\r\n\005title\030\002 \001(\t\022\017\n\007message\030\003 \001("
  "\t\022\013\n\003url\030\004 \001(\t\022\021\n\tunique_id\030\005 \001(\r\022\023\n\013pos"
  "ted_time\030\006 \001(\r\022\025\n\rpatch_version\030\007 \001(\t\"\232\002"
  "\n$CMsgClientToGCModifyDevAnnouncements\022N"
  "\n\toperation\030\001 \001(\01620.CMsgClientToGCModify"
  "DevAnnouncements.EOperation:\tk_eCreate\022\021"
  "\n\ttarget_id\030\002 \001(\r\022\020\n\010priority\030\003 \001(\r\022\r\n\005t"
  "itle\030\004 \001(\t\022\017\n\007message\030\005 \001(\t\022\013\n\003url\030\006 \001(\t"
  "\022\025\n\rpatch_version\030\007 \001(\t\"9\n\nEOperation\022\r\n"
  "\tk_eCreate\020\000\022\r\n\tk_eUpdate\020\001\022\r\n\tk_eDelete"
  "\020\002\"\342\001\n,CMsgClientToGCModifyDevAnnounceme"
  "ntsResponse\022Q\n\006result\030\001 \001(\01625.CMsgClient"
  "ToGCModifyDevAnnouncementsResponse.EResu"
  "lt:\nk_eSuccess\"_\n\007EResult\022\016\n\nk_eSuccess\020"
  "\000\022\030\n\024k_eInvalidPermission\020\001\022\024\n\020k_eInvali"
  "dTarget\020\002\022\024\n\020k_eInternalError\020\003\"\354\003\n\027CMsg"
  "ClientToGCDevAction\022A\n\006action\030\001 \001(\0162 .CM"
  "sgClientToGCDevAction.EAction:\017k_eSetDev"
  "eloper\022\022\n\naccount_id\030\002 \001(\r\022\022\n\nuint_value"
  "\030\003 \001(\r\022\021\n\tint_value\030\004 \001(\005\022\022\n\nbool_value\030"
  "\005 \001(\010\022\021\n\tstr_value\030\006 \001(\t\022\020\n\010match_id\030\007 \001"
  "(\004\"\231\002\n\007EAction\022\023\n\017k_eSetDeveloper\020\001\022\r\n\tk"
  "_eSetMMR\020\002\022\030\n\024k_eSetMMRUncertainty\020\003\022\024\n\020"
  "k_eSetHeroStatus\020\004\022\024\n\020k_eSetPermission\020\005"
  "\022\033\n\027k_eSetNewPlayerProgress\020\006\022\032\n\026k_eForc"
  "eAccountStorage\020\007\022\020\n\014k_eBookReset\020\t\022\022\n\016k"
  "_eBookXPGrant\020\n\022\021\n\rk_eBanAccount\020\013\022\027\n\023k_"
  "eExonerateAccount\020\014\022\031\n\025k_eRequireAccount"
  "InMM\020\r\"\310\001\n\037CMsgClientToGCDevActionRespon"
  "se\022D\n\006result\030\001 \001(\0162(.CMsgClientToGCDevAc"
  "tionResponse.EResult:\nk_eSuccess\"_\n\007ERes"
  "ult\022\016\n\nk_eSuccess\020\000\022\030\n\024k_eInvalidPermiss"
  "ion\020\001\022\024\n\020k_eInvalidTarget\020\002\022\024\n\020k_eIntern"
  "alError\020\003\"\207\002\n CMsgClientToGCRecordClient"
  "Events\0227\n\006events\030\001 \003(\0132\'.CMsgClientToGCR"
  "ecordClientEvents.Event\022\030\n\020client_run_to"
  "ken\030\002 \001(\r\032\217\001\n\005Event\022\022\n\ntime_stamp\030\001 \001(\r\022"
  "B\n\010event_id\030\002 \001(\0162\033.ECitadelClientAccoun"
  "tEvent:\023k_eLaunchedHeroTest\022\022\n\nevent_dat"
  "a\030\003 \001(\004\022\032\n\022client_event_index\030\004 \001(\r\";\n(C"
  "MsgClientToGCRecordClientEventsResponse\022"
  "\017\n\007success\030\001 \001(\010\"w\n\"CMsgClientToGCSetNew"
  "PlayerProgress\022Q\n\004flag\030\001 \001(\0162\036.ECitadelN"
  "ewPlayerProgressFlag:#k_eNewPlayerProgre"
  "ss_GettingStarted\"=\n*CMsgClientToGCSetNe"
  "wPlayerProgressResponse\022\017\n\007success\030\001 \001(\010"
  "\">\n\037CMsgClientToGCUpdateAccountSync\022\013\n\003i"
  "ds\030\001 \003(\r\022\016\n\006values\030\002 \003(\r\"\352\001\n\'CMsgClientT"
  "oGCUpdateAccountSyncResponse\022T\n\006result\030\001"
  " \001(\01622.CMsgClientToGCUpdateAccountSyncRe"
  "sponse.EResponse:\020k_eInternalError\"i\n\tER"
  "esponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSucc"
  "ess\020\001\022\017\n\013k_eDisabled\020\002\022\016\n\nk_eTooBusy\020\003\022\025"
  "\n\021k_eInvalidMessage\020\004\"\035\n\033CMsgClientToGCG"
  "etHeroChoice\"\212\003\n#CMsgClientToGCGetHeroCh"
  "oiceResponse\022H\n\006result\030\001 \001(\0162,.CMsgClien"
  "tToGCGetHeroChoiceResponse.EResult:\nk_eS"
  "uccess\022B\n\017hero_selections\030\002 \003(\0132).CMsgCl"
  "ientToGCGetHeroChoiceResponse.Hero\022\026\n\016he"
  "ro_choice_id\030\003 \001(\r\022\024\n\014select_count\030\004 \001(\r"
  "\032\027\n\004Hero\022\017\n\007hero_id\030\001 \001(\r\"\215\001\n\007EResult\022\016\n"
  "\nk_eSuccess\020\000\022\020\n\014k_eNoChoices\020\001\022\024\n\020k_eIn"
  "validTarget\020\002\022\024\n\020k_eInternalError\020\003\022\017\n\013k"
  "_eDisabled\020\004\022\016\n\nk_eTooBusy\020\005\022\023\n\017k_eChoic"
  "eClosed\020\006\"D\n\030CMsgClientToGCUnlockHero\022\020\n"
  "\010hero_ids\030\001 \003(\r\022\026\n\016hero_choice_id\030\002 \001(\r\""
  "\341\001\n CMsgClientToGCUnlockHeroResponse\022E\n\006"
  "result\030\001 \001(\0162).CMsgClientToGCUnlockHeroR"
  "esponse.EResult:\nk_eSuccess\"v\n\007EResult\022\016"
  "\n\nk_eSuccess\020\000\022\024\n\020k_eInternalError\020\001\022\022\n\016"
  "k_eInvalidHero\020\002\022\020\n\014k_eOutOfSync\020\003\022\017\n\013k_"
  "eDisabled\020\004\022\016\n\nk_eTooBusy\020\005\"\233\001\n\017CMsgAcco"
  "untBook\022\017\n\007book_id\030\001 \001(\r\022\017\n\007book_xp\030\002 \001("
  "\r\022\020\n\010spent_xp\030\003 \001(\r\022(\n\007unlocks\030\004 \003(\0132\027.C"
  "MsgAccountBook.Unlock\032*\n\006Unlock\022\021\n\tunloc"
  "k_id\030\001 \001(\r\022\r\n\005flags\030\002 \001(\r\"m\n\030CMsgClientT"
  "oGCBookUnlock\022\017\n\007book_id\030\001 \001(\r\022\021\n\tunlock"
  "_id\030\002 \001(\r\022\025\n\rexpected_cost\030\003 \001(\r\022\026\n\016clie"
  "nt_version\030\004 \001(\r\"\251\002\n CMsgClientToGCBookU"
  "nlockResponse\022E\n\006result\030\001 \001(\0162).CMsgClie"
  "ntToGCBookUnlockResponse.EResult:\nk_eSuc"
  "cess\022&\n\014updated_book\030\002 \001(\0132\020.CMsgAccount"
  "Book\"\225\001\n\007EResult\022\016\n\nk_eSuccess\020\000\022\024\n\020k_eI"
  "nternalError\020\001\022\026\n\022k_eOutOfDateClient\020\002\022\023"
  "\n\017k_eInvalidFunds\020\003\022\017\n\013k_eDisabled\020\004\022\016\n\n"
  "k_eTooBusy\020\005\022\026\n\022k_eAlreadyUnlocked\020\006\"(\n\025"
  "CMsgClientToGCGetBook\022\017\n\007book_id\030\001 \001(\r\"\351"
  "\001\n\035CMsgClientToGCGetBookResponse\022B\n\006resu"
  "lt\030\001 \001(\0162&.CMsgClientToGCGetBookResponse"
  ".EResult:\nk_eSuccess\022\036\n\004book\030\002 \001(\0132\020.CMs"
  "gAccountBook\"d\n\007EResult\022\016\n\nk_eSuccess\020\000\022"
  "\024\n\020k_eInternalError\020\001\022\022\n\016k_eInvalidBook\020"
  "\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTooBusy\020\004\";\n\031CM"
  "sgGCToClientBookUpdated\022\036\n\004book\030\001 \001(\0132\020."
  "CMsgAccountBook\"O\n CMsgClientToGCSubmitP"
  "laytestUser\022\020\n\010location\030\003 \001(\t\022\031\n\021target_"
  "account_id\030\004 \001(\r\"\342\002\n(CMsgClientToGCSubmi"
  "tPlaytestUserResponse\022X\n\010response\030\001 \001(\0162"
  "3.CMsgClientToGCSubmitPlaytestUserRespon"
  "se.EResponse:\021eResponse_Success\"\333\001\n\tERes"
  "ponse\022\025\n\021eResponse_Success\020\000\022\033\n\027eRespons"
  "e_InternalError\020\001\022\033\n\027eResponse_InvalidFr"
  "iend\020\003\022\"\n\036eResponse_NotFriendsLongEnough"
  "\020\004\022\034\n\030eResponse_AlreadyHasGame\020\005\022\031\n\025eRes"
  "ponse_LimitedUser\020\006\022 \n\034eResponse_InviteL"
  "imitReached\020\007\"\335\005\n\rCMsgHeroBuild\022\025\n\rhero_"
  "build_id\030\001 \001(\r\022\017\n\007hero_id\030\002 \001(\r\022\031\n\021autho"
  "r_account_id\030\003 \001(\r\022\036\n\026last_updated_times"
  "tamp\030\004 \001(\r\022\014\n\004name\030\005 \001(\t\022\023\n\013description\030"
  "\006 \001(\t\022\020\n\010language\030\007 \001(\r\022\017\n\007version\030\010 \001(\r"
  "\022\027\n\017origin_build_id\030\t \001(\r\022*\n\007details\030\n \001"
  "(\0132\031.CMsgHeroBuild.Details_V0\0327\n\rBuildMo"
  "dEntry\022\022\n\nability_id\030\001 \001(\r\022\022\n\nannotation"
  "\030\002 \001(\t\032\200\001\n\020BuildModCategory\022*\n\004mods\030\001 \003("
  "\0132\034.CMsgHeroBuild.BuildModEntry\022\014\n\004name\030"
  "\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\r\n\005width\030\004 \001("
  "\002\022\016\n\006height\030\005 \001(\002\032^\n\016CurrencyChange\022\022\n\na"
  "bility_id\030\001 \001(\r\022\025\n\rcurrency_type\030\002 \001(\005\022\r"
  "\n\005delta\030\003 \001(\005\022\022\n\nannotation\030\004 \001(\t\032G\n\014Abi"
  "lityOrder\0227\n\020currency_changes\030\001 \003(\0132\035.CM"
  "sgHeroBuild.CurrencyChange\032y\n\nDetails_V0"
  "\0227\n\016mod_categories\030\001 \003(\0132\037.CMsgHeroBuild"
  ".BuildModCategory\0222\n\rability_order\030\002 \001(\013"
  "2\033.CMsgHeroBuild.AbilityOrder\"C\n\035CMsgCli"
  "entToGCUpdateHeroBuild\022\"\n\nhero_build\030\001 \001"
  "(\0132\016.CMsgHeroBuild\"\330\001\n%CMsgClientToGCUpd"
  "ateHeroBuildResponse\022T\n\010response\030\001 \001(\01620"
  ".CMsgClientToGCUpdateHeroBuildResponse.E"
  "Response:\020k_eInternalError\022\025\n\rhero_build"
  "_id\030\002 \001(\r\022\017\n\007version\030\003 \001(\r\"1\n\tEResponse\022"
  "\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\"\210\001"
  "\n\034CMsgClientToGCFindHeroBuilds\022\031\n\021author"
  "_account_id\030\001 \001(\r\022\017\n\007hero_id\030\002 \001(\r\022\020\n\010la"
  "nguage\030\003 \003(\005\022\023\n\013search_text\030\004 \001(\t\022\025\n\rher"
  "o_build_id\030\005 \001(\r\"O\n\027CMsgHeroBuildPrefere"
  "nce\022\021\n\tfavorited\030\001 \001(\010\022\017\n\007ignored\030\002 \001(\010\022"
  "\020\n\010reported\030\003 \001(\010\"\201\004\n$CMsgClientToGCFind"
  "HeroBuildsResponse\022S\n\010response\030\001 \001(\0162/.C"
  "MsgClientToGCFindHeroBuildsResponse.ERes"
  "ponse:\020k_eInternalError\022F\n\007results\030\002 \003(\013"
  "25.CMsgClientToGCFindHeroBuildsResponse."
  "HeroBuildResult\032\370\001\n\017HeroBuildResult\022\"\n\nh"
  "ero_build\030\001 \001(\0132\016.CMsgHeroBuild\022,\n\nprefe"
  "rence\030\002 \001(\0132\030.CMsgHeroBuildPreference\022\025\n"
  "\rnum_favorites\030\003 \001(\r\022\023\n\013num_ignores\030\004 \001("
  "\r\022\023\n\013num_reports\030\005 \001(\r\022\034\n\024num_weekly_fav"
  "orites\030\006 \001(\r\022\033\n\023num_daily_favorites\030\007 \001("
  "\r\022\027\n\017rollup_category\030\010 \001(\r\"A\n\tEResponse\022"
  "\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n"
  "\nk_eTooBusy\020\002\"n\n\'CMsgClientToGCUpdateHer"
  "oBuildPreference\022\025\n\rhero_build_id\030\001 \001(\r\022"
  ",\n\npreference\030\002 \001(\0132\030.CMsgHeroBuildPrefe"
  "rence\"\304\001\n/CMsgClientToGCUpdateHeroBuildP"
  "referenceResponse\022^\n\010response\030\001 \001(\0162:.CM"
  "sgClientToGCUpdateHeroBuildPreferenceRes"
  "ponse.EResponse:\020k_eInternalError\"1\n\tERe"
  "sponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSucce"
  "ss\020\001\">\n!CMsgClientToGCGetOldHeroBuildDat"
  "a\022\031\n\021author_account_id\030\001 \001(\r\"\333\003\n)CMsgCli"
  "entToGCGetOldHeroBuildDataResponse\022X\n\010re"
  "sponse\030\001 \001(\01624.CMsgClientToGCGetOldHeroB"
  "uildDataResponse.EResponse:\020k_eInternalE"
  "rror\022\031\n\021author_account_id\030\002 \001(\r\022D\n\007resul"
  "ts\030\003 \003(\01323.CMsgClientToGCGetOldHeroBuild"
  "DataResponse.OldBuild\0324\n\rOldDetails_V0\022#"
  "\n\033recommended_mod_ability_ids\030\001 \003(\r\032\211\001\n\010"
  "OldBuild\022\014\n\004name\030\001 \001(\t\022\017\n\007hero_id\030\002 \001(\r\022"
  "\023\n\013description\030\003 \001(\t\022I\n\007details\030\004 \001(\01328."
  "CMsgClientToGCGetOldHeroBuildDataRespons"
  "e.OldDetails_V0\"1\n\tEResponse\022\024\n\020k_eInter"
  "nalError\020\000\022\016\n\nk_eSuccess\020\001\"\337\002\n#CMsgClien"
  "tToGCReportPlayerFromMatch\022\020\n\010match_id\030\001"
  " \001(\004\022\031\n\021target_account_id\030\002 \001(\r\022U\n\013repor"
  "t_type\030\003 \001(\01620.CMsgClientToGCReportPlaye"
  "rFromMatch.EReportType:\016k_eReport_None\022\023"
  "\n\013report_text\030\004 \001(\t\"\236\001\n\013EReportType\022\022\n\016k"
  "_eReport_None\020\000\022\027\n\023k_eReport_VoiceChat\020\001"
  "\022\026\n\022k_eReport_Griefing\020\002\022\027\n\023k_eReport_Le"
  "ftMatch\020\003\022\031\n\025k_eReport_Matchmaking\020\004\022\026\n\022"
  "k_eReport_Cheating\020\005\"\340\002\n+CMsgClientToGCR"
  "eportPlayerFromMatchResponse\022Z\n\010response"
  "\030\001 \001(\01626.CMsgClientToGCReportPlayerFromM"
  "atchResponse.EResponse:\020k_eInternalError"
  "\"\324\001\n\tEResponse\022\024\n\020k_eInternalError\020\000\022\016\n\n"
  "k_eSuccess\020\001\022\022\n\016k_eRateLimited\020\002\022\026\n\022k_eA"
  "lreadyReported\020\003\022\017\n\013k_eDisabled\020\004\022\031\n\025k_e"
  "InvalidPermissions\020\005\022\035\n\031k_eReportingWind"
  "owExpired\020\006\022\016\n\nk_eTooBusy\020\007\022\032\n\026k_eBanned"
  "FromReporting\020\010\"8\n$CMsgClientToGCGetAcco"
  "untMatchReports\022\020\n\010match_id\030\001 \001(\004\"\254\003\n,CM"
  "sgClientToGCGetAccountMatchReportsRespon"
  "se\022[\n\010response\030\001 \001(\01627.CMsgClientToGCGet"
  "AccountMatchReportsResponse.EResponse:\020k"
  "_eInternalError\022E\n\007reports\030\002 \003(\01324.CMsgC"
  "lientToGCGetAccountMatchReportsResponse."
  "Report\022G\n\010commends\030\003 \003(\01325.CMsgClientToG"
  "CGetAccountMatchReportsResponse.Commend\032"
  "\034\n\006Report\022\022\n\naccount_id\030\001 \001(\r\032\035\n\007Commend"
  "\022\022\n\naccount_id\030\001 \001(\r\"R\n\tEResponse\022\024\n\020k_e"
  "InternalError\020\000\022\016\n\nk_eSuccess\020\001\022\017\n\013k_eDi"
  "sabled\020\004\022\016\n\nk_eTooBusy\020\007\"Q\n\035CMsgClientTo"
  "GCDeleteHeroBuild\022\031\n\021author_account_id\030\001"
  " \001(\r\022\025\n\rhero_build_id\030\002 \001(\r\"\310\001\n%CMsgClie"
  "ntToGCDeleteHeroBuildResponse\022T\n\010respons"
  "e\030\001 \001(\01620.CMsgClientToGCDeleteHeroBuildR"
  "esponse.EResponse:\020k_eInternalError\022\026\n\016b"
  "uilds_deleted\030\002 \001(\r\"1\n\tEResponse\022\024\n\020k_eI"
  "nternalError\020\000\022\016\n\nk_eSuccess\020\001\" \n\036CMsgCl"
  "ientToGCGetActiveMatches\"S\n&CMsgClientTo"
  "GCGetActiveMatchesResponse\022)\n\016active_mat"
  "ches\030\001 \003(\0132\021.CMsgDevMatchInfo\"\036\n\034CMsgCli"
  "entToGCGetDiscordLink\"\230\002\n$CMsgClientToGC"
  "GetDiscordLinkResponse\022S\n\010response\030\001 \001(\016"
  "2/.CMsgClientToGCGetDiscordLinkResponse."
  "EResponse:\020k_eInternalError\022\024\n\014discord_l"
  "ink\030\002 \001(\t\022\023\n\013valid_hours\030\003 \001(\r\"p\n\tERespo"
  "nse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020"
  "\001\022\025\n\021k_eDiscordTooBusy\020\002\022\025\n\021k_eAlreadyCl"
  "aimed\020\003\022\017\n\013k_eDisabled\020\004\"/\n\036CMsgClientTo"
  "GCGrantForumAccess\022\r\n\005email\030\001 \001(\t\"\245\002\n&CM"
  "sgClientToGCGrantForumAccessResponse\022U\n\010"
  "response\030\001 \001(\01621.CMsgClientToGCGrantForu"
  "mAccessResponse.EResponse:\020k_eInternalEr"
  "ror\022\r\n\005email\030\002 \001(\t\022\020\n\010username\030\003 \001(\t\022\026\n\016"
  "forum_password\030\004 \001(\t\"k\n\tEResponse\022\024\n\020k_e"
  "InternalError\020\000\022\016\n\nk_eSuccess\020\001\022\025\n\021k_eAl"
  "readyClaimed\020\002\022\017\n\013k_eDisabled\020\003\022\020\n\014k_eEm"
  "ailUsed\020\004\"4\n\036CMsgClientToGCModeratorRequ"
  "est\022\022\n\naccount_id\030\001 \001(\r\"P\n&CMsgClientToG"
  "CModeratorRequestResponse\022\017\n\007success\030\001 \001"
  "(\010\022\025\n\rresponse_text\030\002 \003(\t\"<\n!CMsgClientT"
  "oGCGetFriendGameStatus\022\027\n\017include_invite"
  "d\030\001 \001(\010\"\271\002\n)CMsgClientToGCGetFriendGameS"
  "tatusResponse\022X\n\010response\030\001 \001(\01624.CMsgCl"
  "ientToGCGetFriendGameStatusResponse.ERes"
  "ponse:\020k_eInternalError\022\037\n\023friends_playe"
  "d_game\030\002 \003(\rB\002\020\001\022\033\n\017friends_invited\030\003 \003("
  "\rB\002\020\001\022 \n\024friends_invites_sent\030\004 \003(\rB\002\020\001\""
  "R\n\tEResponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_"
  "eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisable"
  "d\020\003\"^\n#CMsgClientToGCUpdateSpectatorStat"
  "us\022\033\n\023spectating_lobby_id\030\001 \001(\006\022\032\n\022stopp"
  "ed_spectating\030\002 \001(\010\"\242\001\n$CMsgClientToGCCo"
  "mmendPlayerFromMatch\022\020\n\010match_id\030\001 \001(\004\022\031"
  "\n\021target_account_id\030\002 \001(\r\022/\n\014commend_typ"
  "e\030\003 \001(\0162\r.ECommendType:\nk_eInvalid\022\034\n\024fa"
  "ke_commend_hero_id\030\004 \001(\r\"\361\001\n,CMsgClientT"
  "oGCCommendPlayerFromMatchResponse\022Y\n\006res"
  "ult\030\001 \001(\01627.CMsgClientToGCCommendPlayerF"
  "romMatchResponse.EResponse:\020k_eInternalE"
  "rror\"f\n\tEResponse\022\024\n\020k_eInternalError\020\000\022"
  "\016\n\nk_eSuccess\020\001\022\017\n\013k_eDisabled\020\002\022\016\n\nk_eT"
  "ooBusy\020\003\022\022\n\016k_eRateLimited\020\004\"\267\001\n!CMsgGCT"
  "oClientCommendNotification\022\034\n\024commender_"
  "account_id\030\001 \001(\r\022\026\n\016commender_name\030\002 \001(\t"
  "\022\031\n\021commender_hero_id\030\004 \001(\r\022/\n\014commend_t"
  "ype\030\005 \001(\0162\r.ECommendType:\nk_eInvalid\022\020\n\010"
  "match_id\030\006 \001(\004\"#\n!CMsgClientToGCRequestC"
  "heatReports\"\347\002\n)CMsgClientToGCRequestChe"
  "atReportsResponse\022N\n\006result\030\001 \001(\01622.CMsg"
  "ClientToGCRequestCheatReportsResponse.ER"
  "esult:\nk_eSuccess\022S\n\rcheat_reports\030\002 \003(\013"
  "2<.CMsgClientToGCRequestCheatReportsResp"
  "onse.RecentCheatReport\032J\n\021RecentCheatRep"
  "ort\022\022\n\naccount_id\030\001 \001(\r\022\020\n\010match_id\030\002 \001("
  "\004\022\017\n\007hero_id\030\003 \001(\r\"I\n\007EResult\022\016\n\nk_eSucc"
  "ess\020\000\022\030\n\024k_eInvalidPermission\020\001\022\024\n\020k_eIn"
  "ternalError\020\002\"=\n CMsgClientToGCGetHeroMM"
  "RRankings\022\031\n\021target_account_id\030\001 \001(\r\"\303\002\n"
  "(CMsgClientToGCGetHeroMMRRankingsRespons"
  "e\022M\n\006result\030\001 \001(\01621.CMsgClientToGCGetHer"
  "oMMRRankingsResponse.EResult:\nk_eSuccess"
  "\022>\n\006heroes\030\002 \003(\0132..CMsgClientToGCGetHero"
  "MMRRankingsResponse.Hero\032-\n\004Hero\022\017\n\007hero"
  "_id\030\001 \001(\r\022\024\n\014relative_mmr\030\002 \001(\005\"Y\n\007EResu"
  "lt\022\016\n\nk_eSuccess\020\000\022\030\n\024k_eInvalidPermissi"
  "on\020\001\022\024\n\020k_eInternalError\020\002\022\016\n\nk_eTooBusy"
  "\020\003\"\211\001\n\034CMsgClientToGCGetLeaderboard\022X\n\022l"
  "eaderboard_region\030\001 \001(\0162\032.ECitadelLeader"
  "boardRegion: k_ECitadelLeaderboardRegion"
  "_None\022\017\n\007hero_id\030\002 \001(\r\"\367\002\n$CMsgClientToG"
  "CGetLeaderboardResponse\022I\n\006result\030\001 \001(\0162"
  "-.CMsgClientToGCGetLeaderboardResponse.E"
  "Result:\nk_eSuccess\022G\n\007entries\030\002 \003(\01326.CM"
  "sgClientToGCGetLeaderboardResponse.Leade"
  "rboardEntry\032a\n\020LeaderboardEntry\022\024\n\014accou"
  "nt_name\030\001 \001(\t\022\014\n\004rank\030\002 \001(\r\022\024\n\014top_hero_"
  "ids\030\003 \003(\r\022\023\n\013badge_level\030\004 \001(\r\"X\n\007EResul"
  "t\022\016\n\nk_eSuccess\020\000\022\027\n\023k_eInvalidArguments"
  "\020\001\022\024\n\020k_eInternalError\020\002\022\016\n\nk_eTooBusy\020\003"
  "\":\n$CMsgClientToGCGetAccountLeaderboards"
  "\022\022\n\naccount_id\030\001 \001(\r\"\304\003\n,CMsgClientToGCG"
  "etAccountLeaderboardsResponse\022Q\n\006result\030"
  "\001 \001(\01625.CMsgClientToGCGetAccountLeaderbo"
  "ardsResponse.EResult:\nk_eSuccess\022\024\n\014acco"
  "unt_name\030\002 \001(\t\022O\n\007entries\030\003 \003(\0132>.CMsgCl"
  "ientToGCGetAccountLeaderboardsResponse.L"
  "eaderboardEntry\032\177\n\020LeaderboardEntry\022L\n\006r"
  "egion\030\001 \001(\0162\032.ECitadelLeaderboardRegion:"
  " k_ECitadelLeaderboardRegion_None\022\017\n\007her"
  "o_id\030\002 \001(\r\022\014\n\004rank\030\003 \001(\r\"Y\n\007EResult\022\016\n\nk"
  "_eSuccess\020\000\022\030\n\024k_eInvalidPermission\020\001\022\024\n"
  "\020k_eInternalError\020\002\022\016\n\nk_eTooBusy\020\003\"A\n\"C"
  "MsgClientToGCSetHideHolidayModels\022\033\n\023hid"
  "e_holiday_models\030\001 \001(\010\"=\n*CMsgClientToGC"
  "SetHideHolidayModelsResponse\022\017\n\007success\030"
  "\001 \001(\010*\237&\n\030EGCCitadelClientMessages\022%\n k_"
  "EMsgClientToGCStartMatchmaking\020\262F\022-\n(k_E"
  "MsgClientToGCStartMatchmakingResponse\020\263F"
  "\022$\n\037k_EMsgClientToGCStopMatchmaking\020\264F\022,"
  "\n\'k_EMsgClientToGCStopMatchmakingRespons"
  "e\020\265F\022\'\n\"k_EMsgGCToClientMatchmakingStopp"
  "ed\020\266F\022\037\n\032k_EMsgClientToGCLeaveLobby\020\267F\022\'"
  "\n\"k_EMsgClientToGCLeaveLobbyResponse\020\270F\022"
  "$\n\037k_EMsgClientToGCIsInMatchmaking\020\271F\022,\n"
  "\'k_EMsgClientToGCIsInMatchmakingResponse"
  "\020\272F\022&\n!k_EMsgGCToClientDevPlaytestStatus"
  "\020\273F\022!\n\034k_EMsgClientToGCDevSetMMBias\020\277F\022#"
  "\n\036k_EMsgClientToGCGetProfileCard\020\300F\022+\n&k"
  "_EMsgClientToGCGetProfileCardResponse\020\301F"
  "\022!\n\034k_EMsgClientToGCUpdateRoster\020\302F\022)\n$k"
  "_EMsgClientToGCUpdateRosterResponse\020\303F\022\'"
  "\n\"k_EMsgGCToClientProfileCardUpdated\020\304F\022"
  "%\n k_EMsgGCToClientDevAnnouncements\020\305F\022+"
  "\n&k_EMsgClientToGCModifyDevAnnouncements"
  "\020\306F\0223\n.k_EMsgClientToGCModifyDevAnnounce"
  "mentsResponse\020\307F\022\036\n\031k_EMsgGCToClientSDRT"
  "icket\020\214G\022)\n$k_EMsgClientToGCReplacementS"
  "DRTicket\020\215G\0221\n,k_EMsgClientToGCReplaceme"
  "ntSDRTicketResponse\020\216G\022$\n\037k_EMsgClientTo"
  "GCSetServerConVar\020\223G\022,\n\'k_EMsgClientToGC"
  "SetServerConVarResponse\020\224G\022\"\n\035k_EMsgClie"
  "ntToGCSpectateLobby\020\225G\022*\n%k_EMsgClientTo"
  "GCSpectateLobbyResponse\020\226G\022,\n\'k_EMsgClie"
  "ntToGCPostMatchSurveyResponse\020\227G\022$\n\037k_EM"
  "sgClientToGCGetMatchHistory\020\230G\022,\n\'k_EMsg"
  "ClientToGCGetMatchHistoryResponse\020\231G\022!\n\034"
  "k_EMsgClientToGCSpectateUser\020\234G\022)\n$k_EMs"
  "gClientToGCSpectateUserResponse\020\235G\022 \n\033k_"
  "EMsgClientToGCPartyCreate\020\243G\022(\n#k_EMsgCl"
  "ientToGCPartyCreateResponse\020\244G\022\037\n\032k_EMsg"
  "ClientToGCPartyLeave\020\245G\022\'\n\"k_EMsgClientT"
  "oGCPartyLeaveResponse\020\246G\022\036\n\031k_EMsgClient"
  "ToGCPartyJoin\020\247G\022&\n!k_EMsgClientToGCPart"
  "yJoinResponse\020\250G\022 \n\033k_EMsgClientToGCPart"
  "yAction\020\251G\022(\n#k_EMsgClientToGCPartyActio"
  "nResponse\020\252G\022$\n\037k_EMsgClientToGCPartySta"
  "rtMatch\020\253G\022,\n\'k_EMsgClientToGCPartyStart"
  "MatchResponse\020\254G\022$\n\037k_EMsgClientToGCPart"
  "yInviteUser\020\255G\022,\n\'k_EMsgClientToGCPartyI"
  "nviteUserResponse\020\256G\022\037\n\032k_EMsgGCToClient"
  "PartyEvent\020\257G\022#\n\036k_EMsgGCToClientCanRejo"
  "inParty\020\261G\022%\n k_EMsgClientToGCPartyJoinV"
  "iaCode\020\262G\022-\n(k_EMsgClientToGCPartyJoinVi"
  "aCodeResponse\020\263G\022\'\n\"k_EMsgClientToGCPart"
  "ySetReadyState\020\266G\022/\n*k_EMsgClientToGCPar"
  "tySetReadyStateResponse\020\267G\022$\n\037k_EMsgClie"
  "ntToGCGetAccountStats\020\314G\022,\n\'k_EMsgClient"
  "ToGCGetAccountStatsResponse\020\315G\022(\n#k_EMsg"
  "GCToClientAccountStatsUpdated\020\316G\022%\n k_EM"
  "sgClientToGCGetMatchMetaData\020\317G\022-\n(k_EMs"
  "gClientToGCGetMatchMetaDataResponse\020\320G\022\036"
  "\n\031k_EMsgClientToGCDevAction\020\324G\022&\n!k_EMsg"
  "ClientToGCDevActionResponse\020\325G\022\'\n\"k_EMsg"
  "ClientToGCRecordClientEvents\020\326G\022/\n*k_EMs"
  "gClientToGCRecordClientEventsResponse\020\327G"
  "\022)\n$k_EMsgClientToGCSetNewPlayerProgress"
  "\020\330G\0221\n,k_EMsgClientToGCSetNewPlayerProgr"
  "essResponse\020\331G\022&\n!k_EMsgClientToGCUpdate"
  "AccountSync\020\332G\022.\n)k_EMsgClientToGCUpdate"
  "AccountSyncResponse\020\333G\022\"\n\035k_EMsgClientTo"
  "GCGetHeroChoice\020\334G\022*\n%k_EMsgClientToGCGe"
  "tHeroChoiceResponse\020\335G\022\037\n\032k_EMsgClientTo"
  "GCUnlockHero\020\336G\022\'\n\"k_EMsgClientToGCUnloc"
  "kHeroResponse\020\337G\022\037\n\032k_EMsgClientToGCBook"
  "Unlock\020\340G\022\'\n\"k_EMsgClientToGCBookUnlockR"
  "esponse\020\341G\022\034\n\027k_EMsgClientToGCGetBook\020\342G"
  "\022$\n\037k_EMsgClientToGCGetBookResponse\020\343G\022 "
  "\n\033k_EMsgGCToClientBookUpdated\020\344G\022\'\n\"k_EM"
  "sgClientToGCSubmitPlaytestUser\020\345G\022/\n*k_E"
  "MsgClientToGCSubmitPlaytestUserResponse\020"
  "\346G\022$\n\037k_EMsgClientToGCUpdateHeroBuild\020\351G"
  "\022,\n\'k_EMsgClientToGCUpdateHeroBuildRespo"
  "nse\020\352G\022#\n\036k_EMsgClientToGCFindHeroBuilds"
  "\020\353G\022+\n&k_EMsgClientToGCFindHeroBuildsRes"
  "ponse\020\354G\022*\n%k_EMsgClientToGCReportPlayer"
  "FromMatch\020\355G\0222\n-k_EMsgClientToGCReportPl"
  "ayerFromMatchResponse\020\356G\022+\n&k_EMsgClient"
  "ToGCGetAccountMatchReports\020\357G\0223\n.k_EMsgC"
  "lientToGCGetAccountMatchReportsResponse\020"
  "\360G\022$\n\037k_EMsgClientToGCDeleteHeroBuild\020\361G"
  "\022,\n\'k_EMsgClientToGCDeleteHeroBuildRespo"
  "nse\020\362G\022%\n k_EMsgClientToGCGetActiveMatch"
  "es\020\363G\022-\n(k_EMsgClientToGCGetActiveMatche"
  "sResponse\020\364G\022#\n\036k_EMsgClientToGCGetDisco"
  "rdLink\020\365G\022+\n&k_EMsgClientToGCGetDiscordL"
  "inkResponse\020\366G\022!\n\034k_EMsgClientToGCPartyS"
  "etMode\020\367G\022)\n$k_EMsgClientToGCPartySetMod"
  "eResponse\020\370G\022%\n k_EMsgClientToGCGrantFor"
  "umAccess\020\371G\022-\n(k_EMsgClientToGCGrantForu"
  "mAccessResponse\020\372G\022%\n k_EMsgClientToGCMo"
  "deratorRequest\020\373G\022-\n(k_EMsgClientToGCMod"
  "eratorRequestResponse\020\374G\022(\n#k_EMsgClient"
  "ToGCGetFriendGameStatus\020\375G\0220\n+k_EMsgClie"
  "ntToGCGetFriendGameStatusResponse\020\376G\022.\n)"
  "k_EMsgClientToGCUpdateHeroBuildPreferenc"
  "e\020\377G\0226\n1k_EMsgClientToGCUpdateHeroBuildP"
  "referenceResponse\020\200H\022(\n#k_EMsgClientToGC"
  "GetOldHeroBuildData\020\201H\0220\n+k_EMsgClientTo"
  "GCGetOldHeroBuildDataResponse\020\202H\022*\n%k_EM"
  "sgClientToGCUpdateSpectatorStatus\020\203H\022+\n&"
  "k_EMsgClientToGCCommendPlayerFromMatch\020\207"
  "H\0223\n.k_EMsgClientToGCCommendPlayerFromMa"
  "tchResponse\020\210H\022(\n#k_EMsgGCToClientCommen"
  "dNotification\020\211H\022%\n k_EMsgGCToClientHero"
  "LabsSchedule\020\214H\022+\n&k_EMsgClientToGCDevRe"
  "questCheatReports\020\216H\0223\n.k_EMsgClientToGC"
  "DevRequestCheatReportsResponse\020\217H\022\033\n\026k_E"
  "MsgClientToGCDevBan\020\220H\022#\n\036k_EMsgClientTo"
  "GCDevBanResponse\020\221H\022\'\n\"k_EMsgClientToGCG"
  "etHeroMMRRankings\020\222H\022/\n*k_EMsgClientToGC"
  "GetHeroMMRRankingsResponse\020\223H\022#\n\036k_EMsgC"
  "lientToGCGetLeaderboard\020\224H\022+\n&k_EMsgClie"
  "ntToGCGetLeaderboardResponse\020\225H\022+\n&k_EMs"
  "gClientToGCGetAccountLeaderboards\020\226H\0223\n."
  "k_EMsgClientToGCGetAccountLeaderboardsRe"
  "sponse\020\227H\022)\n$k_EMsgClientToGCSetHideHoli"
  "dayModels\020\230H\0221\n,k_EMsgClientToGCSetHideH"
  "olidayModelsResponse\020\231H*@\n\035ECitadelAccou"
  "ntPermissionFlag\022\037\n\033k_eAccountPermission"
  "_Ranked\020\001*\226\001\n\035ECitadelNewPlayerProgressF"
  "lag\022\'\n#k_eNewPlayerProgress_GettingStart"
  "ed\020\001\022%\n!k_eNewPlayerProgress_HeroTrainin"
  "g\020\002\022%\n!k_eNewPlayerProgress_LaneTraining"
  "\020\003*z\n\024EProfileCardSlotType\022 \n\034k_EProfile"
  "CardSlotType_Empty\020\000\022\037\n\033k_EProfileCardSl"
  "otType_Stat\020\001\022\037\n\033k_EProfileCardSlotType_"
  "Hero\020\002*\225\001\n\rEDevBanReason\022\037\n\033k_eDevBanRea"
  "son_Unspecified\020\000\022\035\n\031k_eDevBanReason_Aim"
  "Assist\020\001\022 \n\034k_eDevBanReason_VisionAssist"
  "\020\002\022\"\n\036k_eDevBanReason_MovementAssist\020\003*\376"
  "\013\n\032ECitadelClientAccountEvent\022\027\n\023k_eLaun"
  "chedHeroTest\020\001\022\024\n\020k_eViewedProfile\020\002\022\023\n\017"
  "k_eViewedSocial\020\003\022\023\n\017k_eViewedHeroes\020\004\022\030"
  "\n\024k_eViewedHeroDetails\020\005\022\027\n\023k_eViewedPat"
  "chNotes\020\006\022\023\n\017k_eViewedEvents\020\007\022\033\n\027k_eVie"
  "wedGettingStarted\020\010\022\026\n\022k_eViewedGuidePag"
  "e\020\t\022\025\n\021k_eLaunchedClient\020\n\022\021\n\rk_eEditRos"
  "ter\020\013\022\022\n\016k_eViewedWatch\020\014\022\023\n\017k_eCreatedP"
  "arty\020\r\022\035\n\031k_eCreatedPartyWithInvite\020\016\022\030\n"
  "\024k_eViewedSelfProfile\020\017\022\026\n\022k_eJoinedPart"
  "yCode\020\020\022\026\n\022k_eSentPartyInvite\020\021\022\030\n\024k_eAc"
  "ceptPartyInvite\020\022\022\030\n\024k_eRejectPartyInvit"
  "e\020\023\022\023\n\017k_eSpectateUser\020\024\022\024\n\020k_eSpectateM"
  "atch\020\025\022\031\n\025k_eEnteredMatchMaking\020\026\022\026\n\022k_e"
  "LeftMatchMaking\020\027\022\036\n\032k_eEnteredPartyMatc"
  "hMaking\020\030\022\033\n\027k_eLeftPartyMatchMaking\020\031\022\027"
  "\n\023k_eDownloadedReplay\020\032\022\024\n\020k_eWatchedRep"
  "lay\020\033\022\027\n\023k_eViewMatchDetails\020\034\022\026\n\022k_eMat"
  "chDetailsTab\020\035\022\023\n\017k_eDeleteReplay\020\036\022\026\n\022k"
  "_eBotMatch_Guided\020\037\022\024\n\020k_eBotMatch_Easy\020"
  " \022\024\n\020k_eBotMatch_Hard\020!\022\030\n\024k_eLiveUpdate"
  "dRoster\020\"\022 \n\034k_eMatchMakingIdle_Displaye"
  "d\020#\022\036\n\032k_eMatchMakingIdle_Stopped\020$\022\035\n\031k"
  "_eConnectReacquireTicket\020%\022\036\n\032k_eConnect"
  "AttemptReconnect\020&\022 \n\034k_eDisconnectPrese"
  "ntedPrompt\020\'\022\032\n\026k_eDisconnectConfirmed\020("
  "\022\035\n\031k_eViewedSettings_Options\020)\022\033\n\027k_eVi"
  "ewedSettings_Video\020*\022\033\n\027k_eViewedSetting"
  "s_Audio\020+\022\034\n\030k_eViewedSettings_HotKey\020,\022"
  "\037\n\033k_eViewedSettings_ChatWheel\020-\022\033\n\027k_eV"
  "iewedSettings_About\020.\022\033\n\027k_eOpenedSubmit"
  "Feedback\020/\022\033\n\027k_eTutorialSkip_Pressed\0200\022"
  "\035\n\031k_eTutorialSkip_Confirmed\0201\022\031\n\025k_eVie"
  "wedGuidePage_5s\0202\022\032\n\026k_eViewedGuidePage_"
  "15s\0203\022\032\n\026k_eViewedGuidePage_30s\0204\022\032\n\026k_e"
  "ViewedGuidePage_60s\0205\022\025\n\021k_eOpenedBookTe"
  "st\0206\022\031\n\025k_eSandboxViaHeroPage\0207\022 \n\034k_eVi"
  "ewedSettings_SteamInput\0208\022\034\n\030k_eViewedSe"
  "ttings_Social\0209*`\n\014ECommendType\022\016\n\nk_eIn"
  "valid\020\000\022\016\n\nk_eGeneric\020\001\022\017\n\013k_eFriendly\020\002"
  "\022\017\n\013k_eTeamwork\020\003\022\016\n\nk_eSkilled\020\004"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_citadel_5fgcmessages_5fclient_2eproto_deps[3] = {
  &::descriptor_table_citadel_5fgcmessages_5fcommon_2eproto,
  &::descriptor_table_gcsdk_5fgcmessages_2eproto,
  &::descriptor_table_steammessages_2eproto,
};
static ::_pbi::once_flag descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_citadel_5fgcmessages_5fclient_2eproto = {
    false, false, 35753, descriptor_table_protodef_citadel_5fgcmessages_5fclient_2eproto,
    "citadel_gcmessages_client.proto",
    &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once, descriptor_table_citadel_5fgcmessages_5fclient_2eproto_deps, 3, 150,
    schemas, file_default_instances, TableStruct_citadel_5fgcmessages_5fclient_2eproto::offsets,
    file_level_metadata_citadel_5fgcmessages_5fclient_2eproto, file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto,
    file_level_service_descriptors_citadel_5fgcmessages_5fclient_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter() {
  return &descriptor_table_citadel_5fgcmessages_5fclient_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_citadel_5fgcmessages_5fclient_2eproto(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CSOGameAccountClient_EFlags_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[0];
}
bool CSOGameAccountClient_EFlags_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CSOGameAccountClient_EFlags CSOGameAccountClient::k_eDeveloper;
constexpr CSOGameAccountClient_EFlags CSOGameAccountClient::k_eExternalModerator;
constexpr CSOGameAccountClient_EFlags CSOGameAccountClient::k_eGotInitialHeroes;
constexpr CSOGameAccountClient_EFlags CSOGameAccountClient::k_eHideHolidayModels;
constexpr CSOGameAccountClient_EFlags CSOGameAccountClient::k_eClaimedDiscordLink;
constexpr CSOGameAccountClient_EFlags CSOGameAccountClient::k_eClaimedForum;
constexpr CSOGameAccountClient_EFlags CSOGameAccountClient::k_eAccountBanned;
constexpr CSOGameAccountClient_EFlags CSOGameAccountClient::EFlags_MIN;
constexpr CSOGameAccountClient_EFlags CSOGameAccountClient::EFlags_MAX;
constexpr int CSOGameAccountClient::EFlags_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CSOAccountHeroInfo_EHeroStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[1];
}
bool CSOAccountHeroInfo_EHeroStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CSOAccountHeroInfo_EHeroStatus CSOAccountHeroInfo::k_eLocked;
constexpr CSOAccountHeroInfo_EHeroStatus CSOAccountHeroInfo::k_eOwned;
constexpr CSOAccountHeroInfo_EHeroStatus CSOAccountHeroInfo::EHeroStatus_MIN;
constexpr CSOAccountHeroInfo_EHeroStatus CSOAccountHeroInfo::EHeroStatus_MAX;
constexpr int CSOAccountHeroInfo::EHeroStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCStartMatchmakingResponse_EResultCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[2];
}
bool CMsgClientToGCStartMatchmakingResponse_EResultCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_OK;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_AlreadyFindingMatch;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_PartyMemberInLobby;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_InvalidClientVersion;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_MatchmakingDisabled;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_MatchmakingTooBusy;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_InternalError;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_NoRegionPings;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_InParty;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_ModeLocked;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_ModeBanned;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_RegionInfoNotProvided;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_DurationControlBlocked;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_InvalidHeroSelection;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_HeroesNotUnlocked;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_PermanentBan;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_RankedMMNotOpen;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_RankedNotUnlocked;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_NoRankedWhileInLowPri;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_NoRankedWhileCommsBanned;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_NoRankedWhileReportBanned;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_HeroLabsMMNotOpen;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_HeroLabsNotUnlocked;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_NoHeroLabsWhileInLowPri;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::k_EResult_AccountLocked;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::EResultCode_MIN;
constexpr CMsgClientToGCStartMatchmakingResponse_EResultCode CMsgClientToGCStartMatchmakingResponse::EResultCode_MAX;
constexpr int CMsgClientToGCStartMatchmakingResponse::EResultCode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgGCToClientMatchmakingStopped_EReason_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[3];
}
bool CMsgGCToClientMatchmakingStopped_EReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgGCToClientMatchmakingStopped_EReason CMsgGCToClientMatchmakingStopped::k_EResult_Unspecified;
constexpr CMsgGCToClientMatchmakingStopped_EReason CMsgGCToClientMatchmakingStopped::k_EResult_VersionUpdated;
constexpr CMsgGCToClientMatchmakingStopped_EReason CMsgGCToClientMatchmakingStopped::k_EResult_RankedClosed;
constexpr CMsgGCToClientMatchmakingStopped_EReason CMsgGCToClientMatchmakingStopped::k_EResult_HeroLabsClosed;
constexpr CMsgGCToClientMatchmakingStopped_EReason CMsgGCToClientMatchmakingStopped::EReason_MIN;
constexpr CMsgGCToClientMatchmakingStopped_EReason CMsgGCToClientMatchmakingStopped::EReason_MAX;
constexpr int CMsgGCToClientMatchmakingStopped::EReason_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartyCreateResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[4];
}
bool CMsgClientToGCPartyCreateResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::k_eInternalError;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::k_eSuccess;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::k_eAlreadyInParty;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::k_eDisabled;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::k_eInvalidVersion;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::k_eNoRegionPings;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::k_eTooBusy;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::k_eRateLimited;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::k_eNotFriends;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::k_eRegionInfoNotProvided;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::k_eDurationControlBlocked;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::k_eInMatchmaking;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::k_ePlayerDoesntHaveGame;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::EResponse_MIN;
constexpr CMsgClientToGCPartyCreateResponse_EResponse CMsgClientToGCPartyCreateResponse::EResponse_MAX;
constexpr int CMsgClientToGCPartyCreateResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartyLeaveResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[5];
}
bool CMsgClientToGCPartyLeaveResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCPartyLeaveResponse_EResponse CMsgClientToGCPartyLeaveResponse::k_eInternalError;
constexpr CMsgClientToGCPartyLeaveResponse_EResponse CMsgClientToGCPartyLeaveResponse::k_eSuccess;
constexpr CMsgClientToGCPartyLeaveResponse_EResponse CMsgClientToGCPartyLeaveResponse::k_eNotInParty;
constexpr CMsgClientToGCPartyLeaveResponse_EResponse CMsgClientToGCPartyLeaveResponse::k_eInMatchMaking;
constexpr CMsgClientToGCPartyLeaveResponse_EResponse CMsgClientToGCPartyLeaveResponse::EResponse_MIN;
constexpr CMsgClientToGCPartyLeaveResponse_EResponse CMsgClientToGCPartyLeaveResponse::EResponse_MAX;
constexpr int CMsgClientToGCPartyLeaveResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartyJoinResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[6];
}
bool CMsgClientToGCPartyJoinResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_eInternalError;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_eSuccess;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_eAlreadyInParty;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_eDisabled;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_eInvalidPartyID;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_eInvalidPermissions;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_eInvalidVersion;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_eNoRegionPings;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_eTooBusy;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_eInvalidCode;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_eRateLimited;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_eRegionInfoNotProvided;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_eDurationControlBlocked;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_ePartyInMatchMaking;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_eInMatchmaking;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::k_ePartyFull;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::EResponse_MIN;
constexpr CMsgClientToGCPartyJoinResponse_EResponse CMsgClientToGCPartyJoinResponse::EResponse_MAX;
constexpr int CMsgClientToGCPartyJoinResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartyAction_EAction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[7];
}
bool CMsgClientToGCPartyAction_EAction_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 5:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eKickUser;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eCancelInvite;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eCancelFindMatch;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetPlayerType;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eEnablePartyCode;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetMemberTeam;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetChatMode;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetPlayerSlot;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetRegionMode;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetSearchKey;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetBotDifficulty;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetRandomizedLanes;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetServerRegion;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetPubliclyVisible;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetCheatsEnabled;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSwapTeams;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eShuffleLobby;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eShuffleLanes;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetDuplicateHeroesEnabled;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetExperimentalHeroesEnabled;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetDesiresLaningTogether;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::k_eSetMMPreference;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::EAction_MIN;
constexpr CMsgClientToGCPartyAction_EAction CMsgClientToGCPartyAction::EAction_MAX;
constexpr int CMsgClientToGCPartyAction::EAction_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartyActionResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[8];
}
bool CMsgClientToGCPartyActionResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::k_eInternalError;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::k_eSuccess;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::k_eInvalidPartyID;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::k_eInvalidPermissions;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::k_eInvalidTarget;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::k_eInvalidValue;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::k_eInMatchMaking;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::k_eInMatch;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::k_eDisabled;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::k_eTooBusy;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::k_eRateLimited;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::k_eCannotChangeWhileReady;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::k_eSlotTaken;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::EResponse_MIN;
constexpr CMsgClientToGCPartyActionResponse_EResponse CMsgClientToGCPartyActionResponse::EResponse_MAX;
constexpr int CMsgClientToGCPartyActionResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartySetModeResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[9];
}
bool CMsgClientToGCPartySetModeResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eInternalError;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eSuccess;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eInvalidPartyID;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eInvalidPermissions;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_ePlayerPermanentBanned;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eInvalidValue;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eInMatchMaking;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eInMatch;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eDisabled;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eTooBusy;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eRateLimited;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eAlreadyDrafting;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eCannotChangeWhileReady;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eTooFewPlayers;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eTooManyPlayers;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_ePlayerBanned;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eTooManyHighMMR;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eFiveStacksNotAllowed;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eRankedMMNotOpen;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eRankedNotunlocked;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eHeroLabsMMNotOpen;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eHeroLabsNotUnlocked;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eNoHeroLabsWhileInLowPri;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eNoHighRangeFiveStack;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::k_eAccountLocked;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::EResponse_MIN;
constexpr CMsgClientToGCPartySetModeResponse_EResponse CMsgClientToGCPartySetModeResponse::EResponse_MAX;
constexpr int CMsgClientToGCPartySetModeResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartyStartMatchResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[10];
}
bool CMsgClientToGCPartyStartMatchResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eInternalError;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eSuccess;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eDisabled;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eInvalidPartyID;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eInvalidPermissions;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eTooBusy;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eInMatchmaking;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eInMatch;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eInvalidVersion;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_ePlayersNotReady;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eCannotSelectRegion;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eNotAllPlayersAvailable;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eTooManyPlayersForMM;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eTooManyPlayersForPrivate;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eTooManySpectatorsForMM;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eTooManySpectatorsForPrivate;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eTooFewPlayersForMM;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eTooFewPlayersForPrivate;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eMismatchedVersions;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eInvalidPartyMatchMode;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_ePlayerBannedFromMode;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eTooManyPlayersOnTeam;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eInvalidTeam;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eInvalidHeroLineup;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eInvalidGroupHeroLineup;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eUnassignedPlayers;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eRankedMMNotOpen;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eHeroLabsMMNotOpen;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eHeroLabsNotUnlocked;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::k_eNoHeroLabsWhileInLowPri;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::EResponse_MIN;
constexpr CMsgClientToGCPartyStartMatchResponse_EResponse CMsgClientToGCPartyStartMatchResponse::EResponse_MAX;
constexpr int CMsgClientToGCPartyStartMatchResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartyInviteUserResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[11];
}
bool CMsgClientToGCPartyInviteUserResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::k_eInternalError;
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::k_eSuccess;
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::k_eAlreadyInvited;
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::k_eInvalidPermissions;
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::k_eInvalidPartyID;
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::k_eDisabled;
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::k_eTooManyInvites;
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::k_eNotFriends;
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::k_eTooBusy;
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::k_eRateLimited;
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::k_eInvalidPartyMode;
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::k_ePlayerDoesntHaveGame;
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::EResponse_MIN;
constexpr CMsgClientToGCPartyInviteUserResponse_EResponse CMsgClientToGCPartyInviteUserResponse::EResponse_MAX;
constexpr int CMsgClientToGCPartyInviteUserResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgGCToClientPartyEvent_EEvent_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[12];
}
bool CMsgGCToClientPartyEvent_EEvent_IsValid(int value) {
  switch (value) {
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::k_ePlayerKicked;
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::k_eJoinedParty;
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::k_eMatchCompleted;
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::k_eMatchMakingStopped_User;
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::k_eMatchMakingStopped_Version;
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::k_eMatchMakingStopped_NoServerRegion;
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::k_eLeftParty;
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::k_eDeclinedInvite;
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::k_eMatchMakingStopped_FailedOther;
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::k_eDraftEnded_User;
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::k_eStartDraftMMFailed;
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::k_eMatchMakingStopped_Cancelled;
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::EEvent_MIN;
constexpr CMsgGCToClientPartyEvent_EEvent CMsgGCToClientPartyEvent::EEvent_MAX;
constexpr int CMsgGCToClientPartyEvent::EEvent_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCPartySetReadyStateResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[13];
}
bool CMsgClientToGCPartySetReadyStateResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::k_eInternalError;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::k_eSuccess;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::k_eInvalidPermissions;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::k_eDisabled;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::k_eTooBusy;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::k_eRateLimited;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::k_eInvalidRoster;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::k_eMatchForming;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::k_eInvalidGroupRoster;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::k_eInMatch;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::k_eHeroesNotUnlocked;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::k_eModeLocked;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::k_eModeBanned;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::EResponse_MIN;
constexpr CMsgClientToGCPartySetReadyStateResponse_EResponse CMsgClientToGCPartySetReadyStateResponse::EResponse_MAX;
constexpr int CMsgClientToGCPartySetReadyStateResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetMatchHistoryResponse_EResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[14];
}
bool CMsgClientToGCGetMatchHistoryResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetMatchHistoryResponse_EResult CMsgClientToGCGetMatchHistoryResponse::k_eResult_InternalError;
constexpr CMsgClientToGCGetMatchHistoryResponse_EResult CMsgClientToGCGetMatchHistoryResponse::k_eResult_Success;
constexpr CMsgClientToGCGetMatchHistoryResponse_EResult CMsgClientToGCGetMatchHistoryResponse::k_eResult_InvalidPermission;
constexpr CMsgClientToGCGetMatchHistoryResponse_EResult CMsgClientToGCGetMatchHistoryResponse::k_eResult_TemporarilyDisabled;
constexpr CMsgClientToGCGetMatchHistoryResponse_EResult CMsgClientToGCGetMatchHistoryResponse::k_eResult_TooBusy;
constexpr CMsgClientToGCGetMatchHistoryResponse_EResult CMsgClientToGCGetMatchHistoryResponse::k_eResult_RateLimited;
constexpr CMsgClientToGCGetMatchHistoryResponse_EResult CMsgClientToGCGetMatchHistoryResponse::EResult_MIN;
constexpr CMsgClientToGCGetMatchHistoryResponse_EResult CMsgClientToGCGetMatchHistoryResponse::EResult_MAX;
constexpr int CMsgClientToGCGetMatchHistoryResponse::EResult_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSpectateUserResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[15];
}
bool CMsgClientToGCSpectateUserResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::k_eInternalError;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::k_eSuccess;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::k_eDisabled;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::k_eTooBusy;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::k_eRateLimited;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::k_eNotInGame;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::k_eDisabledForGame;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::k_eServerFull;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::k_eNotFriends;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::k_eRegionInfoNotProvided;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::k_eDurationControlBlocked;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::k_eInvalidClientVersion;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::k_eInvalidRegion;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::EResponse_MIN;
constexpr CMsgClientToGCSpectateUserResponse_EResponse CMsgClientToGCSpectateUserResponse::EResponse_MAX;
constexpr int CMsgClientToGCSpectateUserResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgCitadelProfileCard_EStatID_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[16];
}
bool CMsgCitadelProfileCard_EStatID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgCitadelProfileCard_EStatID CMsgCitadelProfileCard::k_eStat_Invalid;
constexpr CMsgCitadelProfileCard_EStatID CMsgCitadelProfileCard::k_eStat_Wins;
constexpr CMsgCitadelProfileCard_EStatID CMsgCitadelProfileCard::k_eStat_Kills;
constexpr CMsgCitadelProfileCard_EStatID CMsgCitadelProfileCard::k_eStat_GamesPlayed;
constexpr CMsgCitadelProfileCard_EStatID CMsgCitadelProfileCard::EStatID_MIN;
constexpr CMsgCitadelProfileCard_EStatID CMsgCitadelProfileCard::EStatID_MAX;
constexpr int CMsgCitadelProfileCard::EStatID_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCUpdateRosterResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[17];
}
bool CMsgClientToGCUpdateRosterResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCUpdateRosterResponse_EResponse CMsgClientToGCUpdateRosterResponse::k_eInternalError;
constexpr CMsgClientToGCUpdateRosterResponse_EResponse CMsgClientToGCUpdateRosterResponse::k_eSuccess;
constexpr CMsgClientToGCUpdateRosterResponse_EResponse CMsgClientToGCUpdateRosterResponse::k_eDisabled;
constexpr CMsgClientToGCUpdateRosterResponse_EResponse CMsgClientToGCUpdateRosterResponse::k_eTooBusy;
constexpr CMsgClientToGCUpdateRosterResponse_EResponse CMsgClientToGCUpdateRosterResponse::k_eRateLimited;
constexpr CMsgClientToGCUpdateRosterResponse_EResponse CMsgClientToGCUpdateRosterResponse::k_eMMBusy;
constexpr CMsgClientToGCUpdateRosterResponse_EResponse CMsgClientToGCUpdateRosterResponse::k_eInvalidHeroSelection;
constexpr CMsgClientToGCUpdateRosterResponse_EResponse CMsgClientToGCUpdateRosterResponse::k_eHeroesNotUnlocked;
constexpr CMsgClientToGCUpdateRosterResponse_EResponse CMsgClientToGCUpdateRosterResponse::EResponse_MIN;
constexpr CMsgClientToGCUpdateRosterResponse_EResponse CMsgClientToGCUpdateRosterResponse::EResponse_MAX;
constexpr int CMsgClientToGCUpdateRosterResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetAccountStatsResponse_EResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[18];
}
bool CMsgClientToGCGetAccountStatsResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetAccountStatsResponse_EResult CMsgClientToGCGetAccountStatsResponse::k_eInternalError;
constexpr CMsgClientToGCGetAccountStatsResponse_EResult CMsgClientToGCGetAccountStatsResponse::k_eSuccess;
constexpr CMsgClientToGCGetAccountStatsResponse_EResult CMsgClientToGCGetAccountStatsResponse::k_eDisabled;
constexpr CMsgClientToGCGetAccountStatsResponse_EResult CMsgClientToGCGetAccountStatsResponse::k_eTooBusy;
constexpr CMsgClientToGCGetAccountStatsResponse_EResult CMsgClientToGCGetAccountStatsResponse::k_eRateLimited;
constexpr CMsgClientToGCGetAccountStatsResponse_EResult CMsgClientToGCGetAccountStatsResponse::k_eInvalidPermissions;
constexpr CMsgClientToGCGetAccountStatsResponse_EResult CMsgClientToGCGetAccountStatsResponse::EResult_MIN;
constexpr CMsgClientToGCGetAccountStatsResponse_EResult CMsgClientToGCGetAccountStatsResponse::EResult_MAX;
constexpr int CMsgClientToGCGetAccountStatsResponse::EResult_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetMatchMetaDataResponse_EResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[19];
}
bool CMsgClientToGCGetMatchMetaDataResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetMatchMetaDataResponse_EResult CMsgClientToGCGetMatchMetaDataResponse::k_eResult_InternalError;
constexpr CMsgClientToGCGetMatchMetaDataResponse_EResult CMsgClientToGCGetMatchMetaDataResponse::k_eResult_Success;
constexpr CMsgClientToGCGetMatchMetaDataResponse_EResult CMsgClientToGCGetMatchMetaDataResponse::k_eResult_InvalidPermission;
constexpr CMsgClientToGCGetMatchMetaDataResponse_EResult CMsgClientToGCGetMatchMetaDataResponse::k_eResult_TemporarilyDisabled;
constexpr CMsgClientToGCGetMatchMetaDataResponse_EResult CMsgClientToGCGetMatchMetaDataResponse::k_eResult_TooBusy;
constexpr CMsgClientToGCGetMatchMetaDataResponse_EResult CMsgClientToGCGetMatchMetaDataResponse::k_eResult_RateLimited;
constexpr CMsgClientToGCGetMatchMetaDataResponse_EResult CMsgClientToGCGetMatchMetaDataResponse::k_eResult_InvalidMatch;
constexpr CMsgClientToGCGetMatchMetaDataResponse_EResult CMsgClientToGCGetMatchMetaDataResponse::k_eResult_MatchInFlight;
constexpr CMsgClientToGCGetMatchMetaDataResponse_EResult CMsgClientToGCGetMatchMetaDataResponse::EResult_MIN;
constexpr CMsgClientToGCGetMatchMetaDataResponse_EResult CMsgClientToGCGetMatchMetaDataResponse::EResult_MAX;
constexpr int CMsgClientToGCGetMatchMetaDataResponse::EResult_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCModifyDevAnnouncements_EOperation_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[20];
}
bool CMsgClientToGCModifyDevAnnouncements_EOperation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCModifyDevAnnouncements_EOperation CMsgClientToGCModifyDevAnnouncements::k_eCreate;
constexpr CMsgClientToGCModifyDevAnnouncements_EOperation CMsgClientToGCModifyDevAnnouncements::k_eUpdate;
constexpr CMsgClientToGCModifyDevAnnouncements_EOperation CMsgClientToGCModifyDevAnnouncements::k_eDelete;
constexpr CMsgClientToGCModifyDevAnnouncements_EOperation CMsgClientToGCModifyDevAnnouncements::EOperation_MIN;
constexpr CMsgClientToGCModifyDevAnnouncements_EOperation CMsgClientToGCModifyDevAnnouncements::EOperation_MAX;
constexpr int CMsgClientToGCModifyDevAnnouncements::EOperation_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCModifyDevAnnouncementsResponse_EResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[21];
}
bool CMsgClientToGCModifyDevAnnouncementsResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCModifyDevAnnouncementsResponse_EResult CMsgClientToGCModifyDevAnnouncementsResponse::k_eSuccess;
constexpr CMsgClientToGCModifyDevAnnouncementsResponse_EResult CMsgClientToGCModifyDevAnnouncementsResponse::k_eInvalidPermission;
constexpr CMsgClientToGCModifyDevAnnouncementsResponse_EResult CMsgClientToGCModifyDevAnnouncementsResponse::k_eInvalidTarget;
constexpr CMsgClientToGCModifyDevAnnouncementsResponse_EResult CMsgClientToGCModifyDevAnnouncementsResponse::k_eInternalError;
constexpr CMsgClientToGCModifyDevAnnouncementsResponse_EResult CMsgClientToGCModifyDevAnnouncementsResponse::EResult_MIN;
constexpr CMsgClientToGCModifyDevAnnouncementsResponse_EResult CMsgClientToGCModifyDevAnnouncementsResponse::EResult_MAX;
constexpr int CMsgClientToGCModifyDevAnnouncementsResponse::EResult_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCDevAction_EAction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[22];
}
bool CMsgClientToGCDevAction_EAction_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::k_eSetDeveloper;
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::k_eSetMMR;
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::k_eSetMMRUncertainty;
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::k_eSetHeroStatus;
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::k_eSetPermission;
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::k_eSetNewPlayerProgress;
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::k_eForceAccountStorage;
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::k_eBookReset;
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::k_eBookXPGrant;
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::k_eBanAccount;
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::k_eExonerateAccount;
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::k_eRequireAccountInMM;
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::EAction_MIN;
constexpr CMsgClientToGCDevAction_EAction CMsgClientToGCDevAction::EAction_MAX;
constexpr int CMsgClientToGCDevAction::EAction_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCDevActionResponse_EResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[23];
}
bool CMsgClientToGCDevActionResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCDevActionResponse_EResult CMsgClientToGCDevActionResponse::k_eSuccess;
constexpr CMsgClientToGCDevActionResponse_EResult CMsgClientToGCDevActionResponse::k_eInvalidPermission;
constexpr CMsgClientToGCDevActionResponse_EResult CMsgClientToGCDevActionResponse::k_eInvalidTarget;
constexpr CMsgClientToGCDevActionResponse_EResult CMsgClientToGCDevActionResponse::k_eInternalError;
constexpr CMsgClientToGCDevActionResponse_EResult CMsgClientToGCDevActionResponse::EResult_MIN;
constexpr CMsgClientToGCDevActionResponse_EResult CMsgClientToGCDevActionResponse::EResult_MAX;
constexpr int CMsgClientToGCDevActionResponse::EResult_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCUpdateAccountSyncResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[24];
}
bool CMsgClientToGCUpdateAccountSyncResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCUpdateAccountSyncResponse_EResponse CMsgClientToGCUpdateAccountSyncResponse::k_eInternalError;
constexpr CMsgClientToGCUpdateAccountSyncResponse_EResponse CMsgClientToGCUpdateAccountSyncResponse::k_eSuccess;
constexpr CMsgClientToGCUpdateAccountSyncResponse_EResponse CMsgClientToGCUpdateAccountSyncResponse::k_eDisabled;
constexpr CMsgClientToGCUpdateAccountSyncResponse_EResponse CMsgClientToGCUpdateAccountSyncResponse::k_eTooBusy;
constexpr CMsgClientToGCUpdateAccountSyncResponse_EResponse CMsgClientToGCUpdateAccountSyncResponse::k_eInvalidMessage;
constexpr CMsgClientToGCUpdateAccountSyncResponse_EResponse CMsgClientToGCUpdateAccountSyncResponse::EResponse_MIN;
constexpr CMsgClientToGCUpdateAccountSyncResponse_EResponse CMsgClientToGCUpdateAccountSyncResponse::EResponse_MAX;
constexpr int CMsgClientToGCUpdateAccountSyncResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetHeroChoiceResponse_EResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[25];
}
bool CMsgClientToGCGetHeroChoiceResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetHeroChoiceResponse_EResult CMsgClientToGCGetHeroChoiceResponse::k_eSuccess;
constexpr CMsgClientToGCGetHeroChoiceResponse_EResult CMsgClientToGCGetHeroChoiceResponse::k_eNoChoices;
constexpr CMsgClientToGCGetHeroChoiceResponse_EResult CMsgClientToGCGetHeroChoiceResponse::k_eInvalidTarget;
constexpr CMsgClientToGCGetHeroChoiceResponse_EResult CMsgClientToGCGetHeroChoiceResponse::k_eInternalError;
constexpr CMsgClientToGCGetHeroChoiceResponse_EResult CMsgClientToGCGetHeroChoiceResponse::k_eDisabled;
constexpr CMsgClientToGCGetHeroChoiceResponse_EResult CMsgClientToGCGetHeroChoiceResponse::k_eTooBusy;
constexpr CMsgClientToGCGetHeroChoiceResponse_EResult CMsgClientToGCGetHeroChoiceResponse::k_eChoiceClosed;
constexpr CMsgClientToGCGetHeroChoiceResponse_EResult CMsgClientToGCGetHeroChoiceResponse::EResult_MIN;
constexpr CMsgClientToGCGetHeroChoiceResponse_EResult CMsgClientToGCGetHeroChoiceResponse::EResult_MAX;
constexpr int CMsgClientToGCGetHeroChoiceResponse::EResult_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCUnlockHeroResponse_EResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[26];
}
bool CMsgClientToGCUnlockHeroResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCUnlockHeroResponse_EResult CMsgClientToGCUnlockHeroResponse::k_eSuccess;
constexpr CMsgClientToGCUnlockHeroResponse_EResult CMsgClientToGCUnlockHeroResponse::k_eInternalError;
constexpr CMsgClientToGCUnlockHeroResponse_EResult CMsgClientToGCUnlockHeroResponse::k_eInvalidHero;
constexpr CMsgClientToGCUnlockHeroResponse_EResult CMsgClientToGCUnlockHeroResponse::k_eOutOfSync;
constexpr CMsgClientToGCUnlockHeroResponse_EResult CMsgClientToGCUnlockHeroResponse::k_eDisabled;
constexpr CMsgClientToGCUnlockHeroResponse_EResult CMsgClientToGCUnlockHeroResponse::k_eTooBusy;
constexpr CMsgClientToGCUnlockHeroResponse_EResult CMsgClientToGCUnlockHeroResponse::EResult_MIN;
constexpr CMsgClientToGCUnlockHeroResponse_EResult CMsgClientToGCUnlockHeroResponse::EResult_MAX;
constexpr int CMsgClientToGCUnlockHeroResponse::EResult_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCBookUnlockResponse_EResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[27];
}
bool CMsgClientToGCBookUnlockResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCBookUnlockResponse_EResult CMsgClientToGCBookUnlockResponse::k_eSuccess;
constexpr CMsgClientToGCBookUnlockResponse_EResult CMsgClientToGCBookUnlockResponse::k_eInternalError;
constexpr CMsgClientToGCBookUnlockResponse_EResult CMsgClientToGCBookUnlockResponse::k_eOutOfDateClient;
constexpr CMsgClientToGCBookUnlockResponse_EResult CMsgClientToGCBookUnlockResponse::k_eInvalidFunds;
constexpr CMsgClientToGCBookUnlockResponse_EResult CMsgClientToGCBookUnlockResponse::k_eDisabled;
constexpr CMsgClientToGCBookUnlockResponse_EResult CMsgClientToGCBookUnlockResponse::k_eTooBusy;
constexpr CMsgClientToGCBookUnlockResponse_EResult CMsgClientToGCBookUnlockResponse::k_eAlreadyUnlocked;
constexpr CMsgClientToGCBookUnlockResponse_EResult CMsgClientToGCBookUnlockResponse::EResult_MIN;
constexpr CMsgClientToGCBookUnlockResponse_EResult CMsgClientToGCBookUnlockResponse::EResult_MAX;
constexpr int CMsgClientToGCBookUnlockResponse::EResult_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetBookResponse_EResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[28];
}
bool CMsgClientToGCGetBookResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetBookResponse_EResult CMsgClientToGCGetBookResponse::k_eSuccess;
constexpr CMsgClientToGCGetBookResponse_EResult CMsgClientToGCGetBookResponse::k_eInternalError;
constexpr CMsgClientToGCGetBookResponse_EResult CMsgClientToGCGetBookResponse::k_eInvalidBook;
constexpr CMsgClientToGCGetBookResponse_EResult CMsgClientToGCGetBookResponse::k_eDisabled;
constexpr CMsgClientToGCGetBookResponse_EResult CMsgClientToGCGetBookResponse::k_eTooBusy;
constexpr CMsgClientToGCGetBookResponse_EResult CMsgClientToGCGetBookResponse::EResult_MIN;
constexpr CMsgClientToGCGetBookResponse_EResult CMsgClientToGCGetBookResponse::EResult_MAX;
constexpr int CMsgClientToGCGetBookResponse::EResult_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSubmitPlaytestUserResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[29];
}
bool CMsgClientToGCSubmitPlaytestUserResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCSubmitPlaytestUserResponse_EResponse CMsgClientToGCSubmitPlaytestUserResponse::eResponse_Success;
constexpr CMsgClientToGCSubmitPlaytestUserResponse_EResponse CMsgClientToGCSubmitPlaytestUserResponse::eResponse_InternalError;
constexpr CMsgClientToGCSubmitPlaytestUserResponse_EResponse CMsgClientToGCSubmitPlaytestUserResponse::eResponse_InvalidFriend;
constexpr CMsgClientToGCSubmitPlaytestUserResponse_EResponse CMsgClientToGCSubmitPlaytestUserResponse::eResponse_NotFriendsLongEnough;
constexpr CMsgClientToGCSubmitPlaytestUserResponse_EResponse CMsgClientToGCSubmitPlaytestUserResponse::eResponse_AlreadyHasGame;
constexpr CMsgClientToGCSubmitPlaytestUserResponse_EResponse CMsgClientToGCSubmitPlaytestUserResponse::eResponse_LimitedUser;
constexpr CMsgClientToGCSubmitPlaytestUserResponse_EResponse CMsgClientToGCSubmitPlaytestUserResponse::eResponse_InviteLimitReached;
constexpr CMsgClientToGCSubmitPlaytestUserResponse_EResponse CMsgClientToGCSubmitPlaytestUserResponse::EResponse_MIN;
constexpr CMsgClientToGCSubmitPlaytestUserResponse_EResponse CMsgClientToGCSubmitPlaytestUserResponse::EResponse_MAX;
constexpr int CMsgClientToGCSubmitPlaytestUserResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCUpdateHeroBuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[30];
}
bool CMsgClientToGCUpdateHeroBuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCUpdateHeroBuildResponse_EResponse CMsgClientToGCUpdateHeroBuildResponse::k_eInternalError;
constexpr CMsgClientToGCUpdateHeroBuildResponse_EResponse CMsgClientToGCUpdateHeroBuildResponse::k_eSuccess;
constexpr CMsgClientToGCUpdateHeroBuildResponse_EResponse CMsgClientToGCUpdateHeroBuildResponse::EResponse_MIN;
constexpr CMsgClientToGCUpdateHeroBuildResponse_EResponse CMsgClientToGCUpdateHeroBuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCUpdateHeroBuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCFindHeroBuildsResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[31];
}
bool CMsgClientToGCFindHeroBuildsResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCFindHeroBuildsResponse_EResponse CMsgClientToGCFindHeroBuildsResponse::k_eInternalError;
constexpr CMsgClientToGCFindHeroBuildsResponse_EResponse CMsgClientToGCFindHeroBuildsResponse::k_eSuccess;
constexpr CMsgClientToGCFindHeroBuildsResponse_EResponse CMsgClientToGCFindHeroBuildsResponse::k_eTooBusy;
constexpr CMsgClientToGCFindHeroBuildsResponse_EResponse CMsgClientToGCFindHeroBuildsResponse::EResponse_MIN;
constexpr CMsgClientToGCFindHeroBuildsResponse_EResponse CMsgClientToGCFindHeroBuildsResponse::EResponse_MAX;
constexpr int CMsgClientToGCFindHeroBuildsResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[32];
}
bool CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse CMsgClientToGCUpdateHeroBuildPreferenceResponse::k_eInternalError;
constexpr CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse CMsgClientToGCUpdateHeroBuildPreferenceResponse::k_eSuccess;
constexpr CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse CMsgClientToGCUpdateHeroBuildPreferenceResponse::EResponse_MIN;
constexpr CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse CMsgClientToGCUpdateHeroBuildPreferenceResponse::EResponse_MAX;
constexpr int CMsgClientToGCUpdateHeroBuildPreferenceResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[33];
}
bool CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetOldHeroBuildDataResponse_EResponse CMsgClientToGCGetOldHeroBuildDataResponse::k_eInternalError;
constexpr CMsgClientToGCGetOldHeroBuildDataResponse_EResponse CMsgClientToGCGetOldHeroBuildDataResponse::k_eSuccess;
constexpr CMsgClientToGCGetOldHeroBuildDataResponse_EResponse CMsgClientToGCGetOldHeroBuildDataResponse::EResponse_MIN;
constexpr CMsgClientToGCGetOldHeroBuildDataResponse_EResponse CMsgClientToGCGetOldHeroBuildDataResponse::EResponse_MAX;
constexpr int CMsgClientToGCGetOldHeroBuildDataResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCReportPlayerFromMatch_EReportType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[34];
}
bool CMsgClientToGCReportPlayerFromMatch_EReportType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCReportPlayerFromMatch_EReportType CMsgClientToGCReportPlayerFromMatch::k_eReport_None;
constexpr CMsgClientToGCReportPlayerFromMatch_EReportType CMsgClientToGCReportPlayerFromMatch::k_eReport_VoiceChat;
constexpr CMsgClientToGCReportPlayerFromMatch_EReportType CMsgClientToGCReportPlayerFromMatch::k_eReport_Griefing;
constexpr CMsgClientToGCReportPlayerFromMatch_EReportType CMsgClientToGCReportPlayerFromMatch::k_eReport_LeftMatch;
constexpr CMsgClientToGCReportPlayerFromMatch_EReportType CMsgClientToGCReportPlayerFromMatch::k_eReport_Matchmaking;
constexpr CMsgClientToGCReportPlayerFromMatch_EReportType CMsgClientToGCReportPlayerFromMatch::k_eReport_Cheating;
constexpr CMsgClientToGCReportPlayerFromMatch_EReportType CMsgClientToGCReportPlayerFromMatch::EReportType_MIN;
constexpr CMsgClientToGCReportPlayerFromMatch_EReportType CMsgClientToGCReportPlayerFromMatch::EReportType_MAX;
constexpr int CMsgClientToGCReportPlayerFromMatch::EReportType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCReportPlayerFromMatchResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[35];
}
bool CMsgClientToGCReportPlayerFromMatchResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse::k_eInternalError;
constexpr CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse::k_eSuccess;
constexpr CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse::k_eRateLimited;
constexpr CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse::k_eAlreadyReported;
constexpr CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse::k_eDisabled;
constexpr CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse::k_eInvalidPermissions;
constexpr CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse::k_eReportingWindowExpired;
constexpr CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse::k_eTooBusy;
constexpr CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse::k_eBannedFromReporting;
constexpr CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse::EResponse_MIN;
constexpr CMsgClientToGCReportPlayerFromMatchResponse_EResponse CMsgClientToGCReportPlayerFromMatchResponse::EResponse_MAX;
constexpr int CMsgClientToGCReportPlayerFromMatchResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetAccountMatchReportsResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[36];
}
bool CMsgClientToGCGetAccountMatchReportsResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetAccountMatchReportsResponse_EResponse CMsgClientToGCGetAccountMatchReportsResponse::k_eInternalError;
constexpr CMsgClientToGCGetAccountMatchReportsResponse_EResponse CMsgClientToGCGetAccountMatchReportsResponse::k_eSuccess;
constexpr CMsgClientToGCGetAccountMatchReportsResponse_EResponse CMsgClientToGCGetAccountMatchReportsResponse::k_eDisabled;
constexpr CMsgClientToGCGetAccountMatchReportsResponse_EResponse CMsgClientToGCGetAccountMatchReportsResponse::k_eTooBusy;
constexpr CMsgClientToGCGetAccountMatchReportsResponse_EResponse CMsgClientToGCGetAccountMatchReportsResponse::EResponse_MIN;
constexpr CMsgClientToGCGetAccountMatchReportsResponse_EResponse CMsgClientToGCGetAccountMatchReportsResponse::EResponse_MAX;
constexpr int CMsgClientToGCGetAccountMatchReportsResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCDeleteHeroBuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[37];
}
bool CMsgClientToGCDeleteHeroBuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCDeleteHeroBuildResponse_EResponse CMsgClientToGCDeleteHeroBuildResponse::k_eInternalError;
constexpr CMsgClientToGCDeleteHeroBuildResponse_EResponse CMsgClientToGCDeleteHeroBuildResponse::k_eSuccess;
constexpr CMsgClientToGCDeleteHeroBuildResponse_EResponse CMsgClientToGCDeleteHeroBuildResponse::EResponse_MIN;
constexpr CMsgClientToGCDeleteHeroBuildResponse_EResponse CMsgClientToGCDeleteHeroBuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCDeleteHeroBuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetDiscordLinkResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[38];
}
bool CMsgClientToGCGetDiscordLinkResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetDiscordLinkResponse_EResponse CMsgClientToGCGetDiscordLinkResponse::k_eInternalError;
constexpr CMsgClientToGCGetDiscordLinkResponse_EResponse CMsgClientToGCGetDiscordLinkResponse::k_eSuccess;
constexpr CMsgClientToGCGetDiscordLinkResponse_EResponse CMsgClientToGCGetDiscordLinkResponse::k_eDiscordTooBusy;
constexpr CMsgClientToGCGetDiscordLinkResponse_EResponse CMsgClientToGCGetDiscordLinkResponse::k_eAlreadyClaimed;
constexpr CMsgClientToGCGetDiscordLinkResponse_EResponse CMsgClientToGCGetDiscordLinkResponse::k_eDisabled;
constexpr CMsgClientToGCGetDiscordLinkResponse_EResponse CMsgClientToGCGetDiscordLinkResponse::EResponse_MIN;
constexpr CMsgClientToGCGetDiscordLinkResponse_EResponse CMsgClientToGCGetDiscordLinkResponse::EResponse_MAX;
constexpr int CMsgClientToGCGetDiscordLinkResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGrantForumAccessResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[39];
}
bool CMsgClientToGCGrantForumAccessResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGrantForumAccessResponse_EResponse CMsgClientToGCGrantForumAccessResponse::k_eInternalError;
constexpr CMsgClientToGCGrantForumAccessResponse_EResponse CMsgClientToGCGrantForumAccessResponse::k_eSuccess;
constexpr CMsgClientToGCGrantForumAccessResponse_EResponse CMsgClientToGCGrantForumAccessResponse::k_eAlreadyClaimed;
constexpr CMsgClientToGCGrantForumAccessResponse_EResponse CMsgClientToGCGrantForumAccessResponse::k_eDisabled;
constexpr CMsgClientToGCGrantForumAccessResponse_EResponse CMsgClientToGCGrantForumAccessResponse::k_eEmailUsed;
constexpr CMsgClientToGCGrantForumAccessResponse_EResponse CMsgClientToGCGrantForumAccessResponse::EResponse_MIN;
constexpr CMsgClientToGCGrantForumAccessResponse_EResponse CMsgClientToGCGrantForumAccessResponse::EResponse_MAX;
constexpr int CMsgClientToGCGrantForumAccessResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetFriendGameStatusResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[40];
}
bool CMsgClientToGCGetFriendGameStatusResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetFriendGameStatusResponse_EResponse CMsgClientToGCGetFriendGameStatusResponse::k_eInternalError;
constexpr CMsgClientToGCGetFriendGameStatusResponse_EResponse CMsgClientToGCGetFriendGameStatusResponse::k_eSuccess;
constexpr CMsgClientToGCGetFriendGameStatusResponse_EResponse CMsgClientToGCGetFriendGameStatusResponse::k_eTooBusy;
constexpr CMsgClientToGCGetFriendGameStatusResponse_EResponse CMsgClientToGCGetFriendGameStatusResponse::k_eDisabled;
constexpr CMsgClientToGCGetFriendGameStatusResponse_EResponse CMsgClientToGCGetFriendGameStatusResponse::EResponse_MIN;
constexpr CMsgClientToGCGetFriendGameStatusResponse_EResponse CMsgClientToGCGetFriendGameStatusResponse::EResponse_MAX;
constexpr int CMsgClientToGCGetFriendGameStatusResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[41];
}
bool CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCCommendPlayerFromMatchResponse_EResponse CMsgClientToGCCommendPlayerFromMatchResponse::k_eInternalError;
constexpr CMsgClientToGCCommendPlayerFromMatchResponse_EResponse CMsgClientToGCCommendPlayerFromMatchResponse::k_eSuccess;
constexpr CMsgClientToGCCommendPlayerFromMatchResponse_EResponse CMsgClientToGCCommendPlayerFromMatchResponse::k_eDisabled;
constexpr CMsgClientToGCCommendPlayerFromMatchResponse_EResponse CMsgClientToGCCommendPlayerFromMatchResponse::k_eTooBusy;
constexpr CMsgClientToGCCommendPlayerFromMatchResponse_EResponse CMsgClientToGCCommendPlayerFromMatchResponse::k_eRateLimited;
constexpr CMsgClientToGCCommendPlayerFromMatchResponse_EResponse CMsgClientToGCCommendPlayerFromMatchResponse::EResponse_MIN;
constexpr CMsgClientToGCCommendPlayerFromMatchResponse_EResponse CMsgClientToGCCommendPlayerFromMatchResponse::EResponse_MAX;
constexpr int CMsgClientToGCCommendPlayerFromMatchResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestCheatReportsResponse_EResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[42];
}
bool CMsgClientToGCRequestCheatReportsResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCRequestCheatReportsResponse_EResult CMsgClientToGCRequestCheatReportsResponse::k_eSuccess;
constexpr CMsgClientToGCRequestCheatReportsResponse_EResult CMsgClientToGCRequestCheatReportsResponse::k_eInvalidPermission;
constexpr CMsgClientToGCRequestCheatReportsResponse_EResult CMsgClientToGCRequestCheatReportsResponse::k_eInternalError;
constexpr CMsgClientToGCRequestCheatReportsResponse_EResult CMsgClientToGCRequestCheatReportsResponse::EResult_MIN;
constexpr CMsgClientToGCRequestCheatReportsResponse_EResult CMsgClientToGCRequestCheatReportsResponse::EResult_MAX;
constexpr int CMsgClientToGCRequestCheatReportsResponse::EResult_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetHeroMMRRankingsResponse_EResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[43];
}
bool CMsgClientToGCGetHeroMMRRankingsResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetHeroMMRRankingsResponse_EResult CMsgClientToGCGetHeroMMRRankingsResponse::k_eSuccess;
constexpr CMsgClientToGCGetHeroMMRRankingsResponse_EResult CMsgClientToGCGetHeroMMRRankingsResponse::k_eInvalidPermission;
constexpr CMsgClientToGCGetHeroMMRRankingsResponse_EResult CMsgClientToGCGetHeroMMRRankingsResponse::k_eInternalError;
constexpr CMsgClientToGCGetHeroMMRRankingsResponse_EResult CMsgClientToGCGetHeroMMRRankingsResponse::k_eTooBusy;
constexpr CMsgClientToGCGetHeroMMRRankingsResponse_EResult CMsgClientToGCGetHeroMMRRankingsResponse::EResult_MIN;
constexpr CMsgClientToGCGetHeroMMRRankingsResponse_EResult CMsgClientToGCGetHeroMMRRankingsResponse::EResult_MAX;
constexpr int CMsgClientToGCGetHeroMMRRankingsResponse::EResult_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetLeaderboardResponse_EResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[44];
}
bool CMsgClientToGCGetLeaderboardResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetLeaderboardResponse_EResult CMsgClientToGCGetLeaderboardResponse::k_eSuccess;
constexpr CMsgClientToGCGetLeaderboardResponse_EResult CMsgClientToGCGetLeaderboardResponse::k_eInvalidArguments;
constexpr CMsgClientToGCGetLeaderboardResponse_EResult CMsgClientToGCGetLeaderboardResponse::k_eInternalError;
constexpr CMsgClientToGCGetLeaderboardResponse_EResult CMsgClientToGCGetLeaderboardResponse::k_eTooBusy;
constexpr CMsgClientToGCGetLeaderboardResponse_EResult CMsgClientToGCGetLeaderboardResponse::EResult_MIN;
constexpr CMsgClientToGCGetLeaderboardResponse_EResult CMsgClientToGCGetLeaderboardResponse::EResult_MAX;
constexpr int CMsgClientToGCGetLeaderboardResponse::EResult_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetAccountLeaderboardsResponse_EResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[45];
}
bool CMsgClientToGCGetAccountLeaderboardsResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CMsgClientToGCGetAccountLeaderboardsResponse_EResult CMsgClientToGCGetAccountLeaderboardsResponse::k_eSuccess;
constexpr CMsgClientToGCGetAccountLeaderboardsResponse_EResult CMsgClientToGCGetAccountLeaderboardsResponse::k_eInvalidPermission;
constexpr CMsgClientToGCGetAccountLeaderboardsResponse_EResult CMsgClientToGCGetAccountLeaderboardsResponse::k_eInternalError;
constexpr CMsgClientToGCGetAccountLeaderboardsResponse_EResult CMsgClientToGCGetAccountLeaderboardsResponse::k_eTooBusy;
constexpr CMsgClientToGCGetAccountLeaderboardsResponse_EResult CMsgClientToGCGetAccountLeaderboardsResponse::EResult_MIN;
constexpr CMsgClientToGCGetAccountLeaderboardsResponse_EResult CMsgClientToGCGetAccountLeaderboardsResponse::EResult_MAX;
constexpr int CMsgClientToGCGetAccountLeaderboardsResponse::EResult_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGCCitadelClientMessages_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[46];
}
bool EGCCitadelClientMessages_IsValid(int value) {
  switch (value) {
    case 9010:
    case 9011:
    case 9012:
    case 9013:
    case 9014:
    case 9015:
    case 9016:
    case 9017:
    case 9018:
    case 9019:
    case 9023:
    case 9024:
    case 9025:
    case 9026:
    case 9027:
    case 9028:
    case 9029:
    case 9030:
    case 9031:
    case 9100:
    case 9101:
    case 9102:
    case 9107:
    case 9108:
    case 9109:
    case 9110:
    case 9111:
    case 9112:
    case 9113:
    case 9116:
    case 9117:
    case 9123:
    case 9124:
    case 9125:
    case 9126:
    case 9127:
    case 9128:
    case 9129:
    case 9130:
    case 9131:
    case 9132:
    case 9133:
    case 9134:
    case 9135:
    case 9137:
    case 9138:
    case 9139:
    case 9142:
    case 9143:
    case 9164:
    case 9165:
    case 9166:
    case 9167:
    case 9168:
    case 9172:
    case 9173:
    case 9174:
    case 9175:
    case 9176:
    case 9177:
    case 9178:
    case 9179:
    case 9180:
    case 9181:
    case 9182:
    case 9183:
    case 9184:
    case 9185:
    case 9186:
    case 9187:
    case 9188:
    case 9189:
    case 9190:
    case 9193:
    case 9194:
    case 9195:
    case 9196:
    case 9197:
    case 9198:
    case 9199:
    case 9200:
    case 9201:
    case 9202:
    case 9203:
    case 9204:
    case 9205:
    case 9206:
    case 9207:
    case 9208:
    case 9209:
    case 9210:
    case 9211:
    case 9212:
    case 9213:
    case 9214:
    case 9215:
    case 9216:
    case 9217:
    case 9218:
    case 9219:
    case 9223:
    case 9224:
    case 9225:
    case 9228:
    case 9230:
    case 9231:
    case 9232:
    case 9233:
    case 9234:
    case 9235:
    case 9236:
    case 9237:
    case 9238:
    case 9239:
    case 9240:
    case 9241:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelAccountPermissionFlag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[47];
}
bool ECitadelAccountPermissionFlag_IsValid(int value) {
  switch (value) {
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelNewPlayerProgressFlag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[48];
}
bool ECitadelNewPlayerProgressFlag_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EProfileCardSlotType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[49];
}
bool EProfileCardSlotType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EDevBanReason_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[50];
}
bool EDevBanReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelClientAccountEvent_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[51];
}
bool ECitadelClientAccountEvent_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECommendType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_citadel_5fgcmessages_5fclient_2eproto);
  return file_level_enum_descriptors_citadel_5fgcmessages_5fclient_2eproto[52];
}
bool ECommendType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class CSOGameAccountClient::_Internal {
 public:
  using HasBits = decltype(std::declval<CSOGameAccountClient>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_wins(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_losses(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_kills(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_most_played_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_permissions(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_new_player_progress(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_hero_unlock_credits(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_mm_ban_until(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_comms_ban_until(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_low_priority_games_remaining(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_report_ban_until(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_ranked_badge_level(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_hero_labs_matches_since_test_hero(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
};

CSOGameAccountClient::CSOGameAccountClient(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CSOGameAccountClient)
}
CSOGameAccountClient::CSOGameAccountClient(const CSOGameAccountClient& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CSOGameAccountClient* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.flags_){}
    , decltype(_impl_.account_id_){}
    , decltype(_impl_.wins_){}
    , decltype(_impl_.losses_){}
    , decltype(_impl_.kills_){}
    , decltype(_impl_.permissions_){}
    , decltype(_impl_.most_played_hero_id_){}
    , decltype(_impl_.hero_unlock_credits_){}
    , decltype(_impl_.new_player_progress_){}
    , decltype(_impl_.mm_ban_until_){}
    , decltype(_impl_.comms_ban_until_){}
    , decltype(_impl_.low_priority_games_remaining_){}
    , decltype(_impl_.report_ban_until_){}
    , decltype(_impl_.ranked_badge_level_){}
    , decltype(_impl_.hero_labs_matches_since_test_hero_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.flags_, &from._impl_.flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.hero_labs_matches_since_test_hero_) -
    reinterpret_cast<char*>(&_impl_.flags_)) + sizeof(_impl_.hero_labs_matches_since_test_hero_));
  // @@protoc_insertion_point(copy_constructor:CSOGameAccountClient)
}

inline void CSOGameAccountClient::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.flags_){uint64_t{0u}}
    , decltype(_impl_.account_id_){0u}
    , decltype(_impl_.wins_){0u}
    , decltype(_impl_.losses_){0u}
    , decltype(_impl_.kills_){0u}
    , decltype(_impl_.permissions_){uint64_t{0u}}
    , decltype(_impl_.most_played_hero_id_){0u}
    , decltype(_impl_.hero_unlock_credits_){0u}
    , decltype(_impl_.new_player_progress_){uint64_t{0u}}
    , decltype(_impl_.mm_ban_until_){0u}
    , decltype(_impl_.comms_ban_until_){0u}
    , decltype(_impl_.low_priority_games_remaining_){0u}
    , decltype(_impl_.report_ban_until_){0u}
    , decltype(_impl_.ranked_badge_level_){0u}
    , decltype(_impl_.hero_labs_matches_since_test_hero_){0u}
  };
}

CSOGameAccountClient::~CSOGameAccountClient() {
  // @@protoc_insertion_point(destructor:CSOGameAccountClient)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CSOGameAccountClient::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CSOGameAccountClient::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CSOGameAccountClient::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOGameAccountClient)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.flags_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.hero_unlock_credits_) -
        reinterpret_cast<char*>(&_impl_.flags_)) + sizeof(_impl_.hero_unlock_credits_));
  }
  if (cached_has_bits & 0x00007f00u) {
    ::memset(&_impl_.new_player_progress_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.hero_labs_matches_since_test_hero_) -
        reinterpret_cast<char*>(&_impl_.new_player_progress_)) + sizeof(_impl_.hero_labs_matches_since_test_hero_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CSOGameAccountClient::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1 [(.key_field) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_flags(&has_bits);
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 wins = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_wins(&has_bits);
          _impl_.wins_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 losses = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_losses(&has_bits);
          _impl_.losses_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 kills = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_kills(&has_bits);
          _impl_.kills_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 most_played_hero_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_most_played_hero_id(&has_bits);
          _impl_.most_played_hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 permissions = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_permissions(&has_bits);
          _impl_.permissions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 new_player_progress = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_new_player_progress(&has_bits);
          _impl_.new_player_progress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_unlock_credits = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_hero_unlock_credits(&has_bits);
          _impl_.hero_unlock_credits_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 mm_ban_until = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_mm_ban_until(&has_bits);
          _impl_.mm_ban_until_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 comms_ban_until = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _Internal::set_has_comms_ban_until(&has_bits);
          _impl_.comms_ban_until_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 low_priority_games_remaining = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_low_priority_games_remaining(&has_bits);
          _impl_.low_priority_games_remaining_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 report_ban_until = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _Internal::set_has_report_ban_until(&has_bits);
          _impl_.report_ban_until_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 ranked_badge_level = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_ranked_badge_level(&has_bits);
          _impl_.ranked_badge_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_labs_matches_since_test_hero = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          _Internal::set_has_hero_labs_matches_since_test_hero(&has_bits);
          _impl_.hero_labs_matches_since_test_hero_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CSOGameAccountClient::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSOGameAccountClient)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1 [(.key_field) = true];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  // optional uint64 flags = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_flags(), target);
  }

  // optional uint32 wins = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_wins(), target);
  }

  // optional uint32 losses = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_losses(), target);
  }

  // optional uint32 kills = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_kills(), target);
  }

  // optional uint32 most_played_hero_id = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_most_played_hero_id(), target);
  }

  // optional uint64 permissions = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(7, this->_internal_permissions(), target);
  }

  // optional uint64 new_player_progress = 8;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(8, this->_internal_new_player_progress(), target);
  }

  // optional uint32 hero_unlock_credits = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(9, this->_internal_hero_unlock_credits(), target);
  }

  // optional uint32 mm_ban_until = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(10, this->_internal_mm_ban_until(), target);
  }

  // optional uint32 comms_ban_until = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(11, this->_internal_comms_ban_until(), target);
  }

  // optional uint32 low_priority_games_remaining = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(12, this->_internal_low_priority_games_remaining(), target);
  }

  // optional uint32 report_ban_until = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(13, this->_internal_report_ban_until(), target);
  }

  // optional uint32 ranked_badge_level = 14;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(14, this->_internal_ranked_badge_level(), target);
  }

  // optional uint32 hero_labs_matches_since_test_hero = 21;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(21, this->_internal_hero_labs_matches_since_test_hero(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOGameAccountClient)
  return target;
}

size_t CSOGameAccountClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOGameAccountClient)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint64 flags = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_flags());
    }

    // optional uint32 account_id = 1 [(.key_field) = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
    }

    // optional uint32 wins = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_wins());
    }

    // optional uint32 losses = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_losses());
    }

    // optional uint32 kills = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_kills());
    }

    // optional uint64 permissions = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_permissions());
    }

    // optional uint32 most_played_hero_id = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_most_played_hero_id());
    }

    // optional uint32 hero_unlock_credits = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_unlock_credits());
    }

  }
  if (cached_has_bits & 0x00007f00u) {
    // optional uint64 new_player_progress = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_new_player_progress());
    }

    // optional uint32 mm_ban_until = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_mm_ban_until());
    }

    // optional uint32 comms_ban_until = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_comms_ban_until());
    }

    // optional uint32 low_priority_games_remaining = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_low_priority_games_remaining());
    }

    // optional uint32 report_ban_until = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_report_ban_until());
    }

    // optional uint32 ranked_badge_level = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_ranked_badge_level());
    }

    // optional uint32 hero_labs_matches_since_test_hero = 21;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::UInt32Size(
          this->_internal_hero_labs_matches_since_test_hero());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CSOGameAccountClient::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CSOGameAccountClient::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CSOGameAccountClient::GetClassData() const { return &_class_data_; }


void CSOGameAccountClient::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CSOGameAccountClient*>(&to_msg);
  auto& from = static_cast<const CSOGameAccountClient&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSOGameAccountClient)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.wins_ = from._impl_.wins_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.losses_ = from._impl_.losses_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.kills_ = from._impl_.kills_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.permissions_ = from._impl_.permissions_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.most_played_hero_id_ = from._impl_.most_played_hero_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.hero_unlock_credits_ = from._impl_.hero_unlock_credits_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.new_player_progress_ = from._impl_.new_player_progress_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.mm_ban_until_ = from._impl_.mm_ban_until_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.comms_ban_until_ = from._impl_.comms_ban_until_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.low_priority_games_remaining_ = from._impl_.low_priority_games_remaining_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.report_ban_until_ = from._impl_.report_ban_until_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.ranked_badge_level_ = from._impl_.ranked_badge_level_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.hero_labs_matches_since_test_hero_ = from._impl_.hero_labs_matches_since_test_hero_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CSOGameAccountClient::CopyFrom(const CSOGameAccountClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOGameAccountClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOGameAccountClient::IsInitialized() const {
  return true;
}

void CSOGameAccountClient::InternalSwap(CSOGameAccountClient* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSOGameAccountClient, _impl_.hero_labs_matches_since_test_hero_)
      + sizeof(CSOGameAccountClient::_impl_.hero_labs_matches_since_test_hero_)
      - PROTOBUF_FIELD_OFFSET(CSOGameAccountClient, _impl_.flags_)>(
          reinterpret_cast<char*>(&_impl_.flags_),
          reinterpret_cast<char*>(&other->_impl_.flags_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CSOGameAccountClient::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[0]);
}

// ===================================================================

class CSOAccountSyncStorage::_Internal {
 public:
  using HasBits = decltype(std::declval<CSOAccountSyncStorage>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CSOAccountSyncStorage::CSOAccountSyncStorage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CSOAccountSyncStorage)
}
CSOAccountSyncStorage::CSOAccountSyncStorage(const CSOAccountSyncStorage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CSOAccountSyncStorage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.value_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.value_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.value_));
  // @@protoc_insertion_point(copy_constructor:CSOAccountSyncStorage)
}

inline void CSOAccountSyncStorage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){0u}
    , decltype(_impl_.id_){0u}
    , decltype(_impl_.value_){0u}
  };
}

CSOAccountSyncStorage::~CSOAccountSyncStorage() {
  // @@protoc_insertion_point(destructor:CSOAccountSyncStorage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CSOAccountSyncStorage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CSOAccountSyncStorage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CSOAccountSyncStorage::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOAccountSyncStorage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.value_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CSOAccountSyncStorage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_id(&has_bits);
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_value(&has_bits);
          _impl_.value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CSOAccountSyncStorage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSOAccountSyncStorage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  // optional uint32 id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_id(), target);
  }

  // optional uint32 value = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOAccountSyncStorage)
  return target;
}

size_t CSOAccountSyncStorage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOAccountSyncStorage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
    }

    // optional uint32 id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_id());
    }

    // optional uint32 value = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CSOAccountSyncStorage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CSOAccountSyncStorage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CSOAccountSyncStorage::GetClassData() const { return &_class_data_; }


void CSOAccountSyncStorage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CSOAccountSyncStorage*>(&to_msg);
  auto& from = static_cast<const CSOAccountSyncStorage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSOAccountSyncStorage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.value_ = from._impl_.value_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CSOAccountSyncStorage::CopyFrom(const CSOAccountSyncStorage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOAccountSyncStorage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOAccountSyncStorage::IsInitialized() const {
  return true;
}

void CSOAccountSyncStorage::InternalSwap(CSOAccountSyncStorage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSOAccountSyncStorage, _impl_.value_)
      + sizeof(CSOAccountSyncStorage::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(CSOAccountSyncStorage, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CSOAccountSyncStorage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[1]);
}

// ===================================================================

class CSOAccountHeroInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CSOAccountHeroInfo>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_wins(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_kills(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CSOAccountHeroInfo::CSOAccountHeroInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CSOAccountHeroInfo)
}
CSOAccountHeroInfo::CSOAccountHeroInfo(const CSOAccountHeroInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CSOAccountHeroInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){}
    , decltype(_impl_.hero_id_){}
    , decltype(_impl_.status_){}
    , decltype(_impl_.wins_){}
    , decltype(_impl_.kills_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.kills_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.kills_));
  // @@protoc_insertion_point(copy_constructor:CSOAccountHeroInfo)
}

inline void CSOAccountHeroInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){0u}
    , decltype(_impl_.hero_id_){0u}
    , decltype(_impl_.status_){0}
    , decltype(_impl_.wins_){0u}
    , decltype(_impl_.kills_){0u}
  };
}

CSOAccountHeroInfo::~CSOAccountHeroInfo() {
  // @@protoc_insertion_point(destructor:CSOAccountHeroInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CSOAccountHeroInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CSOAccountHeroInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CSOAccountHeroInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOAccountHeroInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.kills_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.kills_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CSOAccountHeroInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1 [(.key_field) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_hero_id(&has_bits);
          _impl_.hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CSOAccountHeroInfo.EHeroStatus status = 3 [default = k_eLocked];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CSOAccountHeroInfo_EHeroStatus_IsValid(val))) {
            _internal_set_status(static_cast<::CSOAccountHeroInfo_EHeroStatus>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 wins = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_wins(&has_bits);
          _impl_.wins_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 kills = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_kills(&has_bits);
          _impl_.kills_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CSOAccountHeroInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSOAccountHeroInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1 [(.key_field) = true];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  // optional uint32 hero_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_hero_id(), target);
  }

  // optional .CSOAccountHeroInfo.EHeroStatus status = 3 [default = k_eLocked];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_status(), target);
  }

  // optional uint32 wins = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_wins(), target);
  }

  // optional uint32 kills = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_kills(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOAccountHeroInfo)
  return target;
}

size_t CSOAccountHeroInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOAccountHeroInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint32 account_id = 1 [(.key_field) = true];
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
    }

    // optional uint32 hero_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_id());
    }

    // optional .CSOAccountHeroInfo.EHeroStatus status = 3 [default = k_eLocked];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
    }

    // optional uint32 wins = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_wins());
    }

    // optional uint32 kills = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_kills());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CSOAccountHeroInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CSOAccountHeroInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CSOAccountHeroInfo::GetClassData() const { return &_class_data_; }


void CSOAccountHeroInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CSOAccountHeroInfo*>(&to_msg);
  auto& from = static_cast<const CSOAccountHeroInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSOAccountHeroInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.hero_id_ = from._impl_.hero_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.status_ = from._impl_.status_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.wins_ = from._impl_.wins_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.kills_ = from._impl_.kills_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CSOAccountHeroInfo::CopyFrom(const CSOAccountHeroInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOAccountHeroInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOAccountHeroInfo::IsInitialized() const {
  return true;
}

void CSOAccountHeroInfo::InternalSwap(CSOAccountHeroInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSOAccountHeroInfo, _impl_.kills_)
      + sizeof(CSOAccountHeroInfo::_impl_.kills_)
      - PROTOBUF_FIELD_OFFSET(CSOAccountHeroInfo, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CSOAccountHeroInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[2]);
}

// ===================================================================

class CMsgCitadelClientHello::_Internal {
 public:
};

CMsgCitadelClientHello::CMsgCitadelClientHello(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CMsgCitadelClientHello)
}
CMsgCitadelClientHello::CMsgCitadelClientHello(const CMsgCitadelClientHello& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CMsgCitadelClientHello* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgCitadelClientHello)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgCitadelClientHello::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgCitadelClientHello::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CMsgCitadelClientHello::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[3]);
}

// ===================================================================

class CMsgClientToGCStartMatchmaking::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCStartMatchmaking>()._impl_._has_bits_);
  static void set_has_client_version(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_client_platform(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::CMsgStartFindingMatchInfo& match_info(const CMsgClientToGCStartMatchmaking* msg);
  static void set_has_match_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::CMsgRegionPingTimesClient& ping_times(const CMsgClientToGCStartMatchmaking* msg);
  static void set_has_ping_times(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgHeroSelectionMatchInfo& heroes(const CMsgClientToGCStartMatchmaking* msg);
  static void set_has_heroes(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::CMsgStartFindingMatchInfo&
CMsgClientToGCStartMatchmaking::_Internal::match_info(const CMsgClientToGCStartMatchmaking* msg) {
  return *msg->_impl_.match_info_;
}
const ::CMsgRegionPingTimesClient&
CMsgClientToGCStartMatchmaking::_Internal::ping_times(const CMsgClientToGCStartMatchmaking* msg) {
  return *msg->_impl_.ping_times_;
}
const ::CMsgHeroSelectionMatchInfo&
CMsgClientToGCStartMatchmaking::_Internal::heroes(const CMsgClientToGCStartMatchmaking* msg) {
  return *msg->_impl_.heroes_;
}
void CMsgClientToGCStartMatchmaking::clear_match_info() {
  if (_impl_.match_info_ != nullptr) _impl_.match_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCStartMatchmaking::clear_ping_times() {
  if (_impl_.ping_times_ != nullptr) _impl_.ping_times_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCStartMatchmaking::clear_heroes() {
  if (_impl_.heroes_ != nullptr) _impl_.heroes_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
CMsgClientToGCStartMatchmaking::CMsgClientToGCStartMatchmaking(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCStartMatchmaking)
}
CMsgClientToGCStartMatchmaking::CMsgClientToGCStartMatchmaking(const CMsgClientToGCStartMatchmaking& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCStartMatchmaking* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_info_){nullptr}
    , decltype(_impl_.ping_times_){nullptr}
    , decltype(_impl_.heroes_){nullptr}
    , decltype(_impl_.client_version_){}
    , decltype(_impl_.client_platform_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_match_info()) {
    _this->_impl_.match_info_ = new ::CMsgStartFindingMatchInfo(*from._impl_.match_info_);
  }
  if (from._internal_has_ping_times()) {
    _this->_impl_.ping_times_ = new ::CMsgRegionPingTimesClient(*from._impl_.ping_times_);
  }
  if (from._internal_has_heroes()) {
    _this->_impl_.heroes_ = new ::CMsgHeroSelectionMatchInfo(*from._impl_.heroes_);
  }
  ::memcpy(&_impl_.client_version_, &from._impl_.client_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.client_platform_) -
    reinterpret_cast<char*>(&_impl_.client_version_)) + sizeof(_impl_.client_platform_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCStartMatchmaking)
}

inline void CMsgClientToGCStartMatchmaking::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_info_){nullptr}
    , decltype(_impl_.ping_times_){nullptr}
    , decltype(_impl_.heroes_){nullptr}
    , decltype(_impl_.client_version_){0u}
    , decltype(_impl_.client_platform_){0}
  };
}

CMsgClientToGCStartMatchmaking::~CMsgClientToGCStartMatchmaking() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCStartMatchmaking)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCStartMatchmaking::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.match_info_;
  if (this != internal_default_instance()) delete _impl_.ping_times_;
  if (this != internal_default_instance()) delete _impl_.heroes_;
}

void CMsgClientToGCStartMatchmaking::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCStartMatchmaking::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCStartMatchmaking)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.match_info_ != nullptr);
      _impl_.match_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.ping_times_ != nullptr);
      _impl_.ping_times_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.heroes_ != nullptr);
      _impl_.heroes_->Clear();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.client_version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.client_platform_) -
        reinterpret_cast<char*>(&_impl_.client_version_)) + sizeof(_impl_.client_platform_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCStartMatchmaking::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 client_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_client_version(&has_bits);
          _impl_.client_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .EGCPlatform client_platform = 2 [default = k_eGCPlatform_None];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EGCPlatform_IsValid(val))) {
            _internal_set_client_platform(static_cast<::EGCPlatform>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgStartFindingMatchInfo match_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_match_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgRegionPingTimesClient ping_times = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ping_times(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgHeroSelectionMatchInfo heroes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_heroes(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCStartMatchmaking::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCStartMatchmaking)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 client_version = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_client_version(), target);
  }

  // optional .EGCPlatform client_platform = 2 [default = k_eGCPlatform_None];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_client_platform(), target);
  }

  // optional .CMsgStartFindingMatchInfo match_info = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::match_info(this),
        _Internal::match_info(this).GetCachedSize(), target, stream);
  }

  // optional .CMsgRegionPingTimesClient ping_times = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::ping_times(this),
        _Internal::ping_times(this).GetCachedSize(), target, stream);
  }

  // optional .CMsgHeroSelectionMatchInfo heroes = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::heroes(this),
        _Internal::heroes(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCStartMatchmaking)
  return target;
}

size_t CMsgClientToGCStartMatchmaking::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCStartMatchmaking)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .CMsgStartFindingMatchInfo match_info = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.match_info_);
    }

    // optional .CMsgRegionPingTimesClient ping_times = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ping_times_);
    }

    // optional .CMsgHeroSelectionMatchInfo heroes = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.heroes_);
    }

    // optional uint32 client_version = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_client_version());
    }

    // optional .EGCPlatform client_platform = 2 [default = k_eGCPlatform_None];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_client_platform());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCStartMatchmaking::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCStartMatchmaking::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCStartMatchmaking::GetClassData() const { return &_class_data_; }


void CMsgClientToGCStartMatchmaking::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCStartMatchmaking*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCStartMatchmaking&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCStartMatchmaking)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_match_info()->::CMsgStartFindingMatchInfo::MergeFrom(
          from._internal_match_info());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_ping_times()->::CMsgRegionPingTimesClient::MergeFrom(
          from._internal_ping_times());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_heroes()->::CMsgHeroSelectionMatchInfo::MergeFrom(
          from._internal_heroes());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.client_version_ = from._impl_.client_version_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.client_platform_ = from._impl_.client_platform_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCStartMatchmaking::CopyFrom(const CMsgClientToGCStartMatchmaking& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCStartMatchmaking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCStartMatchmaking::IsInitialized() const {
  return true;
}

void CMsgClientToGCStartMatchmaking::InternalSwap(CMsgClientToGCStartMatchmaking* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCStartMatchmaking, _impl_.client_platform_)
      + sizeof(CMsgClientToGCStartMatchmaking::_impl_.client_platform_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCStartMatchmaking, _impl_.match_info_)>(
          reinterpret_cast<char*>(&_impl_.match_info_),
          reinterpret_cast<char*>(&other->_impl_.match_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCStartMatchmaking::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[4]);
}

// ===================================================================

class CMsgClientToGCStartMatchmakingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCStartMatchmakingResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_time_stamp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_debug_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCStartMatchmakingResponse::CMsgClientToGCStartMatchmakingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCStartMatchmakingResponse)
}
CMsgClientToGCStartMatchmakingResponse::CMsgClientToGCStartMatchmakingResponse(const CMsgClientToGCStartMatchmakingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCStartMatchmakingResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.debug_message_){}
    , decltype(_impl_.result_){}
    , decltype(_impl_.time_stamp_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.debug_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.debug_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_debug_message()) {
    _this->_impl_.debug_message_.Set(from._internal_debug_message(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.time_stamp_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.time_stamp_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCStartMatchmakingResponse)
}

inline void CMsgClientToGCStartMatchmakingResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.debug_message_){}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.time_stamp_){0u}
  };
  _impl_.debug_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.debug_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCStartMatchmakingResponse::~CMsgClientToGCStartMatchmakingResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCStartMatchmakingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCStartMatchmakingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.debug_message_.Destroy();
}

void CMsgClientToGCStartMatchmakingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCStartMatchmakingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCStartMatchmakingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.debug_message_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.time_stamp_) -
        reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.time_stamp_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCStartMatchmakingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCStartMatchmakingResponse.EResultCode result = 1 [default = k_EResult_OK];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCStartMatchmakingResponse_EResultCode_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCStartMatchmakingResponse_EResultCode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 time_stamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_time_stamp(&has_bits);
          _impl_.time_stamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string debug_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_debug_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCStartMatchmakingResponse.debug_message");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCStartMatchmakingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCStartMatchmakingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCStartMatchmakingResponse.EResultCode result = 1 [default = k_EResult_OK];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional uint32 time_stamp = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_time_stamp(), target);
  }

  // optional string debug_message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_debug_message().data(), static_cast<int>(this->_internal_debug_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCStartMatchmakingResponse.debug_message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_debug_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCStartMatchmakingResponse)
  return target;
}

size_t CMsgClientToGCStartMatchmakingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCStartMatchmakingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string debug_message = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_debug_message());
    }

    // optional .CMsgClientToGCStartMatchmakingResponse.EResultCode result = 1 [default = k_EResult_OK];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional uint32 time_stamp = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_time_stamp());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCStartMatchmakingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCStartMatchmakingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCStartMatchmakingResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCStartMatchmakingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCStartMatchmakingResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCStartMatchmakingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCStartMatchmakingResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_debug_message(from._internal_debug_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.time_stamp_ = from._impl_.time_stamp_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCStartMatchmakingResponse::CopyFrom(const CMsgClientToGCStartMatchmakingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCStartMatchmakingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCStartMatchmakingResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCStartMatchmakingResponse::InternalSwap(CMsgClientToGCStartMatchmakingResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.debug_message_, lhs_arena,
      &other->_impl_.debug_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCStartMatchmakingResponse, _impl_.time_stamp_)
      + sizeof(CMsgClientToGCStartMatchmakingResponse::_impl_.time_stamp_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCStartMatchmakingResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCStartMatchmakingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[5]);
}

// ===================================================================

class CMsgClientToGCStopMatchmaking::_Internal {
 public:
};

CMsgClientToGCStopMatchmaking::CMsgClientToGCStopMatchmaking(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCStopMatchmaking)
}
CMsgClientToGCStopMatchmaking::CMsgClientToGCStopMatchmaking(const CMsgClientToGCStopMatchmaking& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CMsgClientToGCStopMatchmaking* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCStopMatchmaking)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCStopMatchmaking::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCStopMatchmaking::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCStopMatchmaking::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[6]);
}

// ===================================================================

class CMsgClientToGCStopMatchmakingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCStopMatchmakingResponse>()._impl_._has_bits_);
  static void set_has_success(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCStopMatchmakingResponse::CMsgClientToGCStopMatchmakingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCStopMatchmakingResponse)
}
CMsgClientToGCStopMatchmakingResponse::CMsgClientToGCStopMatchmakingResponse(const CMsgClientToGCStopMatchmakingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCStopMatchmakingResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.success_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCStopMatchmakingResponse)
}

inline void CMsgClientToGCStopMatchmakingResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.success_){false}
  };
}

CMsgClientToGCStopMatchmakingResponse::~CMsgClientToGCStopMatchmakingResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCStopMatchmakingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCStopMatchmakingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCStopMatchmakingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCStopMatchmakingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCStopMatchmakingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCStopMatchmakingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_success(&has_bits);
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCStopMatchmakingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCStopMatchmakingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCStopMatchmakingResponse)
  return target;
}

size_t CMsgClientToGCStopMatchmakingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCStopMatchmakingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool success = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCStopMatchmakingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCStopMatchmakingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCStopMatchmakingResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCStopMatchmakingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCStopMatchmakingResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCStopMatchmakingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCStopMatchmakingResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_success()) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCStopMatchmakingResponse::CopyFrom(const CMsgClientToGCStopMatchmakingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCStopMatchmakingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCStopMatchmakingResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCStopMatchmakingResponse::InternalSwap(CMsgClientToGCStopMatchmakingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCStopMatchmakingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[7]);
}

// ===================================================================

class CMsgGCToClientMatchmakingStopped::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientMatchmakingStopped>()._impl_._has_bits_);
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCToClientMatchmakingStopped::CMsgGCToClientMatchmakingStopped(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientMatchmakingStopped)
}
CMsgGCToClientMatchmakingStopped::CMsgGCToClientMatchmakingStopped(const CMsgGCToClientMatchmakingStopped& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientMatchmakingStopped* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reason_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reason_ = from._impl_.reason_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientMatchmakingStopped)
}

inline void CMsgGCToClientMatchmakingStopped::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reason_){0}
  };
}

CMsgGCToClientMatchmakingStopped::~CMsgGCToClientMatchmakingStopped() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientMatchmakingStopped)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientMatchmakingStopped::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCToClientMatchmakingStopped::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientMatchmakingStopped::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientMatchmakingStopped)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientMatchmakingStopped::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgGCToClientMatchmakingStopped.EReason reason = 1 [default = k_EResult_Unspecified];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgGCToClientMatchmakingStopped_EReason_IsValid(val))) {
            _internal_set_reason(static_cast<::CMsgGCToClientMatchmakingStopped_EReason>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientMatchmakingStopped::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientMatchmakingStopped)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgGCToClientMatchmakingStopped.EReason reason = 1 [default = k_EResult_Unspecified];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientMatchmakingStopped)
  return target;
}

size_t CMsgGCToClientMatchmakingStopped::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientMatchmakingStopped)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgGCToClientMatchmakingStopped.EReason reason = 1 [default = k_EResult_Unspecified];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientMatchmakingStopped::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientMatchmakingStopped::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientMatchmakingStopped::GetClassData() const { return &_class_data_; }


void CMsgGCToClientMatchmakingStopped::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientMatchmakingStopped*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientMatchmakingStopped&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientMatchmakingStopped)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_reason()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientMatchmakingStopped::CopyFrom(const CMsgGCToClientMatchmakingStopped& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientMatchmakingStopped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientMatchmakingStopped::IsInitialized() const {
  return true;
}

void CMsgGCToClientMatchmakingStopped::InternalSwap(CMsgGCToClientMatchmakingStopped* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.reason_, other->_impl_.reason_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientMatchmakingStopped::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[8]);
}

// ===================================================================

class CMsgClientToGCLeaveLobby::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCLeaveLobby>()._impl_._has_bits_);
  static void set_has_lobby_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCLeaveLobby::CMsgClientToGCLeaveLobby(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCLeaveLobby)
}
CMsgClientToGCLeaveLobby::CMsgClientToGCLeaveLobby(const CMsgClientToGCLeaveLobby& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCLeaveLobby* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.lobby_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.lobby_id_ = from._impl_.lobby_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCLeaveLobby)
}

inline void CMsgClientToGCLeaveLobby::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.lobby_id_){uint64_t{0u}}
  };
}

CMsgClientToGCLeaveLobby::~CMsgClientToGCLeaveLobby() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCLeaveLobby)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCLeaveLobby::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCLeaveLobby::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCLeaveLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCLeaveLobby)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lobby_id_ = uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCLeaveLobby::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 lobby_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_lobby_id(&has_bits);
          _impl_.lobby_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCLeaveLobby::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCLeaveLobby)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 lobby_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_lobby_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCLeaveLobby)
  return target;
}

size_t CMsgClientToGCLeaveLobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCLeaveLobby)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 lobby_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_lobby_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCLeaveLobby::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCLeaveLobby::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCLeaveLobby::GetClassData() const { return &_class_data_; }


void CMsgClientToGCLeaveLobby::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCLeaveLobby*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCLeaveLobby&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCLeaveLobby)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_lobby_id()) {
    _this->_internal_set_lobby_id(from._internal_lobby_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCLeaveLobby::CopyFrom(const CMsgClientToGCLeaveLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCLeaveLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCLeaveLobby::IsInitialized() const {
  return true;
}

void CMsgClientToGCLeaveLobby::InternalSwap(CMsgClientToGCLeaveLobby* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.lobby_id_, other->_impl_.lobby_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCLeaveLobby::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[9]);
}

// ===================================================================

class CMsgClientToGCLeaveLobbyResponse::_Internal {
 public:
};

CMsgClientToGCLeaveLobbyResponse::CMsgClientToGCLeaveLobbyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCLeaveLobbyResponse)
}
CMsgClientToGCLeaveLobbyResponse::CMsgClientToGCLeaveLobbyResponse(const CMsgClientToGCLeaveLobbyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CMsgClientToGCLeaveLobbyResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCLeaveLobbyResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCLeaveLobbyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCLeaveLobbyResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCLeaveLobbyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[10]);
}

// ===================================================================

class CMsgClientWelcomeCitadel::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientWelcomeCitadel>()._impl_._has_bits_);
  static void set_has_currency(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_compatibility_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_region_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

void CMsgClientWelcomeCitadel::clear_extra_messages() {
  _impl_.extra_messages_.Clear();
}
CMsgClientWelcomeCitadel::CMsgClientWelcomeCitadel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientWelcomeCitadel)
}
CMsgClientWelcomeCitadel::CMsgClientWelcomeCitadel(const CMsgClientWelcomeCitadel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientWelcomeCitadel* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.extra_messages_){from._impl_.extra_messages_}
    , decltype(_impl_.currency_){}
    , decltype(_impl_.compatibility_version_){}
    , decltype(_impl_.region_mode_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.currency_, &from._impl_.currency_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.region_mode_) -
    reinterpret_cast<char*>(&_impl_.currency_)) + sizeof(_impl_.region_mode_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWelcomeCitadel)
}

inline void CMsgClientWelcomeCitadel::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.extra_messages_){arena}
    , decltype(_impl_.currency_){0u}
    , decltype(_impl_.compatibility_version_){0u}
    , decltype(_impl_.region_mode_){0}
  };
}

CMsgClientWelcomeCitadel::~CMsgClientWelcomeCitadel() {
  // @@protoc_insertion_point(destructor:CMsgClientWelcomeCitadel)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientWelcomeCitadel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.extra_messages_.~RepeatedPtrField();
}

void CMsgClientWelcomeCitadel::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientWelcomeCitadel::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWelcomeCitadel)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extra_messages_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.currency_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.region_mode_) -
        reinterpret_cast<char*>(&_impl_.currency_)) + sizeof(_impl_.region_mode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientWelcomeCitadel::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 currency = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_currency(&has_bits);
          _impl_.currency_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .CExtraMsgBlock extra_messages = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_extra_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional uint32 compatibility_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_compatibility_version(&has_bits);
          _impl_.compatibility_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelRegionMode region_mode = 4 [default = k_ECitadelRegionMode_ROW];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelRegionMode_IsValid(val))) {
            _internal_set_region_mode(static_cast<::ECitadelRegionMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientWelcomeCitadel::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWelcomeCitadel)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 currency = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_currency(), target);
  }

  // repeated .CExtraMsgBlock extra_messages = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_extra_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_extra_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional uint32 compatibility_version = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_compatibility_version(), target);
  }

  // optional .ECitadelRegionMode region_mode = 4 [default = k_ECitadelRegionMode_ROW];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_region_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWelcomeCitadel)
  return target;
}

size_t CMsgClientWelcomeCitadel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWelcomeCitadel)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CExtraMsgBlock extra_messages = 2;
  total_size += 1UL * this->_internal_extra_messages_size();
  for (const auto& msg : this->_impl_.extra_messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 currency = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_currency());
    }

    // optional uint32 compatibility_version = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_compatibility_version());
    }

    // optional .ECitadelRegionMode region_mode = 4 [default = k_ECitadelRegionMode_ROW];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_region_mode());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientWelcomeCitadel::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientWelcomeCitadel::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientWelcomeCitadel::GetClassData() const { return &_class_data_; }


void CMsgClientWelcomeCitadel::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientWelcomeCitadel*>(&to_msg);
  auto& from = static_cast<const CMsgClientWelcomeCitadel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWelcomeCitadel)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.extra_messages_.MergeFrom(from._impl_.extra_messages_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.currency_ = from._impl_.currency_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.compatibility_version_ = from._impl_.compatibility_version_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.region_mode_ = from._impl_.region_mode_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientWelcomeCitadel::CopyFrom(const CMsgClientWelcomeCitadel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWelcomeCitadel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWelcomeCitadel::IsInitialized() const {
  return true;
}

void CMsgClientWelcomeCitadel::InternalSwap(CMsgClientWelcomeCitadel* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extra_messages_.InternalSwap(&other->_impl_.extra_messages_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientWelcomeCitadel, _impl_.region_mode_)
      + sizeof(CMsgClientWelcomeCitadel::_impl_.region_mode_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientWelcomeCitadel, _impl_.currency_)>(
          reinterpret_cast<char*>(&_impl_.currency_),
          reinterpret_cast<char*>(&other->_impl_.currency_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientWelcomeCitadel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[11]);
}

// ===================================================================

class CMsgClientToGCIsInMatchmaking::_Internal {
 public:
};

CMsgClientToGCIsInMatchmaking::CMsgClientToGCIsInMatchmaking(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCIsInMatchmaking)
}
CMsgClientToGCIsInMatchmaking::CMsgClientToGCIsInMatchmaking(const CMsgClientToGCIsInMatchmaking& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CMsgClientToGCIsInMatchmaking* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCIsInMatchmaking)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCIsInMatchmaking::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCIsInMatchmaking::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCIsInMatchmaking::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[12]);
}

// ===================================================================

class CMsgClientToGCIsInMatchmakingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCIsInMatchmakingResponse>()._impl_._has_bits_);
  static void set_has_in_matchmaking(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCIsInMatchmakingResponse::CMsgClientToGCIsInMatchmakingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCIsInMatchmakingResponse)
}
CMsgClientToGCIsInMatchmakingResponse::CMsgClientToGCIsInMatchmakingResponse(const CMsgClientToGCIsInMatchmakingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCIsInMatchmakingResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.in_matchmaking_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.in_matchmaking_ = from._impl_.in_matchmaking_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCIsInMatchmakingResponse)
}

inline void CMsgClientToGCIsInMatchmakingResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.in_matchmaking_){false}
  };
}

CMsgClientToGCIsInMatchmakingResponse::~CMsgClientToGCIsInMatchmakingResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCIsInMatchmakingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCIsInMatchmakingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCIsInMatchmakingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCIsInMatchmakingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCIsInMatchmakingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.in_matchmaking_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCIsInMatchmakingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool in_matchmaking = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_in_matchmaking(&has_bits);
          _impl_.in_matchmaking_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCIsInMatchmakingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCIsInMatchmakingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool in_matchmaking = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_in_matchmaking(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCIsInMatchmakingResponse)
  return target;
}

size_t CMsgClientToGCIsInMatchmakingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCIsInMatchmakingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool in_matchmaking = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCIsInMatchmakingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCIsInMatchmakingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCIsInMatchmakingResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCIsInMatchmakingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCIsInMatchmakingResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCIsInMatchmakingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCIsInMatchmakingResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_in_matchmaking()) {
    _this->_internal_set_in_matchmaking(from._internal_in_matchmaking());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCIsInMatchmakingResponse::CopyFrom(const CMsgClientToGCIsInMatchmakingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCIsInMatchmakingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCIsInMatchmakingResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCIsInMatchmakingResponse::InternalSwap(CMsgClientToGCIsInMatchmakingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.in_matchmaking_, other->_impl_.in_matchmaking_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCIsInMatchmakingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[13]);
}

// ===================================================================

class CMsgDevMatchInfo_MatchPlayer::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgDevMatchInfo_MatchPlayer>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_team(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_abandoned(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgDevMatchInfo_MatchPlayer::CMsgDevMatchInfo_MatchPlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgDevMatchInfo.MatchPlayer)
}
CMsgDevMatchInfo_MatchPlayer::CMsgDevMatchInfo_MatchPlayer(const CMsgDevMatchInfo_MatchPlayer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgDevMatchInfo_MatchPlayer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){}
    , decltype(_impl_.team_){}
    , decltype(_impl_.abandoned_){}
    , decltype(_impl_.hero_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.hero_id_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.hero_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgDevMatchInfo.MatchPlayer)
}

inline void CMsgDevMatchInfo_MatchPlayer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){0u}
    , decltype(_impl_.team_){0}
    , decltype(_impl_.abandoned_){false}
    , decltype(_impl_.hero_id_){0u}
  };
}

CMsgDevMatchInfo_MatchPlayer::~CMsgDevMatchInfo_MatchPlayer() {
  // @@protoc_insertion_point(destructor:CMsgDevMatchInfo.MatchPlayer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgDevMatchInfo_MatchPlayer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgDevMatchInfo_MatchPlayer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgDevMatchInfo_MatchPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDevMatchInfo.MatchPlayer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.hero_id_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.hero_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgDevMatchInfo_MatchPlayer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelLobbyTeam team = 2 [default = k_ECitadelLobbyTeam_Team0];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelLobbyTeam_IsValid(val))) {
            _internal_set_team(static_cast<::ECitadelLobbyTeam>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional bool abandoned = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_abandoned(&has_bits);
          _impl_.abandoned_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_hero_id(&has_bits);
          _impl_.hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgDevMatchInfo_MatchPlayer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDevMatchInfo.MatchPlayer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  // optional .ECitadelLobbyTeam team = 2 [default = k_ECitadelLobbyTeam_Team0];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_team(), target);
  }

  // optional bool abandoned = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_abandoned(), target);
  }

  // optional uint32 hero_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_hero_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDevMatchInfo.MatchPlayer)
  return target;
}

size_t CMsgDevMatchInfo_MatchPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDevMatchInfo.MatchPlayer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
    }

    // optional .ECitadelLobbyTeam team = 2 [default = k_ECitadelLobbyTeam_Team0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_team());
    }

    // optional bool abandoned = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional uint32 hero_id = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgDevMatchInfo_MatchPlayer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgDevMatchInfo_MatchPlayer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgDevMatchInfo_MatchPlayer::GetClassData() const { return &_class_data_; }


void CMsgDevMatchInfo_MatchPlayer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgDevMatchInfo_MatchPlayer*>(&to_msg);
  auto& from = static_cast<const CMsgDevMatchInfo_MatchPlayer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgDevMatchInfo.MatchPlayer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.team_ = from._impl_.team_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.abandoned_ = from._impl_.abandoned_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.hero_id_ = from._impl_.hero_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgDevMatchInfo_MatchPlayer::CopyFrom(const CMsgDevMatchInfo_MatchPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDevMatchInfo.MatchPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDevMatchInfo_MatchPlayer::IsInitialized() const {
  return true;
}

void CMsgDevMatchInfo_MatchPlayer::InternalSwap(CMsgDevMatchInfo_MatchPlayer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgDevMatchInfo_MatchPlayer, _impl_.hero_id_)
      + sizeof(CMsgDevMatchInfo_MatchPlayer::_impl_.hero_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgDevMatchInfo_MatchPlayer, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgDevMatchInfo_MatchPlayer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[14]);
}

// ===================================================================

class CMsgDevMatchInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgDevMatchInfo>()._impl_._has_bits_);
  static void set_has_start_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_winning_team(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_lobby_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_net_worth_team_0(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_net_worth_team_1(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_duration_s(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_spectators(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_open_spectator_slots(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_objectives_mask_team0(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_objectives_mask_team1(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_match_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_game_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_match_score(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_region_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_compat_version(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
};

CMsgDevMatchInfo::CMsgDevMatchInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgDevMatchInfo)
}
CMsgDevMatchInfo::CMsgDevMatchInfo(const CMsgDevMatchInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgDevMatchInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.players_){from._impl_.players_}
    , decltype(_impl_.start_time_){}
    , decltype(_impl_.winning_team_){}
    , decltype(_impl_.match_id_){}
    , decltype(_impl_.lobby_id_){}
    , decltype(_impl_.net_worth_team_0_){}
    , decltype(_impl_.net_worth_team_1_){}
    , decltype(_impl_.duration_s_){}
    , decltype(_impl_.spectators_){}
    , decltype(_impl_.objectives_mask_team0_){}
    , decltype(_impl_.open_spectator_slots_){}
    , decltype(_impl_.match_mode_){}
    , decltype(_impl_.objectives_mask_team1_){}
    , decltype(_impl_.game_mode_){}
    , decltype(_impl_.match_score_){}
    , decltype(_impl_.region_mode_){}
    , decltype(_impl_.compat_version_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.start_time_, &from._impl_.start_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.compat_version_) -
    reinterpret_cast<char*>(&_impl_.start_time_)) + sizeof(_impl_.compat_version_));
  // @@protoc_insertion_point(copy_constructor:CMsgDevMatchInfo)
}

inline void CMsgDevMatchInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.players_){arena}
    , decltype(_impl_.start_time_){0u}
    , decltype(_impl_.winning_team_){0}
    , decltype(_impl_.match_id_){uint64_t{0u}}
    , decltype(_impl_.lobby_id_){uint64_t{0u}}
    , decltype(_impl_.net_worth_team_0_){0u}
    , decltype(_impl_.net_worth_team_1_){0u}
    , decltype(_impl_.duration_s_){0u}
    , decltype(_impl_.spectators_){0u}
    , decltype(_impl_.objectives_mask_team0_){uint64_t{0u}}
    , decltype(_impl_.open_spectator_slots_){0u}
    , decltype(_impl_.match_mode_){0}
    , decltype(_impl_.objectives_mask_team1_){uint64_t{0u}}
    , decltype(_impl_.game_mode_){0}
    , decltype(_impl_.match_score_){0u}
    , decltype(_impl_.region_mode_){0}
    , decltype(_impl_.compat_version_){0u}
  };
}

CMsgDevMatchInfo::~CMsgDevMatchInfo() {
  // @@protoc_insertion_point(destructor:CMsgDevMatchInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgDevMatchInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.players_.~RepeatedPtrField();
}

void CMsgDevMatchInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgDevMatchInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDevMatchInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.start_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.spectators_) -
        reinterpret_cast<char*>(&_impl_.start_time_)) + sizeof(_impl_.spectators_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.objectives_mask_team0_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.compat_version_) -
        reinterpret_cast<char*>(&_impl_.objectives_mask_team0_)) + sizeof(_impl_.compat_version_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgDevMatchInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 start_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_start_time(&has_bits);
          _impl_.start_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelLobbyTeam winning_team = 2 [default = k_ECitadelLobbyTeam_Team0];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelLobbyTeam_IsValid(val))) {
            _internal_set_winning_team(static_cast<::ECitadelLobbyTeam>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint64 match_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_match_id(&has_bits);
          _impl_.match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgDevMatchInfo.MatchPlayer players = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_players(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional fixed64 lobby_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          _Internal::set_has_lobby_id(&has_bits);
          _impl_.lobby_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 net_worth_team_0 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_net_worth_team_0(&has_bits);
          _impl_.net_worth_team_0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 net_worth_team_1 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_net_worth_team_1(&has_bits);
          _impl_.net_worth_team_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 duration_s = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _Internal::set_has_duration_s(&has_bits);
          _impl_.duration_s_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 spectators = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_spectators(&has_bits);
          _impl_.spectators_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 open_spectator_slots = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _Internal::set_has_open_spectator_slots(&has_bits);
          _impl_.open_spectator_slots_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 objectives_mask_team0 = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_objectives_mask_team0(&has_bits);
          _impl_.objectives_mask_team0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 objectives_mask_team1 = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _Internal::set_has_objectives_mask_team1(&has_bits);
          _impl_.objectives_mask_team1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelMatchMode match_mode = 16 [default = k_ECitadelMatchMode_Invalid];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelMatchMode_IsValid(val))) {
            _internal_set_match_mode(static_cast<::ECitadelMatchMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(16, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelGameMode game_mode = 17 [default = k_ECitadelGameMode_Invalid];
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelGameMode_IsValid(val))) {
            _internal_set_game_mode(static_cast<::ECitadelGameMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(17, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 match_score = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_match_score(&has_bits);
          _impl_.match_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelRegionMode region_mode = 19 [default = k_ECitadelRegionMode_ROW];
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelRegionMode_IsValid(val))) {
            _internal_set_region_mode(static_cast<::ECitadelRegionMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(19, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 compat_version = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_compat_version(&has_bits);
          _impl_.compat_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgDevMatchInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDevMatchInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 start_time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_start_time(), target);
  }

  // optional .ECitadelLobbyTeam winning_team = 2 [default = k_ECitadelLobbyTeam_Team0];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_winning_team(), target);
  }

  // optional uint64 match_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_match_id(), target);
  }

  // repeated .CMsgDevMatchInfo.MatchPlayer players = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_players_size()); i < n; i++) {
    const auto& repfield = this->_internal_players(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional fixed64 lobby_id = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(5, this->_internal_lobby_id(), target);
  }

  // optional uint32 net_worth_team_0 = 9;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(9, this->_internal_net_worth_team_0(), target);
  }

  // optional uint32 net_worth_team_1 = 10;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(10, this->_internal_net_worth_team_1(), target);
  }

  // optional uint32 duration_s = 11;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(11, this->_internal_duration_s(), target);
  }

  // optional uint32 spectators = 12;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(12, this->_internal_spectators(), target);
  }

  // optional uint32 open_spectator_slots = 13;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(13, this->_internal_open_spectator_slots(), target);
  }

  // optional uint64 objectives_mask_team0 = 14;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(14, this->_internal_objectives_mask_team0(), target);
  }

  // optional uint64 objectives_mask_team1 = 15;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(15, this->_internal_objectives_mask_team1(), target);
  }

  // optional .ECitadelMatchMode match_mode = 16 [default = k_ECitadelMatchMode_Invalid];
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      16, this->_internal_match_mode(), target);
  }

  // optional .ECitadelGameMode game_mode = 17 [default = k_ECitadelGameMode_Invalid];
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      17, this->_internal_game_mode(), target);
  }

  // optional uint32 match_score = 18;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(18, this->_internal_match_score(), target);
  }

  // optional .ECitadelRegionMode region_mode = 19 [default = k_ECitadelRegionMode_ROW];
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      19, this->_internal_region_mode(), target);
  }

  // optional uint32 compat_version = 20;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(20, this->_internal_compat_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDevMatchInfo)
  return target;
}

size_t CMsgDevMatchInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDevMatchInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgDevMatchInfo.MatchPlayer players = 4;
  total_size += 1UL * this->_internal_players_size();
  for (const auto& msg : this->_impl_.players_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint32 start_time = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_time());
    }

    // optional .ECitadelLobbyTeam winning_team = 2 [default = k_ECitadelLobbyTeam_Team0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_winning_team());
    }

    // optional uint64 match_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_match_id());
    }

    // optional fixed64 lobby_id = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional uint32 net_worth_team_0 = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_net_worth_team_0());
    }

    // optional uint32 net_worth_team_1 = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_net_worth_team_1());
    }

    // optional uint32 duration_s = 11;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_duration_s());
    }

    // optional uint32 spectators = 12;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_spectators());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional uint64 objectives_mask_team0 = 14;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_objectives_mask_team0());
    }

    // optional uint32 open_spectator_slots = 13;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_open_spectator_slots());
    }

    // optional .ECitadelMatchMode match_mode = 16 [default = k_ECitadelMatchMode_Invalid];
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_match_mode());
    }

    // optional uint64 objectives_mask_team1 = 15;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_objectives_mask_team1());
    }

    // optional .ECitadelGameMode game_mode = 17 [default = k_ECitadelGameMode_Invalid];
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_game_mode());
    }

    // optional uint32 match_score = 18;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::UInt32Size(
          this->_internal_match_score());
    }

    // optional .ECitadelRegionMode region_mode = 19 [default = k_ECitadelRegionMode_ROW];
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_region_mode());
    }

    // optional uint32 compat_version = 20;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::UInt32Size(
          this->_internal_compat_version());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgDevMatchInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgDevMatchInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgDevMatchInfo::GetClassData() const { return &_class_data_; }


void CMsgDevMatchInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgDevMatchInfo*>(&to_msg);
  auto& from = static_cast<const CMsgDevMatchInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgDevMatchInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.players_.MergeFrom(from._impl_.players_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.start_time_ = from._impl_.start_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.winning_team_ = from._impl_.winning_team_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.lobby_id_ = from._impl_.lobby_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.net_worth_team_0_ = from._impl_.net_worth_team_0_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.net_worth_team_1_ = from._impl_.net_worth_team_1_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.duration_s_ = from._impl_.duration_s_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.spectators_ = from._impl_.spectators_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.objectives_mask_team0_ = from._impl_.objectives_mask_team0_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.open_spectator_slots_ = from._impl_.open_spectator_slots_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.match_mode_ = from._impl_.match_mode_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.objectives_mask_team1_ = from._impl_.objectives_mask_team1_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.game_mode_ = from._impl_.game_mode_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.match_score_ = from._impl_.match_score_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.region_mode_ = from._impl_.region_mode_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.compat_version_ = from._impl_.compat_version_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgDevMatchInfo::CopyFrom(const CMsgDevMatchInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDevMatchInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDevMatchInfo::IsInitialized() const {
  return true;
}

void CMsgDevMatchInfo::InternalSwap(CMsgDevMatchInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgDevMatchInfo, _impl_.compat_version_)
      + sizeof(CMsgDevMatchInfo::_impl_.compat_version_)
      - PROTOBUF_FIELD_OFFSET(CMsgDevMatchInfo, _impl_.start_time_)>(
          reinterpret_cast<char*>(&_impl_.start_time_),
          reinterpret_cast<char*>(&other->_impl_.start_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgDevMatchInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[15]);
}

// ===================================================================

class CMsgGCToClientHeroLabsSchedule_TimeRange::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientHeroLabsSchedule_TimeRange>()._impl_._has_bits_);
  static void set_has_start_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_end_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgGCToClientHeroLabsSchedule_TimeRange::CMsgGCToClientHeroLabsSchedule_TimeRange(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientHeroLabsSchedule.TimeRange)
}
CMsgGCToClientHeroLabsSchedule_TimeRange::CMsgGCToClientHeroLabsSchedule_TimeRange(const CMsgGCToClientHeroLabsSchedule_TimeRange& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientHeroLabsSchedule_TimeRange* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.start_time_){}
    , decltype(_impl_.end_time_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.start_time_, &from._impl_.start_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.end_time_) -
    reinterpret_cast<char*>(&_impl_.start_time_)) + sizeof(_impl_.end_time_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientHeroLabsSchedule.TimeRange)
}

inline void CMsgGCToClientHeroLabsSchedule_TimeRange::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.start_time_){0}
    , decltype(_impl_.end_time_){0}
  };
}

CMsgGCToClientHeroLabsSchedule_TimeRange::~CMsgGCToClientHeroLabsSchedule_TimeRange() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientHeroLabsSchedule.TimeRange)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientHeroLabsSchedule_TimeRange::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCToClientHeroLabsSchedule_TimeRange::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientHeroLabsSchedule_TimeRange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientHeroLabsSchedule.TimeRange)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.start_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.end_time_) -
        reinterpret_cast<char*>(&_impl_.start_time_)) + sizeof(_impl_.end_time_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientHeroLabsSchedule_TimeRange::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 start_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_start_time(&has_bits);
          _impl_.start_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 end_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_end_time(&has_bits);
          _impl_.end_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientHeroLabsSchedule_TimeRange::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientHeroLabsSchedule.TimeRange)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 start_time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_start_time(), target);
  }

  // optional int32 end_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_end_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientHeroLabsSchedule.TimeRange)
  return target;
}

size_t CMsgGCToClientHeroLabsSchedule_TimeRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientHeroLabsSchedule.TimeRange)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 start_time = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_start_time());
    }

    // optional int32 end_time = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_end_time());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientHeroLabsSchedule_TimeRange::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientHeroLabsSchedule_TimeRange::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientHeroLabsSchedule_TimeRange::GetClassData() const { return &_class_data_; }


void CMsgGCToClientHeroLabsSchedule_TimeRange::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientHeroLabsSchedule_TimeRange*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientHeroLabsSchedule_TimeRange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientHeroLabsSchedule.TimeRange)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.start_time_ = from._impl_.start_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.end_time_ = from._impl_.end_time_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientHeroLabsSchedule_TimeRange::CopyFrom(const CMsgGCToClientHeroLabsSchedule_TimeRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientHeroLabsSchedule.TimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientHeroLabsSchedule_TimeRange::IsInitialized() const {
  return true;
}

void CMsgGCToClientHeroLabsSchedule_TimeRange::InternalSwap(CMsgGCToClientHeroLabsSchedule_TimeRange* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCToClientHeroLabsSchedule_TimeRange, _impl_.end_time_)
      + sizeof(CMsgGCToClientHeroLabsSchedule_TimeRange::_impl_.end_time_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCToClientHeroLabsSchedule_TimeRange, _impl_.start_time_)>(
          reinterpret_cast<char*>(&_impl_.start_time_),
          reinterpret_cast<char*>(&other->_impl_.start_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientHeroLabsSchedule_TimeRange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[16]);
}

// ===================================================================

class CMsgGCToClientHeroLabsSchedule_Schedule::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientHeroLabsSchedule_Schedule>()._impl_._has_bits_);
  static void set_has_schedule_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_open(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgGCToClientHeroLabsSchedule_Schedule::CMsgGCToClientHeroLabsSchedule_Schedule(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientHeroLabsSchedule.Schedule)
}
CMsgGCToClientHeroLabsSchedule_Schedule::CMsgGCToClientHeroLabsSchedule_Schedule(const CMsgGCToClientHeroLabsSchedule_Schedule& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientHeroLabsSchedule_Schedule* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.weekends_){from._impl_.weekends_}
    , decltype(_impl_.weekdays_){from._impl_.weekdays_}
    , decltype(_impl_.regions_){from._impl_.regions_}
    , decltype(_impl_.schedule_id_){}
    , decltype(_impl_.is_open_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.schedule_id_, &from._impl_.schedule_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_open_) -
    reinterpret_cast<char*>(&_impl_.schedule_id_)) + sizeof(_impl_.is_open_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientHeroLabsSchedule.Schedule)
}

inline void CMsgGCToClientHeroLabsSchedule_Schedule::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.weekends_){arena}
    , decltype(_impl_.weekdays_){arena}
    , decltype(_impl_.regions_){arena}
    , decltype(_impl_.schedule_id_){0u}
    , decltype(_impl_.is_open_){false}
  };
}

CMsgGCToClientHeroLabsSchedule_Schedule::~CMsgGCToClientHeroLabsSchedule_Schedule() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientHeroLabsSchedule.Schedule)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientHeroLabsSchedule_Schedule::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.weekends_.~RepeatedPtrField();
  _impl_.weekdays_.~RepeatedPtrField();
  _impl_.regions_.~RepeatedField();
}

void CMsgGCToClientHeroLabsSchedule_Schedule::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientHeroLabsSchedule_Schedule::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientHeroLabsSchedule.Schedule)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.weekends_.Clear();
  _impl_.weekdays_.Clear();
  _impl_.regions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.schedule_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.is_open_) -
        reinterpret_cast<char*>(&_impl_.schedule_id_)) + sizeof(_impl_.is_open_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientHeroLabsSchedule_Schedule::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 schedule_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_schedule_id(&has_bits);
          _impl_.schedule_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgGCToClientHeroLabsSchedule.TimeRange weekends = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_weekends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgGCToClientHeroLabsSchedule.TimeRange weekdays = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_weekdays(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool is_open = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_is_open(&has_bits);
          _impl_.is_open_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ECitadelRegionMode regions = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          ptr -= 1;
          do {
            ptr += 1;
            uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::ECitadelRegionMode_IsValid(val))) {
              _internal_add_regions(static_cast<::ECitadelRegionMode>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<40>(ptr));
        } else if (static_cast<uint8_t>(tag) == 42) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(_internal_mutable_regions(), ptr, ctx, ::ECitadelRegionMode_IsValid, &_internal_metadata_, 5);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientHeroLabsSchedule_Schedule::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientHeroLabsSchedule.Schedule)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 schedule_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_schedule_id(), target);
  }

  // repeated .CMsgGCToClientHeroLabsSchedule.TimeRange weekends = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_weekends_size()); i < n; i++) {
    const auto& repfield = this->_internal_weekends(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .CMsgGCToClientHeroLabsSchedule.TimeRange weekdays = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_weekdays_size()); i < n; i++) {
    const auto& repfield = this->_internal_weekdays(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional bool is_open = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_is_open(), target);
  }

  // repeated .ECitadelRegionMode regions = 5;
  for (int i = 0, n = this->_internal_regions_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_regions(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientHeroLabsSchedule.Schedule)
  return target;
}

size_t CMsgGCToClientHeroLabsSchedule_Schedule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientHeroLabsSchedule.Schedule)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGCToClientHeroLabsSchedule.TimeRange weekends = 2;
  total_size += 1UL * this->_internal_weekends_size();
  for (const auto& msg : this->_impl_.weekends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .CMsgGCToClientHeroLabsSchedule.TimeRange weekdays = 3;
  total_size += 1UL * this->_internal_weekdays_size();
  for (const auto& msg : this->_impl_.weekdays_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ECitadelRegionMode regions = 5;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_regions_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_regions(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 schedule_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_schedule_id());
    }

    // optional bool is_open = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientHeroLabsSchedule_Schedule::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientHeroLabsSchedule_Schedule::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientHeroLabsSchedule_Schedule::GetClassData() const { return &_class_data_; }


void CMsgGCToClientHeroLabsSchedule_Schedule::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientHeroLabsSchedule_Schedule*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientHeroLabsSchedule_Schedule&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientHeroLabsSchedule.Schedule)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.weekends_.MergeFrom(from._impl_.weekends_);
  _this->_impl_.weekdays_.MergeFrom(from._impl_.weekdays_);
  _this->_impl_.regions_.MergeFrom(from._impl_.regions_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.schedule_id_ = from._impl_.schedule_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.is_open_ = from._impl_.is_open_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientHeroLabsSchedule_Schedule::CopyFrom(const CMsgGCToClientHeroLabsSchedule_Schedule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientHeroLabsSchedule.Schedule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientHeroLabsSchedule_Schedule::IsInitialized() const {
  return true;
}

void CMsgGCToClientHeroLabsSchedule_Schedule::InternalSwap(CMsgGCToClientHeroLabsSchedule_Schedule* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.weekends_.InternalSwap(&other->_impl_.weekends_);
  _impl_.weekdays_.InternalSwap(&other->_impl_.weekdays_);
  _impl_.regions_.InternalSwap(&other->_impl_.regions_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCToClientHeroLabsSchedule_Schedule, _impl_.is_open_)
      + sizeof(CMsgGCToClientHeroLabsSchedule_Schedule::_impl_.is_open_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCToClientHeroLabsSchedule_Schedule, _impl_.schedule_id_)>(
          reinterpret_cast<char*>(&_impl_.schedule_id_),
          reinterpret_cast<char*>(&other->_impl_.schedule_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientHeroLabsSchedule_Schedule::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[17]);
}

// ===================================================================

class CMsgGCToClientHeroLabsSchedule::_Internal {
 public:
};

CMsgGCToClientHeroLabsSchedule::CMsgGCToClientHeroLabsSchedule(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientHeroLabsSchedule)
}
CMsgGCToClientHeroLabsSchedule::CMsgGCToClientHeroLabsSchedule(const CMsgGCToClientHeroLabsSchedule& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientHeroLabsSchedule* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.schedules_){from._impl_.schedules_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientHeroLabsSchedule)
}

inline void CMsgGCToClientHeroLabsSchedule::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.schedules_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CMsgGCToClientHeroLabsSchedule::~CMsgGCToClientHeroLabsSchedule() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientHeroLabsSchedule)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientHeroLabsSchedule::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.schedules_.~RepeatedPtrField();
}

void CMsgGCToClientHeroLabsSchedule::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientHeroLabsSchedule::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientHeroLabsSchedule)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.schedules_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientHeroLabsSchedule::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CMsgGCToClientHeroLabsSchedule.Schedule schedules = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_schedules(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientHeroLabsSchedule::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientHeroLabsSchedule)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGCToClientHeroLabsSchedule.Schedule schedules = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_schedules_size()); i < n; i++) {
    const auto& repfield = this->_internal_schedules(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientHeroLabsSchedule)
  return target;
}

size_t CMsgGCToClientHeroLabsSchedule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientHeroLabsSchedule)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGCToClientHeroLabsSchedule.Schedule schedules = 1;
  total_size += 1UL * this->_internal_schedules_size();
  for (const auto& msg : this->_impl_.schedules_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientHeroLabsSchedule::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientHeroLabsSchedule::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientHeroLabsSchedule::GetClassData() const { return &_class_data_; }


void CMsgGCToClientHeroLabsSchedule::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientHeroLabsSchedule*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientHeroLabsSchedule&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientHeroLabsSchedule)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.schedules_.MergeFrom(from._impl_.schedules_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientHeroLabsSchedule::CopyFrom(const CMsgGCToClientHeroLabsSchedule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientHeroLabsSchedule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientHeroLabsSchedule::IsInitialized() const {
  return true;
}

void CMsgGCToClientHeroLabsSchedule::InternalSwap(CMsgGCToClientHeroLabsSchedule* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.schedules_.InternalSwap(&other->_impl_.schedules_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientHeroLabsSchedule::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[18]);
}

// ===================================================================

class CMsgGCToClientDevPlaytestStatus_HeroWhitelist::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientDevPlaytestStatus_HeroWhitelist>()._impl_._has_bits_);
  static void set_has_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCToClientDevPlaytestStatus_HeroWhitelist::CMsgGCToClientDevPlaytestStatus_HeroWhitelist(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientDevPlaytestStatus.HeroWhitelist)
}
CMsgGCToClientDevPlaytestStatus_HeroWhitelist::CMsgGCToClientDevPlaytestStatus_HeroWhitelist(const CMsgGCToClientDevPlaytestStatus_HeroWhitelist& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientDevPlaytestStatus_HeroWhitelist* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_ids_){from._impl_.account_ids_}
    , decltype(_impl_.hero_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.hero_id_ = from._impl_.hero_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientDevPlaytestStatus.HeroWhitelist)
}

inline void CMsgGCToClientDevPlaytestStatus_HeroWhitelist::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_ids_){arena}
    , decltype(_impl_.hero_id_){0u}
  };
}

CMsgGCToClientDevPlaytestStatus_HeroWhitelist::~CMsgGCToClientDevPlaytestStatus_HeroWhitelist() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientDevPlaytestStatus.HeroWhitelist)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientDevPlaytestStatus_HeroWhitelist::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.account_ids_.~RepeatedField();
}

void CMsgGCToClientDevPlaytestStatus_HeroWhitelist::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientDevPlaytestStatus_HeroWhitelist::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientDevPlaytestStatus.HeroWhitelist)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_ids_.Clear();
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientDevPlaytestStatus_HeroWhitelist::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 hero_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_hero_id(&has_bits);
          _impl_.hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 account_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_account_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<uint8_t>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_account_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientDevPlaytestStatus_HeroWhitelist::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientDevPlaytestStatus.HeroWhitelist)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 hero_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hero_id(), target);
  }

  // repeated uint32 account_ids = 2;
  for (int i = 0, n = this->_internal_account_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_account_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientDevPlaytestStatus.HeroWhitelist)
  return target;
}

size_t CMsgGCToClientDevPlaytestStatus_HeroWhitelist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientDevPlaytestStatus.HeroWhitelist)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 account_ids = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.account_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_account_ids_size());
    total_size += data_size;
  }

  // optional uint32 hero_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientDevPlaytestStatus_HeroWhitelist::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientDevPlaytestStatus_HeroWhitelist::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientDevPlaytestStatus_HeroWhitelist::GetClassData() const { return &_class_data_; }


void CMsgGCToClientDevPlaytestStatus_HeroWhitelist::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientDevPlaytestStatus_HeroWhitelist*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientDevPlaytestStatus_HeroWhitelist&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientDevPlaytestStatus.HeroWhitelist)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.account_ids_.MergeFrom(from._impl_.account_ids_);
  if (from._internal_has_hero_id()) {
    _this->_internal_set_hero_id(from._internal_hero_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientDevPlaytestStatus_HeroWhitelist::CopyFrom(const CMsgGCToClientDevPlaytestStatus_HeroWhitelist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientDevPlaytestStatus.HeroWhitelist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientDevPlaytestStatus_HeroWhitelist::IsInitialized() const {
  return true;
}

void CMsgGCToClientDevPlaytestStatus_HeroWhitelist::InternalSwap(CMsgGCToClientDevPlaytestStatus_HeroWhitelist* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.account_ids_.InternalSwap(&other->_impl_.account_ids_);
  swap(_impl_.hero_id_, other->_impl_.hero_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientDevPlaytestStatus_HeroWhitelist::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[19]);
}

// ===================================================================

class CMsgGCToClientDevPlaytestStatus_DevQueueSize::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientDevPlaytestStatus_DevQueueSize>()._impl_._has_bits_);
  static void set_has_match_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_queue_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgGCToClientDevPlaytestStatus_DevQueueSize::CMsgGCToClientDevPlaytestStatus_DevQueueSize(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientDevPlaytestStatus.DevQueueSize)
}
CMsgGCToClientDevPlaytestStatus_DevQueueSize::CMsgGCToClientDevPlaytestStatus_DevQueueSize(const CMsgGCToClientDevPlaytestStatus_DevQueueSize& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientDevPlaytestStatus_DevQueueSize* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_mode_){}
    , decltype(_impl_.queue_size_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.match_mode_, &from._impl_.match_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.queue_size_) -
    reinterpret_cast<char*>(&_impl_.match_mode_)) + sizeof(_impl_.queue_size_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientDevPlaytestStatus.DevQueueSize)
}

inline void CMsgGCToClientDevPlaytestStatus_DevQueueSize::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_mode_){0}
    , decltype(_impl_.queue_size_){0u}
  };
}

CMsgGCToClientDevPlaytestStatus_DevQueueSize::~CMsgGCToClientDevPlaytestStatus_DevQueueSize() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientDevPlaytestStatus.DevQueueSize)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientDevPlaytestStatus_DevQueueSize::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCToClientDevPlaytestStatus_DevQueueSize::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientDevPlaytestStatus_DevQueueSize::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientDevPlaytestStatus.DevQueueSize)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.match_mode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.queue_size_) -
        reinterpret_cast<char*>(&_impl_.match_mode_)) + sizeof(_impl_.queue_size_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientDevPlaytestStatus_DevQueueSize::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ECitadelMatchMode match_mode = 1 [default = k_ECitadelMatchMode_Invalid];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelMatchMode_IsValid(val))) {
            _internal_set_match_mode(static_cast<::ECitadelMatchMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 queue_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_queue_size(&has_bits);
          _impl_.queue_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientDevPlaytestStatus_DevQueueSize::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientDevPlaytestStatus.DevQueueSize)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ECitadelMatchMode match_mode = 1 [default = k_ECitadelMatchMode_Invalid];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_match_mode(), target);
  }

  // optional uint32 queue_size = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_queue_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientDevPlaytestStatus.DevQueueSize)
  return target;
}

size_t CMsgGCToClientDevPlaytestStatus_DevQueueSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientDevPlaytestStatus.DevQueueSize)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ECitadelMatchMode match_mode = 1 [default = k_ECitadelMatchMode_Invalid];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_match_mode());
    }

    // optional uint32 queue_size = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_queue_size());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientDevPlaytestStatus_DevQueueSize::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientDevPlaytestStatus_DevQueueSize::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientDevPlaytestStatus_DevQueueSize::GetClassData() const { return &_class_data_; }


void CMsgGCToClientDevPlaytestStatus_DevQueueSize::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientDevPlaytestStatus_DevQueueSize*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientDevPlaytestStatus_DevQueueSize&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientDevPlaytestStatus.DevQueueSize)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.match_mode_ = from._impl_.match_mode_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.queue_size_ = from._impl_.queue_size_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientDevPlaytestStatus_DevQueueSize::CopyFrom(const CMsgGCToClientDevPlaytestStatus_DevQueueSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientDevPlaytestStatus.DevQueueSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientDevPlaytestStatus_DevQueueSize::IsInitialized() const {
  return true;
}

void CMsgGCToClientDevPlaytestStatus_DevQueueSize::InternalSwap(CMsgGCToClientDevPlaytestStatus_DevQueueSize* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCToClientDevPlaytestStatus_DevQueueSize, _impl_.queue_size_)
      + sizeof(CMsgGCToClientDevPlaytestStatus_DevQueueSize::_impl_.queue_size_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCToClientDevPlaytestStatus_DevQueueSize, _impl_.match_mode_)>(
          reinterpret_cast<char*>(&_impl_.match_mode_),
          reinterpret_cast<char*>(&other->_impl_.match_mode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientDevPlaytestStatus_DevQueueSize::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[20]);
}

// ===================================================================

class CMsgGCToClientDevPlaytestStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientDevPlaytestStatus>()._impl_._has_bits_);
  static void set_has_dev_available_servers(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_mm_enabled(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_locked_heroes(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_party_shared_heroes(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_mm_pause_time(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_active_match_count(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgGCToClientDevPlaytestStatus::CMsgGCToClientDevPlaytestStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientDevPlaytestStatus)
}
CMsgGCToClientDevPlaytestStatus::CMsgGCToClientDevPlaytestStatus(const CMsgGCToClientDevPlaytestStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientDevPlaytestStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dev_queue_size_){from._impl_.dev_queue_size_}
    , decltype(_impl_.hero_whitelists_){from._impl_.hero_whitelists_}
    , decltype(_impl_.valid_client_versions_){from._impl_.valid_client_versions_}
    , decltype(_impl_.dev_available_servers_){}
    , decltype(_impl_.is_mm_enabled_){}
    , decltype(_impl_.locked_heroes_){}
    , decltype(_impl_.party_shared_heroes_){}
    , decltype(_impl_.mm_pause_time_){}
    , decltype(_impl_.active_match_count_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.dev_available_servers_, &from._impl_.dev_available_servers_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.active_match_count_) -
    reinterpret_cast<char*>(&_impl_.dev_available_servers_)) + sizeof(_impl_.active_match_count_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientDevPlaytestStatus)
}

inline void CMsgGCToClientDevPlaytestStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dev_queue_size_){arena}
    , decltype(_impl_.hero_whitelists_){arena}
    , decltype(_impl_.valid_client_versions_){arena}
    , decltype(_impl_.dev_available_servers_){0u}
    , decltype(_impl_.is_mm_enabled_){false}
    , decltype(_impl_.locked_heroes_){false}
    , decltype(_impl_.party_shared_heroes_){false}
    , decltype(_impl_.mm_pause_time_){0u}
    , decltype(_impl_.active_match_count_){0u}
  };
}

CMsgGCToClientDevPlaytestStatus::~CMsgGCToClientDevPlaytestStatus() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientDevPlaytestStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientDevPlaytestStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dev_queue_size_.~RepeatedPtrField();
  _impl_.hero_whitelists_.~RepeatedPtrField();
  _impl_.valid_client_versions_.~RepeatedField();
}

void CMsgGCToClientDevPlaytestStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientDevPlaytestStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientDevPlaytestStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dev_queue_size_.Clear();
  _impl_.hero_whitelists_.Clear();
  _impl_.valid_client_versions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.dev_available_servers_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.active_match_count_) -
        reinterpret_cast<char*>(&_impl_.dev_available_servers_)) + sizeof(_impl_.active_match_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientDevPlaytestStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CMsgGCToClientDevPlaytestStatus.DevQueueSize dev_queue_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_dev_queue_size(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional uint32 dev_available_servers = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_dev_available_servers(&has_bits);
          _impl_.dev_available_servers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool is_mm_enabled = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_is_mm_enabled(&has_bits);
          _impl_.is_mm_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool locked_heroes = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_locked_heroes(&has_bits);
          _impl_.locked_heroes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool party_shared_heroes = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_party_shared_heroes(&has_bits);
          _impl_.party_shared_heroes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgGCToClientDevPlaytestStatus.HeroWhitelist hero_whitelists = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_hero_whitelists(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional uint32 mm_pause_time = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_mm_pause_time(&has_bits);
          _impl_.mm_pause_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 valid_client_versions = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_valid_client_versions(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<120>(ptr));
        } else if (static_cast<uint8_t>(tag) == 122) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_valid_client_versions(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 active_match_count = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          _Internal::set_has_active_match_count(&has_bits);
          _impl_.active_match_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientDevPlaytestStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientDevPlaytestStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGCToClientDevPlaytestStatus.DevQueueSize dev_queue_size = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_dev_queue_size_size()); i < n; i++) {
    const auto& repfield = this->_internal_dev_queue_size(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 dev_available_servers = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_dev_available_servers(), target);
  }

  // optional bool is_mm_enabled = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_is_mm_enabled(), target);
  }

  // optional bool locked_heroes = 8;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_locked_heroes(), target);
  }

  // optional bool party_shared_heroes = 9;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(9, this->_internal_party_shared_heroes(), target);
  }

  // repeated .CMsgGCToClientDevPlaytestStatus.HeroWhitelist hero_whitelists = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_hero_whitelists_size()); i < n; i++) {
    const auto& repfield = this->_internal_hero_whitelists(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional uint32 mm_pause_time = 14;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(14, this->_internal_mm_pause_time(), target);
  }

  // repeated uint32 valid_client_versions = 15;
  for (int i = 0, n = this->_internal_valid_client_versions_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(15, this->_internal_valid_client_versions(i), target);
  }

  // optional uint32 active_match_count = 21;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(21, this->_internal_active_match_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientDevPlaytestStatus)
  return target;
}

size_t CMsgGCToClientDevPlaytestStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientDevPlaytestStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGCToClientDevPlaytestStatus.DevQueueSize dev_queue_size = 1;
  total_size += 1UL * this->_internal_dev_queue_size_size();
  for (const auto& msg : this->_impl_.dev_queue_size_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .CMsgGCToClientDevPlaytestStatus.HeroWhitelist hero_whitelists = 10;
  total_size += 1UL * this->_internal_hero_whitelists_size();
  for (const auto& msg : this->_impl_.hero_whitelists_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint32 valid_client_versions = 15;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.valid_client_versions_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_valid_client_versions_size());
    total_size += data_size;
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional uint32 dev_available_servers = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_dev_available_servers());
    }

    // optional bool is_mm_enabled = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool locked_heroes = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool party_shared_heroes = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional uint32 mm_pause_time = 14;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_mm_pause_time());
    }

    // optional uint32 active_match_count = 21;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::UInt32Size(
          this->_internal_active_match_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientDevPlaytestStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientDevPlaytestStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientDevPlaytestStatus::GetClassData() const { return &_class_data_; }


void CMsgGCToClientDevPlaytestStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientDevPlaytestStatus*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientDevPlaytestStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientDevPlaytestStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.dev_queue_size_.MergeFrom(from._impl_.dev_queue_size_);
  _this->_impl_.hero_whitelists_.MergeFrom(from._impl_.hero_whitelists_);
  _this->_impl_.valid_client_versions_.MergeFrom(from._impl_.valid_client_versions_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.dev_available_servers_ = from._impl_.dev_available_servers_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.is_mm_enabled_ = from._impl_.is_mm_enabled_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.locked_heroes_ = from._impl_.locked_heroes_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.party_shared_heroes_ = from._impl_.party_shared_heroes_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.mm_pause_time_ = from._impl_.mm_pause_time_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.active_match_count_ = from._impl_.active_match_count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientDevPlaytestStatus::CopyFrom(const CMsgGCToClientDevPlaytestStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientDevPlaytestStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientDevPlaytestStatus::IsInitialized() const {
  return true;
}

void CMsgGCToClientDevPlaytestStatus::InternalSwap(CMsgGCToClientDevPlaytestStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.dev_queue_size_.InternalSwap(&other->_impl_.dev_queue_size_);
  _impl_.hero_whitelists_.InternalSwap(&other->_impl_.hero_whitelists_);
  _impl_.valid_client_versions_.InternalSwap(&other->_impl_.valid_client_versions_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCToClientDevPlaytestStatus, _impl_.active_match_count_)
      + sizeof(CMsgGCToClientDevPlaytestStatus::_impl_.active_match_count_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCToClientDevPlaytestStatus, _impl_.dev_available_servers_)>(
          reinterpret_cast<char*>(&_impl_.dev_available_servers_),
          reinterpret_cast<char*>(&other->_impl_.dev_available_servers_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientDevPlaytestStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[21]);
}

// ===================================================================

class CMsgGCToClientSDRTicket::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientSDRTicket>()._impl_._has_bits_);
  static void set_has_ticket(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCToClientSDRTicket::CMsgGCToClientSDRTicket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientSDRTicket)
}
CMsgGCToClientSDRTicket::CMsgGCToClientSDRTicket(const CMsgGCToClientSDRTicket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientSDRTicket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.ticket_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.ticket_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ticket_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_ticket()) {
    _this->_impl_.ticket_.Set(from._internal_ticket(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientSDRTicket)
}

inline void CMsgGCToClientSDRTicket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.ticket_){}
  };
  _impl_.ticket_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ticket_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgGCToClientSDRTicket::~CMsgGCToClientSDRTicket() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientSDRTicket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientSDRTicket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ticket_.Destroy();
}

void CMsgGCToClientSDRTicket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientSDRTicket::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientSDRTicket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.ticket_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientSDRTicket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bytes ticket = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_ticket();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientSDRTicket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientSDRTicket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes ticket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_ticket(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientSDRTicket)
  return target;
}

size_t CMsgGCToClientSDRTicket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientSDRTicket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes ticket = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_ticket());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientSDRTicket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientSDRTicket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientSDRTicket::GetClassData() const { return &_class_data_; }


void CMsgGCToClientSDRTicket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientSDRTicket*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientSDRTicket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientSDRTicket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_ticket()) {
    _this->_internal_set_ticket(from._internal_ticket());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientSDRTicket::CopyFrom(const CMsgGCToClientSDRTicket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientSDRTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientSDRTicket::IsInitialized() const {
  return true;
}

void CMsgGCToClientSDRTicket::InternalSwap(CMsgGCToClientSDRTicket* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ticket_, lhs_arena,
      &other->_impl_.ticket_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientSDRTicket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[22]);
}

// ===================================================================

class CMsgClientToGCReplacementSDRTicket::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCReplacementSDRTicket>()._impl_._has_bits_);
  static void set_has_lobby_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCReplacementSDRTicket::CMsgClientToGCReplacementSDRTicket(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCReplacementSDRTicket)
}
CMsgClientToGCReplacementSDRTicket::CMsgClientToGCReplacementSDRTicket(const CMsgClientToGCReplacementSDRTicket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCReplacementSDRTicket* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.lobby_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.lobby_id_ = from._impl_.lobby_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCReplacementSDRTicket)
}

inline void CMsgClientToGCReplacementSDRTicket::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.lobby_id_){uint64_t{0u}}
  };
}

CMsgClientToGCReplacementSDRTicket::~CMsgClientToGCReplacementSDRTicket() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCReplacementSDRTicket)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCReplacementSDRTicket::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCReplacementSDRTicket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCReplacementSDRTicket::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCReplacementSDRTicket)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lobby_id_ = uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCReplacementSDRTicket::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional fixed64 lobby_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_lobby_id(&has_bits);
          _impl_.lobby_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCReplacementSDRTicket::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCReplacementSDRTicket)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 lobby_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(1, this->_internal_lobby_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCReplacementSDRTicket)
  return target;
}

size_t CMsgClientToGCReplacementSDRTicket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCReplacementSDRTicket)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 lobby_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCReplacementSDRTicket::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCReplacementSDRTicket::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCReplacementSDRTicket::GetClassData() const { return &_class_data_; }


void CMsgClientToGCReplacementSDRTicket::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCReplacementSDRTicket*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCReplacementSDRTicket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCReplacementSDRTicket)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_lobby_id()) {
    _this->_internal_set_lobby_id(from._internal_lobby_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCReplacementSDRTicket::CopyFrom(const CMsgClientToGCReplacementSDRTicket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCReplacementSDRTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCReplacementSDRTicket::IsInitialized() const {
  return true;
}

void CMsgClientToGCReplacementSDRTicket::InternalSwap(CMsgClientToGCReplacementSDRTicket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.lobby_id_, other->_impl_.lobby_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCReplacementSDRTicket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[23]);
}

// ===================================================================

class CMsgClientToGCReplacementSDRTicketResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCReplacementSDRTicketResponse>()._impl_._has_bits_);
  static void set_has_ticket(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_error_message(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCReplacementSDRTicketResponse::CMsgClientToGCReplacementSDRTicketResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCReplacementSDRTicketResponse)
}
CMsgClientToGCReplacementSDRTicketResponse::CMsgClientToGCReplacementSDRTicketResponse(const CMsgClientToGCReplacementSDRTicketResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCReplacementSDRTicketResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.ticket_){}
    , decltype(_impl_.error_message_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.ticket_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ticket_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_ticket()) {
    _this->_impl_.ticket_.Set(from._internal_ticket(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error_message()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCReplacementSDRTicketResponse)
}

inline void CMsgClientToGCReplacementSDRTicketResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.ticket_){}
    , decltype(_impl_.error_message_){}
  };
  _impl_.ticket_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ticket_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCReplacementSDRTicketResponse::~CMsgClientToGCReplacementSDRTicketResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCReplacementSDRTicketResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCReplacementSDRTicketResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ticket_.Destroy();
  _impl_.error_message_.Destroy();
}

void CMsgClientToGCReplacementSDRTicketResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCReplacementSDRTicketResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCReplacementSDRTicketResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.ticket_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.error_message_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCReplacementSDRTicketResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bytes ticket = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_ticket();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCReplacementSDRTicketResponse.error_message");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCReplacementSDRTicketResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCReplacementSDRTicketResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes ticket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_ticket(), target);
  }

  // optional string error_message = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCReplacementSDRTicketResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCReplacementSDRTicketResponse)
  return target;
}

size_t CMsgClientToGCReplacementSDRTicketResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCReplacementSDRTicketResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes ticket = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_ticket());
    }

    // optional string error_message = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error_message());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCReplacementSDRTicketResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCReplacementSDRTicketResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCReplacementSDRTicketResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCReplacementSDRTicketResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCReplacementSDRTicketResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCReplacementSDRTicketResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCReplacementSDRTicketResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_ticket(from._internal_ticket());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_error_message(from._internal_error_message());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCReplacementSDRTicketResponse::CopyFrom(const CMsgClientToGCReplacementSDRTicketResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCReplacementSDRTicketResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCReplacementSDRTicketResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCReplacementSDRTicketResponse::InternalSwap(CMsgClientToGCReplacementSDRTicketResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ticket_, lhs_arena,
      &other->_impl_.ticket_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCReplacementSDRTicketResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[24]);
}

// ===================================================================

class CMsgClientToGCSetServerConVar::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetServerConVar>()._impl_._has_bits_);
  static void set_has_convar_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_convar_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_lobby_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCSetServerConVar::CMsgClientToGCSetServerConVar(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetServerConVar)
}
CMsgClientToGCSetServerConVar::CMsgClientToGCSetServerConVar(const CMsgClientToGCSetServerConVar& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSetServerConVar* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.convar_name_){}
    , decltype(_impl_.convar_value_){}
    , decltype(_impl_.lobby_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.convar_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.convar_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_convar_name()) {
    _this->_impl_.convar_name_.Set(from._internal_convar_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.convar_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.convar_value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_convar_value()) {
    _this->_impl_.convar_value_.Set(from._internal_convar_value(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.lobby_id_ = from._impl_.lobby_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetServerConVar)
}

inline void CMsgClientToGCSetServerConVar::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.convar_name_){}
    , decltype(_impl_.convar_value_){}
    , decltype(_impl_.lobby_id_){uint64_t{0u}}
  };
  _impl_.convar_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.convar_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.convar_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.convar_value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCSetServerConVar::~CMsgClientToGCSetServerConVar() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetServerConVar)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSetServerConVar::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.convar_name_.Destroy();
  _impl_.convar_value_.Destroy();
}

void CMsgClientToGCSetServerConVar::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSetServerConVar::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetServerConVar)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.convar_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.convar_value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.lobby_id_ = uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetServerConVar::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string convar_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_convar_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCSetServerConVar.convar_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string convar_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_convar_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCSetServerConVar.convar_value");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional fixed64 lobby_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_lobby_id(&has_bits);
          _impl_.lobby_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSetServerConVar::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetServerConVar)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string convar_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_convar_name().data(), static_cast<int>(this->_internal_convar_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCSetServerConVar.convar_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_convar_name(), target);
  }

  // optional string convar_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_convar_value().data(), static_cast<int>(this->_internal_convar_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCSetServerConVar.convar_value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_convar_value(), target);
  }

  // optional fixed64 lobby_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(3, this->_internal_lobby_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetServerConVar)
  return target;
}

size_t CMsgClientToGCSetServerConVar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetServerConVar)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string convar_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_convar_name());
    }

    // optional string convar_value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_convar_value());
    }

    // optional fixed64 lobby_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSetServerConVar::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSetServerConVar::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSetServerConVar::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSetServerConVar::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSetServerConVar*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSetServerConVar&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetServerConVar)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_convar_name(from._internal_convar_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_convar_value(from._internal_convar_value());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.lobby_id_ = from._impl_.lobby_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSetServerConVar::CopyFrom(const CMsgClientToGCSetServerConVar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetServerConVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetServerConVar::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetServerConVar::InternalSwap(CMsgClientToGCSetServerConVar* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.convar_name_, lhs_arena,
      &other->_impl_.convar_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.convar_value_, lhs_arena,
      &other->_impl_.convar_value_, rhs_arena
  );
  swap(_impl_.lobby_id_, other->_impl_.lobby_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetServerConVar::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[25]);
}

// ===================================================================

class CMsgClientToGCSetServerConVarResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetServerConVarResponse>()._impl_._has_bits_);
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSetServerConVarResponse::CMsgClientToGCSetServerConVarResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetServerConVarResponse)
}
CMsgClientToGCSetServerConVarResponse::CMsgClientToGCSetServerConVarResponse(const CMsgClientToGCSetServerConVarResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSetServerConVarResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_message()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetServerConVarResponse)
}

inline void CMsgClientToGCSetServerConVarResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCSetServerConVarResponse::~CMsgClientToGCSetServerConVarResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetServerConVarResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSetServerConVarResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void CMsgClientToGCSetServerConVarResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSetServerConVarResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetServerConVarResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetServerConVarResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCSetServerConVarResponse.message");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSetServerConVarResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetServerConVarResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCSetServerConVarResponse.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetServerConVarResponse)
  return target;
}

size_t CMsgClientToGCSetServerConVarResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetServerConVarResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string message = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSetServerConVarResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSetServerConVarResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSetServerConVarResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSetServerConVarResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSetServerConVarResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSetServerConVarResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetServerConVarResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_message()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSetServerConVarResponse::CopyFrom(const CMsgClientToGCSetServerConVarResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetServerConVarResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetServerConVarResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetServerConVarResponse::InternalSwap(CMsgClientToGCSetServerConVarResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetServerConVarResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[26]);
}

// ===================================================================

class CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey>()._impl_._has_bits_);
  static void set_has_question_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_response_value(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_response_freeform(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey)
}
CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey(const CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.response_freeform_){}
    , decltype(_impl_.question_id_){}
    , decltype(_impl_.response_value_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.response_freeform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_freeform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_response_freeform()) {
    _this->_impl_.response_freeform_.Set(from._internal_response_freeform(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.question_id_, &from._impl_.question_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.response_value_) -
    reinterpret_cast<char*>(&_impl_.question_id_)) + sizeof(_impl_.response_value_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey)
}

inline void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.response_freeform_){}
    , decltype(_impl_.question_id_){0u}
    , decltype(_impl_.response_value_){0u}
  };
  _impl_.response_freeform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_freeform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::~CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.response_freeform_.Destroy();
}

void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.response_freeform_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.question_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.response_value_) -
        reinterpret_cast<char*>(&_impl_.question_id_)) + sizeof(_impl_.response_value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 question_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_question_id(&has_bits);
          _impl_.question_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 response_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_response_value(&has_bits);
          _impl_.response_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string response_freeform = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_response_freeform();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey.response_freeform");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 question_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_question_id(), target);
  }

  // optional uint32 response_value = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_response_value(), target);
  }

  // optional string response_freeform = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_response_freeform().data(), static_cast<int>(this->_internal_response_freeform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey.response_freeform");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_response_freeform(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey)
  return target;
}

size_t CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string response_freeform = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_response_freeform());
    }

    // optional uint32 question_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_question_id());
    }

    // optional uint32 response_value = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_response_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_response_freeform(from._internal_response_freeform());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.question_id_ = from._impl_.question_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.response_value_ = from._impl_.response_value_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::CopyFrom(const CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::IsInitialized() const {
  return true;
}

void CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::InternalSwap(CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.response_freeform_, lhs_arena,
      &other->_impl_.response_freeform_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey, _impl_.response_value_)
      + sizeof(CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::_impl_.response_value_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey, _impl_.question_id_)>(
          reinterpret_cast<char*>(&_impl_.question_id_),
          reinterpret_cast<char*>(&other->_impl_.question_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[27]);
}

// ===================================================================

class CMsgClientToGCPostMatchSurveyResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPostMatchSurveyResponse>()._impl_._has_bits_);
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCPostMatchSurveyResponse::CMsgClientToGCPostMatchSurveyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPostMatchSurveyResponse)
}
CMsgClientToGCPostMatchSurveyResponse::CMsgClientToGCPostMatchSurveyResponse(const CMsgClientToGCPostMatchSurveyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPostMatchSurveyResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.post_match_survey_){from._impl_.post_match_survey_}
    , decltype(_impl_.match_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.match_id_ = from._impl_.match_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPostMatchSurveyResponse)
}

inline void CMsgClientToGCPostMatchSurveyResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.post_match_survey_){arena}
    , decltype(_impl_.match_id_){uint64_t{0u}}
  };
}

CMsgClientToGCPostMatchSurveyResponse::~CMsgClientToGCPostMatchSurveyResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPostMatchSurveyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPostMatchSurveyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.post_match_survey_.~RepeatedPtrField();
}

void CMsgClientToGCPostMatchSurveyResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPostMatchSurveyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPostMatchSurveyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.post_match_survey_.Clear();
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPostMatchSurveyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey post_match_survey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_post_match_survey(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional uint64 match_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_match_id(&has_bits);
          _impl_.match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPostMatchSurveyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPostMatchSurveyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey post_match_survey = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_post_match_survey_size()); i < n; i++) {
    const auto& repfield = this->_internal_post_match_survey(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 match_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_match_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPostMatchSurveyResponse)
  return target;
}

size_t CMsgClientToGCPostMatchSurveyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPostMatchSurveyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey post_match_survey = 1;
  total_size += 1UL * this->_internal_post_match_survey_size();
  for (const auto& msg : this->_impl_.post_match_survey_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional uint64 match_id = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_match_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPostMatchSurveyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPostMatchSurveyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPostMatchSurveyResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPostMatchSurveyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPostMatchSurveyResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPostMatchSurveyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPostMatchSurveyResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.post_match_survey_.MergeFrom(from._impl_.post_match_survey_);
  if (from._internal_has_match_id()) {
    _this->_internal_set_match_id(from._internal_match_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPostMatchSurveyResponse::CopyFrom(const CMsgClientToGCPostMatchSurveyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPostMatchSurveyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPostMatchSurveyResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCPostMatchSurveyResponse::InternalSwap(CMsgClientToGCPostMatchSurveyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.post_match_survey_.InternalSwap(&other->_impl_.post_match_survey_);
  swap(_impl_.match_id_, other->_impl_.match_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPostMatchSurveyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[28]);
}

// ===================================================================

class CMsgPartyMMInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgPartyMMInfo>()._impl_._has_bits_);
  static void set_has_platform(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgRegionPingTimesClient& ping_times(const CMsgPartyMMInfo* msg);
  static void set_has_ping_times(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_client_version(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_region_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::CMsgRegionPingTimesClient&
CMsgPartyMMInfo::_Internal::ping_times(const CMsgPartyMMInfo* msg) {
  return *msg->_impl_.ping_times_;
}
void CMsgPartyMMInfo::clear_ping_times() {
  if (_impl_.ping_times_ != nullptr) _impl_.ping_times_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CMsgPartyMMInfo::CMsgPartyMMInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgPartyMMInfo)
}
CMsgPartyMMInfo::CMsgPartyMMInfo(const CMsgPartyMMInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgPartyMMInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.ping_times_){nullptr}
    , decltype(_impl_.platform_){}
    , decltype(_impl_.client_version_){}
    , decltype(_impl_.region_mode_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ping_times()) {
    _this->_impl_.ping_times_ = new ::CMsgRegionPingTimesClient(*from._impl_.ping_times_);
  }
  ::memcpy(&_impl_.platform_, &from._impl_.platform_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.region_mode_) -
    reinterpret_cast<char*>(&_impl_.platform_)) + sizeof(_impl_.region_mode_));
  // @@protoc_insertion_point(copy_constructor:CMsgPartyMMInfo)
}

inline void CMsgPartyMMInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.ping_times_){nullptr}
    , decltype(_impl_.platform_){0}
    , decltype(_impl_.client_version_){0u}
    , decltype(_impl_.region_mode_){0}
  };
}

CMsgPartyMMInfo::~CMsgPartyMMInfo() {
  // @@protoc_insertion_point(destructor:CMsgPartyMMInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgPartyMMInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.ping_times_;
}

void CMsgPartyMMInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgPartyMMInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPartyMMInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.ping_times_ != nullptr);
    _impl_.ping_times_->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.platform_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.region_mode_) -
        reinterpret_cast<char*>(&_impl_.platform_)) + sizeof(_impl_.region_mode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgPartyMMInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .EGCPlatform platform = 1 [default = k_eGCPlatform_None];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EGCPlatform_IsValid(val))) {
            _internal_set_platform(static_cast<::EGCPlatform>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgRegionPingTimesClient ping_times = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ping_times(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 client_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_client_version(&has_bits);
          _impl_.client_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelRegionMode region_mode = 4 [default = k_ECitadelRegionMode_ROW];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelRegionMode_IsValid(val))) {
            _internal_set_region_mode(static_cast<::ECitadelRegionMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgPartyMMInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPartyMMInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .EGCPlatform platform = 1 [default = k_eGCPlatform_None];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_platform(), target);
  }

  // optional .CMsgRegionPingTimesClient ping_times = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::ping_times(this),
        _Internal::ping_times(this).GetCachedSize(), target, stream);
  }

  // optional uint32 client_version = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_client_version(), target);
  }

  // optional .ECitadelRegionMode region_mode = 4 [default = k_ECitadelRegionMode_ROW];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_region_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPartyMMInfo)
  return target;
}

size_t CMsgPartyMMInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPartyMMInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .CMsgRegionPingTimesClient ping_times = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ping_times_);
    }

    // optional .EGCPlatform platform = 1 [default = k_eGCPlatform_None];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_platform());
    }

    // optional uint32 client_version = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_client_version());
    }

    // optional .ECitadelRegionMode region_mode = 4 [default = k_ECitadelRegionMode_ROW];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_region_mode());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgPartyMMInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgPartyMMInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgPartyMMInfo::GetClassData() const { return &_class_data_; }


void CMsgPartyMMInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgPartyMMInfo*>(&to_msg);
  auto& from = static_cast<const CMsgPartyMMInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgPartyMMInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_ping_times()->::CMsgRegionPingTimesClient::MergeFrom(
          from._internal_ping_times());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.platform_ = from._impl_.platform_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.client_version_ = from._impl_.client_version_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.region_mode_ = from._impl_.region_mode_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgPartyMMInfo::CopyFrom(const CMsgPartyMMInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPartyMMInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPartyMMInfo::IsInitialized() const {
  return true;
}

void CMsgPartyMMInfo::InternalSwap(CMsgPartyMMInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgPartyMMInfo, _impl_.region_mode_)
      + sizeof(CMsgPartyMMInfo::_impl_.region_mode_)
      - PROTOBUF_FIELD_OFFSET(CMsgPartyMMInfo, _impl_.ping_times_)>(
          reinterpret_cast<char*>(&_impl_.ping_times_),
          reinterpret_cast<char*>(&other->_impl_.ping_times_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgPartyMMInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[29]);
}

// ===================================================================

class CMsgClientToGCPartyCreate::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartyCreate>()._impl_._has_bits_);
  static const ::CMsgPartyMMInfo& party_mm_info(const CMsgClientToGCPartyCreate* msg);
  static void set_has_party_mm_info(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_invite_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_disable_party_code(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_is_private_lobby(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_region_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_server_search_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mm_preference(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::CMsgPartyMMInfo&
CMsgClientToGCPartyCreate::_Internal::party_mm_info(const CMsgClientToGCPartyCreate* msg) {
  return *msg->_impl_.party_mm_info_;
}
CMsgClientToGCPartyCreate::CMsgClientToGCPartyCreate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartyCreate)
}
CMsgClientToGCPartyCreate::CMsgClientToGCPartyCreate(const CMsgClientToGCPartyCreate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartyCreate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.server_search_key_){}
    , decltype(_impl_.party_mm_info_){nullptr}
    , decltype(_impl_.invite_account_id_){}
    , decltype(_impl_.disable_party_code_){}
    , decltype(_impl_.is_private_lobby_){}
    , decltype(_impl_.region_mode_){}
    , decltype(_impl_.mm_preference_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.server_search_key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.server_search_key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_server_search_key()) {
    _this->_impl_.server_search_key_.Set(from._internal_server_search_key(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_party_mm_info()) {
    _this->_impl_.party_mm_info_ = new ::CMsgPartyMMInfo(*from._impl_.party_mm_info_);
  }
  ::memcpy(&_impl_.invite_account_id_, &from._impl_.invite_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.mm_preference_) -
    reinterpret_cast<char*>(&_impl_.invite_account_id_)) + sizeof(_impl_.mm_preference_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartyCreate)
}

inline void CMsgClientToGCPartyCreate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.server_search_key_){}
    , decltype(_impl_.party_mm_info_){nullptr}
    , decltype(_impl_.invite_account_id_){0u}
    , decltype(_impl_.disable_party_code_){false}
    , decltype(_impl_.is_private_lobby_){false}
    , decltype(_impl_.region_mode_){0}
    , decltype(_impl_.mm_preference_){0}
  };
  _impl_.server_search_key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.server_search_key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCPartyCreate::~CMsgClientToGCPartyCreate() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartyCreate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartyCreate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.server_search_key_.Destroy();
  if (this != internal_default_instance()) delete _impl_.party_mm_info_;
}

void CMsgClientToGCPartyCreate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartyCreate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartyCreate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.server_search_key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.party_mm_info_ != nullptr);
      _impl_.party_mm_info_->Clear();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&_impl_.invite_account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.mm_preference_) -
        reinterpret_cast<char*>(&_impl_.invite_account_id_)) + sizeof(_impl_.mm_preference_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartyCreate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgPartyMMInfo party_mm_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_party_mm_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 invite_account_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_invite_account_id(&has_bits);
          _impl_.invite_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool disable_party_code = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_disable_party_code(&has_bits);
          _impl_.disable_party_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool is_private_lobby = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_is_private_lobby(&has_bits);
          _impl_.is_private_lobby_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelRegionMode region_mode = 6 [default = k_ECitadelRegionMode_ROW];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelRegionMode_IsValid(val))) {
            _internal_set_region_mode(static_cast<::ECitadelRegionMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string server_search_key = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_server_search_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCPartyCreate.server_search_key");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelMMPreference mm_preference = 8 [default = k_ECitadelMMPreference_Invalid];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelMMPreference_IsValid(val))) {
            _internal_set_mm_preference(static_cast<::ECitadelMMPreference>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartyCreate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartyCreate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgPartyMMInfo party_mm_info = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::party_mm_info(this),
        _Internal::party_mm_info(this).GetCachedSize(), target, stream);
  }

  // optional uint32 invite_account_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_invite_account_id(), target);
  }

  // optional bool disable_party_code = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_disable_party_code(), target);
  }

  // optional bool is_private_lobby = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_is_private_lobby(), target);
  }

  // optional .ECitadelRegionMode region_mode = 6 [default = k_ECitadelRegionMode_ROW];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      6, this->_internal_region_mode(), target);
  }

  // optional string server_search_key = 7;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_server_search_key().data(), static_cast<int>(this->_internal_server_search_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCPartyCreate.server_search_key");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_server_search_key(), target);
  }

  // optional .ECitadelMMPreference mm_preference = 8 [default = k_ECitadelMMPreference_Invalid];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      8, this->_internal_mm_preference(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartyCreate)
  return target;
}

size_t CMsgClientToGCPartyCreate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartyCreate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string server_search_key = 7;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_server_search_key());
    }

    // optional .CMsgPartyMMInfo party_mm_info = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.party_mm_info_);
    }

    // optional uint32 invite_account_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_invite_account_id());
    }

    // optional bool disable_party_code = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool is_private_lobby = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional .ECitadelRegionMode region_mode = 6 [default = k_ECitadelRegionMode_ROW];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_region_mode());
    }

    // optional .ECitadelMMPreference mm_preference = 8 [default = k_ECitadelMMPreference_Invalid];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_mm_preference());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartyCreate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartyCreate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartyCreate::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartyCreate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartyCreate*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartyCreate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartyCreate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_server_search_key(from._internal_server_search_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_party_mm_info()->::CMsgPartyMMInfo::MergeFrom(
          from._internal_party_mm_info());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.invite_account_id_ = from._impl_.invite_account_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.disable_party_code_ = from._impl_.disable_party_code_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.is_private_lobby_ = from._impl_.is_private_lobby_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.region_mode_ = from._impl_.region_mode_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.mm_preference_ = from._impl_.mm_preference_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartyCreate::CopyFrom(const CMsgClientToGCPartyCreate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartyCreate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartyCreate::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartyCreate::InternalSwap(CMsgClientToGCPartyCreate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.server_search_key_, lhs_arena,
      &other->_impl_.server_search_key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyCreate, _impl_.mm_preference_)
      + sizeof(CMsgClientToGCPartyCreate::_impl_.mm_preference_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyCreate, _impl_.party_mm_info_)>(
          reinterpret_cast<char*>(&_impl_.party_mm_info_),
          reinterpret_cast<char*>(&other->_impl_.party_mm_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartyCreate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[30]);
}

// ===================================================================

class CMsgClientToGCPartyCreateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartyCreateResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_party_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCPartyCreateResponse::CMsgClientToGCPartyCreateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartyCreateResponse)
}
CMsgClientToGCPartyCreateResponse::CMsgClientToGCPartyCreateResponse(const CMsgClientToGCPartyCreateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartyCreateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_id_){}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.party_id_, &from._impl_.party_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.result_) -
    reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.result_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartyCreateResponse)
}

inline void CMsgClientToGCPartyCreateResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_id_){uint64_t{0u}}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCPartyCreateResponse::~CMsgClientToGCPartyCreateResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartyCreateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartyCreateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCPartyCreateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartyCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartyCreateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.party_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.result_) -
        reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.result_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartyCreateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCPartyCreateResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCPartyCreateResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCPartyCreateResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional fixed64 party_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_party_id(&has_bits);
          _impl_.party_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartyCreateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartyCreateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCPartyCreateResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional fixed64 party_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(2, this->_internal_party_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartyCreateResponse)
  return target;
}

size_t CMsgClientToGCPartyCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartyCreateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 party_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional .CMsgClientToGCPartyCreateResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartyCreateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartyCreateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartyCreateResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartyCreateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartyCreateResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartyCreateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartyCreateResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.party_id_ = from._impl_.party_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartyCreateResponse::CopyFrom(const CMsgClientToGCPartyCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartyCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartyCreateResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartyCreateResponse::InternalSwap(CMsgClientToGCPartyCreateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyCreateResponse, _impl_.result_)
      + sizeof(CMsgClientToGCPartyCreateResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyCreateResponse, _impl_.party_id_)>(
          reinterpret_cast<char*>(&_impl_.party_id_),
          reinterpret_cast<char*>(&other->_impl_.party_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartyCreateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[31]);
}

// ===================================================================

class CMsgClientToGCPartyLeave::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartyLeave>()._impl_._has_bits_);
  static void set_has_party_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCPartyLeave::CMsgClientToGCPartyLeave(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartyLeave)
}
CMsgClientToGCPartyLeave::CMsgClientToGCPartyLeave(const CMsgClientToGCPartyLeave& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartyLeave* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.party_id_ = from._impl_.party_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartyLeave)
}

inline void CMsgClientToGCPartyLeave::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_id_){uint64_t{0u}}
  };
}

CMsgClientToGCPartyLeave::~CMsgClientToGCPartyLeave() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartyLeave)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartyLeave::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCPartyLeave::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartyLeave::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartyLeave)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartyLeave::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional fixed64 party_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_party_id(&has_bits);
          _impl_.party_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartyLeave::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartyLeave)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 party_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(1, this->_internal_party_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartyLeave)
  return target;
}

size_t CMsgClientToGCPartyLeave::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartyLeave)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 party_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartyLeave::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartyLeave::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartyLeave::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartyLeave::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartyLeave*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartyLeave&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartyLeave)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_party_id()) {
    _this->_internal_set_party_id(from._internal_party_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartyLeave::CopyFrom(const CMsgClientToGCPartyLeave& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartyLeave)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartyLeave::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartyLeave::InternalSwap(CMsgClientToGCPartyLeave* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.party_id_, other->_impl_.party_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartyLeave::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[32]);
}

// ===================================================================

class CMsgClientToGCPartyLeaveResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartyLeaveResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCPartyLeaveResponse::CMsgClientToGCPartyLeaveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartyLeaveResponse)
}
CMsgClientToGCPartyLeaveResponse::CMsgClientToGCPartyLeaveResponse(const CMsgClientToGCPartyLeaveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartyLeaveResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartyLeaveResponse)
}

inline void CMsgClientToGCPartyLeaveResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCPartyLeaveResponse::~CMsgClientToGCPartyLeaveResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartyLeaveResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartyLeaveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCPartyLeaveResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartyLeaveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartyLeaveResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartyLeaveResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCPartyLeaveResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCPartyLeaveResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCPartyLeaveResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartyLeaveResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartyLeaveResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCPartyLeaveResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartyLeaveResponse)
  return target;
}

size_t CMsgClientToGCPartyLeaveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartyLeaveResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCPartyLeaveResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartyLeaveResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartyLeaveResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartyLeaveResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartyLeaveResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartyLeaveResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartyLeaveResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartyLeaveResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartyLeaveResponse::CopyFrom(const CMsgClientToGCPartyLeaveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartyLeaveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartyLeaveResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartyLeaveResponse::InternalSwap(CMsgClientToGCPartyLeaveResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartyLeaveResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[33]);
}

// ===================================================================

class CMsgClientToGCPartyJoin::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartyJoin>()._impl_._has_bits_);
  static void set_has_party_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_is_rejoin(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::CMsgPartyMMInfo& party_mm_info(const CMsgClientToGCPartyJoin* msg);
  static void set_has_party_mm_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgPartyMMInfo&
CMsgClientToGCPartyJoin::_Internal::party_mm_info(const CMsgClientToGCPartyJoin* msg) {
  return *msg->_impl_.party_mm_info_;
}
CMsgClientToGCPartyJoin::CMsgClientToGCPartyJoin(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartyJoin)
}
CMsgClientToGCPartyJoin::CMsgClientToGCPartyJoin(const CMsgClientToGCPartyJoin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartyJoin* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_mm_info_){nullptr}
    , decltype(_impl_.party_id_){}
    , decltype(_impl_.is_rejoin_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_party_mm_info()) {
    _this->_impl_.party_mm_info_ = new ::CMsgPartyMMInfo(*from._impl_.party_mm_info_);
  }
  ::memcpy(&_impl_.party_id_, &from._impl_.party_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_rejoin_) -
    reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.is_rejoin_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartyJoin)
}

inline void CMsgClientToGCPartyJoin::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_mm_info_){nullptr}
    , decltype(_impl_.party_id_){uint64_t{0u}}
    , decltype(_impl_.is_rejoin_){false}
  };
}

CMsgClientToGCPartyJoin::~CMsgClientToGCPartyJoin() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartyJoin)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartyJoin::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.party_mm_info_;
}

void CMsgClientToGCPartyJoin::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartyJoin::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartyJoin)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.party_mm_info_ != nullptr);
    _impl_.party_mm_info_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.party_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.is_rejoin_) -
        reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.is_rejoin_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartyJoin::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional fixed64 party_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_party_id(&has_bits);
          _impl_.party_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      // optional bool is_rejoin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_is_rejoin(&has_bits);
          _impl_.is_rejoin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgPartyMMInfo party_mm_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_party_mm_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartyJoin::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartyJoin)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 party_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(1, this->_internal_party_id(), target);
  }

  // optional bool is_rejoin = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_is_rejoin(), target);
  }

  // optional .CMsgPartyMMInfo party_mm_info = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::party_mm_info(this),
        _Internal::party_mm_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartyJoin)
  return target;
}

size_t CMsgClientToGCPartyJoin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartyJoin)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .CMsgPartyMMInfo party_mm_info = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.party_mm_info_);
    }

    // optional fixed64 party_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional bool is_rejoin = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartyJoin::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartyJoin::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartyJoin::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartyJoin::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartyJoin*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartyJoin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartyJoin)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_party_mm_info()->::CMsgPartyMMInfo::MergeFrom(
          from._internal_party_mm_info());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.party_id_ = from._impl_.party_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.is_rejoin_ = from._impl_.is_rejoin_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartyJoin::CopyFrom(const CMsgClientToGCPartyJoin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartyJoin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartyJoin::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartyJoin::InternalSwap(CMsgClientToGCPartyJoin* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyJoin, _impl_.is_rejoin_)
      + sizeof(CMsgClientToGCPartyJoin::_impl_.is_rejoin_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyJoin, _impl_.party_mm_info_)>(
          reinterpret_cast<char*>(&_impl_.party_mm_info_),
          reinterpret_cast<char*>(&other->_impl_.party_mm_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartyJoin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[34]);
}

// ===================================================================

class CMsgClientToGCPartyJoinResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartyJoinResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCPartyJoinResponse::CMsgClientToGCPartyJoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartyJoinResponse)
}
CMsgClientToGCPartyJoinResponse::CMsgClientToGCPartyJoinResponse(const CMsgClientToGCPartyJoinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartyJoinResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartyJoinResponse)
}

inline void CMsgClientToGCPartyJoinResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCPartyJoinResponse::~CMsgClientToGCPartyJoinResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartyJoinResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartyJoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCPartyJoinResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartyJoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartyJoinResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartyJoinResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCPartyJoinResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCPartyJoinResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCPartyJoinResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartyJoinResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartyJoinResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCPartyJoinResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartyJoinResponse)
  return target;
}

size_t CMsgClientToGCPartyJoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartyJoinResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCPartyJoinResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartyJoinResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartyJoinResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartyJoinResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartyJoinResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartyJoinResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartyJoinResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartyJoinResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartyJoinResponse::CopyFrom(const CMsgClientToGCPartyJoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartyJoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartyJoinResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartyJoinResponse::InternalSwap(CMsgClientToGCPartyJoinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartyJoinResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[35]);
}

// ===================================================================

class CMsgClientToGCPartyAction::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartyAction>()._impl_._has_bits_);
  static void set_has_party_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_action_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_uint_value(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_bool_value(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_str_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCPartyAction::CMsgClientToGCPartyAction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartyAction)
}
CMsgClientToGCPartyAction::CMsgClientToGCPartyAction(const CMsgClientToGCPartyAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartyAction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.str_value_){}
    , decltype(_impl_.party_id_){}
    , decltype(_impl_.target_account_id_){}
    , decltype(_impl_.bool_value_){}
    , decltype(_impl_.uint_value_){}
    , decltype(_impl_.action_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.str_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.str_value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_str_value()) {
    _this->_impl_.str_value_.Set(from._internal_str_value(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.party_id_, &from._impl_.party_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.action_id_) -
    reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.action_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartyAction)
}

inline void CMsgClientToGCPartyAction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.str_value_){}
    , decltype(_impl_.party_id_){uint64_t{0u}}
    , decltype(_impl_.target_account_id_){0u}
    , decltype(_impl_.bool_value_){false}
    , decltype(_impl_.uint_value_){uint64_t{0u}}
    , decltype(_impl_.action_id_){1}
  };
  _impl_.str_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.str_value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCPartyAction::~CMsgClientToGCPartyAction() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartyAction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartyAction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.str_value_.Destroy();
}

void CMsgClientToGCPartyAction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartyAction::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartyAction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.str_value_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.party_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.uint_value_) -
        reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.uint_value_));
    _impl_.action_id_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartyAction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional fixed64 party_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_party_id(&has_bits);
          _impl_.party_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_target_account_id(&has_bits);
          _impl_.target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgClientToGCPartyAction.EAction action_id = 3 [default = k_eKickUser];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCPartyAction_EAction_IsValid(val))) {
            _internal_set_action_id(static_cast<::CMsgClientToGCPartyAction_EAction>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint64 uint_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_uint_value(&has_bits);
          _impl_.uint_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bool_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_bool_value(&has_bits);
          _impl_.bool_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string str_value = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_str_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCPartyAction.str_value");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartyAction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartyAction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 party_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(1, this->_internal_party_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_account_id(), target);
  }

  // optional .CMsgClientToGCPartyAction.EAction action_id = 3 [default = k_eKickUser];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_action_id(), target);
  }

  // optional uint64 uint_value = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_uint_value(), target);
  }

  // optional bool bool_value = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_bool_value(), target);
  }

  // optional string str_value = 6;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_str_value().data(), static_cast<int>(this->_internal_str_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCPartyAction.str_value");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_str_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartyAction)
  return target;
}

size_t CMsgClientToGCPartyAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartyAction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string str_value = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_str_value());
    }

    // optional fixed64 party_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_account_id());
    }

    // optional bool bool_value = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional uint64 uint_value = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_uint_value());
    }

    // optional .CMsgClientToGCPartyAction.EAction action_id = 3 [default = k_eKickUser];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_action_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartyAction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartyAction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartyAction::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartyAction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartyAction*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartyAction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartyAction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_str_value(from._internal_str_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.party_id_ = from._impl_.party_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.target_account_id_ = from._impl_.target_account_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.bool_value_ = from._impl_.bool_value_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.uint_value_ = from._impl_.uint_value_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.action_id_ = from._impl_.action_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartyAction::CopyFrom(const CMsgClientToGCPartyAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartyAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartyAction::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartyAction::InternalSwap(CMsgClientToGCPartyAction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.str_value_, lhs_arena,
      &other->_impl_.str_value_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyAction, _impl_.uint_value_)
      + sizeof(CMsgClientToGCPartyAction::_impl_.uint_value_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyAction, _impl_.party_id_)>(
          reinterpret_cast<char*>(&_impl_.party_id_),
          reinterpret_cast<char*>(&other->_impl_.party_id_));
  swap(_impl_.action_id_, other->_impl_.action_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartyAction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[36]);
}

// ===================================================================

class CMsgClientToGCPartyActionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartyActionResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCPartyActionResponse::CMsgClientToGCPartyActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartyActionResponse)
}
CMsgClientToGCPartyActionResponse::CMsgClientToGCPartyActionResponse(const CMsgClientToGCPartyActionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartyActionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartyActionResponse)
}

inline void CMsgClientToGCPartyActionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCPartyActionResponse::~CMsgClientToGCPartyActionResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartyActionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartyActionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCPartyActionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartyActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartyActionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartyActionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCPartyActionResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCPartyActionResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCPartyActionResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartyActionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartyActionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCPartyActionResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartyActionResponse)
  return target;
}

size_t CMsgClientToGCPartyActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartyActionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCPartyActionResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartyActionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartyActionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartyActionResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartyActionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartyActionResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartyActionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartyActionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartyActionResponse::CopyFrom(const CMsgClientToGCPartyActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartyActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartyActionResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartyActionResponse::InternalSwap(CMsgClientToGCPartyActionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartyActionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[37]);
}

// ===================================================================

class CMsgClientToGCPartySetMode::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartySetMode>()._impl_._has_bits_);
  static void set_has_party_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_match_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_game_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_bot_difficulty(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_dev_server_command(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_region_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgClientToGCPartySetMode::CMsgClientToGCPartySetMode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartySetMode)
}
CMsgClientToGCPartySetMode::CMsgClientToGCPartySetMode(const CMsgClientToGCPartySetMode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartySetMode* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dev_server_command_){}
    , decltype(_impl_.party_id_){}
    , decltype(_impl_.match_mode_){}
    , decltype(_impl_.game_mode_){}
    , decltype(_impl_.bot_difficulty_){}
    , decltype(_impl_.region_mode_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.dev_server_command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dev_server_command_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_dev_server_command()) {
    _this->_impl_.dev_server_command_.Set(from._internal_dev_server_command(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.party_id_, &from._impl_.party_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.region_mode_) -
    reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.region_mode_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartySetMode)
}

inline void CMsgClientToGCPartySetMode::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dev_server_command_){}
    , decltype(_impl_.party_id_){uint64_t{0u}}
    , decltype(_impl_.match_mode_){0}
    , decltype(_impl_.game_mode_){0}
    , decltype(_impl_.bot_difficulty_){0}
    , decltype(_impl_.region_mode_){0}
  };
  _impl_.dev_server_command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dev_server_command_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCPartySetMode::~CMsgClientToGCPartySetMode() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartySetMode)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartySetMode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dev_server_command_.Destroy();
}

void CMsgClientToGCPartySetMode::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartySetMode::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartySetMode)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.dev_server_command_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.party_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.region_mode_) -
        reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.region_mode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartySetMode::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional fixed64 party_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_party_id(&has_bits);
          _impl_.party_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelMatchMode match_mode = 2 [default = k_ECitadelMatchMode_Invalid];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelMatchMode_IsValid(val))) {
            _internal_set_match_mode(static_cast<::ECitadelMatchMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelGameMode game_mode = 3 [default = k_ECitadelGameMode_Invalid];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelGameMode_IsValid(val))) {
            _internal_set_game_mode(static_cast<::ECitadelGameMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelBotDifficulty bot_difficulty = 4 [default = k_ECitadelBotDifficulty_None];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelBotDifficulty_IsValid(val))) {
            _internal_set_bot_difficulty(static_cast<::ECitadelBotDifficulty>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string dev_server_command = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_dev_server_command();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCPartySetMode.dev_server_command");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelRegionMode region_mode = 6 [default = k_ECitadelRegionMode_ROW];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelRegionMode_IsValid(val))) {
            _internal_set_region_mode(static_cast<::ECitadelRegionMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartySetMode::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartySetMode)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 party_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(1, this->_internal_party_id(), target);
  }

  // optional .ECitadelMatchMode match_mode = 2 [default = k_ECitadelMatchMode_Invalid];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_match_mode(), target);
  }

  // optional .ECitadelGameMode game_mode = 3 [default = k_ECitadelGameMode_Invalid];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_game_mode(), target);
  }

  // optional .ECitadelBotDifficulty bot_difficulty = 4 [default = k_ECitadelBotDifficulty_None];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_bot_difficulty(), target);
  }

  // optional string dev_server_command = 5;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_dev_server_command().data(), static_cast<int>(this->_internal_dev_server_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCPartySetMode.dev_server_command");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_dev_server_command(), target);
  }

  // optional .ECitadelRegionMode region_mode = 6 [default = k_ECitadelRegionMode_ROW];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      6, this->_internal_region_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartySetMode)
  return target;
}

size_t CMsgClientToGCPartySetMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartySetMode)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string dev_server_command = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_dev_server_command());
    }

    // optional fixed64 party_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional .ECitadelMatchMode match_mode = 2 [default = k_ECitadelMatchMode_Invalid];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_match_mode());
    }

    // optional .ECitadelGameMode game_mode = 3 [default = k_ECitadelGameMode_Invalid];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_game_mode());
    }

    // optional .ECitadelBotDifficulty bot_difficulty = 4 [default = k_ECitadelBotDifficulty_None];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_bot_difficulty());
    }

    // optional .ECitadelRegionMode region_mode = 6 [default = k_ECitadelRegionMode_ROW];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_region_mode());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartySetMode::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartySetMode::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartySetMode::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartySetMode::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartySetMode*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartySetMode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartySetMode)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_dev_server_command(from._internal_dev_server_command());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.party_id_ = from._impl_.party_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.match_mode_ = from._impl_.match_mode_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.game_mode_ = from._impl_.game_mode_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.bot_difficulty_ = from._impl_.bot_difficulty_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.region_mode_ = from._impl_.region_mode_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartySetMode::CopyFrom(const CMsgClientToGCPartySetMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartySetMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartySetMode::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartySetMode::InternalSwap(CMsgClientToGCPartySetMode* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dev_server_command_, lhs_arena,
      &other->_impl_.dev_server_command_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartySetMode, _impl_.region_mode_)
      + sizeof(CMsgClientToGCPartySetMode::_impl_.region_mode_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartySetMode, _impl_.party_id_)>(
          reinterpret_cast<char*>(&_impl_.party_id_),
          reinterpret_cast<char*>(&other->_impl_.party_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartySetMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[38]);
}

// ===================================================================

class CMsgClientToGCPartySetModeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartySetModeResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_time_stamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCPartySetModeResponse::CMsgClientToGCPartySetModeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartySetModeResponse)
}
CMsgClientToGCPartySetModeResponse::CMsgClientToGCPartySetModeResponse(const CMsgClientToGCPartySetModeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartySetModeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}
    , decltype(_impl_.time_stamp_){}
    , decltype(_impl_.account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.account_id_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.account_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartySetModeResponse)
}

inline void CMsgClientToGCPartySetModeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.time_stamp_){0u}
    , decltype(_impl_.account_id_){0u}
  };
}

CMsgClientToGCPartySetModeResponse::~CMsgClientToGCPartySetModeResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartySetModeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartySetModeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCPartySetModeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartySetModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartySetModeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.account_id_) -
        reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.account_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartySetModeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCPartySetModeResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCPartySetModeResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCPartySetModeResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 time_stamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_time_stamp(&has_bits);
          _impl_.time_stamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 account_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartySetModeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartySetModeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCPartySetModeResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional uint32 time_stamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_time_stamp(), target);
  }

  // optional uint32 account_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartySetModeResponse)
  return target;
}

size_t CMsgClientToGCPartySetModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartySetModeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .CMsgClientToGCPartySetModeResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional uint32 time_stamp = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_time_stamp());
    }

    // optional uint32 account_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartySetModeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartySetModeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartySetModeResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartySetModeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartySetModeResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartySetModeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartySetModeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.time_stamp_ = from._impl_.time_stamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartySetModeResponse::CopyFrom(const CMsgClientToGCPartySetModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartySetModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartySetModeResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartySetModeResponse::InternalSwap(CMsgClientToGCPartySetModeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartySetModeResponse, _impl_.account_id_)
      + sizeof(CMsgClientToGCPartySetModeResponse::_impl_.account_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartySetModeResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartySetModeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[39]);
}

// ===================================================================

class CMsgClientToGCPartyStartMatch::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartyStartMatch>()._impl_._has_bits_);
  static void set_has_party_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCPartyStartMatch::CMsgClientToGCPartyStartMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartyStartMatch)
}
CMsgClientToGCPartyStartMatch::CMsgClientToGCPartyStartMatch(const CMsgClientToGCPartyStartMatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartyStartMatch* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.party_id_ = from._impl_.party_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartyStartMatch)
}

inline void CMsgClientToGCPartyStartMatch::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_id_){uint64_t{0u}}
  };
}

CMsgClientToGCPartyStartMatch::~CMsgClientToGCPartyStartMatch() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartyStartMatch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartyStartMatch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCPartyStartMatch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartyStartMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartyStartMatch)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartyStartMatch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional fixed64 party_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_party_id(&has_bits);
          _impl_.party_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartyStartMatch::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartyStartMatch)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 party_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(1, this->_internal_party_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartyStartMatch)
  return target;
}

size_t CMsgClientToGCPartyStartMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartyStartMatch)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 party_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartyStartMatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartyStartMatch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartyStartMatch::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartyStartMatch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartyStartMatch*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartyStartMatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartyStartMatch)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_party_id()) {
    _this->_internal_set_party_id(from._internal_party_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartyStartMatch::CopyFrom(const CMsgClientToGCPartyStartMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartyStartMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartyStartMatch::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartyStartMatch::InternalSwap(CMsgClientToGCPartyStartMatch* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.party_id_, other->_impl_.party_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartyStartMatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[40]);
}

// ===================================================================

class CMsgClientToGCPartyStartMatchResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartyStartMatchResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCPartyStartMatchResponse::CMsgClientToGCPartyStartMatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartyStartMatchResponse)
}
CMsgClientToGCPartyStartMatchResponse::CMsgClientToGCPartyStartMatchResponse(const CMsgClientToGCPartyStartMatchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartyStartMatchResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}
    , decltype(_impl_.account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.account_id_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.account_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartyStartMatchResponse)
}

inline void CMsgClientToGCPartyStartMatchResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.account_id_){0u}
  };
}

CMsgClientToGCPartyStartMatchResponse::~CMsgClientToGCPartyStartMatchResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartyStartMatchResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartyStartMatchResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCPartyStartMatchResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartyStartMatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartyStartMatchResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.account_id_) -
        reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.account_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartyStartMatchResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCPartyStartMatchResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCPartyStartMatchResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCPartyStartMatchResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartyStartMatchResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartyStartMatchResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCPartyStartMatchResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional uint32 account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartyStartMatchResponse)
  return target;
}

size_t CMsgClientToGCPartyStartMatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartyStartMatchResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgClientToGCPartyStartMatchResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional uint32 account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartyStartMatchResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartyStartMatchResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartyStartMatchResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartyStartMatchResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartyStartMatchResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartyStartMatchResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartyStartMatchResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartyStartMatchResponse::CopyFrom(const CMsgClientToGCPartyStartMatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartyStartMatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartyStartMatchResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartyStartMatchResponse::InternalSwap(CMsgClientToGCPartyStartMatchResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyStartMatchResponse, _impl_.account_id_)
      + sizeof(CMsgClientToGCPartyStartMatchResponse::_impl_.account_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyStartMatchResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartyStartMatchResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[41]);
}

// ===================================================================

class CMsgClientToGCPartyInviteUser::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartyInviteUser>()._impl_._has_bits_);
  static void set_has_party_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_invite_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCPartyInviteUser::CMsgClientToGCPartyInviteUser(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartyInviteUser)
}
CMsgClientToGCPartyInviteUser::CMsgClientToGCPartyInviteUser(const CMsgClientToGCPartyInviteUser& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartyInviteUser* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_id_){}
    , decltype(_impl_.invite_account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.party_id_, &from._impl_.party_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.invite_account_id_) -
    reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.invite_account_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartyInviteUser)
}

inline void CMsgClientToGCPartyInviteUser::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_id_){uint64_t{0u}}
    , decltype(_impl_.invite_account_id_){0u}
  };
}

CMsgClientToGCPartyInviteUser::~CMsgClientToGCPartyInviteUser() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartyInviteUser)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartyInviteUser::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCPartyInviteUser::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartyInviteUser::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartyInviteUser)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.party_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.invite_account_id_) -
        reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.invite_account_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartyInviteUser::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional fixed64 party_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_party_id(&has_bits);
          _impl_.party_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 invite_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_invite_account_id(&has_bits);
          _impl_.invite_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartyInviteUser::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartyInviteUser)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 party_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(1, this->_internal_party_id(), target);
  }

  // optional uint32 invite_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_invite_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartyInviteUser)
  return target;
}

size_t CMsgClientToGCPartyInviteUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartyInviteUser)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 party_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 invite_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_invite_account_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartyInviteUser::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartyInviteUser::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartyInviteUser::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartyInviteUser::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartyInviteUser*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartyInviteUser&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartyInviteUser)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.party_id_ = from._impl_.party_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.invite_account_id_ = from._impl_.invite_account_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartyInviteUser::CopyFrom(const CMsgClientToGCPartyInviteUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartyInviteUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartyInviteUser::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartyInviteUser::InternalSwap(CMsgClientToGCPartyInviteUser* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyInviteUser, _impl_.invite_account_id_)
      + sizeof(CMsgClientToGCPartyInviteUser::_impl_.invite_account_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyInviteUser, _impl_.party_id_)>(
          reinterpret_cast<char*>(&_impl_.party_id_),
          reinterpret_cast<char*>(&other->_impl_.party_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartyInviteUser::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[42]);
}

// ===================================================================

class CMsgClientToGCPartyInviteUserResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartyInviteUserResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_user_online(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCPartyInviteUserResponse::CMsgClientToGCPartyInviteUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartyInviteUserResponse)
}
CMsgClientToGCPartyInviteUserResponse::CMsgClientToGCPartyInviteUserResponse(const CMsgClientToGCPartyInviteUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartyInviteUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}
    , decltype(_impl_.user_online_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.user_online_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.user_online_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartyInviteUserResponse)
}

inline void CMsgClientToGCPartyInviteUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.user_online_){false}
  };
}

CMsgClientToGCPartyInviteUserResponse::~CMsgClientToGCPartyInviteUserResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartyInviteUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartyInviteUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCPartyInviteUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartyInviteUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartyInviteUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.user_online_) -
        reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.user_online_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartyInviteUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCPartyInviteUserResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCPartyInviteUserResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCPartyInviteUserResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional bool user_online = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_user_online(&has_bits);
          _impl_.user_online_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartyInviteUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartyInviteUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCPartyInviteUserResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional bool user_online = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_user_online(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartyInviteUserResponse)
  return target;
}

size_t CMsgClientToGCPartyInviteUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartyInviteUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgClientToGCPartyInviteUserResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional bool user_online = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartyInviteUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartyInviteUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartyInviteUserResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartyInviteUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartyInviteUserResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartyInviteUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartyInviteUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.user_online_ = from._impl_.user_online_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartyInviteUserResponse::CopyFrom(const CMsgClientToGCPartyInviteUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartyInviteUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartyInviteUserResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartyInviteUserResponse::InternalSwap(CMsgClientToGCPartyInviteUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyInviteUserResponse, _impl_.user_online_)
      + sizeof(CMsgClientToGCPartyInviteUserResponse::_impl_.user_online_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyInviteUserResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartyInviteUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[43]);
}

// ===================================================================

class CMsgGCToClientPartyEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientPartyEvent>()._impl_._has_bits_);
  static void set_has_party_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_event(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_initiator_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_bytes_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_str_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uint_data(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgGCToClientPartyEvent::CMsgGCToClientPartyEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientPartyEvent)
}
CMsgGCToClientPartyEvent::CMsgGCToClientPartyEvent(const CMsgGCToClientPartyEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientPartyEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.bytes_data_){}
    , decltype(_impl_.str_data_){}
    , decltype(_impl_.party_id_){}
    , decltype(_impl_.initiator_account_id_){}
    , decltype(_impl_.target_account_id_){}
    , decltype(_impl_.uint_data_){}
    , decltype(_impl_.event_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.bytes_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bytes_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_bytes_data()) {
    _this->_impl_.bytes_data_.Set(from._internal_bytes_data(), 
      _this->GetArenaForAllocation());
  }
  _impl_.str_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.str_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_str_data()) {
    _this->_impl_.str_data_.Set(from._internal_str_data(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.party_id_, &from._impl_.party_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.event_) -
    reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.event_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientPartyEvent)
}

inline void CMsgGCToClientPartyEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.bytes_data_){}
    , decltype(_impl_.str_data_){}
    , decltype(_impl_.party_id_){uint64_t{0u}}
    , decltype(_impl_.initiator_account_id_){0u}
    , decltype(_impl_.target_account_id_){0u}
    , decltype(_impl_.uint_data_){uint64_t{0u}}
    , decltype(_impl_.event_){1}
  };
  _impl_.bytes_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bytes_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.str_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgGCToClientPartyEvent::~CMsgGCToClientPartyEvent() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientPartyEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientPartyEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bytes_data_.Destroy();
  _impl_.str_data_.Destroy();
}

void CMsgGCToClientPartyEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientPartyEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientPartyEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.bytes_data_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.str_data_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&_impl_.party_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.uint_data_) -
        reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.uint_data_));
    _impl_.event_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientPartyEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional fixed64 party_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_party_id(&has_bits);
          _impl_.party_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgGCToClientPartyEvent.EEvent event = 2 [default = k_ePlayerKicked];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgGCToClientPartyEvent_EEvent_IsValid(val))) {
            _internal_set_event(static_cast<::CMsgGCToClientPartyEvent_EEvent>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 initiator_account_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_initiator_account_id(&has_bits);
          _impl_.initiator_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_target_account_id(&has_bits);
          _impl_.target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes bytes_data = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_bytes_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string str_data = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_str_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgGCToClientPartyEvent.str_data");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint64 uint_data = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_uint_data(&has_bits);
          _impl_.uint_data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientPartyEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientPartyEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 party_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(1, this->_internal_party_id(), target);
  }

  // optional .CMsgGCToClientPartyEvent.EEvent event = 2 [default = k_ePlayerKicked];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_event(), target);
  }

  // optional uint32 initiator_account_id = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_initiator_account_id(), target);
  }

  // optional uint32 target_account_id = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_target_account_id(), target);
  }

  // optional bytes bytes_data = 5;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_bytes_data(), target);
  }

  // optional string str_data = 6;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_str_data().data(), static_cast<int>(this->_internal_str_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGCToClientPartyEvent.str_data");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_str_data(), target);
  }

  // optional uint64 uint_data = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(7, this->_internal_uint_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientPartyEvent)
  return target;
}

size_t CMsgGCToClientPartyEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientPartyEvent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional bytes bytes_data = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_bytes_data());
    }

    // optional string str_data = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_str_data());
    }

    // optional fixed64 party_id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional uint32 initiator_account_id = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_initiator_account_id());
    }

    // optional uint32 target_account_id = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_account_id());
    }

    // optional uint64 uint_data = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_uint_data());
    }

    // optional .CMsgGCToClientPartyEvent.EEvent event = 2 [default = k_ePlayerKicked];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_event());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientPartyEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientPartyEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientPartyEvent::GetClassData() const { return &_class_data_; }


void CMsgGCToClientPartyEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientPartyEvent*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientPartyEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientPartyEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_bytes_data(from._internal_bytes_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_str_data(from._internal_str_data());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.party_id_ = from._impl_.party_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.initiator_account_id_ = from._impl_.initiator_account_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.target_account_id_ = from._impl_.target_account_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.uint_data_ = from._impl_.uint_data_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.event_ = from._impl_.event_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientPartyEvent::CopyFrom(const CMsgGCToClientPartyEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientPartyEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientPartyEvent::IsInitialized() const {
  return true;
}

void CMsgGCToClientPartyEvent::InternalSwap(CMsgGCToClientPartyEvent* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bytes_data_, lhs_arena,
      &other->_impl_.bytes_data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.str_data_, lhs_arena,
      &other->_impl_.str_data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCToClientPartyEvent, _impl_.uint_data_)
      + sizeof(CMsgGCToClientPartyEvent::_impl_.uint_data_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCToClientPartyEvent, _impl_.party_id_)>(
          reinterpret_cast<char*>(&_impl_.party_id_),
          reinterpret_cast<char*>(&other->_impl_.party_id_));
  swap(_impl_.event_, other->_impl_.event_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientPartyEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[44]);
}

// ===================================================================

class CMsgGCToClientCanRejoinParty::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientCanRejoinParty>()._impl_._has_bits_);
  static void set_has_party_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCToClientCanRejoinParty::CMsgGCToClientCanRejoinParty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientCanRejoinParty)
}
CMsgGCToClientCanRejoinParty::CMsgGCToClientCanRejoinParty(const CMsgGCToClientCanRejoinParty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientCanRejoinParty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.party_id_ = from._impl_.party_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientCanRejoinParty)
}

inline void CMsgGCToClientCanRejoinParty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_id_){uint64_t{0u}}
  };
}

CMsgGCToClientCanRejoinParty::~CMsgGCToClientCanRejoinParty() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientCanRejoinParty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientCanRejoinParty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgGCToClientCanRejoinParty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientCanRejoinParty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientCanRejoinParty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientCanRejoinParty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional fixed64 party_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_party_id(&has_bits);
          _impl_.party_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientCanRejoinParty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientCanRejoinParty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 party_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(1, this->_internal_party_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientCanRejoinParty)
  return target;
}

size_t CMsgGCToClientCanRejoinParty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientCanRejoinParty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 party_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientCanRejoinParty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientCanRejoinParty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientCanRejoinParty::GetClassData() const { return &_class_data_; }


void CMsgGCToClientCanRejoinParty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientCanRejoinParty*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientCanRejoinParty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientCanRejoinParty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_party_id()) {
    _this->_internal_set_party_id(from._internal_party_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientCanRejoinParty::CopyFrom(const CMsgGCToClientCanRejoinParty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientCanRejoinParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientCanRejoinParty::IsInitialized() const {
  return true;
}

void CMsgGCToClientCanRejoinParty::InternalSwap(CMsgGCToClientCanRejoinParty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.party_id_, other->_impl_.party_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientCanRejoinParty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[45]);
}

// ===================================================================

class CMsgClientToGCPartyJoinViaCode::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartyJoinViaCode>()._impl_._has_bits_);
  static void set_has_join_code(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgPartyMMInfo& party_mm_info(const CMsgClientToGCPartyJoinViaCode* msg);
  static void set_has_party_mm_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgPartyMMInfo&
CMsgClientToGCPartyJoinViaCode::_Internal::party_mm_info(const CMsgClientToGCPartyJoinViaCode* msg) {
  return *msg->_impl_.party_mm_info_;
}
CMsgClientToGCPartyJoinViaCode::CMsgClientToGCPartyJoinViaCode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartyJoinViaCode)
}
CMsgClientToGCPartyJoinViaCode::CMsgClientToGCPartyJoinViaCode(const CMsgClientToGCPartyJoinViaCode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartyJoinViaCode* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_mm_info_){nullptr}
    , decltype(_impl_.join_code_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_party_mm_info()) {
    _this->_impl_.party_mm_info_ = new ::CMsgPartyMMInfo(*from._impl_.party_mm_info_);
  }
  _this->_impl_.join_code_ = from._impl_.join_code_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartyJoinViaCode)
}

inline void CMsgClientToGCPartyJoinViaCode::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_mm_info_){nullptr}
    , decltype(_impl_.join_code_){uint64_t{0u}}
  };
}

CMsgClientToGCPartyJoinViaCode::~CMsgClientToGCPartyJoinViaCode() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartyJoinViaCode)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartyJoinViaCode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.party_mm_info_;
}

void CMsgClientToGCPartyJoinViaCode::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartyJoinViaCode::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartyJoinViaCode)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.party_mm_info_ != nullptr);
    _impl_.party_mm_info_->Clear();
  }
  _impl_.join_code_ = uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartyJoinViaCode::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 join_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_join_code(&has_bits);
          _impl_.join_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgPartyMMInfo party_mm_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_party_mm_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartyJoinViaCode::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartyJoinViaCode)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 join_code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_join_code(), target);
  }

  // optional .CMsgPartyMMInfo party_mm_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::party_mm_info(this),
        _Internal::party_mm_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartyJoinViaCode)
  return target;
}

size_t CMsgClientToGCPartyJoinViaCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartyJoinViaCode)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgPartyMMInfo party_mm_info = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.party_mm_info_);
    }

    // optional uint64 join_code = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_join_code());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartyJoinViaCode::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartyJoinViaCode::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartyJoinViaCode::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartyJoinViaCode::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartyJoinViaCode*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartyJoinViaCode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartyJoinViaCode)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_party_mm_info()->::CMsgPartyMMInfo::MergeFrom(
          from._internal_party_mm_info());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.join_code_ = from._impl_.join_code_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartyJoinViaCode::CopyFrom(const CMsgClientToGCPartyJoinViaCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartyJoinViaCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartyJoinViaCode::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartyJoinViaCode::InternalSwap(CMsgClientToGCPartyJoinViaCode* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyJoinViaCode, _impl_.join_code_)
      + sizeof(CMsgClientToGCPartyJoinViaCode::_impl_.join_code_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyJoinViaCode, _impl_.party_mm_info_)>(
          reinterpret_cast<char*>(&_impl_.party_mm_info_),
          reinterpret_cast<char*>(&other->_impl_.party_mm_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartyJoinViaCode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[46]);
}

// ===================================================================

class CMsgClientToGCPartyJoinViaCodeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartyJoinViaCodeResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_party_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCPartyJoinViaCodeResponse::CMsgClientToGCPartyJoinViaCodeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartyJoinViaCodeResponse)
}
CMsgClientToGCPartyJoinViaCodeResponse::CMsgClientToGCPartyJoinViaCodeResponse(const CMsgClientToGCPartyJoinViaCodeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartyJoinViaCodeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_id_){}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.party_id_, &from._impl_.party_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.result_) -
    reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.result_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartyJoinViaCodeResponse)
}

inline void CMsgClientToGCPartyJoinViaCodeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.party_id_){uint64_t{0u}}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCPartyJoinViaCodeResponse::~CMsgClientToGCPartyJoinViaCodeResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartyJoinViaCodeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartyJoinViaCodeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCPartyJoinViaCodeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartyJoinViaCodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartyJoinViaCodeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.party_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.result_) -
        reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.result_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartyJoinViaCodeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCPartyJoinResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCPartyJoinResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCPartyJoinResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional fixed64 party_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_party_id(&has_bits);
          _impl_.party_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartyJoinViaCodeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartyJoinViaCodeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCPartyJoinResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional fixed64 party_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(2, this->_internal_party_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartyJoinViaCodeResponse)
  return target;
}

size_t CMsgClientToGCPartyJoinViaCodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartyJoinViaCodeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 party_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional .CMsgClientToGCPartyJoinResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartyJoinViaCodeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartyJoinViaCodeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartyJoinViaCodeResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartyJoinViaCodeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartyJoinViaCodeResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartyJoinViaCodeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartyJoinViaCodeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.party_id_ = from._impl_.party_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartyJoinViaCodeResponse::CopyFrom(const CMsgClientToGCPartyJoinViaCodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartyJoinViaCodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartyJoinViaCodeResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartyJoinViaCodeResponse::InternalSwap(CMsgClientToGCPartyJoinViaCodeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyJoinViaCodeResponse, _impl_.result_)
      + sizeof(CMsgClientToGCPartyJoinViaCodeResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartyJoinViaCodeResponse, _impl_.party_id_)>(
          reinterpret_cast<char*>(&_impl_.party_id_),
          reinterpret_cast<char*>(&other->_impl_.party_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartyJoinViaCodeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[47]);
}

// ===================================================================

class CMsgClientToGCPartySetReadyState::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartySetReadyState>()._impl_._has_bits_);
  static void set_has_party_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ready_state(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::CMsgHeroSelectionMatchInfo& hero_roster(const CMsgClientToGCPartySetReadyState* msg);
  static void set_has_hero_roster(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgHeroSelectionMatchInfo&
CMsgClientToGCPartySetReadyState::_Internal::hero_roster(const CMsgClientToGCPartySetReadyState* msg) {
  return *msg->_impl_.hero_roster_;
}
void CMsgClientToGCPartySetReadyState::clear_hero_roster() {
  if (_impl_.hero_roster_ != nullptr) _impl_.hero_roster_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CMsgClientToGCPartySetReadyState::CMsgClientToGCPartySetReadyState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartySetReadyState)
}
CMsgClientToGCPartySetReadyState::CMsgClientToGCPartySetReadyState(const CMsgClientToGCPartySetReadyState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartySetReadyState* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_roster_){nullptr}
    , decltype(_impl_.party_id_){}
    , decltype(_impl_.ready_state_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_hero_roster()) {
    _this->_impl_.hero_roster_ = new ::CMsgHeroSelectionMatchInfo(*from._impl_.hero_roster_);
  }
  ::memcpy(&_impl_.party_id_, &from._impl_.party_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ready_state_) -
    reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.ready_state_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartySetReadyState)
}

inline void CMsgClientToGCPartySetReadyState::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_roster_){nullptr}
    , decltype(_impl_.party_id_){uint64_t{0u}}
    , decltype(_impl_.ready_state_){false}
  };
}

CMsgClientToGCPartySetReadyState::~CMsgClientToGCPartySetReadyState() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartySetReadyState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartySetReadyState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.hero_roster_;
}

void CMsgClientToGCPartySetReadyState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartySetReadyState::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartySetReadyState)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.hero_roster_ != nullptr);
    _impl_.hero_roster_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.party_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.ready_state_) -
        reinterpret_cast<char*>(&_impl_.party_id_)) + sizeof(_impl_.ready_state_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartySetReadyState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional fixed64 party_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_party_id(&has_bits);
          _impl_.party_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      // optional bool ready_state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_ready_state(&has_bits);
          _impl_.ready_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgHeroSelectionMatchInfo hero_roster = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_hero_roster(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartySetReadyState::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartySetReadyState)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 party_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(1, this->_internal_party_id(), target);
  }

  // optional bool ready_state = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_ready_state(), target);
  }

  // optional .CMsgHeroSelectionMatchInfo hero_roster = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::hero_roster(this),
        _Internal::hero_roster(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartySetReadyState)
  return target;
}

size_t CMsgClientToGCPartySetReadyState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartySetReadyState)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .CMsgHeroSelectionMatchInfo hero_roster = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.hero_roster_);
    }

    // optional fixed64 party_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional bool ready_state = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartySetReadyState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartySetReadyState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartySetReadyState::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartySetReadyState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartySetReadyState*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartySetReadyState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartySetReadyState)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_hero_roster()->::CMsgHeroSelectionMatchInfo::MergeFrom(
          from._internal_hero_roster());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.party_id_ = from._impl_.party_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.ready_state_ = from._impl_.ready_state_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartySetReadyState::CopyFrom(const CMsgClientToGCPartySetReadyState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartySetReadyState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartySetReadyState::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartySetReadyState::InternalSwap(CMsgClientToGCPartySetReadyState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartySetReadyState, _impl_.ready_state_)
      + sizeof(CMsgClientToGCPartySetReadyState::_impl_.ready_state_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCPartySetReadyState, _impl_.hero_roster_)>(
          reinterpret_cast<char*>(&_impl_.hero_roster_),
          reinterpret_cast<char*>(&other->_impl_.hero_roster_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartySetReadyState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[48]);
}

// ===================================================================

class CMsgClientToGCPartySetReadyStateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCPartySetReadyStateResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCPartySetReadyStateResponse::CMsgClientToGCPartySetReadyStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCPartySetReadyStateResponse)
}
CMsgClientToGCPartySetReadyStateResponse::CMsgClientToGCPartySetReadyStateResponse(const CMsgClientToGCPartySetReadyStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCPartySetReadyStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCPartySetReadyStateResponse)
}

inline void CMsgClientToGCPartySetReadyStateResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCPartySetReadyStateResponse::~CMsgClientToGCPartySetReadyStateResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCPartySetReadyStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCPartySetReadyStateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCPartySetReadyStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCPartySetReadyStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCPartySetReadyStateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCPartySetReadyStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCPartySetReadyStateResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCPartySetReadyStateResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCPartySetReadyStateResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCPartySetReadyStateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCPartySetReadyStateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCPartySetReadyStateResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCPartySetReadyStateResponse)
  return target;
}

size_t CMsgClientToGCPartySetReadyStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCPartySetReadyStateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCPartySetReadyStateResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCPartySetReadyStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCPartySetReadyStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCPartySetReadyStateResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCPartySetReadyStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCPartySetReadyStateResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCPartySetReadyStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCPartySetReadyStateResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCPartySetReadyStateResponse::CopyFrom(const CMsgClientToGCPartySetReadyStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCPartySetReadyStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCPartySetReadyStateResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCPartySetReadyStateResponse::InternalSwap(CMsgClientToGCPartySetReadyStateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCPartySetReadyStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[49]);
}

// ===================================================================

class CMsgClientToGCDevSetMMBias::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCDevSetMMBias>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCDevSetMMBias::CMsgClientToGCDevSetMMBias(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCDevSetMMBias)
}
CMsgClientToGCDevSetMMBias::CMsgClientToGCDevSetMMBias(const CMsgClientToGCDevSetMMBias& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCDevSetMMBias* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){}
    , decltype(_impl_.value_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.value_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.value_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCDevSetMMBias)
}

inline void CMsgClientToGCDevSetMMBias::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){0u}
    , decltype(_impl_.value_){0u}
  };
}

CMsgClientToGCDevSetMMBias::~CMsgClientToGCDevSetMMBias() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCDevSetMMBias)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCDevSetMMBias::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCDevSetMMBias::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCDevSetMMBias::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCDevSetMMBias)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.value_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCDevSetMMBias::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_value(&has_bits);
          _impl_.value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCDevSetMMBias::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCDevSetMMBias)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  // optional uint32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCDevSetMMBias)
  return target;
}

size_t CMsgClientToGCDevSetMMBias::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCDevSetMMBias)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
    }

    // optional uint32 value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCDevSetMMBias::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCDevSetMMBias::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCDevSetMMBias::GetClassData() const { return &_class_data_; }


void CMsgClientToGCDevSetMMBias::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCDevSetMMBias*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCDevSetMMBias&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCDevSetMMBias)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.value_ = from._impl_.value_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCDevSetMMBias::CopyFrom(const CMsgClientToGCDevSetMMBias& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCDevSetMMBias)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCDevSetMMBias::IsInitialized() const {
  return true;
}

void CMsgClientToGCDevSetMMBias::InternalSwap(CMsgClientToGCDevSetMMBias* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCDevSetMMBias, _impl_.value_)
      + sizeof(CMsgClientToGCDevSetMMBias::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCDevSetMMBias, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCDevSetMMBias::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[50]);
}

// ===================================================================

class CMsgClientToGCGetMatchHistory::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetMatchHistory>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_continue_cursor(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ranked_interval(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCGetMatchHistory::CMsgClientToGCGetMatchHistory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetMatchHistory)
}
CMsgClientToGCGetMatchHistory::CMsgClientToGCGetMatchHistory(const CMsgClientToGCGetMatchHistory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetMatchHistory* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.continue_cursor_){}
    , decltype(_impl_.account_id_){}
    , decltype(_impl_.ranked_interval_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.continue_cursor_, &from._impl_.continue_cursor_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ranked_interval_) -
    reinterpret_cast<char*>(&_impl_.continue_cursor_)) + sizeof(_impl_.ranked_interval_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetMatchHistory)
}

inline void CMsgClientToGCGetMatchHistory::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.continue_cursor_){uint64_t{0u}}
    , decltype(_impl_.account_id_){0u}
    , decltype(_impl_.ranked_interval_){0u}
  };
}

CMsgClientToGCGetMatchHistory::~CMsgClientToGCGetMatchHistory() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetMatchHistory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetMatchHistory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetMatchHistory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetMatchHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetMatchHistory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.continue_cursor_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.ranked_interval_) -
        reinterpret_cast<char*>(&_impl_.continue_cursor_)) + sizeof(_impl_.ranked_interval_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetMatchHistory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 continue_cursor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_continue_cursor(&has_bits);
          _impl_.continue_cursor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 ranked_interval = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_ranked_interval(&has_bits);
          _impl_.ranked_interval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetMatchHistory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetMatchHistory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  // optional uint64 continue_cursor = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_continue_cursor(), target);
  }

  // optional uint32 ranked_interval = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_ranked_interval(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetMatchHistory)
  return target;
}

size_t CMsgClientToGCGetMatchHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetMatchHistory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 continue_cursor = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_continue_cursor());
    }

    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
    }

    // optional uint32 ranked_interval = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_ranked_interval());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetMatchHistory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetMatchHistory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetMatchHistory::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetMatchHistory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetMatchHistory*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetMatchHistory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetMatchHistory)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.continue_cursor_ = from._impl_.continue_cursor_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.ranked_interval_ = from._impl_.ranked_interval_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetMatchHistory::CopyFrom(const CMsgClientToGCGetMatchHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetMatchHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetMatchHistory::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetMatchHistory::InternalSwap(CMsgClientToGCGetMatchHistory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetMatchHistory, _impl_.ranked_interval_)
      + sizeof(CMsgClientToGCGetMatchHistory::_impl_.ranked_interval_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetMatchHistory, _impl_.continue_cursor_)>(
          reinterpret_cast<char*>(&_impl_.continue_cursor_),
          reinterpret_cast<char*>(&other->_impl_.continue_cursor_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetMatchHistory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[51]);
}

// ===================================================================

class CMsgClientToGCGetMatchHistoryResponse_Match::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetMatchHistoryResponse_Match>()._impl_._has_bits_);
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_match_duration_s(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_start_time(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_match_result(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_player_team(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_player_kills(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_player_deaths(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_player_assists(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_last_hits(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_denies(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_hero_level(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_net_worth(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_objectives_mask_team0(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_objectives_mask_team1(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_team_abandoned(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_abandoned_time_s(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_match_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_game_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_not_scored(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
};

CMsgClientToGCGetMatchHistoryResponse_Match::CMsgClientToGCGetMatchHistoryResponse_Match(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetMatchHistoryResponse.Match)
}
CMsgClientToGCGetMatchHistoryResponse_Match::CMsgClientToGCGetMatchHistoryResponse_Match(const CMsgClientToGCGetMatchHistoryResponse_Match& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetMatchHistoryResponse_Match* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_id_){}
    , decltype(_impl_.hero_id_){}
    , decltype(_impl_.match_duration_s_){}
    , decltype(_impl_.start_time_){}
    , decltype(_impl_.match_result_){}
    , decltype(_impl_.player_team_){}
    , decltype(_impl_.player_kills_){}
    , decltype(_impl_.player_deaths_){}
    , decltype(_impl_.player_assists_){}
    , decltype(_impl_.last_hits_){}
    , decltype(_impl_.denies_){}
    , decltype(_impl_.hero_level_){}
    , decltype(_impl_.net_worth_){}
    , decltype(_impl_.objectives_mask_team0_){}
    , decltype(_impl_.objectives_mask_team1_){}
    , decltype(_impl_.abandoned_time_s_){}
    , decltype(_impl_.match_mode_){}
    , decltype(_impl_.team_abandoned_){}
    , decltype(_impl_.not_scored_){}
    , decltype(_impl_.game_mode_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.match_id_, &from._impl_.match_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.game_mode_) -
    reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.game_mode_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetMatchHistoryResponse.Match)
}

inline void CMsgClientToGCGetMatchHistoryResponse_Match::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_id_){uint64_t{0u}}
    , decltype(_impl_.hero_id_){0u}
    , decltype(_impl_.match_duration_s_){0u}
    , decltype(_impl_.start_time_){0u}
    , decltype(_impl_.match_result_){0u}
    , decltype(_impl_.player_team_){0}
    , decltype(_impl_.player_kills_){0u}
    , decltype(_impl_.player_deaths_){0u}
    , decltype(_impl_.player_assists_){0u}
    , decltype(_impl_.last_hits_){0u}
    , decltype(_impl_.denies_){0u}
    , decltype(_impl_.hero_level_){0u}
    , decltype(_impl_.net_worth_){0u}
    , decltype(_impl_.objectives_mask_team0_){uint64_t{0u}}
    , decltype(_impl_.objectives_mask_team1_){uint64_t{0u}}
    , decltype(_impl_.abandoned_time_s_){0u}
    , decltype(_impl_.match_mode_){0}
    , decltype(_impl_.team_abandoned_){false}
    , decltype(_impl_.not_scored_){false}
    , decltype(_impl_.game_mode_){0}
  };
}

CMsgClientToGCGetMatchHistoryResponse_Match::~CMsgClientToGCGetMatchHistoryResponse_Match() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetMatchHistoryResponse.Match)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetMatchHistoryResponse_Match::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetMatchHistoryResponse_Match::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetMatchHistoryResponse_Match::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetMatchHistoryResponse.Match)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.match_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.player_deaths_) -
        reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.player_deaths_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.player_assists_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.abandoned_time_s_) -
        reinterpret_cast<char*>(&_impl_.player_assists_)) + sizeof(_impl_.abandoned_time_s_));
  }
  if (cached_has_bits & 0x000f0000u) {
    ::memset(&_impl_.match_mode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.game_mode_) -
        reinterpret_cast<char*>(&_impl_.match_mode_)) + sizeof(_impl_.game_mode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetMatchHistoryResponse_Match::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 match_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_match_id(&has_bits);
          _impl_.match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_hero_id(&has_bits);
          _impl_.hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 match_duration_s = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_match_duration_s(&has_bits);
          _impl_.match_duration_s_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 start_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_start_time(&has_bits);
          _impl_.start_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 match_result = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_match_result(&has_bits);
          _impl_.match_result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelLobbyTeam player_team = 6 [default = k_ECitadelLobbyTeam_Team0];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelLobbyTeam_IsValid(val))) {
            _internal_set_player_team(static_cast<::ECitadelLobbyTeam>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 player_kills = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_player_kills(&has_bits);
          _impl_.player_kills_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 player_deaths = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_player_deaths(&has_bits);
          _impl_.player_deaths_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 player_assists = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_player_assists(&has_bits);
          _impl_.player_assists_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 last_hits = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _Internal::set_has_last_hits(&has_bits);
          _impl_.last_hits_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 denies = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_denies(&has_bits);
          _impl_.denies_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_level = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _Internal::set_has_hero_level(&has_bits);
          _impl_.hero_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 net_worth = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_net_worth(&has_bits);
          _impl_.net_worth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 objectives_mask_team0 = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _Internal::set_has_objectives_mask_team0(&has_bits);
          _impl_.objectives_mask_team0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 objectives_mask_team1 = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_objectives_mask_team1(&has_bits);
          _impl_.objectives_mask_team1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool team_abandoned = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          _Internal::set_has_team_abandoned(&has_bits);
          _impl_.team_abandoned_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 abandoned_time_s = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_abandoned_time_s(&has_bits);
          _impl_.abandoned_time_s_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelMatchMode match_mode = 19 [default = k_ECitadelMatchMode_Invalid];
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelMatchMode_IsValid(val))) {
            _internal_set_match_mode(static_cast<::ECitadelMatchMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(19, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelGameMode game_mode = 20 [default = k_ECitadelGameMode_Invalid];
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelGameMode_IsValid(val))) {
            _internal_set_game_mode(static_cast<::ECitadelGameMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(20, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional bool not_scored = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          _Internal::set_has_not_scored(&has_bits);
          _impl_.not_scored_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetMatchHistoryResponse_Match::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetMatchHistoryResponse.Match)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_match_id(), target);
  }

  // optional uint32 hero_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_hero_id(), target);
  }

  // optional uint32 match_duration_s = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_match_duration_s(), target);
  }

  // optional uint32 start_time = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_start_time(), target);
  }

  // optional uint32 match_result = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_match_result(), target);
  }

  // optional .ECitadelLobbyTeam player_team = 6 [default = k_ECitadelLobbyTeam_Team0];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      6, this->_internal_player_team(), target);
  }

  // optional uint32 player_kills = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_player_kills(), target);
  }

  // optional uint32 player_deaths = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(8, this->_internal_player_deaths(), target);
  }

  // optional uint32 player_assists = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(9, this->_internal_player_assists(), target);
  }

  // optional uint32 last_hits = 11;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(11, this->_internal_last_hits(), target);
  }

  // optional uint32 denies = 12;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(12, this->_internal_denies(), target);
  }

  // optional uint32 hero_level = 13;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(13, this->_internal_hero_level(), target);
  }

  // optional uint32 net_worth = 14;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(14, this->_internal_net_worth(), target);
  }

  // optional uint64 objectives_mask_team0 = 15;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(15, this->_internal_objectives_mask_team0(), target);
  }

  // optional uint64 objectives_mask_team1 = 16;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(16, this->_internal_objectives_mask_team1(), target);
  }

  // optional bool team_abandoned = 17;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(17, this->_internal_team_abandoned(), target);
  }

  // optional uint32 abandoned_time_s = 18;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(18, this->_internal_abandoned_time_s(), target);
  }

  // optional .ECitadelMatchMode match_mode = 19 [default = k_ECitadelMatchMode_Invalid];
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      19, this->_internal_match_mode(), target);
  }

  // optional .ECitadelGameMode game_mode = 20 [default = k_ECitadelGameMode_Invalid];
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      20, this->_internal_game_mode(), target);
  }

  // optional bool not_scored = 21;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(21, this->_internal_not_scored(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetMatchHistoryResponse.Match)
  return target;
}

size_t CMsgClientToGCGetMatchHistoryResponse_Match::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetMatchHistoryResponse.Match)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint64 match_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_match_id());
    }

    // optional uint32 hero_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_id());
    }

    // optional uint32 match_duration_s = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_match_duration_s());
    }

    // optional uint32 start_time = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_time());
    }

    // optional uint32 match_result = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_match_result());
    }

    // optional .ECitadelLobbyTeam player_team = 6 [default = k_ECitadelLobbyTeam_Team0];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_player_team());
    }

    // optional uint32 player_kills = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_player_kills());
    }

    // optional uint32 player_deaths = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_player_deaths());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional uint32 player_assists = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_player_assists());
    }

    // optional uint32 last_hits = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_last_hits());
    }

    // optional uint32 denies = 12;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_denies());
    }

    // optional uint32 hero_level = 13;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_level());
    }

    // optional uint32 net_worth = 14;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_net_worth());
    }

    // optional uint64 objectives_mask_team0 = 15;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_objectives_mask_team0());
    }

    // optional uint64 objectives_mask_team1 = 16;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::UInt64Size(
          this->_internal_objectives_mask_team1());
    }

    // optional uint32 abandoned_time_s = 18;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::UInt32Size(
          this->_internal_abandoned_time_s());
    }

  }
  if (cached_has_bits & 0x000f0000u) {
    // optional .ECitadelMatchMode match_mode = 19 [default = k_ECitadelMatchMode_Invalid];
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_match_mode());
    }

    // optional bool team_abandoned = 17;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool not_scored = 21;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional .ECitadelGameMode game_mode = 20 [default = k_ECitadelGameMode_Invalid];
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_game_mode());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetMatchHistoryResponse_Match::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetMatchHistoryResponse_Match::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetMatchHistoryResponse_Match::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetMatchHistoryResponse_Match::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetMatchHistoryResponse_Match*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetMatchHistoryResponse_Match&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetMatchHistoryResponse.Match)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.hero_id_ = from._impl_.hero_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.match_duration_s_ = from._impl_.match_duration_s_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.start_time_ = from._impl_.start_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.match_result_ = from._impl_.match_result_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.player_team_ = from._impl_.player_team_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.player_kills_ = from._impl_.player_kills_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.player_deaths_ = from._impl_.player_deaths_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.player_assists_ = from._impl_.player_assists_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.last_hits_ = from._impl_.last_hits_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.denies_ = from._impl_.denies_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.hero_level_ = from._impl_.hero_level_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.net_worth_ = from._impl_.net_worth_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.objectives_mask_team0_ = from._impl_.objectives_mask_team0_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.objectives_mask_team1_ = from._impl_.objectives_mask_team1_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.abandoned_time_s_ = from._impl_.abandoned_time_s_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x000f0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.match_mode_ = from._impl_.match_mode_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.team_abandoned_ = from._impl_.team_abandoned_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.not_scored_ = from._impl_.not_scored_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.game_mode_ = from._impl_.game_mode_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetMatchHistoryResponse_Match::CopyFrom(const CMsgClientToGCGetMatchHistoryResponse_Match& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetMatchHistoryResponse.Match)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetMatchHistoryResponse_Match::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetMatchHistoryResponse_Match::InternalSwap(CMsgClientToGCGetMatchHistoryResponse_Match* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.game_mode_)
      + sizeof(CMsgClientToGCGetMatchHistoryResponse_Match::_impl_.game_mode_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetMatchHistoryResponse_Match, _impl_.match_id_)>(
          reinterpret_cast<char*>(&_impl_.match_id_),
          reinterpret_cast<char*>(&other->_impl_.match_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetMatchHistoryResponse_Match::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[52]);
}

// ===================================================================

class CMsgClientToGCGetMatchHistoryResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetMatchHistoryResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_continue_cursor(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetMatchHistoryResponse::CMsgClientToGCGetMatchHistoryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetMatchHistoryResponse)
}
CMsgClientToGCGetMatchHistoryResponse::CMsgClientToGCGetMatchHistoryResponse(const CMsgClientToGCGetMatchHistoryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetMatchHistoryResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.matches_){from._impl_.matches_}
    , decltype(_impl_.continue_cursor_){}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.continue_cursor_, &from._impl_.continue_cursor_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.result_) -
    reinterpret_cast<char*>(&_impl_.continue_cursor_)) + sizeof(_impl_.result_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetMatchHistoryResponse)
}

inline void CMsgClientToGCGetMatchHistoryResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.matches_){arena}
    , decltype(_impl_.continue_cursor_){uint64_t{0u}}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCGetMatchHistoryResponse::~CMsgClientToGCGetMatchHistoryResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetMatchHistoryResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetMatchHistoryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.matches_.~RepeatedPtrField();
}

void CMsgClientToGCGetMatchHistoryResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetMatchHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetMatchHistoryResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.matches_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.continue_cursor_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.result_) -
        reinterpret_cast<char*>(&_impl_.continue_cursor_)) + sizeof(_impl_.result_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetMatchHistoryResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetMatchHistoryResponse.EResult result = 1 [default = k_eResult_InternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetMatchHistoryResponse_EResult_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCGetMatchHistoryResponse_EResult>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint64 continue_cursor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_continue_cursor(&has_bits);
          _impl_.continue_cursor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgClientToGCGetMatchHistoryResponse.Match matches = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_matches(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetMatchHistoryResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetMatchHistoryResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetMatchHistoryResponse.EResult result = 1 [default = k_eResult_InternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional uint64 continue_cursor = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_continue_cursor(), target);
  }

  // repeated .CMsgClientToGCGetMatchHistoryResponse.Match matches = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_matches_size()); i < n; i++) {
    const auto& repfield = this->_internal_matches(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetMatchHistoryResponse)
  return target;
}

size_t CMsgClientToGCGetMatchHistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetMatchHistoryResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientToGCGetMatchHistoryResponse.Match matches = 3;
  total_size += 1UL * this->_internal_matches_size();
  for (const auto& msg : this->_impl_.matches_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 continue_cursor = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_continue_cursor());
    }

    // optional .CMsgClientToGCGetMatchHistoryResponse.EResult result = 1 [default = k_eResult_InternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetMatchHistoryResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetMatchHistoryResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetMatchHistoryResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetMatchHistoryResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetMatchHistoryResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetMatchHistoryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetMatchHistoryResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.matches_.MergeFrom(from._impl_.matches_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.continue_cursor_ = from._impl_.continue_cursor_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetMatchHistoryResponse::CopyFrom(const CMsgClientToGCGetMatchHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetMatchHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetMatchHistoryResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetMatchHistoryResponse::InternalSwap(CMsgClientToGCGetMatchHistoryResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.matches_.InternalSwap(&other->_impl_.matches_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetMatchHistoryResponse, _impl_.result_)
      + sizeof(CMsgClientToGCGetMatchHistoryResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetMatchHistoryResponse, _impl_.continue_cursor_)>(
          reinterpret_cast<char*>(&_impl_.continue_cursor_),
          reinterpret_cast<char*>(&other->_impl_.continue_cursor_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetMatchHistoryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[53]);
}

// ===================================================================

class CMsgClientToGCSpectateUser::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSpectateUser>()._impl_._has_bits_);
  static void set_has_spectate_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_client_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_client_platform(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCSpectateUser::CMsgClientToGCSpectateUser(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSpectateUser)
}
CMsgClientToGCSpectateUser::CMsgClientToGCSpectateUser(const CMsgClientToGCSpectateUser& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSpectateUser* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spectate_account_id_){}
    , decltype(_impl_.client_version_){}
    , decltype(_impl_.client_platform_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.spectate_account_id_, &from._impl_.spectate_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.client_platform_) -
    reinterpret_cast<char*>(&_impl_.spectate_account_id_)) + sizeof(_impl_.client_platform_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSpectateUser)
}

inline void CMsgClientToGCSpectateUser::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spectate_account_id_){0u}
    , decltype(_impl_.client_version_){0u}
    , decltype(_impl_.client_platform_){0}
  };
}

CMsgClientToGCSpectateUser::~CMsgClientToGCSpectateUser() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSpectateUser)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSpectateUser::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCSpectateUser::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSpectateUser::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSpectateUser)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.spectate_account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.client_platform_) -
        reinterpret_cast<char*>(&_impl_.spectate_account_id_)) + sizeof(_impl_.client_platform_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSpectateUser::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 spectate_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_spectate_account_id(&has_bits);
          _impl_.spectate_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 client_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_client_version(&has_bits);
          _impl_.client_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .EGCPlatform client_platform = 4 [default = k_eGCPlatform_None];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EGCPlatform_IsValid(val))) {
            _internal_set_client_platform(static_cast<::EGCPlatform>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSpectateUser::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSpectateUser)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 spectate_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_spectate_account_id(), target);
  }

  // optional uint32 client_version = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_client_version(), target);
  }

  // optional .EGCPlatform client_platform = 4 [default = k_eGCPlatform_None];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_client_platform(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSpectateUser)
  return target;
}

size_t CMsgClientToGCSpectateUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSpectateUser)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 spectate_account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_spectate_account_id());
    }

    // optional uint32 client_version = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_client_version());
    }

    // optional .EGCPlatform client_platform = 4 [default = k_eGCPlatform_None];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_client_platform());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSpectateUser::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSpectateUser::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSpectateUser::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSpectateUser::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSpectateUser*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSpectateUser&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSpectateUser)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.spectate_account_id_ = from._impl_.spectate_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.client_version_ = from._impl_.client_version_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.client_platform_ = from._impl_.client_platform_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSpectateUser::CopyFrom(const CMsgClientToGCSpectateUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSpectateUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSpectateUser::IsInitialized() const {
  return true;
}

void CMsgClientToGCSpectateUser::InternalSwap(CMsgClientToGCSpectateUser* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCSpectateUser, _impl_.client_platform_)
      + sizeof(CMsgClientToGCSpectateUser::_impl_.client_platform_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCSpectateUser, _impl_.spectate_account_id_)>(
          reinterpret_cast<char*>(&_impl_.spectate_account_id_),
          reinterpret_cast<char*>(&other->_impl_.spectate_account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSpectateUser::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[54]);
}

// ===================================================================

class CMsgClientToGCSpectateUserResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSpectateUserResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_server_steam_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_sdr_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_udp_connect_ip(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_udp_connect_port(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_lobby_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_client_broadcast_url(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCSpectateUserResponse::CMsgClientToGCSpectateUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSpectateUserResponse)
}
CMsgClientToGCSpectateUserResponse::CMsgClientToGCSpectateUserResponse(const CMsgClientToGCSpectateUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSpectateUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sdr_key_){}
    , decltype(_impl_.client_broadcast_url_){}
    , decltype(_impl_.server_steam_id_){}
    , decltype(_impl_.result_){}
    , decltype(_impl_.udp_connect_ip_){}
    , decltype(_impl_.lobby_id_){}
    , decltype(_impl_.udp_connect_port_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sdr_key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sdr_key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_sdr_key()) {
    _this->_impl_.sdr_key_.Set(from._internal_sdr_key(), 
      _this->GetArenaForAllocation());
  }
  _impl_.client_broadcast_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_broadcast_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_client_broadcast_url()) {
    _this->_impl_.client_broadcast_url_.Set(from._internal_client_broadcast_url(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.server_steam_id_, &from._impl_.server_steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.udp_connect_port_) -
    reinterpret_cast<char*>(&_impl_.server_steam_id_)) + sizeof(_impl_.udp_connect_port_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSpectateUserResponse)
}

inline void CMsgClientToGCSpectateUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sdr_key_){}
    , decltype(_impl_.client_broadcast_url_){}
    , decltype(_impl_.server_steam_id_){uint64_t{0u}}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.udp_connect_ip_){0u}
    , decltype(_impl_.lobby_id_){uint64_t{0u}}
    , decltype(_impl_.udp_connect_port_){0u}
  };
  _impl_.sdr_key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sdr_key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.client_broadcast_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_broadcast_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCSpectateUserResponse::~CMsgClientToGCSpectateUserResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSpectateUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSpectateUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sdr_key_.Destroy();
  _impl_.client_broadcast_url_.Destroy();
}

void CMsgClientToGCSpectateUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSpectateUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSpectateUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.sdr_key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.client_broadcast_url_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&_impl_.server_steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.udp_connect_port_) -
        reinterpret_cast<char*>(&_impl_.server_steam_id_)) + sizeof(_impl_.udp_connect_port_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSpectateUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCSpectateUserResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCSpectateUserResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCSpectateUserResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional fixed64 server_steam_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_server_steam_id(&has_bits);
          _impl_.server_steam_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      // optional bytes sdr_key = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_sdr_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 udp_connect_ip = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_udp_connect_ip(&has_bits);
          _impl_.udp_connect_ip_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 udp_connect_port = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_udp_connect_port(&has_bits);
          _impl_.udp_connect_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional fixed64 lobby_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 57)) {
          _Internal::set_has_lobby_id(&has_bits);
          _impl_.lobby_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      // optional string client_broadcast_url = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_client_broadcast_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCSpectateUserResponse.client_broadcast_url");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSpectateUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSpectateUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCSpectateUserResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional fixed64 server_steam_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(3, this->_internal_server_steam_id(), target);
  }

  // optional bytes sdr_key = 4;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_sdr_key(), target);
  }

  // optional uint32 udp_connect_ip = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_udp_connect_ip(), target);
  }

  // optional uint32 udp_connect_port = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_udp_connect_port(), target);
  }

  // optional fixed64 lobby_id = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(7, this->_internal_lobby_id(), target);
  }

  // optional string client_broadcast_url = 8;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_broadcast_url().data(), static_cast<int>(this->_internal_client_broadcast_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCSpectateUserResponse.client_broadcast_url");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_client_broadcast_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSpectateUserResponse)
  return target;
}

size_t CMsgClientToGCSpectateUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSpectateUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional bytes sdr_key = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_sdr_key());
    }

    // optional string client_broadcast_url = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_client_broadcast_url());
    }

    // optional fixed64 server_steam_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional .CMsgClientToGCSpectateUserResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional uint32 udp_connect_ip = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_udp_connect_ip());
    }

    // optional fixed64 lobby_id = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 8;
    }

    // optional uint32 udp_connect_port = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_udp_connect_port());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSpectateUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSpectateUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSpectateUserResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSpectateUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSpectateUserResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSpectateUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSpectateUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_sdr_key(from._internal_sdr_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_client_broadcast_url(from._internal_client_broadcast_url());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.server_steam_id_ = from._impl_.server_steam_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.udp_connect_ip_ = from._impl_.udp_connect_ip_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.lobby_id_ = from._impl_.lobby_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.udp_connect_port_ = from._impl_.udp_connect_port_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSpectateUserResponse::CopyFrom(const CMsgClientToGCSpectateUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSpectateUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSpectateUserResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSpectateUserResponse::InternalSwap(CMsgClientToGCSpectateUserResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sdr_key_, lhs_arena,
      &other->_impl_.sdr_key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.client_broadcast_url_, lhs_arena,
      &other->_impl_.client_broadcast_url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCSpectateUserResponse, _impl_.udp_connect_port_)
      + sizeof(CMsgClientToGCSpectateUserResponse::_impl_.udp_connect_port_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCSpectateUserResponse, _impl_.server_steam_id_)>(
          reinterpret_cast<char*>(&_impl_.server_steam_id_),
          reinterpret_cast<char*>(&other->_impl_.server_steam_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSpectateUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[55]);
}

// ===================================================================

class CMsgClientToGCSpectateLobby::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSpectateLobby>()._impl_._has_bits_);
  static void set_has_lobby_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_client_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_client_platform(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgClientToGCSpectateLobby::CMsgClientToGCSpectateLobby(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSpectateLobby)
}
CMsgClientToGCSpectateLobby::CMsgClientToGCSpectateLobby(const CMsgClientToGCSpectateLobby& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSpectateLobby* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.lobby_id_){}
    , decltype(_impl_.client_version_){}
    , decltype(_impl_.client_platform_){}
    , decltype(_impl_.match_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.lobby_id_, &from._impl_.lobby_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.match_id_) -
    reinterpret_cast<char*>(&_impl_.lobby_id_)) + sizeof(_impl_.match_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSpectateLobby)
}

inline void CMsgClientToGCSpectateLobby::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.lobby_id_){uint64_t{0u}}
    , decltype(_impl_.client_version_){0u}
    , decltype(_impl_.client_platform_){0}
    , decltype(_impl_.match_id_){uint64_t{0u}}
  };
}

CMsgClientToGCSpectateLobby::~CMsgClientToGCSpectateLobby() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSpectateLobby)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSpectateLobby::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCSpectateLobby::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSpectateLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSpectateLobby)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.lobby_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.match_id_) -
        reinterpret_cast<char*>(&_impl_.lobby_id_)) + sizeof(_impl_.match_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSpectateLobby::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 lobby_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_lobby_id(&has_bits);
          _impl_.lobby_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 client_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_client_version(&has_bits);
          _impl_.client_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .EGCPlatform client_platform = 4 [default = k_eGCPlatform_None];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EGCPlatform_IsValid(val))) {
            _internal_set_client_platform(static_cast<::EGCPlatform>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint64 match_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_match_id(&has_bits);
          _impl_.match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSpectateLobby::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSpectateLobby)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 lobby_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_lobby_id(), target);
  }

  // optional uint32 client_version = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_client_version(), target);
  }

  // optional .EGCPlatform client_platform = 4 [default = k_eGCPlatform_None];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_client_platform(), target);
  }

  // optional uint64 match_id = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_match_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSpectateLobby)
  return target;
}

size_t CMsgClientToGCSpectateLobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSpectateLobby)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint64 lobby_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_lobby_id());
    }

    // optional uint32 client_version = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_client_version());
    }

    // optional .EGCPlatform client_platform = 4 [default = k_eGCPlatform_None];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_client_platform());
    }

    // optional uint64 match_id = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_match_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSpectateLobby::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSpectateLobby::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSpectateLobby::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSpectateLobby::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSpectateLobby*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSpectateLobby&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSpectateLobby)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.lobby_id_ = from._impl_.lobby_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.client_version_ = from._impl_.client_version_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.client_platform_ = from._impl_.client_platform_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSpectateLobby::CopyFrom(const CMsgClientToGCSpectateLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSpectateLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSpectateLobby::IsInitialized() const {
  return true;
}

void CMsgClientToGCSpectateLobby::InternalSwap(CMsgClientToGCSpectateLobby* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCSpectateLobby, _impl_.match_id_)
      + sizeof(CMsgClientToGCSpectateLobby::_impl_.match_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCSpectateLobby, _impl_.lobby_id_)>(
          reinterpret_cast<char*>(&_impl_.lobby_id_),
          reinterpret_cast<char*>(&other->_impl_.lobby_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSpectateLobby::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[56]);
}

// ===================================================================

class CMsgClientToGCSpectateLobbyResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSpectateLobbyResponse>()._impl_._has_bits_);
  static const ::CMsgClientToGCSpectateUserResponse& result(const CMsgClientToGCSpectateLobbyResponse* msg);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgClientToGCSpectateUserResponse&
CMsgClientToGCSpectateLobbyResponse::_Internal::result(const CMsgClientToGCSpectateLobbyResponse* msg) {
  return *msg->_impl_.result_;
}
CMsgClientToGCSpectateLobbyResponse::CMsgClientToGCSpectateLobbyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSpectateLobbyResponse)
}
CMsgClientToGCSpectateLobbyResponse::CMsgClientToGCSpectateLobbyResponse(const CMsgClientToGCSpectateLobbyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSpectateLobbyResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::CMsgClientToGCSpectateUserResponse(*from._impl_.result_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSpectateLobbyResponse)
}

inline void CMsgClientToGCSpectateLobbyResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){nullptr}
  };
}

CMsgClientToGCSpectateLobbyResponse::~CMsgClientToGCSpectateLobbyResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSpectateLobbyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSpectateLobbyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.result_;
}

void CMsgClientToGCSpectateLobbyResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSpectateLobbyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSpectateLobbyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.result_ != nullptr);
    _impl_.result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSpectateLobbyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCSpectateUserResponse result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSpectateLobbyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSpectateLobbyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCSpectateUserResponse result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSpectateLobbyResponse)
  return target;
}

size_t CMsgClientToGCSpectateLobbyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSpectateLobbyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCSpectateUserResponse result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSpectateLobbyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSpectateLobbyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSpectateLobbyResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSpectateLobbyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSpectateLobbyResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSpectateLobbyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSpectateLobbyResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::CMsgClientToGCSpectateUserResponse::MergeFrom(
        from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSpectateLobbyResponse::CopyFrom(const CMsgClientToGCSpectateLobbyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSpectateLobbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSpectateLobbyResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSpectateLobbyResponse::InternalSwap(CMsgClientToGCSpectateLobbyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSpectateLobbyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[57]);
}

// ===================================================================

class CMsgClientToGCGetProfileCard::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetProfileCard>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dev_access_hint(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_friend_access_hint(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCGetProfileCard::CMsgClientToGCGetProfileCard(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetProfileCard)
}
CMsgClientToGCGetProfileCard::CMsgClientToGCGetProfileCard(const CMsgClientToGCGetProfileCard& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetProfileCard* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){}
    , decltype(_impl_.dev_access_hint_){}
    , decltype(_impl_.friend_access_hint_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.friend_access_hint_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.friend_access_hint_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetProfileCard)
}

inline void CMsgClientToGCGetProfileCard::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){0u}
    , decltype(_impl_.dev_access_hint_){false}
    , decltype(_impl_.friend_access_hint_){false}
  };
}

CMsgClientToGCGetProfileCard::~CMsgClientToGCGetProfileCard() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetProfileCard)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetProfileCard::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetProfileCard::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetProfileCard::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetProfileCard)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.friend_access_hint_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.friend_access_hint_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetProfileCard::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool dev_access_hint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_dev_access_hint(&has_bits);
          _impl_.dev_access_hint_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool friend_access_hint = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_friend_access_hint(&has_bits);
          _impl_.friend_access_hint_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetProfileCard::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetProfileCard)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  // optional bool dev_access_hint = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_dev_access_hint(), target);
  }

  // optional bool friend_access_hint = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_friend_access_hint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetProfileCard)
  return target;
}

size_t CMsgClientToGCGetProfileCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetProfileCard)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
    }

    // optional bool dev_access_hint = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool friend_access_hint = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetProfileCard::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetProfileCard::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetProfileCard::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetProfileCard::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetProfileCard*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetProfileCard&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetProfileCard)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.dev_access_hint_ = from._impl_.dev_access_hint_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.friend_access_hint_ = from._impl_.friend_access_hint_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetProfileCard::CopyFrom(const CMsgClientToGCGetProfileCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetProfileCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetProfileCard::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetProfileCard::InternalSwap(CMsgClientToGCGetProfileCard* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetProfileCard, _impl_.friend_access_hint_)
      + sizeof(CMsgClientToGCGetProfileCard::_impl_.friend_access_hint_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetProfileCard, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetProfileCard::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[58]);
}

// ===================================================================

class CMsgCitadelProfileCard_Slot_Stat::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgCitadelProfileCard_Slot_Stat>()._impl_._has_bits_);
  static void set_has_stat_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_stat_score(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgCitadelProfileCard_Slot_Stat::CMsgCitadelProfileCard_Slot_Stat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgCitadelProfileCard.Slot.Stat)
}
CMsgCitadelProfileCard_Slot_Stat::CMsgCitadelProfileCard_Slot_Stat(const CMsgCitadelProfileCard_Slot_Stat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgCitadelProfileCard_Slot_Stat* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.stat_id_){}
    , decltype(_impl_.stat_score_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.stat_id_, &from._impl_.stat_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.stat_score_) -
    reinterpret_cast<char*>(&_impl_.stat_id_)) + sizeof(_impl_.stat_score_));
  // @@protoc_insertion_point(copy_constructor:CMsgCitadelProfileCard.Slot.Stat)
}

inline void CMsgCitadelProfileCard_Slot_Stat::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.stat_id_){0}
    , decltype(_impl_.stat_score_){0u}
  };
}

CMsgCitadelProfileCard_Slot_Stat::~CMsgCitadelProfileCard_Slot_Stat() {
  // @@protoc_insertion_point(destructor:CMsgCitadelProfileCard.Slot.Stat)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgCitadelProfileCard_Slot_Stat::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgCitadelProfileCard_Slot_Stat::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgCitadelProfileCard_Slot_Stat::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCitadelProfileCard.Slot.Stat)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.stat_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.stat_score_) -
        reinterpret_cast<char*>(&_impl_.stat_id_)) + sizeof(_impl_.stat_score_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgCitadelProfileCard_Slot_Stat::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgCitadelProfileCard.EStatID stat_id = 1 [default = k_eStat_Invalid];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgCitadelProfileCard_EStatID_IsValid(val))) {
            _internal_set_stat_id(static_cast<::CMsgCitadelProfileCard_EStatID>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 stat_score = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_stat_score(&has_bits);
          _impl_.stat_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgCitadelProfileCard_Slot_Stat::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCitadelProfileCard.Slot.Stat)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgCitadelProfileCard.EStatID stat_id = 1 [default = k_eStat_Invalid];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_stat_id(), target);
  }

  // optional uint32 stat_score = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_stat_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCitadelProfileCard.Slot.Stat)
  return target;
}

size_t CMsgCitadelProfileCard_Slot_Stat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCitadelProfileCard.Slot.Stat)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgCitadelProfileCard.EStatID stat_id = 1 [default = k_eStat_Invalid];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_stat_id());
    }

    // optional uint32 stat_score = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_stat_score());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgCitadelProfileCard_Slot_Stat::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgCitadelProfileCard_Slot_Stat::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgCitadelProfileCard_Slot_Stat::GetClassData() const { return &_class_data_; }


void CMsgCitadelProfileCard_Slot_Stat::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgCitadelProfileCard_Slot_Stat*>(&to_msg);
  auto& from = static_cast<const CMsgCitadelProfileCard_Slot_Stat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgCitadelProfileCard.Slot.Stat)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.stat_id_ = from._impl_.stat_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.stat_score_ = from._impl_.stat_score_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgCitadelProfileCard_Slot_Stat::CopyFrom(const CMsgCitadelProfileCard_Slot_Stat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCitadelProfileCard.Slot.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCitadelProfileCard_Slot_Stat::IsInitialized() const {
  return true;
}

void CMsgCitadelProfileCard_Slot_Stat::InternalSwap(CMsgCitadelProfileCard_Slot_Stat* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgCitadelProfileCard_Slot_Stat, _impl_.stat_score_)
      + sizeof(CMsgCitadelProfileCard_Slot_Stat::_impl_.stat_score_)
      - PROTOBUF_FIELD_OFFSET(CMsgCitadelProfileCard_Slot_Stat, _impl_.stat_id_)>(
          reinterpret_cast<char*>(&_impl_.stat_id_),
          reinterpret_cast<char*>(&other->_impl_.stat_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgCitadelProfileCard_Slot_Stat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[59]);
}

// ===================================================================

class CMsgCitadelProfileCard_Slot_Hero::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgCitadelProfileCard_Slot_Hero>()._impl_._has_bits_);
  static void set_has_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hero_wins(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_hero_kills(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgCitadelProfileCard_Slot_Hero::CMsgCitadelProfileCard_Slot_Hero(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgCitadelProfileCard.Slot.Hero)
}
CMsgCitadelProfileCard_Slot_Hero::CMsgCitadelProfileCard_Slot_Hero(const CMsgCitadelProfileCard_Slot_Hero& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgCitadelProfileCard_Slot_Hero* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_id_){}
    , decltype(_impl_.hero_wins_){}
    , decltype(_impl_.hero_kills_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.hero_id_, &from._impl_.hero_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.hero_kills_) -
    reinterpret_cast<char*>(&_impl_.hero_id_)) + sizeof(_impl_.hero_kills_));
  // @@protoc_insertion_point(copy_constructor:CMsgCitadelProfileCard.Slot.Hero)
}

inline void CMsgCitadelProfileCard_Slot_Hero::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_id_){0u}
    , decltype(_impl_.hero_wins_){0u}
    , decltype(_impl_.hero_kills_){0u}
  };
}

CMsgCitadelProfileCard_Slot_Hero::~CMsgCitadelProfileCard_Slot_Hero() {
  // @@protoc_insertion_point(destructor:CMsgCitadelProfileCard.Slot.Hero)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgCitadelProfileCard_Slot_Hero::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgCitadelProfileCard_Slot_Hero::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgCitadelProfileCard_Slot_Hero::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCitadelProfileCard.Slot.Hero)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.hero_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.hero_kills_) -
        reinterpret_cast<char*>(&_impl_.hero_id_)) + sizeof(_impl_.hero_kills_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgCitadelProfileCard_Slot_Hero::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 hero_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_hero_id(&has_bits);
          _impl_.hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_wins = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_hero_wins(&has_bits);
          _impl_.hero_wins_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_kills = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_hero_kills(&has_bits);
          _impl_.hero_kills_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgCitadelProfileCard_Slot_Hero::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCitadelProfileCard.Slot.Hero)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 hero_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hero_id(), target);
  }

  // optional uint32 hero_wins = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_hero_wins(), target);
  }

  // optional uint32 hero_kills = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_hero_kills(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCitadelProfileCard.Slot.Hero)
  return target;
}

size_t CMsgCitadelProfileCard_Slot_Hero::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCitadelProfileCard.Slot.Hero)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 hero_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_id());
    }

    // optional uint32 hero_wins = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_wins());
    }

    // optional uint32 hero_kills = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_kills());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgCitadelProfileCard_Slot_Hero::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgCitadelProfileCard_Slot_Hero::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgCitadelProfileCard_Slot_Hero::GetClassData() const { return &_class_data_; }


void CMsgCitadelProfileCard_Slot_Hero::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgCitadelProfileCard_Slot_Hero*>(&to_msg);
  auto& from = static_cast<const CMsgCitadelProfileCard_Slot_Hero&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgCitadelProfileCard.Slot.Hero)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.hero_id_ = from._impl_.hero_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.hero_wins_ = from._impl_.hero_wins_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.hero_kills_ = from._impl_.hero_kills_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgCitadelProfileCard_Slot_Hero::CopyFrom(const CMsgCitadelProfileCard_Slot_Hero& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCitadelProfileCard.Slot.Hero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCitadelProfileCard_Slot_Hero::IsInitialized() const {
  return true;
}

void CMsgCitadelProfileCard_Slot_Hero::InternalSwap(CMsgCitadelProfileCard_Slot_Hero* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgCitadelProfileCard_Slot_Hero, _impl_.hero_kills_)
      + sizeof(CMsgCitadelProfileCard_Slot_Hero::_impl_.hero_kills_)
      - PROTOBUF_FIELD_OFFSET(CMsgCitadelProfileCard_Slot_Hero, _impl_.hero_id_)>(
          reinterpret_cast<char*>(&_impl_.hero_id_),
          reinterpret_cast<char*>(&other->_impl_.hero_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgCitadelProfileCard_Slot_Hero::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[60]);
}

// ===================================================================

class CMsgCitadelProfileCard_Slot::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgCitadelProfileCard_Slot>()._impl_._has_bits_);
  static void set_has_slot_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::CMsgCitadelProfileCard_Slot_Stat& stat(const CMsgCitadelProfileCard_Slot* msg);
  static void set_has_stat(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::CMsgCitadelProfileCard_Slot_Hero& hero(const CMsgCitadelProfileCard_Slot* msg);
  static void set_has_hero(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::CMsgCitadelProfileCard_Slot_Stat&
CMsgCitadelProfileCard_Slot::_Internal::stat(const CMsgCitadelProfileCard_Slot* msg) {
  return *msg->_impl_.stat_;
}
const ::CMsgCitadelProfileCard_Slot_Hero&
CMsgCitadelProfileCard_Slot::_Internal::hero(const CMsgCitadelProfileCard_Slot* msg) {
  return *msg->_impl_.hero_;
}
CMsgCitadelProfileCard_Slot::CMsgCitadelProfileCard_Slot(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgCitadelProfileCard.Slot)
}
CMsgCitadelProfileCard_Slot::CMsgCitadelProfileCard_Slot(const CMsgCitadelProfileCard_Slot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgCitadelProfileCard_Slot* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.stat_){nullptr}
    , decltype(_impl_.hero_){nullptr}
    , decltype(_impl_.slot_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_stat()) {
    _this->_impl_.stat_ = new ::CMsgCitadelProfileCard_Slot_Stat(*from._impl_.stat_);
  }
  if (from._internal_has_hero()) {
    _this->_impl_.hero_ = new ::CMsgCitadelProfileCard_Slot_Hero(*from._impl_.hero_);
  }
  _this->_impl_.slot_id_ = from._impl_.slot_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgCitadelProfileCard.Slot)
}

inline void CMsgCitadelProfileCard_Slot::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.stat_){nullptr}
    , decltype(_impl_.hero_){nullptr}
    , decltype(_impl_.slot_id_){0u}
  };
}

CMsgCitadelProfileCard_Slot::~CMsgCitadelProfileCard_Slot() {
  // @@protoc_insertion_point(destructor:CMsgCitadelProfileCard.Slot)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgCitadelProfileCard_Slot::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.stat_;
  if (this != internal_default_instance()) delete _impl_.hero_;
}

void CMsgCitadelProfileCard_Slot::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgCitadelProfileCard_Slot::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCitadelProfileCard.Slot)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.stat_ != nullptr);
      _impl_.stat_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.hero_ != nullptr);
      _impl_.hero_->Clear();
    }
  }
  _impl_.slot_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgCitadelProfileCard_Slot::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 slot_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_slot_id(&has_bits);
          _impl_.slot_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgCitadelProfileCard.Slot.Stat stat = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_stat(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgCitadelProfileCard.Slot.Hero hero = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_hero(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgCitadelProfileCard_Slot::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCitadelProfileCard.Slot)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 slot_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_slot_id(), target);
  }

  // optional .CMsgCitadelProfileCard.Slot.Stat stat = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::stat(this),
        _Internal::stat(this).GetCachedSize(), target, stream);
  }

  // optional .CMsgCitadelProfileCard.Slot.Hero hero = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::hero(this),
        _Internal::hero(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCitadelProfileCard.Slot)
  return target;
}

size_t CMsgCitadelProfileCard_Slot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCitadelProfileCard.Slot)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .CMsgCitadelProfileCard.Slot.Stat stat = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.stat_);
    }

    // optional .CMsgCitadelProfileCard.Slot.Hero hero = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.hero_);
    }

    // optional uint32 slot_id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_slot_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgCitadelProfileCard_Slot::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgCitadelProfileCard_Slot::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgCitadelProfileCard_Slot::GetClassData() const { return &_class_data_; }


void CMsgCitadelProfileCard_Slot::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgCitadelProfileCard_Slot*>(&to_msg);
  auto& from = static_cast<const CMsgCitadelProfileCard_Slot&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgCitadelProfileCard.Slot)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_stat()->::CMsgCitadelProfileCard_Slot_Stat::MergeFrom(
          from._internal_stat());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_hero()->::CMsgCitadelProfileCard_Slot_Hero::MergeFrom(
          from._internal_hero());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.slot_id_ = from._impl_.slot_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgCitadelProfileCard_Slot::CopyFrom(const CMsgCitadelProfileCard_Slot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCitadelProfileCard.Slot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCitadelProfileCard_Slot::IsInitialized() const {
  return true;
}

void CMsgCitadelProfileCard_Slot::InternalSwap(CMsgCitadelProfileCard_Slot* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgCitadelProfileCard_Slot, _impl_.slot_id_)
      + sizeof(CMsgCitadelProfileCard_Slot::_impl_.slot_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgCitadelProfileCard_Slot, _impl_.stat_)>(
          reinterpret_cast<char*>(&_impl_.stat_),
          reinterpret_cast<char*>(&other->_impl_.stat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgCitadelProfileCard_Slot::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[61]);
}

// ===================================================================

class CMsgCitadelProfileCard::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgCitadelProfileCard>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ranked_badge_level(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgCitadelProfileCard::CMsgCitadelProfileCard(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgCitadelProfileCard)
}
CMsgCitadelProfileCard::CMsgCitadelProfileCard(const CMsgCitadelProfileCard& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgCitadelProfileCard* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.slots_){from._impl_.slots_}
    , decltype(_impl_.account_id_){}
    , decltype(_impl_.ranked_badge_level_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ranked_badge_level_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.ranked_badge_level_));
  // @@protoc_insertion_point(copy_constructor:CMsgCitadelProfileCard)
}

inline void CMsgCitadelProfileCard::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.slots_){arena}
    , decltype(_impl_.account_id_){0u}
    , decltype(_impl_.ranked_badge_level_){0u}
  };
}

CMsgCitadelProfileCard::~CMsgCitadelProfileCard() {
  // @@protoc_insertion_point(destructor:CMsgCitadelProfileCard)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgCitadelProfileCard::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.slots_.~RepeatedPtrField();
}

void CMsgCitadelProfileCard::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgCitadelProfileCard::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCitadelProfileCard)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slots_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.ranked_badge_level_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.ranked_badge_level_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgCitadelProfileCard::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgCitadelProfileCard.Slot slots = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_slots(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional uint32 ranked_badge_level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_ranked_badge_level(&has_bits);
          _impl_.ranked_badge_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgCitadelProfileCard::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCitadelProfileCard)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  // repeated .CMsgCitadelProfileCard.Slot slots = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_slots_size()); i < n; i++) {
    const auto& repfield = this->_internal_slots(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional uint32 ranked_badge_level = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_ranked_badge_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCitadelProfileCard)
  return target;
}

size_t CMsgCitadelProfileCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCitadelProfileCard)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgCitadelProfileCard.Slot slots = 2;
  total_size += 1UL * this->_internal_slots_size();
  for (const auto& msg : this->_impl_.slots_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
    }

    // optional uint32 ranked_badge_level = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_ranked_badge_level());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgCitadelProfileCard::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgCitadelProfileCard::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgCitadelProfileCard::GetClassData() const { return &_class_data_; }


void CMsgCitadelProfileCard::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgCitadelProfileCard*>(&to_msg);
  auto& from = static_cast<const CMsgCitadelProfileCard&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgCitadelProfileCard)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.slots_.MergeFrom(from._impl_.slots_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.ranked_badge_level_ = from._impl_.ranked_badge_level_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgCitadelProfileCard::CopyFrom(const CMsgCitadelProfileCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCitadelProfileCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCitadelProfileCard::IsInitialized() const {
  return true;
}

void CMsgCitadelProfileCard::InternalSwap(CMsgCitadelProfileCard* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.slots_.InternalSwap(&other->_impl_.slots_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgCitadelProfileCard, _impl_.ranked_badge_level_)
      + sizeof(CMsgCitadelProfileCard::_impl_.ranked_badge_level_)
      - PROTOBUF_FIELD_OFFSET(CMsgCitadelProfileCard, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgCitadelProfileCard::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[62]);
}

// ===================================================================

class CMsgClientToGCUpdateRoster::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCUpdateRoster>()._impl_._has_bits_);
  static const ::CMsgHeroSelectionMatchInfo& heroes(const CMsgClientToGCUpdateRoster* msg);
  static void set_has_heroes(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_game_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_match_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::CMsgHeroSelectionMatchInfo&
CMsgClientToGCUpdateRoster::_Internal::heroes(const CMsgClientToGCUpdateRoster* msg) {
  return *msg->_impl_.heroes_;
}
void CMsgClientToGCUpdateRoster::clear_heroes() {
  if (_impl_.heroes_ != nullptr) _impl_.heroes_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CMsgClientToGCUpdateRoster::CMsgClientToGCUpdateRoster(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCUpdateRoster)
}
CMsgClientToGCUpdateRoster::CMsgClientToGCUpdateRoster(const CMsgClientToGCUpdateRoster& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCUpdateRoster* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.heroes_){nullptr}
    , decltype(_impl_.game_mode_){}
    , decltype(_impl_.match_mode_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_heroes()) {
    _this->_impl_.heroes_ = new ::CMsgHeroSelectionMatchInfo(*from._impl_.heroes_);
  }
  ::memcpy(&_impl_.game_mode_, &from._impl_.game_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.match_mode_) -
    reinterpret_cast<char*>(&_impl_.game_mode_)) + sizeof(_impl_.match_mode_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUpdateRoster)
}

inline void CMsgClientToGCUpdateRoster::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.heroes_){nullptr}
    , decltype(_impl_.game_mode_){0}
    , decltype(_impl_.match_mode_){0}
  };
}

CMsgClientToGCUpdateRoster::~CMsgClientToGCUpdateRoster() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUpdateRoster)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCUpdateRoster::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.heroes_;
}

void CMsgClientToGCUpdateRoster::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCUpdateRoster::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCUpdateRoster)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.heroes_ != nullptr);
    _impl_.heroes_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.game_mode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.match_mode_) -
        reinterpret_cast<char*>(&_impl_.game_mode_)) + sizeof(_impl_.match_mode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCUpdateRoster::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgHeroSelectionMatchInfo heroes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_heroes(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelGameMode game_mode = 2 [default = k_ECitadelGameMode_Invalid];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelGameMode_IsValid(val))) {
            _internal_set_game_mode(static_cast<::ECitadelGameMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelMatchMode match_mode = 3 [default = k_ECitadelMatchMode_Invalid];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelMatchMode_IsValid(val))) {
            _internal_set_match_mode(static_cast<::ECitadelMatchMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCUpdateRoster::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUpdateRoster)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgHeroSelectionMatchInfo heroes = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::heroes(this),
        _Internal::heroes(this).GetCachedSize(), target, stream);
  }

  // optional .ECitadelGameMode game_mode = 2 [default = k_ECitadelGameMode_Invalid];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_game_mode(), target);
  }

  // optional .ECitadelMatchMode match_mode = 3 [default = k_ECitadelMatchMode_Invalid];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_match_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUpdateRoster)
  return target;
}

size_t CMsgClientToGCUpdateRoster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCUpdateRoster)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .CMsgHeroSelectionMatchInfo heroes = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.heroes_);
    }

    // optional .ECitadelGameMode game_mode = 2 [default = k_ECitadelGameMode_Invalid];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_game_mode());
    }

    // optional .ECitadelMatchMode match_mode = 3 [default = k_ECitadelMatchMode_Invalid];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_match_mode());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCUpdateRoster::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCUpdateRoster::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCUpdateRoster::GetClassData() const { return &_class_data_; }


void CMsgClientToGCUpdateRoster::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCUpdateRoster*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCUpdateRoster&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCUpdateRoster)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_heroes()->::CMsgHeroSelectionMatchInfo::MergeFrom(
          from._internal_heroes());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.game_mode_ = from._impl_.game_mode_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.match_mode_ = from._impl_.match_mode_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCUpdateRoster::CopyFrom(const CMsgClientToGCUpdateRoster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCUpdateRoster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUpdateRoster::IsInitialized() const {
  return true;
}

void CMsgClientToGCUpdateRoster::InternalSwap(CMsgClientToGCUpdateRoster* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCUpdateRoster, _impl_.match_mode_)
      + sizeof(CMsgClientToGCUpdateRoster::_impl_.match_mode_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCUpdateRoster, _impl_.heroes_)>(
          reinterpret_cast<char*>(&_impl_.heroes_),
          reinterpret_cast<char*>(&other->_impl_.heroes_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCUpdateRoster::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[63]);
}

// ===================================================================

class CMsgClientToGCUpdateRosterResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCUpdateRosterResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCUpdateRosterResponse::CMsgClientToGCUpdateRosterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCUpdateRosterResponse)
}
CMsgClientToGCUpdateRosterResponse::CMsgClientToGCUpdateRosterResponse(const CMsgClientToGCUpdateRosterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCUpdateRosterResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUpdateRosterResponse)
}

inline void CMsgClientToGCUpdateRosterResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCUpdateRosterResponse::~CMsgClientToGCUpdateRosterResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUpdateRosterResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCUpdateRosterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCUpdateRosterResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCUpdateRosterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCUpdateRosterResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCUpdateRosterResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCUpdateRosterResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCUpdateRosterResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCUpdateRosterResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCUpdateRosterResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUpdateRosterResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCUpdateRosterResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUpdateRosterResponse)
  return target;
}

size_t CMsgClientToGCUpdateRosterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCUpdateRosterResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCUpdateRosterResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCUpdateRosterResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCUpdateRosterResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCUpdateRosterResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCUpdateRosterResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCUpdateRosterResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCUpdateRosterResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCUpdateRosterResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCUpdateRosterResponse::CopyFrom(const CMsgClientToGCUpdateRosterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCUpdateRosterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUpdateRosterResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCUpdateRosterResponse::InternalSwap(CMsgClientToGCUpdateRosterResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCUpdateRosterResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[64]);
}

// ===================================================================

class CMsgClientToGCGetAccountStats::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAccountStats>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dev_access_hint(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_friend_access_hint(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCGetAccountStats::CMsgClientToGCGetAccountStats(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAccountStats)
}
CMsgClientToGCGetAccountStats::CMsgClientToGCGetAccountStats(const CMsgClientToGCGetAccountStats& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetAccountStats* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){}
    , decltype(_impl_.dev_access_hint_){}
    , decltype(_impl_.friend_access_hint_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.friend_access_hint_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.friend_access_hint_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAccountStats)
}

inline void CMsgClientToGCGetAccountStats::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){0u}
    , decltype(_impl_.dev_access_hint_){false}
    , decltype(_impl_.friend_access_hint_){false}
  };
}

CMsgClientToGCGetAccountStats::~CMsgClientToGCGetAccountStats() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAccountStats)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetAccountStats::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetAccountStats::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetAccountStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAccountStats)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.friend_access_hint_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.friend_access_hint_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAccountStats::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool dev_access_hint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_dev_access_hint(&has_bits);
          _impl_.dev_access_hint_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool friend_access_hint = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_friend_access_hint(&has_bits);
          _impl_.friend_access_hint_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetAccountStats::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAccountStats)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  // optional bool dev_access_hint = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_dev_access_hint(), target);
  }

  // optional bool friend_access_hint = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_friend_access_hint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAccountStats)
  return target;
}

size_t CMsgClientToGCGetAccountStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAccountStats)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
    }

    // optional bool dev_access_hint = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool friend_access_hint = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetAccountStats::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetAccountStats::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetAccountStats::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetAccountStats::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetAccountStats*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetAccountStats&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAccountStats)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.dev_access_hint_ = from._impl_.dev_access_hint_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.friend_access_hint_ = from._impl_.friend_access_hint_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetAccountStats::CopyFrom(const CMsgClientToGCGetAccountStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAccountStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAccountStats::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAccountStats::InternalSwap(CMsgClientToGCGetAccountStats* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetAccountStats, _impl_.friend_access_hint_)
      + sizeof(CMsgClientToGCGetAccountStats::_impl_.friend_access_hint_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetAccountStats, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAccountStats::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[65]);
}

// ===================================================================

class CMsgClientToGCGetAccountStatsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAccountStatsResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgAccountStats& stats(const CMsgClientToGCGetAccountStatsResponse* msg);
  static void set_has_stats(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgAccountStats&
CMsgClientToGCGetAccountStatsResponse::_Internal::stats(const CMsgClientToGCGetAccountStatsResponse* msg) {
  return *msg->_impl_.stats_;
}
void CMsgClientToGCGetAccountStatsResponse::clear_stats() {
  if (_impl_.stats_ != nullptr) _impl_.stats_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CMsgClientToGCGetAccountStatsResponse::CMsgClientToGCGetAccountStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAccountStatsResponse)
}
CMsgClientToGCGetAccountStatsResponse::CMsgClientToGCGetAccountStatsResponse(const CMsgClientToGCGetAccountStatsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetAccountStatsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.stats_){nullptr}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_stats()) {
    _this->_impl_.stats_ = new ::CMsgAccountStats(*from._impl_.stats_);
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAccountStatsResponse)
}

inline void CMsgClientToGCGetAccountStatsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.stats_){nullptr}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCGetAccountStatsResponse::~CMsgClientToGCGetAccountStatsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAccountStatsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetAccountStatsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.stats_;
}

void CMsgClientToGCGetAccountStatsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetAccountStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAccountStatsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.stats_ != nullptr);
    _impl_.stats_->Clear();
  }
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAccountStatsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetAccountStatsResponse.EResult result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetAccountStatsResponse_EResult_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCGetAccountStatsResponse_EResult>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgAccountStats stats = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_stats(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetAccountStatsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAccountStatsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetAccountStatsResponse.EResult result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgAccountStats stats = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::stats(this),
        _Internal::stats(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAccountStatsResponse)
  return target;
}

size_t CMsgClientToGCGetAccountStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAccountStatsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgAccountStats stats = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.stats_);
    }

    // optional .CMsgClientToGCGetAccountStatsResponse.EResult result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetAccountStatsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetAccountStatsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetAccountStatsResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetAccountStatsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetAccountStatsResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetAccountStatsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAccountStatsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_stats()->::CMsgAccountStats::MergeFrom(
          from._internal_stats());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetAccountStatsResponse::CopyFrom(const CMsgClientToGCGetAccountStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAccountStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAccountStatsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAccountStatsResponse::InternalSwap(CMsgClientToGCGetAccountStatsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetAccountStatsResponse, _impl_.result_)
      + sizeof(CMsgClientToGCGetAccountStatsResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetAccountStatsResponse, _impl_.stats_)>(
          reinterpret_cast<char*>(&_impl_.stats_),
          reinterpret_cast<char*>(&other->_impl_.stats_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAccountStatsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[66]);
}

// ===================================================================

class CMsgClientToGCGetMatchMetaData::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetMatchMetaData>()._impl_._has_bits_);
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_metadata_salt(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCGetMatchMetaData::CMsgClientToGCGetMatchMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetMatchMetaData)
}
CMsgClientToGCGetMatchMetaData::CMsgClientToGCGetMatchMetaData(const CMsgClientToGCGetMatchMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetMatchMetaData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_id_){}
    , decltype(_impl_.metadata_salt_){}
    , decltype(_impl_.target_account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.match_id_, &from._impl_.match_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.target_account_id_) -
    reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.target_account_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetMatchMetaData)
}

inline void CMsgClientToGCGetMatchMetaData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_id_){uint64_t{0u}}
    , decltype(_impl_.metadata_salt_){0u}
    , decltype(_impl_.target_account_id_){0u}
  };
}

CMsgClientToGCGetMatchMetaData::~CMsgClientToGCGetMatchMetaData() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetMatchMetaData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetMatchMetaData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetMatchMetaData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetMatchMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetMatchMetaData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.match_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.target_account_id_) -
        reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.target_account_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetMatchMetaData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 match_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_match_id(&has_bits);
          _impl_.match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 metadata_salt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_metadata_salt(&has_bits);
          _impl_.metadata_salt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_target_account_id(&has_bits);
          _impl_.target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetMatchMetaData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetMatchMetaData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_match_id(), target);
  }

  // optional uint32 metadata_salt = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_metadata_salt(), target);
  }

  // optional uint32 target_account_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_target_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetMatchMetaData)
  return target;
}

size_t CMsgClientToGCGetMatchMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetMatchMetaData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 match_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_match_id());
    }

    // optional uint32 metadata_salt = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_metadata_salt());
    }

    // optional uint32 target_account_id = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_account_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetMatchMetaData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetMatchMetaData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetMatchMetaData::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetMatchMetaData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetMatchMetaData*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetMatchMetaData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetMatchMetaData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.metadata_salt_ = from._impl_.metadata_salt_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.target_account_id_ = from._impl_.target_account_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetMatchMetaData::CopyFrom(const CMsgClientToGCGetMatchMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetMatchMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetMatchMetaData::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetMatchMetaData::InternalSwap(CMsgClientToGCGetMatchMetaData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetMatchMetaData, _impl_.target_account_id_)
      + sizeof(CMsgClientToGCGetMatchMetaData::_impl_.target_account_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetMatchMetaData, _impl_.match_id_)>(
          reinterpret_cast<char*>(&_impl_.match_id_),
          reinterpret_cast<char*>(&other->_impl_.match_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetMatchMetaData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[67]);
}

// ===================================================================

class CMsgClientToGCGetMatchMetaDataResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetMatchMetaDataResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_replay_salt(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_metadata_salt(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_replay_valid_through(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_cluster_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_replay_processing_through(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgClientToGCGetMatchMetaDataResponse::CMsgClientToGCGetMatchMetaDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetMatchMetaDataResponse)
}
CMsgClientToGCGetMatchMetaDataResponse::CMsgClientToGCGetMatchMetaDataResponse(const CMsgClientToGCGetMatchMetaDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetMatchMetaDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}
    , decltype(_impl_.replay_salt_){}
    , decltype(_impl_.metadata_salt_){}
    , decltype(_impl_.replay_valid_through_){}
    , decltype(_impl_.cluster_id_){}
    , decltype(_impl_.replay_processing_through_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.replay_processing_through_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.replay_processing_through_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetMatchMetaDataResponse)
}

inline void CMsgClientToGCGetMatchMetaDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.replay_salt_){0u}
    , decltype(_impl_.metadata_salt_){0u}
    , decltype(_impl_.replay_valid_through_){0u}
    , decltype(_impl_.cluster_id_){0u}
    , decltype(_impl_.replay_processing_through_){0u}
  };
}

CMsgClientToGCGetMatchMetaDataResponse::~CMsgClientToGCGetMatchMetaDataResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetMatchMetaDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetMatchMetaDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetMatchMetaDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetMatchMetaDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetMatchMetaDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.replay_processing_through_) -
        reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.replay_processing_through_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetMatchMetaDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetMatchMetaDataResponse.EResult result = 1 [default = k_eResult_InternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetMatchMetaDataResponse_EResult_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCGetMatchMetaDataResponse_EResult>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 replay_salt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_replay_salt(&has_bits);
          _impl_.replay_salt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 metadata_salt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_metadata_salt(&has_bits);
          _impl_.metadata_salt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 replay_valid_through = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_replay_valid_through(&has_bits);
          _impl_.replay_valid_through_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 cluster_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_cluster_id(&has_bits);
          _impl_.cluster_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 replay_processing_through = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_replay_processing_through(&has_bits);
          _impl_.replay_processing_through_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetMatchMetaDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetMatchMetaDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetMatchMetaDataResponse.EResult result = 1 [default = k_eResult_InternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional uint32 replay_salt = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_replay_salt(), target);
  }

  // optional uint32 metadata_salt = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_metadata_salt(), target);
  }

  // optional uint32 replay_valid_through = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_replay_valid_through(), target);
  }

  // optional uint32 cluster_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_cluster_id(), target);
  }

  // optional uint32 replay_processing_through = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_replay_processing_through(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetMatchMetaDataResponse)
  return target;
}

size_t CMsgClientToGCGetMatchMetaDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetMatchMetaDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .CMsgClientToGCGetMatchMetaDataResponse.EResult result = 1 [default = k_eResult_InternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional uint32 replay_salt = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_replay_salt());
    }

    // optional uint32 metadata_salt = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_metadata_salt());
    }

    // optional uint32 replay_valid_through = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_replay_valid_through());
    }

    // optional uint32 cluster_id = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_cluster_id());
    }

    // optional uint32 replay_processing_through = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_replay_processing_through());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetMatchMetaDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetMatchMetaDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetMatchMetaDataResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetMatchMetaDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetMatchMetaDataResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetMatchMetaDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetMatchMetaDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.replay_salt_ = from._impl_.replay_salt_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.metadata_salt_ = from._impl_.metadata_salt_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.replay_valid_through_ = from._impl_.replay_valid_through_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.cluster_id_ = from._impl_.cluster_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.replay_processing_through_ = from._impl_.replay_processing_through_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetMatchMetaDataResponse::CopyFrom(const CMsgClientToGCGetMatchMetaDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetMatchMetaDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetMatchMetaDataResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetMatchMetaDataResponse::InternalSwap(CMsgClientToGCGetMatchMetaDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetMatchMetaDataResponse, _impl_.replay_processing_through_)
      + sizeof(CMsgClientToGCGetMatchMetaDataResponse::_impl_.replay_processing_through_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetMatchMetaDataResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetMatchMetaDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[68]);
}

// ===================================================================

class CMsgGCToClientDevAnnouncements_Announcement::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientDevAnnouncements_Announcement>()._impl_._has_bits_);
  static void set_has_priority(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_url(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_unique_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_posted_time(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_patch_version(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgGCToClientDevAnnouncements_Announcement::CMsgGCToClientDevAnnouncements_Announcement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientDevAnnouncements.Announcement)
}
CMsgGCToClientDevAnnouncements_Announcement::CMsgGCToClientDevAnnouncements_Announcement(const CMsgGCToClientDevAnnouncements_Announcement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientDevAnnouncements_Announcement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.title_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.url_){}
    , decltype(_impl_.patch_version_){}
    , decltype(_impl_.priority_){}
    , decltype(_impl_.unique_id_){}
    , decltype(_impl_.posted_time_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_title()) {
    _this->_impl_.title_.Set(from._internal_title(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_message()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_url()) {
    _this->_impl_.url_.Set(from._internal_url(), 
      _this->GetArenaForAllocation());
  }
  _impl_.patch_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.patch_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_patch_version()) {
    _this->_impl_.patch_version_.Set(from._internal_patch_version(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.priority_, &from._impl_.priority_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.posted_time_) -
    reinterpret_cast<char*>(&_impl_.priority_)) + sizeof(_impl_.posted_time_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientDevAnnouncements.Announcement)
}

inline void CMsgGCToClientDevAnnouncements_Announcement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.title_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.url_){}
    , decltype(_impl_.patch_version_){}
    , decltype(_impl_.priority_){0u}
    , decltype(_impl_.unique_id_){0u}
    , decltype(_impl_.posted_time_){0u}
  };
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.patch_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.patch_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgGCToClientDevAnnouncements_Announcement::~CMsgGCToClientDevAnnouncements_Announcement() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientDevAnnouncements.Announcement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientDevAnnouncements_Announcement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.title_.Destroy();
  _impl_.message_.Destroy();
  _impl_.url_.Destroy();
  _impl_.patch_version_.Destroy();
}

void CMsgGCToClientDevAnnouncements_Announcement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientDevAnnouncements_Announcement::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientDevAnnouncements.Announcement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.url_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.patch_version_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000070u) {
    ::memset(&_impl_.priority_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.posted_time_) -
        reinterpret_cast<char*>(&_impl_.priority_)) + sizeof(_impl_.posted_time_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientDevAnnouncements_Announcement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 priority = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_priority(&has_bits);
          _impl_.priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string title = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgGCToClientDevAnnouncements.Announcement.title");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgGCToClientDevAnnouncements.Announcement.message");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string url = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgGCToClientDevAnnouncements.Announcement.url");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint32 unique_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_unique_id(&has_bits);
          _impl_.unique_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 posted_time = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_posted_time(&has_bits);
          _impl_.posted_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string patch_version = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_patch_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgGCToClientDevAnnouncements.Announcement.patch_version");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientDevAnnouncements_Announcement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientDevAnnouncements.Announcement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 priority = 1;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_priority(), target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGCToClientDevAnnouncements.Announcement.title");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_title(), target);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGCToClientDevAnnouncements.Announcement.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  // optional string url = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGCToClientDevAnnouncements.Announcement.url");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_url(), target);
  }

  // optional uint32 unique_id = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_unique_id(), target);
  }

  // optional uint32 posted_time = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_posted_time(), target);
  }

  // optional string patch_version = 7;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_patch_version().data(), static_cast<int>(this->_internal_patch_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGCToClientDevAnnouncements.Announcement.patch_version");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_patch_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientDevAnnouncements.Announcement)
  return target;
}

size_t CMsgGCToClientDevAnnouncements_Announcement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientDevAnnouncements.Announcement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string title = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_title());
    }

    // optional string message = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_message());
    }

    // optional string url = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_url());
    }

    // optional string patch_version = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_patch_version());
    }

    // optional uint32 priority = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_priority());
    }

    // optional uint32 unique_id = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_unique_id());
    }

    // optional uint32 posted_time = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_posted_time());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientDevAnnouncements_Announcement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientDevAnnouncements_Announcement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientDevAnnouncements_Announcement::GetClassData() const { return &_class_data_; }


void CMsgGCToClientDevAnnouncements_Announcement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientDevAnnouncements_Announcement*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientDevAnnouncements_Announcement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientDevAnnouncements.Announcement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_url(from._internal_url());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_patch_version(from._internal_patch_version());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.priority_ = from._impl_.priority_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.unique_id_ = from._impl_.unique_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.posted_time_ = from._impl_.posted_time_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientDevAnnouncements_Announcement::CopyFrom(const CMsgGCToClientDevAnnouncements_Announcement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientDevAnnouncements.Announcement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientDevAnnouncements_Announcement::IsInitialized() const {
  return true;
}

void CMsgGCToClientDevAnnouncements_Announcement::InternalSwap(CMsgGCToClientDevAnnouncements_Announcement* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.title_, lhs_arena,
      &other->_impl_.title_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.url_, lhs_arena,
      &other->_impl_.url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.patch_version_, lhs_arena,
      &other->_impl_.patch_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCToClientDevAnnouncements_Announcement, _impl_.posted_time_)
      + sizeof(CMsgGCToClientDevAnnouncements_Announcement::_impl_.posted_time_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCToClientDevAnnouncements_Announcement, _impl_.priority_)>(
          reinterpret_cast<char*>(&_impl_.priority_),
          reinterpret_cast<char*>(&other->_impl_.priority_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientDevAnnouncements_Announcement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[69]);
}

// ===================================================================

class CMsgGCToClientDevAnnouncements::_Internal {
 public:
};

CMsgGCToClientDevAnnouncements::CMsgGCToClientDevAnnouncements(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientDevAnnouncements)
}
CMsgGCToClientDevAnnouncements::CMsgGCToClientDevAnnouncements(const CMsgGCToClientDevAnnouncements& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientDevAnnouncements* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.announcements_){from._impl_.announcements_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientDevAnnouncements)
}

inline void CMsgGCToClientDevAnnouncements::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.announcements_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CMsgGCToClientDevAnnouncements::~CMsgGCToClientDevAnnouncements() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientDevAnnouncements)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientDevAnnouncements::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.announcements_.~RepeatedPtrField();
}

void CMsgGCToClientDevAnnouncements::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientDevAnnouncements::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientDevAnnouncements)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.announcements_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientDevAnnouncements::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CMsgGCToClientDevAnnouncements.Announcement announcements = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_announcements(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientDevAnnouncements::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientDevAnnouncements)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGCToClientDevAnnouncements.Announcement announcements = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_announcements_size()); i < n; i++) {
    const auto& repfield = this->_internal_announcements(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientDevAnnouncements)
  return target;
}

size_t CMsgGCToClientDevAnnouncements::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientDevAnnouncements)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGCToClientDevAnnouncements.Announcement announcements = 1;
  total_size += 1UL * this->_internal_announcements_size();
  for (const auto& msg : this->_impl_.announcements_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientDevAnnouncements::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientDevAnnouncements::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientDevAnnouncements::GetClassData() const { return &_class_data_; }


void CMsgGCToClientDevAnnouncements::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientDevAnnouncements*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientDevAnnouncements&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientDevAnnouncements)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.announcements_.MergeFrom(from._impl_.announcements_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientDevAnnouncements::CopyFrom(const CMsgGCToClientDevAnnouncements& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientDevAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientDevAnnouncements::IsInitialized() const {
  return true;
}

void CMsgGCToClientDevAnnouncements::InternalSwap(CMsgGCToClientDevAnnouncements* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.announcements_.InternalSwap(&other->_impl_.announcements_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientDevAnnouncements::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[70]);
}

// ===================================================================

class CMsgClientToGCModifyDevAnnouncements::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCModifyDevAnnouncements>()._impl_._has_bits_);
  static void set_has_operation(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_target_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_priority(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_url(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_patch_version(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgClientToGCModifyDevAnnouncements::CMsgClientToGCModifyDevAnnouncements(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCModifyDevAnnouncements)
}
CMsgClientToGCModifyDevAnnouncements::CMsgClientToGCModifyDevAnnouncements(const CMsgClientToGCModifyDevAnnouncements& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCModifyDevAnnouncements* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.title_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.url_){}
    , decltype(_impl_.patch_version_){}
    , decltype(_impl_.operation_){}
    , decltype(_impl_.target_id_){}
    , decltype(_impl_.priority_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_title()) {
    _this->_impl_.title_.Set(from._internal_title(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_message()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_url()) {
    _this->_impl_.url_.Set(from._internal_url(), 
      _this->GetArenaForAllocation());
  }
  _impl_.patch_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.patch_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_patch_version()) {
    _this->_impl_.patch_version_.Set(from._internal_patch_version(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.operation_, &from._impl_.operation_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.priority_) -
    reinterpret_cast<char*>(&_impl_.operation_)) + sizeof(_impl_.priority_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCModifyDevAnnouncements)
}

inline void CMsgClientToGCModifyDevAnnouncements::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.title_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.url_){}
    , decltype(_impl_.patch_version_){}
    , decltype(_impl_.operation_){0}
    , decltype(_impl_.target_id_){0u}
    , decltype(_impl_.priority_){0u}
  };
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.patch_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.patch_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCModifyDevAnnouncements::~CMsgClientToGCModifyDevAnnouncements() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCModifyDevAnnouncements)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCModifyDevAnnouncements::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.title_.Destroy();
  _impl_.message_.Destroy();
  _impl_.url_.Destroy();
  _impl_.patch_version_.Destroy();
}

void CMsgClientToGCModifyDevAnnouncements::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCModifyDevAnnouncements::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCModifyDevAnnouncements)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.url_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.patch_version_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000070u) {
    ::memset(&_impl_.operation_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.priority_) -
        reinterpret_cast<char*>(&_impl_.operation_)) + sizeof(_impl_.priority_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCModifyDevAnnouncements::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCModifyDevAnnouncements.EOperation operation = 1 [default = k_eCreate];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCModifyDevAnnouncements_EOperation_IsValid(val))) {
            _internal_set_operation(static_cast<::CMsgClientToGCModifyDevAnnouncements_EOperation>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 target_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_target_id(&has_bits);
          _impl_.target_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 priority = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_priority(&has_bits);
          _impl_.priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string title = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCModifyDevAnnouncements.title");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string message = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCModifyDevAnnouncements.message");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string url = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCModifyDevAnnouncements.url");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string patch_version = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_patch_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCModifyDevAnnouncements.patch_version");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCModifyDevAnnouncements::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCModifyDevAnnouncements)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCModifyDevAnnouncements.EOperation operation = 1 [default = k_eCreate];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_operation(), target);
  }

  // optional uint32 target_id = 2;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_id(), target);
  }

  // optional uint32 priority = 3;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_priority(), target);
  }

  // optional string title = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCModifyDevAnnouncements.title");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_title(), target);
  }

  // optional string message = 5;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCModifyDevAnnouncements.message");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_message(), target);
  }

  // optional string url = 6;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCModifyDevAnnouncements.url");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_url(), target);
  }

  // optional string patch_version = 7;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_patch_version().data(), static_cast<int>(this->_internal_patch_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCModifyDevAnnouncements.patch_version");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_patch_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCModifyDevAnnouncements)
  return target;
}

size_t CMsgClientToGCModifyDevAnnouncements::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCModifyDevAnnouncements)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string title = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_title());
    }

    // optional string message = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_message());
    }

    // optional string url = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_url());
    }

    // optional string patch_version = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_patch_version());
    }

    // optional .CMsgClientToGCModifyDevAnnouncements.EOperation operation = 1 [default = k_eCreate];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_operation());
    }

    // optional uint32 target_id = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_id());
    }

    // optional uint32 priority = 3;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_priority());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCModifyDevAnnouncements::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCModifyDevAnnouncements::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCModifyDevAnnouncements::GetClassData() const { return &_class_data_; }


void CMsgClientToGCModifyDevAnnouncements::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCModifyDevAnnouncements*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCModifyDevAnnouncements&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCModifyDevAnnouncements)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_url(from._internal_url());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_patch_version(from._internal_patch_version());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.operation_ = from._impl_.operation_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.target_id_ = from._impl_.target_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.priority_ = from._impl_.priority_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCModifyDevAnnouncements::CopyFrom(const CMsgClientToGCModifyDevAnnouncements& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCModifyDevAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCModifyDevAnnouncements::IsInitialized() const {
  return true;
}

void CMsgClientToGCModifyDevAnnouncements::InternalSwap(CMsgClientToGCModifyDevAnnouncements* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.title_, lhs_arena,
      &other->_impl_.title_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.url_, lhs_arena,
      &other->_impl_.url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.patch_version_, lhs_arena,
      &other->_impl_.patch_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCModifyDevAnnouncements, _impl_.priority_)
      + sizeof(CMsgClientToGCModifyDevAnnouncements::_impl_.priority_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCModifyDevAnnouncements, _impl_.operation_)>(
          reinterpret_cast<char*>(&_impl_.operation_),
          reinterpret_cast<char*>(&other->_impl_.operation_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCModifyDevAnnouncements::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[71]);
}

// ===================================================================

class CMsgClientToGCModifyDevAnnouncementsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCModifyDevAnnouncementsResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCModifyDevAnnouncementsResponse::CMsgClientToGCModifyDevAnnouncementsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCModifyDevAnnouncementsResponse)
}
CMsgClientToGCModifyDevAnnouncementsResponse::CMsgClientToGCModifyDevAnnouncementsResponse(const CMsgClientToGCModifyDevAnnouncementsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCModifyDevAnnouncementsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCModifyDevAnnouncementsResponse)
}

inline void CMsgClientToGCModifyDevAnnouncementsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCModifyDevAnnouncementsResponse::~CMsgClientToGCModifyDevAnnouncementsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCModifyDevAnnouncementsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCModifyDevAnnouncementsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCModifyDevAnnouncementsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCModifyDevAnnouncementsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCModifyDevAnnouncementsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCModifyDevAnnouncementsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCModifyDevAnnouncementsResponse.EResult result = 1 [default = k_eSuccess];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCModifyDevAnnouncementsResponse_EResult_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCModifyDevAnnouncementsResponse_EResult>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCModifyDevAnnouncementsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCModifyDevAnnouncementsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCModifyDevAnnouncementsResponse.EResult result = 1 [default = k_eSuccess];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCModifyDevAnnouncementsResponse)
  return target;
}

size_t CMsgClientToGCModifyDevAnnouncementsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCModifyDevAnnouncementsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCModifyDevAnnouncementsResponse.EResult result = 1 [default = k_eSuccess];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCModifyDevAnnouncementsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCModifyDevAnnouncementsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCModifyDevAnnouncementsResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCModifyDevAnnouncementsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCModifyDevAnnouncementsResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCModifyDevAnnouncementsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCModifyDevAnnouncementsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCModifyDevAnnouncementsResponse::CopyFrom(const CMsgClientToGCModifyDevAnnouncementsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCModifyDevAnnouncementsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCModifyDevAnnouncementsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCModifyDevAnnouncementsResponse::InternalSwap(CMsgClientToGCModifyDevAnnouncementsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCModifyDevAnnouncementsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[72]);
}

// ===================================================================

class CMsgClientToGCDevAction::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCDevAction>()._impl_._has_bits_);
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uint_value(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_int_value(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_bool_value(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_str_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgClientToGCDevAction::CMsgClientToGCDevAction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCDevAction)
}
CMsgClientToGCDevAction::CMsgClientToGCDevAction(const CMsgClientToGCDevAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCDevAction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.str_value_){}
    , decltype(_impl_.account_id_){}
    , decltype(_impl_.uint_value_){}
    , decltype(_impl_.int_value_){}
    , decltype(_impl_.bool_value_){}
    , decltype(_impl_.match_id_){}
    , decltype(_impl_.action_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.str_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.str_value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_str_value()) {
    _this->_impl_.str_value_.Set(from._internal_str_value(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.action_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.action_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCDevAction)
}

inline void CMsgClientToGCDevAction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.str_value_){}
    , decltype(_impl_.account_id_){0u}
    , decltype(_impl_.uint_value_){0u}
    , decltype(_impl_.int_value_){0}
    , decltype(_impl_.bool_value_){false}
    , decltype(_impl_.match_id_){uint64_t{0u}}
    , decltype(_impl_.action_){1}
  };
  _impl_.str_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.str_value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCDevAction::~CMsgClientToGCDevAction() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCDevAction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCDevAction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.str_value_.Destroy();
}

void CMsgClientToGCDevAction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCDevAction::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCDevAction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.str_value_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000007eu) {
    ::memset(&_impl_.account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.match_id_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.match_id_));
    _impl_.action_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCDevAction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCDevAction.EAction action = 1 [default = k_eSetDeveloper];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCDevAction_EAction_IsValid(val))) {
            _internal_set_action(static_cast<::CMsgClientToGCDevAction_EAction>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 uint_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_uint_value(&has_bits);
          _impl_.uint_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 int_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_int_value(&has_bits);
          _impl_.int_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bool_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_bool_value(&has_bits);
          _impl_.bool_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string str_value = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_str_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCDevAction.str_value");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint64 match_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_match_id(&has_bits);
          _impl_.match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCDevAction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCDevAction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCDevAction.EAction action = 1 [default = k_eSetDeveloper];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // optional uint32 account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_account_id(), target);
  }

  // optional uint32 uint_value = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_uint_value(), target);
  }

  // optional int32 int_value = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_int_value(), target);
  }

  // optional bool bool_value = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_bool_value(), target);
  }

  // optional string str_value = 6;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_str_value().data(), static_cast<int>(this->_internal_str_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCDevAction.str_value");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_str_value(), target);
  }

  // optional uint64 match_id = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(7, this->_internal_match_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCDevAction)
  return target;
}

size_t CMsgClientToGCDevAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCDevAction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string str_value = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_str_value());
    }

    // optional uint32 account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
    }

    // optional uint32 uint_value = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uint_value());
    }

    // optional int32 int_value = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_int_value());
    }

    // optional bool bool_value = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional uint64 match_id = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_match_id());
    }

    // optional .CMsgClientToGCDevAction.EAction action = 1 [default = k_eSetDeveloper];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCDevAction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCDevAction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCDevAction::GetClassData() const { return &_class_data_; }


void CMsgClientToGCDevAction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCDevAction*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCDevAction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCDevAction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_str_value(from._internal_str_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.uint_value_ = from._impl_.uint_value_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.int_value_ = from._impl_.int_value_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.bool_value_ = from._impl_.bool_value_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.action_ = from._impl_.action_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCDevAction::CopyFrom(const CMsgClientToGCDevAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCDevAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCDevAction::IsInitialized() const {
  return true;
}

void CMsgClientToGCDevAction::InternalSwap(CMsgClientToGCDevAction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.str_value_, lhs_arena,
      &other->_impl_.str_value_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCDevAction, _impl_.match_id_)
      + sizeof(CMsgClientToGCDevAction::_impl_.match_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCDevAction, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
  swap(_impl_.action_, other->_impl_.action_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCDevAction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[73]);
}

// ===================================================================

class CMsgClientToGCDevActionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCDevActionResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCDevActionResponse::CMsgClientToGCDevActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCDevActionResponse)
}
CMsgClientToGCDevActionResponse::CMsgClientToGCDevActionResponse(const CMsgClientToGCDevActionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCDevActionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCDevActionResponse)
}

inline void CMsgClientToGCDevActionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCDevActionResponse::~CMsgClientToGCDevActionResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCDevActionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCDevActionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCDevActionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCDevActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCDevActionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCDevActionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCDevActionResponse.EResult result = 1 [default = k_eSuccess];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCDevActionResponse_EResult_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCDevActionResponse_EResult>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCDevActionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCDevActionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCDevActionResponse.EResult result = 1 [default = k_eSuccess];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCDevActionResponse)
  return target;
}

size_t CMsgClientToGCDevActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCDevActionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCDevActionResponse.EResult result = 1 [default = k_eSuccess];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCDevActionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCDevActionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCDevActionResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCDevActionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCDevActionResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCDevActionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCDevActionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCDevActionResponse::CopyFrom(const CMsgClientToGCDevActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCDevActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCDevActionResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCDevActionResponse::InternalSwap(CMsgClientToGCDevActionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCDevActionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[74]);
}

// ===================================================================

class CMsgClientToGCRecordClientEvents_Event::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRecordClientEvents_Event>()._impl_._has_bits_);
  static void set_has_time_stamp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_event_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_event_data(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_client_event_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCRecordClientEvents_Event::CMsgClientToGCRecordClientEvents_Event(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRecordClientEvents.Event)
}
CMsgClientToGCRecordClientEvents_Event::CMsgClientToGCRecordClientEvents_Event(const CMsgClientToGCRecordClientEvents_Event& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRecordClientEvents_Event* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.time_stamp_){}
    , decltype(_impl_.client_event_index_){}
    , decltype(_impl_.event_data_){}
    , decltype(_impl_.event_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.time_stamp_, &from._impl_.time_stamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.event_id_) -
    reinterpret_cast<char*>(&_impl_.time_stamp_)) + sizeof(_impl_.event_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRecordClientEvents.Event)
}

inline void CMsgClientToGCRecordClientEvents_Event::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.time_stamp_){0u}
    , decltype(_impl_.client_event_index_){0u}
    , decltype(_impl_.event_data_){uint64_t{0u}}
    , decltype(_impl_.event_id_){1}
  };
}

CMsgClientToGCRecordClientEvents_Event::~CMsgClientToGCRecordClientEvents_Event() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRecordClientEvents.Event)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRecordClientEvents_Event::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCRecordClientEvents_Event::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRecordClientEvents_Event::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRecordClientEvents.Event)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.time_stamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.event_data_) -
        reinterpret_cast<char*>(&_impl_.time_stamp_)) + sizeof(_impl_.event_data_));
    _impl_.event_id_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRecordClientEvents_Event::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 time_stamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_time_stamp(&has_bits);
          _impl_.time_stamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECitadelClientAccountEvent event_id = 2 [default = k_eLaunchedHeroTest];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelClientAccountEvent_IsValid(val))) {
            _internal_set_event_id(static_cast<::ECitadelClientAccountEvent>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint64 event_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_event_data(&has_bits);
          _impl_.event_data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 client_event_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_client_event_index(&has_bits);
          _impl_.client_event_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRecordClientEvents_Event::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRecordClientEvents.Event)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 time_stamp = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_time_stamp(), target);
  }

  // optional .ECitadelClientAccountEvent event_id = 2 [default = k_eLaunchedHeroTest];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_event_id(), target);
  }

  // optional uint64 event_data = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_event_data(), target);
  }

  // optional uint32 client_event_index = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_client_event_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRecordClientEvents.Event)
  return target;
}

size_t CMsgClientToGCRecordClientEvents_Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRecordClientEvents.Event)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 time_stamp = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_time_stamp());
    }

    // optional uint32 client_event_index = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_client_event_index());
    }

    // optional uint64 event_data = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_event_data());
    }

    // optional .ECitadelClientAccountEvent event_id = 2 [default = k_eLaunchedHeroTest];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_event_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRecordClientEvents_Event::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRecordClientEvents_Event::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRecordClientEvents_Event::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRecordClientEvents_Event::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRecordClientEvents_Event*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRecordClientEvents_Event&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRecordClientEvents.Event)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.time_stamp_ = from._impl_.time_stamp_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.client_event_index_ = from._impl_.client_event_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.event_data_ = from._impl_.event_data_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.event_id_ = from._impl_.event_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRecordClientEvents_Event::CopyFrom(const CMsgClientToGCRecordClientEvents_Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRecordClientEvents.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRecordClientEvents_Event::IsInitialized() const {
  return true;
}

void CMsgClientToGCRecordClientEvents_Event::InternalSwap(CMsgClientToGCRecordClientEvents_Event* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRecordClientEvents_Event, _impl_.event_data_)
      + sizeof(CMsgClientToGCRecordClientEvents_Event::_impl_.event_data_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRecordClientEvents_Event, _impl_.time_stamp_)>(
          reinterpret_cast<char*>(&_impl_.time_stamp_),
          reinterpret_cast<char*>(&other->_impl_.time_stamp_));
  swap(_impl_.event_id_, other->_impl_.event_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRecordClientEvents_Event::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[75]);
}

// ===================================================================

class CMsgClientToGCRecordClientEvents::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRecordClientEvents>()._impl_._has_bits_);
  static void set_has_client_run_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRecordClientEvents::CMsgClientToGCRecordClientEvents(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRecordClientEvents)
}
CMsgClientToGCRecordClientEvents::CMsgClientToGCRecordClientEvents(const CMsgClientToGCRecordClientEvents& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRecordClientEvents* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.events_){from._impl_.events_}
    , decltype(_impl_.client_run_token_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.client_run_token_ = from._impl_.client_run_token_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRecordClientEvents)
}

inline void CMsgClientToGCRecordClientEvents::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.events_){arena}
    , decltype(_impl_.client_run_token_){0u}
  };
}

CMsgClientToGCRecordClientEvents::~CMsgClientToGCRecordClientEvents() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRecordClientEvents)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRecordClientEvents::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.events_.~RepeatedPtrField();
}

void CMsgClientToGCRecordClientEvents::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRecordClientEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRecordClientEvents)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  _impl_.client_run_token_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRecordClientEvents::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CMsgClientToGCRecordClientEvents.Event events = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_events(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional uint32 client_run_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_client_run_token(&has_bits);
          _impl_.client_run_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRecordClientEvents::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRecordClientEvents)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientToGCRecordClientEvents.Event events = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_events_size()); i < n; i++) {
    const auto& repfield = this->_internal_events(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 client_run_token = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_client_run_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRecordClientEvents)
  return target;
}

size_t CMsgClientToGCRecordClientEvents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRecordClientEvents)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientToGCRecordClientEvents.Event events = 1;
  total_size += 1UL * this->_internal_events_size();
  for (const auto& msg : this->_impl_.events_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional uint32 client_run_token = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_client_run_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRecordClientEvents::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRecordClientEvents::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRecordClientEvents::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRecordClientEvents::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRecordClientEvents*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRecordClientEvents&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRecordClientEvents)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.events_.MergeFrom(from._impl_.events_);
  if (from._internal_has_client_run_token()) {
    _this->_internal_set_client_run_token(from._internal_client_run_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRecordClientEvents::CopyFrom(const CMsgClientToGCRecordClientEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRecordClientEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRecordClientEvents::IsInitialized() const {
  return true;
}

void CMsgClientToGCRecordClientEvents::InternalSwap(CMsgClientToGCRecordClientEvents* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
  swap(_impl_.client_run_token_, other->_impl_.client_run_token_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRecordClientEvents::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[76]);
}

// ===================================================================

class CMsgClientToGCRecordClientEventsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRecordClientEventsResponse>()._impl_._has_bits_);
  static void set_has_success(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRecordClientEventsResponse::CMsgClientToGCRecordClientEventsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRecordClientEventsResponse)
}
CMsgClientToGCRecordClientEventsResponse::CMsgClientToGCRecordClientEventsResponse(const CMsgClientToGCRecordClientEventsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRecordClientEventsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.success_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRecordClientEventsResponse)
}

inline void CMsgClientToGCRecordClientEventsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.success_){false}
  };
}

CMsgClientToGCRecordClientEventsResponse::~CMsgClientToGCRecordClientEventsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRecordClientEventsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRecordClientEventsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCRecordClientEventsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRecordClientEventsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRecordClientEventsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRecordClientEventsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_success(&has_bits);
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRecordClientEventsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRecordClientEventsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRecordClientEventsResponse)
  return target;
}

size_t CMsgClientToGCRecordClientEventsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRecordClientEventsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool success = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRecordClientEventsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRecordClientEventsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRecordClientEventsResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRecordClientEventsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRecordClientEventsResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRecordClientEventsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRecordClientEventsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_success()) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRecordClientEventsResponse::CopyFrom(const CMsgClientToGCRecordClientEventsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRecordClientEventsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRecordClientEventsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRecordClientEventsResponse::InternalSwap(CMsgClientToGCRecordClientEventsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRecordClientEventsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[77]);
}

// ===================================================================

class CMsgClientToGCSetNewPlayerProgress::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetNewPlayerProgress>()._impl_._has_bits_);
  static void set_has_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSetNewPlayerProgress::CMsgClientToGCSetNewPlayerProgress(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetNewPlayerProgress)
}
CMsgClientToGCSetNewPlayerProgress::CMsgClientToGCSetNewPlayerProgress(const CMsgClientToGCSetNewPlayerProgress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSetNewPlayerProgress* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.flag_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.flag_ = from._impl_.flag_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetNewPlayerProgress)
}

inline void CMsgClientToGCSetNewPlayerProgress::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.flag_){1}
  };
}

CMsgClientToGCSetNewPlayerProgress::~CMsgClientToGCSetNewPlayerProgress() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetNewPlayerProgress)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSetNewPlayerProgress::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCSetNewPlayerProgress::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSetNewPlayerProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetNewPlayerProgress)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.flag_ = 1;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetNewPlayerProgress::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ECitadelNewPlayerProgressFlag flag = 1 [default = k_eNewPlayerProgress_GettingStarted];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelNewPlayerProgressFlag_IsValid(val))) {
            _internal_set_flag(static_cast<::ECitadelNewPlayerProgressFlag>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSetNewPlayerProgress::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetNewPlayerProgress)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ECitadelNewPlayerProgressFlag flag = 1 [default = k_eNewPlayerProgress_GettingStarted];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetNewPlayerProgress)
  return target;
}

size_t CMsgClientToGCSetNewPlayerProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetNewPlayerProgress)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ECitadelNewPlayerProgressFlag flag = 1 [default = k_eNewPlayerProgress_GettingStarted];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_flag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSetNewPlayerProgress::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSetNewPlayerProgress::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSetNewPlayerProgress::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSetNewPlayerProgress::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSetNewPlayerProgress*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSetNewPlayerProgress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetNewPlayerProgress)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_flag()) {
    _this->_internal_set_flag(from._internal_flag());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSetNewPlayerProgress::CopyFrom(const CMsgClientToGCSetNewPlayerProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetNewPlayerProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetNewPlayerProgress::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetNewPlayerProgress::InternalSwap(CMsgClientToGCSetNewPlayerProgress* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.flag_, other->_impl_.flag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetNewPlayerProgress::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[78]);
}

// ===================================================================

class CMsgClientToGCSetNewPlayerProgressResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetNewPlayerProgressResponse>()._impl_._has_bits_);
  static void set_has_success(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSetNewPlayerProgressResponse::CMsgClientToGCSetNewPlayerProgressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetNewPlayerProgressResponse)
}
CMsgClientToGCSetNewPlayerProgressResponse::CMsgClientToGCSetNewPlayerProgressResponse(const CMsgClientToGCSetNewPlayerProgressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSetNewPlayerProgressResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.success_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetNewPlayerProgressResponse)
}

inline void CMsgClientToGCSetNewPlayerProgressResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.success_){false}
  };
}

CMsgClientToGCSetNewPlayerProgressResponse::~CMsgClientToGCSetNewPlayerProgressResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetNewPlayerProgressResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSetNewPlayerProgressResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCSetNewPlayerProgressResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSetNewPlayerProgressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetNewPlayerProgressResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetNewPlayerProgressResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_success(&has_bits);
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSetNewPlayerProgressResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetNewPlayerProgressResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetNewPlayerProgressResponse)
  return target;
}

size_t CMsgClientToGCSetNewPlayerProgressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetNewPlayerProgressResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool success = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSetNewPlayerProgressResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSetNewPlayerProgressResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSetNewPlayerProgressResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSetNewPlayerProgressResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSetNewPlayerProgressResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSetNewPlayerProgressResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetNewPlayerProgressResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_success()) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSetNewPlayerProgressResponse::CopyFrom(const CMsgClientToGCSetNewPlayerProgressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetNewPlayerProgressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetNewPlayerProgressResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetNewPlayerProgressResponse::InternalSwap(CMsgClientToGCSetNewPlayerProgressResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetNewPlayerProgressResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[79]);
}

// ===================================================================

class CMsgClientToGCUpdateAccountSync::_Internal {
 public:
};

CMsgClientToGCUpdateAccountSync::CMsgClientToGCUpdateAccountSync(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCUpdateAccountSync)
}
CMsgClientToGCUpdateAccountSync::CMsgClientToGCUpdateAccountSync(const CMsgClientToGCUpdateAccountSync& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCUpdateAccountSync* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ids_){from._impl_.ids_}
    , decltype(_impl_.values_){from._impl_.values_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUpdateAccountSync)
}

inline void CMsgClientToGCUpdateAccountSync::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ids_){arena}
    , decltype(_impl_.values_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CMsgClientToGCUpdateAccountSync::~CMsgClientToGCUpdateAccountSync() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUpdateAccountSync)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCUpdateAccountSync::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ids_.~RepeatedField();
  _impl_.values_.~RepeatedField();
}

void CMsgClientToGCUpdateAccountSync::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCUpdateAccountSync::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCUpdateAccountSync)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ids_.Clear();
  _impl_.values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCUpdateAccountSync::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_values(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<uint8_t>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_values(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCUpdateAccountSync::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUpdateAccountSync)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 ids = 1;
  for (int i = 0, n = this->_internal_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ids(i), target);
  }

  // repeated uint32 values = 2;
  for (int i = 0, n = this->_internal_values_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_values(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUpdateAccountSync)
  return target;
}

size_t CMsgClientToGCUpdateAccountSync::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCUpdateAccountSync)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_ids_size());
    total_size += data_size;
  }

  // repeated uint32 values = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.values_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_values_size());
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCUpdateAccountSync::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCUpdateAccountSync::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCUpdateAccountSync::GetClassData() const { return &_class_data_; }


void CMsgClientToGCUpdateAccountSync::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCUpdateAccountSync*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCUpdateAccountSync&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCUpdateAccountSync)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.ids_.MergeFrom(from._impl_.ids_);
  _this->_impl_.values_.MergeFrom(from._impl_.values_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCUpdateAccountSync::CopyFrom(const CMsgClientToGCUpdateAccountSync& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCUpdateAccountSync)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUpdateAccountSync::IsInitialized() const {
  return true;
}

void CMsgClientToGCUpdateAccountSync::InternalSwap(CMsgClientToGCUpdateAccountSync* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ids_.InternalSwap(&other->_impl_.ids_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCUpdateAccountSync::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[80]);
}

// ===================================================================

class CMsgClientToGCUpdateAccountSyncResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCUpdateAccountSyncResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCUpdateAccountSyncResponse::CMsgClientToGCUpdateAccountSyncResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCUpdateAccountSyncResponse)
}
CMsgClientToGCUpdateAccountSyncResponse::CMsgClientToGCUpdateAccountSyncResponse(const CMsgClientToGCUpdateAccountSyncResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCUpdateAccountSyncResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUpdateAccountSyncResponse)
}

inline void CMsgClientToGCUpdateAccountSyncResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCUpdateAccountSyncResponse::~CMsgClientToGCUpdateAccountSyncResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUpdateAccountSyncResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCUpdateAccountSyncResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCUpdateAccountSyncResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCUpdateAccountSyncResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCUpdateAccountSyncResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCUpdateAccountSyncResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCUpdateAccountSyncResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCUpdateAccountSyncResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCUpdateAccountSyncResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCUpdateAccountSyncResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUpdateAccountSyncResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCUpdateAccountSyncResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUpdateAccountSyncResponse)
  return target;
}

size_t CMsgClientToGCUpdateAccountSyncResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCUpdateAccountSyncResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCUpdateAccountSyncResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCUpdateAccountSyncResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCUpdateAccountSyncResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCUpdateAccountSyncResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCUpdateAccountSyncResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCUpdateAccountSyncResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCUpdateAccountSyncResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCUpdateAccountSyncResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCUpdateAccountSyncResponse::CopyFrom(const CMsgClientToGCUpdateAccountSyncResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCUpdateAccountSyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUpdateAccountSyncResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCUpdateAccountSyncResponse::InternalSwap(CMsgClientToGCUpdateAccountSyncResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCUpdateAccountSyncResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[81]);
}

// ===================================================================

class CMsgClientToGCGetHeroChoice::_Internal {
 public:
};

CMsgClientToGCGetHeroChoice::CMsgClientToGCGetHeroChoice(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetHeroChoice)
}
CMsgClientToGCGetHeroChoice::CMsgClientToGCGetHeroChoice(const CMsgClientToGCGetHeroChoice& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CMsgClientToGCGetHeroChoice* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetHeroChoice)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetHeroChoice::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetHeroChoice::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetHeroChoice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[82]);
}

// ===================================================================

class CMsgClientToGCGetHeroChoiceResponse_Hero::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetHeroChoiceResponse_Hero>()._impl_._has_bits_);
  static void set_has_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetHeroChoiceResponse_Hero::CMsgClientToGCGetHeroChoiceResponse_Hero(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetHeroChoiceResponse.Hero)
}
CMsgClientToGCGetHeroChoiceResponse_Hero::CMsgClientToGCGetHeroChoiceResponse_Hero(const CMsgClientToGCGetHeroChoiceResponse_Hero& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetHeroChoiceResponse_Hero* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.hero_id_ = from._impl_.hero_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetHeroChoiceResponse.Hero)
}

inline void CMsgClientToGCGetHeroChoiceResponse_Hero::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_id_){0u}
  };
}

CMsgClientToGCGetHeroChoiceResponse_Hero::~CMsgClientToGCGetHeroChoiceResponse_Hero() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetHeroChoiceResponse.Hero)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetHeroChoiceResponse_Hero::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetHeroChoiceResponse_Hero::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetHeroChoiceResponse_Hero::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetHeroChoiceResponse.Hero)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hero_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetHeroChoiceResponse_Hero::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 hero_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_hero_id(&has_bits);
          _impl_.hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetHeroChoiceResponse_Hero::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetHeroChoiceResponse.Hero)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 hero_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hero_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetHeroChoiceResponse.Hero)
  return target;
}

size_t CMsgClientToGCGetHeroChoiceResponse_Hero::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetHeroChoiceResponse.Hero)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 hero_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetHeroChoiceResponse_Hero::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetHeroChoiceResponse_Hero::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetHeroChoiceResponse_Hero::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetHeroChoiceResponse_Hero::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetHeroChoiceResponse_Hero*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetHeroChoiceResponse_Hero&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetHeroChoiceResponse.Hero)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_hero_id()) {
    _this->_internal_set_hero_id(from._internal_hero_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetHeroChoiceResponse_Hero::CopyFrom(const CMsgClientToGCGetHeroChoiceResponse_Hero& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetHeroChoiceResponse.Hero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetHeroChoiceResponse_Hero::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetHeroChoiceResponse_Hero::InternalSwap(CMsgClientToGCGetHeroChoiceResponse_Hero* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.hero_id_, other->_impl_.hero_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetHeroChoiceResponse_Hero::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[83]);
}

// ===================================================================

class CMsgClientToGCGetHeroChoiceResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetHeroChoiceResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hero_choice_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_select_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCGetHeroChoiceResponse::CMsgClientToGCGetHeroChoiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetHeroChoiceResponse)
}
CMsgClientToGCGetHeroChoiceResponse::CMsgClientToGCGetHeroChoiceResponse(const CMsgClientToGCGetHeroChoiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetHeroChoiceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_selections_){from._impl_.hero_selections_}
    , decltype(_impl_.result_){}
    , decltype(_impl_.hero_choice_id_){}
    , decltype(_impl_.select_count_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.select_count_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.select_count_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetHeroChoiceResponse)
}

inline void CMsgClientToGCGetHeroChoiceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_selections_){arena}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.hero_choice_id_){0u}
    , decltype(_impl_.select_count_){0u}
  };
}

CMsgClientToGCGetHeroChoiceResponse::~CMsgClientToGCGetHeroChoiceResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetHeroChoiceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetHeroChoiceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hero_selections_.~RepeatedPtrField();
}

void CMsgClientToGCGetHeroChoiceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetHeroChoiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetHeroChoiceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hero_selections_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.select_count_) -
        reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.select_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetHeroChoiceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetHeroChoiceResponse.EResult result = 1 [default = k_eSuccess];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetHeroChoiceResponse_EResult_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCGetHeroChoiceResponse_EResult>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgClientToGCGetHeroChoiceResponse.Hero hero_selections = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_hero_selections(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_choice_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_hero_choice_id(&has_bits);
          _impl_.hero_choice_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 select_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_select_count(&has_bits);
          _impl_.select_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetHeroChoiceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetHeroChoiceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetHeroChoiceResponse.EResult result = 1 [default = k_eSuccess];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // repeated .CMsgClientToGCGetHeroChoiceResponse.Hero hero_selections = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_hero_selections_size()); i < n; i++) {
    const auto& repfield = this->_internal_hero_selections(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional uint32 hero_choice_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_hero_choice_id(), target);
  }

  // optional uint32 select_count = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_select_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetHeroChoiceResponse)
  return target;
}

size_t CMsgClientToGCGetHeroChoiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetHeroChoiceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientToGCGetHeroChoiceResponse.Hero hero_selections = 2;
  total_size += 1UL * this->_internal_hero_selections_size();
  for (const auto& msg : this->_impl_.hero_selections_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .CMsgClientToGCGetHeroChoiceResponse.EResult result = 1 [default = k_eSuccess];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional uint32 hero_choice_id = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_choice_id());
    }

    // optional uint32 select_count = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_select_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetHeroChoiceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetHeroChoiceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetHeroChoiceResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetHeroChoiceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetHeroChoiceResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetHeroChoiceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetHeroChoiceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.hero_selections_.MergeFrom(from._impl_.hero_selections_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.hero_choice_id_ = from._impl_.hero_choice_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.select_count_ = from._impl_.select_count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetHeroChoiceResponse::CopyFrom(const CMsgClientToGCGetHeroChoiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetHeroChoiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetHeroChoiceResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetHeroChoiceResponse::InternalSwap(CMsgClientToGCGetHeroChoiceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.hero_selections_.InternalSwap(&other->_impl_.hero_selections_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetHeroChoiceResponse, _impl_.select_count_)
      + sizeof(CMsgClientToGCGetHeroChoiceResponse::_impl_.select_count_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetHeroChoiceResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetHeroChoiceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[84]);
}

// ===================================================================

class CMsgClientToGCUnlockHero::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCUnlockHero>()._impl_._has_bits_);
  static void set_has_hero_choice_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCUnlockHero::CMsgClientToGCUnlockHero(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCUnlockHero)
}
CMsgClientToGCUnlockHero::CMsgClientToGCUnlockHero(const CMsgClientToGCUnlockHero& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCUnlockHero* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_ids_){from._impl_.hero_ids_}
    , decltype(_impl_.hero_choice_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.hero_choice_id_ = from._impl_.hero_choice_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnlockHero)
}

inline void CMsgClientToGCUnlockHero::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_ids_){arena}
    , decltype(_impl_.hero_choice_id_){0u}
  };
}

CMsgClientToGCUnlockHero::~CMsgClientToGCUnlockHero() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnlockHero)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCUnlockHero::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hero_ids_.~RepeatedField();
}

void CMsgClientToGCUnlockHero::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCUnlockHero::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCUnlockHero)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hero_ids_.Clear();
  _impl_.hero_choice_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCUnlockHero::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 hero_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_hero_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_hero_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_choice_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_hero_choice_id(&has_bits);
          _impl_.hero_choice_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCUnlockHero::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnlockHero)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 hero_ids = 1;
  for (int i = 0, n = this->_internal_hero_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hero_ids(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 hero_choice_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_hero_choice_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnlockHero)
  return target;
}

size_t CMsgClientToGCUnlockHero::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCUnlockHero)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 hero_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.hero_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_hero_ids_size());
    total_size += data_size;
  }

  // optional uint32 hero_choice_id = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_choice_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCUnlockHero::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCUnlockHero::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCUnlockHero::GetClassData() const { return &_class_data_; }


void CMsgClientToGCUnlockHero::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCUnlockHero*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCUnlockHero&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCUnlockHero)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.hero_ids_.MergeFrom(from._impl_.hero_ids_);
  if (from._internal_has_hero_choice_id()) {
    _this->_internal_set_hero_choice_id(from._internal_hero_choice_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCUnlockHero::CopyFrom(const CMsgClientToGCUnlockHero& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCUnlockHero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockHero::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnlockHero::InternalSwap(CMsgClientToGCUnlockHero* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.hero_ids_.InternalSwap(&other->_impl_.hero_ids_);
  swap(_impl_.hero_choice_id_, other->_impl_.hero_choice_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCUnlockHero::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[85]);
}

// ===================================================================

class CMsgClientToGCUnlockHeroResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCUnlockHeroResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCUnlockHeroResponse::CMsgClientToGCUnlockHeroResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCUnlockHeroResponse)
}
CMsgClientToGCUnlockHeroResponse::CMsgClientToGCUnlockHeroResponse(const CMsgClientToGCUnlockHeroResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCUnlockHeroResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUnlockHeroResponse)
}

inline void CMsgClientToGCUnlockHeroResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCUnlockHeroResponse::~CMsgClientToGCUnlockHeroResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUnlockHeroResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCUnlockHeroResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCUnlockHeroResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCUnlockHeroResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCUnlockHeroResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCUnlockHeroResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCUnlockHeroResponse.EResult result = 1 [default = k_eSuccess];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCUnlockHeroResponse_EResult_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCUnlockHeroResponse_EResult>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCUnlockHeroResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUnlockHeroResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCUnlockHeroResponse.EResult result = 1 [default = k_eSuccess];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUnlockHeroResponse)
  return target;
}

size_t CMsgClientToGCUnlockHeroResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCUnlockHeroResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCUnlockHeroResponse.EResult result = 1 [default = k_eSuccess];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCUnlockHeroResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCUnlockHeroResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCUnlockHeroResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCUnlockHeroResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCUnlockHeroResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCUnlockHeroResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCUnlockHeroResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCUnlockHeroResponse::CopyFrom(const CMsgClientToGCUnlockHeroResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCUnlockHeroResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockHeroResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnlockHeroResponse::InternalSwap(CMsgClientToGCUnlockHeroResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCUnlockHeroResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[86]);
}

// ===================================================================

class CMsgAccountBook_Unlock::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAccountBook_Unlock>()._impl_._has_bits_);
  static void set_has_unlock_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgAccountBook_Unlock::CMsgAccountBook_Unlock(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgAccountBook.Unlock)
}
CMsgAccountBook_Unlock::CMsgAccountBook_Unlock(const CMsgAccountBook_Unlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgAccountBook_Unlock* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unlock_id_){}
    , decltype(_impl_.flags_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.unlock_id_, &from._impl_.unlock_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.flags_) -
    reinterpret_cast<char*>(&_impl_.unlock_id_)) + sizeof(_impl_.flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgAccountBook.Unlock)
}

inline void CMsgAccountBook_Unlock::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unlock_id_){0u}
    , decltype(_impl_.flags_){0u}
  };
}

CMsgAccountBook_Unlock::~CMsgAccountBook_Unlock() {
  // @@protoc_insertion_point(destructor:CMsgAccountBook.Unlock)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgAccountBook_Unlock::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgAccountBook_Unlock::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgAccountBook_Unlock::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAccountBook.Unlock)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.unlock_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.flags_) -
        reinterpret_cast<char*>(&_impl_.unlock_id_)) + sizeof(_impl_.flags_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgAccountBook_Unlock::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 unlock_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_unlock_id(&has_bits);
          _impl_.unlock_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_flags(&has_bits);
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgAccountBook_Unlock::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAccountBook.Unlock)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 unlock_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_unlock_id(), target);
  }

  // optional uint32 flags = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAccountBook.Unlock)
  return target;
}

size_t CMsgAccountBook_Unlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAccountBook.Unlock)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 unlock_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_unlock_id());
    }

    // optional uint32 flags = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_flags());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgAccountBook_Unlock::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgAccountBook_Unlock::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgAccountBook_Unlock::GetClassData() const { return &_class_data_; }


void CMsgAccountBook_Unlock::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgAccountBook_Unlock*>(&to_msg);
  auto& from = static_cast<const CMsgAccountBook_Unlock&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAccountBook.Unlock)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unlock_id_ = from._impl_.unlock_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAccountBook_Unlock::CopyFrom(const CMsgAccountBook_Unlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAccountBook.Unlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAccountBook_Unlock::IsInitialized() const {
  return true;
}

void CMsgAccountBook_Unlock::InternalSwap(CMsgAccountBook_Unlock* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAccountBook_Unlock, _impl_.flags_)
      + sizeof(CMsgAccountBook_Unlock::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgAccountBook_Unlock, _impl_.unlock_id_)>(
          reinterpret_cast<char*>(&_impl_.unlock_id_),
          reinterpret_cast<char*>(&other->_impl_.unlock_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgAccountBook_Unlock::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[87]);
}

// ===================================================================

class CMsgAccountBook::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAccountBook>()._impl_._has_bits_);
  static void set_has_book_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_book_xp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_spent_xp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgAccountBook::CMsgAccountBook(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgAccountBook)
}
CMsgAccountBook::CMsgAccountBook(const CMsgAccountBook& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgAccountBook* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unlocks_){from._impl_.unlocks_}
    , decltype(_impl_.book_id_){}
    , decltype(_impl_.book_xp_){}
    , decltype(_impl_.spent_xp_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.book_id_, &from._impl_.book_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.spent_xp_) -
    reinterpret_cast<char*>(&_impl_.book_id_)) + sizeof(_impl_.spent_xp_));
  // @@protoc_insertion_point(copy_constructor:CMsgAccountBook)
}

inline void CMsgAccountBook::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unlocks_){arena}
    , decltype(_impl_.book_id_){0u}
    , decltype(_impl_.book_xp_){0u}
    , decltype(_impl_.spent_xp_){0u}
  };
}

CMsgAccountBook::~CMsgAccountBook() {
  // @@protoc_insertion_point(destructor:CMsgAccountBook)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgAccountBook::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unlocks_.~RepeatedPtrField();
}

void CMsgAccountBook::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgAccountBook::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAccountBook)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unlocks_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.book_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.spent_xp_) -
        reinterpret_cast<char*>(&_impl_.book_id_)) + sizeof(_impl_.spent_xp_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgAccountBook::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 book_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_book_id(&has_bits);
          _impl_.book_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 book_xp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_book_xp(&has_bits);
          _impl_.book_xp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 spent_xp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_spent_xp(&has_bits);
          _impl_.spent_xp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgAccountBook.Unlock unlocks = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_unlocks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgAccountBook::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAccountBook)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 book_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_book_id(), target);
  }

  // optional uint32 book_xp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_book_xp(), target);
  }

  // optional uint32 spent_xp = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_spent_xp(), target);
  }

  // repeated .CMsgAccountBook.Unlock unlocks = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_unlocks_size()); i < n; i++) {
    const auto& repfield = this->_internal_unlocks(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAccountBook)
  return target;
}

size_t CMsgAccountBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAccountBook)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgAccountBook.Unlock unlocks = 4;
  total_size += 1UL * this->_internal_unlocks_size();
  for (const auto& msg : this->_impl_.unlocks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 book_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_book_id());
    }

    // optional uint32 book_xp = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_book_xp());
    }

    // optional uint32 spent_xp = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_spent_xp());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgAccountBook::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgAccountBook::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgAccountBook::GetClassData() const { return &_class_data_; }


void CMsgAccountBook::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgAccountBook*>(&to_msg);
  auto& from = static_cast<const CMsgAccountBook&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAccountBook)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.unlocks_.MergeFrom(from._impl_.unlocks_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.book_id_ = from._impl_.book_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.book_xp_ = from._impl_.book_xp_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.spent_xp_ = from._impl_.spent_xp_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAccountBook::CopyFrom(const CMsgAccountBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAccountBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAccountBook::IsInitialized() const {
  return true;
}

void CMsgAccountBook::InternalSwap(CMsgAccountBook* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.unlocks_.InternalSwap(&other->_impl_.unlocks_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAccountBook, _impl_.spent_xp_)
      + sizeof(CMsgAccountBook::_impl_.spent_xp_)
      - PROTOBUF_FIELD_OFFSET(CMsgAccountBook, _impl_.book_id_)>(
          reinterpret_cast<char*>(&_impl_.book_id_),
          reinterpret_cast<char*>(&other->_impl_.book_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgAccountBook::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[88]);
}

// ===================================================================

class CMsgClientToGCBookUnlock::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCBookUnlock>()._impl_._has_bits_);
  static void set_has_book_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unlock_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_expected_cost(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_client_version(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgClientToGCBookUnlock::CMsgClientToGCBookUnlock(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCBookUnlock)
}
CMsgClientToGCBookUnlock::CMsgClientToGCBookUnlock(const CMsgClientToGCBookUnlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCBookUnlock* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.book_id_){}
    , decltype(_impl_.unlock_id_){}
    , decltype(_impl_.expected_cost_){}
    , decltype(_impl_.client_version_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.book_id_, &from._impl_.book_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.client_version_) -
    reinterpret_cast<char*>(&_impl_.book_id_)) + sizeof(_impl_.client_version_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCBookUnlock)
}

inline void CMsgClientToGCBookUnlock::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.book_id_){0u}
    , decltype(_impl_.unlock_id_){0u}
    , decltype(_impl_.expected_cost_){0u}
    , decltype(_impl_.client_version_){0u}
  };
}

CMsgClientToGCBookUnlock::~CMsgClientToGCBookUnlock() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCBookUnlock)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCBookUnlock::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCBookUnlock::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCBookUnlock::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCBookUnlock)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.book_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.client_version_) -
        reinterpret_cast<char*>(&_impl_.book_id_)) + sizeof(_impl_.client_version_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCBookUnlock::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 book_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_book_id(&has_bits);
          _impl_.book_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 unlock_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unlock_id(&has_bits);
          _impl_.unlock_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 expected_cost = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_expected_cost(&has_bits);
          _impl_.expected_cost_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 client_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_client_version(&has_bits);
          _impl_.client_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCBookUnlock::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCBookUnlock)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 book_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_book_id(), target);
  }

  // optional uint32 unlock_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_unlock_id(), target);
  }

  // optional uint32 expected_cost = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_expected_cost(), target);
  }

  // optional uint32 client_version = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_client_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCBookUnlock)
  return target;
}

size_t CMsgClientToGCBookUnlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCBookUnlock)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 book_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_book_id());
    }

    // optional uint32 unlock_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_unlock_id());
    }

    // optional uint32 expected_cost = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_expected_cost());
    }

    // optional uint32 client_version = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_client_version());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCBookUnlock::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCBookUnlock::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCBookUnlock::GetClassData() const { return &_class_data_; }


void CMsgClientToGCBookUnlock::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCBookUnlock*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCBookUnlock&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCBookUnlock)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.book_id_ = from._impl_.book_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unlock_id_ = from._impl_.unlock_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.expected_cost_ = from._impl_.expected_cost_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.client_version_ = from._impl_.client_version_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCBookUnlock::CopyFrom(const CMsgClientToGCBookUnlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCBookUnlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCBookUnlock::IsInitialized() const {
  return true;
}

void CMsgClientToGCBookUnlock::InternalSwap(CMsgClientToGCBookUnlock* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCBookUnlock, _impl_.client_version_)
      + sizeof(CMsgClientToGCBookUnlock::_impl_.client_version_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCBookUnlock, _impl_.book_id_)>(
          reinterpret_cast<char*>(&_impl_.book_id_),
          reinterpret_cast<char*>(&other->_impl_.book_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCBookUnlock::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[89]);
}

// ===================================================================

class CMsgClientToGCBookUnlockResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCBookUnlockResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgAccountBook& updated_book(const CMsgClientToGCBookUnlockResponse* msg);
  static void set_has_updated_book(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgAccountBook&
CMsgClientToGCBookUnlockResponse::_Internal::updated_book(const CMsgClientToGCBookUnlockResponse* msg) {
  return *msg->_impl_.updated_book_;
}
CMsgClientToGCBookUnlockResponse::CMsgClientToGCBookUnlockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCBookUnlockResponse)
}
CMsgClientToGCBookUnlockResponse::CMsgClientToGCBookUnlockResponse(const CMsgClientToGCBookUnlockResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCBookUnlockResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.updated_book_){nullptr}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_updated_book()) {
    _this->_impl_.updated_book_ = new ::CMsgAccountBook(*from._impl_.updated_book_);
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCBookUnlockResponse)
}

inline void CMsgClientToGCBookUnlockResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.updated_book_){nullptr}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCBookUnlockResponse::~CMsgClientToGCBookUnlockResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCBookUnlockResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCBookUnlockResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.updated_book_;
}

void CMsgClientToGCBookUnlockResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCBookUnlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCBookUnlockResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.updated_book_ != nullptr);
    _impl_.updated_book_->Clear();
  }
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCBookUnlockResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCBookUnlockResponse.EResult result = 1 [default = k_eSuccess];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCBookUnlockResponse_EResult_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCBookUnlockResponse_EResult>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgAccountBook updated_book = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_book(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCBookUnlockResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCBookUnlockResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCBookUnlockResponse.EResult result = 1 [default = k_eSuccess];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgAccountBook updated_book = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::updated_book(this),
        _Internal::updated_book(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCBookUnlockResponse)
  return target;
}

size_t CMsgClientToGCBookUnlockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCBookUnlockResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgAccountBook updated_book = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.updated_book_);
    }

    // optional .CMsgClientToGCBookUnlockResponse.EResult result = 1 [default = k_eSuccess];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCBookUnlockResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCBookUnlockResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCBookUnlockResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCBookUnlockResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCBookUnlockResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCBookUnlockResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCBookUnlockResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_updated_book()->::CMsgAccountBook::MergeFrom(
          from._internal_updated_book());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCBookUnlockResponse::CopyFrom(const CMsgClientToGCBookUnlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCBookUnlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCBookUnlockResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCBookUnlockResponse::InternalSwap(CMsgClientToGCBookUnlockResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCBookUnlockResponse, _impl_.result_)
      + sizeof(CMsgClientToGCBookUnlockResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCBookUnlockResponse, _impl_.updated_book_)>(
          reinterpret_cast<char*>(&_impl_.updated_book_),
          reinterpret_cast<char*>(&other->_impl_.updated_book_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCBookUnlockResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[90]);
}

// ===================================================================

class CMsgClientToGCGetBook::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetBook>()._impl_._has_bits_);
  static void set_has_book_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetBook::CMsgClientToGCGetBook(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetBook)
}
CMsgClientToGCGetBook::CMsgClientToGCGetBook(const CMsgClientToGCGetBook& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetBook* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.book_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.book_id_ = from._impl_.book_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetBook)
}

inline void CMsgClientToGCGetBook::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.book_id_){0u}
  };
}

CMsgClientToGCGetBook::~CMsgClientToGCGetBook() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetBook)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetBook::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetBook::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetBook::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetBook)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.book_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetBook::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 book_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_book_id(&has_bits);
          _impl_.book_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetBook::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetBook)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 book_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_book_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetBook)
  return target;
}

size_t CMsgClientToGCGetBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetBook)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 book_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_book_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetBook::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetBook::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetBook::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetBook::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetBook*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetBook&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetBook)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_book_id()) {
    _this->_internal_set_book_id(from._internal_book_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetBook::CopyFrom(const CMsgClientToGCGetBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetBook::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetBook::InternalSwap(CMsgClientToGCGetBook* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.book_id_, other->_impl_.book_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetBook::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[91]);
}

// ===================================================================

class CMsgClientToGCGetBookResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetBookResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgAccountBook& book(const CMsgClientToGCGetBookResponse* msg);
  static void set_has_book(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgAccountBook&
CMsgClientToGCGetBookResponse::_Internal::book(const CMsgClientToGCGetBookResponse* msg) {
  return *msg->_impl_.book_;
}
CMsgClientToGCGetBookResponse::CMsgClientToGCGetBookResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetBookResponse)
}
CMsgClientToGCGetBookResponse::CMsgClientToGCGetBookResponse(const CMsgClientToGCGetBookResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetBookResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.book_){nullptr}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_book()) {
    _this->_impl_.book_ = new ::CMsgAccountBook(*from._impl_.book_);
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetBookResponse)
}

inline void CMsgClientToGCGetBookResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.book_){nullptr}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCGetBookResponse::~CMsgClientToGCGetBookResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetBookResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetBookResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.book_;
}

void CMsgClientToGCGetBookResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetBookResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetBookResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.book_ != nullptr);
    _impl_.book_->Clear();
  }
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetBookResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetBookResponse.EResult result = 1 [default = k_eSuccess];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetBookResponse_EResult_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCGetBookResponse_EResult>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgAccountBook book = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_book(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetBookResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetBookResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetBookResponse.EResult result = 1 [default = k_eSuccess];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgAccountBook book = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::book(this),
        _Internal::book(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetBookResponse)
  return target;
}

size_t CMsgClientToGCGetBookResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetBookResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgAccountBook book = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.book_);
    }

    // optional .CMsgClientToGCGetBookResponse.EResult result = 1 [default = k_eSuccess];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetBookResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetBookResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetBookResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetBookResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetBookResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetBookResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetBookResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_book()->::CMsgAccountBook::MergeFrom(
          from._internal_book());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetBookResponse::CopyFrom(const CMsgClientToGCGetBookResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetBookResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetBookResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetBookResponse::InternalSwap(CMsgClientToGCGetBookResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetBookResponse, _impl_.result_)
      + sizeof(CMsgClientToGCGetBookResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetBookResponse, _impl_.book_)>(
          reinterpret_cast<char*>(&_impl_.book_),
          reinterpret_cast<char*>(&other->_impl_.book_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetBookResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[92]);
}

// ===================================================================

class CMsgGCToClientBookUpdated::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientBookUpdated>()._impl_._has_bits_);
  static const ::CMsgAccountBook& book(const CMsgGCToClientBookUpdated* msg);
  static void set_has_book(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgAccountBook&
CMsgGCToClientBookUpdated::_Internal::book(const CMsgGCToClientBookUpdated* msg) {
  return *msg->_impl_.book_;
}
CMsgGCToClientBookUpdated::CMsgGCToClientBookUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientBookUpdated)
}
CMsgGCToClientBookUpdated::CMsgGCToClientBookUpdated(const CMsgGCToClientBookUpdated& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientBookUpdated* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.book_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_book()) {
    _this->_impl_.book_ = new ::CMsgAccountBook(*from._impl_.book_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientBookUpdated)
}

inline void CMsgGCToClientBookUpdated::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.book_){nullptr}
  };
}

CMsgGCToClientBookUpdated::~CMsgGCToClientBookUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientBookUpdated)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientBookUpdated::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.book_;
}

void CMsgGCToClientBookUpdated::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientBookUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientBookUpdated)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.book_ != nullptr);
    _impl_.book_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientBookUpdated::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgAccountBook book = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_book(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientBookUpdated::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientBookUpdated)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgAccountBook book = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::book(this),
        _Internal::book(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientBookUpdated)
  return target;
}

size_t CMsgGCToClientBookUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientBookUpdated)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgAccountBook book = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.book_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientBookUpdated::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientBookUpdated::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientBookUpdated::GetClassData() const { return &_class_data_; }


void CMsgGCToClientBookUpdated::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientBookUpdated*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientBookUpdated&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientBookUpdated)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_book()) {
    _this->_internal_mutable_book()->::CMsgAccountBook::MergeFrom(
        from._internal_book());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientBookUpdated::CopyFrom(const CMsgGCToClientBookUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientBookUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientBookUpdated::IsInitialized() const {
  return true;
}

void CMsgGCToClientBookUpdated::InternalSwap(CMsgGCToClientBookUpdated* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.book_, other->_impl_.book_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientBookUpdated::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[93]);
}

// ===================================================================

class CMsgClientToGCSubmitPlaytestUser::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSubmitPlaytestUser>()._impl_._has_bits_);
  static void set_has_location(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCSubmitPlaytestUser::CMsgClientToGCSubmitPlaytestUser(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSubmitPlaytestUser)
}
CMsgClientToGCSubmitPlaytestUser::CMsgClientToGCSubmitPlaytestUser(const CMsgClientToGCSubmitPlaytestUser& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSubmitPlaytestUser* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.location_){}
    , decltype(_impl_.target_account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_location()) {
    _this->_impl_.location_.Set(from._internal_location(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.target_account_id_ = from._impl_.target_account_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSubmitPlaytestUser)
}

inline void CMsgClientToGCSubmitPlaytestUser::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.location_){}
    , decltype(_impl_.target_account_id_){0u}
  };
  _impl_.location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCSubmitPlaytestUser::~CMsgClientToGCSubmitPlaytestUser() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSubmitPlaytestUser)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSubmitPlaytestUser::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.location_.Destroy();
}

void CMsgClientToGCSubmitPlaytestUser::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSubmitPlaytestUser::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSubmitPlaytestUser)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.location_.ClearNonDefaultToEmpty();
  }
  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSubmitPlaytestUser::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string location = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCSubmitPlaytestUser.location");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_target_account_id(&has_bits);
          _impl_.target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSubmitPlaytestUser::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSubmitPlaytestUser)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string location = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCSubmitPlaytestUser.location");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_location(), target);
  }

  // optional uint32 target_account_id = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_target_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSubmitPlaytestUser)
  return target;
}

size_t CMsgClientToGCSubmitPlaytestUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSubmitPlaytestUser)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string location = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_location());
    }

    // optional uint32 target_account_id = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_account_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSubmitPlaytestUser::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSubmitPlaytestUser::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSubmitPlaytestUser::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSubmitPlaytestUser::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSubmitPlaytestUser*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSubmitPlaytestUser&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSubmitPlaytestUser)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_location(from._internal_location());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.target_account_id_ = from._impl_.target_account_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSubmitPlaytestUser::CopyFrom(const CMsgClientToGCSubmitPlaytestUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSubmitPlaytestUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSubmitPlaytestUser::IsInitialized() const {
  return true;
}

void CMsgClientToGCSubmitPlaytestUser::InternalSwap(CMsgClientToGCSubmitPlaytestUser* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.location_, lhs_arena,
      &other->_impl_.location_, rhs_arena
  );
  swap(_impl_.target_account_id_, other->_impl_.target_account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSubmitPlaytestUser::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[94]);
}

// ===================================================================

class CMsgClientToGCSubmitPlaytestUserResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSubmitPlaytestUserResponse>()._impl_._has_bits_);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSubmitPlaytestUserResponse::CMsgClientToGCSubmitPlaytestUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSubmitPlaytestUserResponse)
}
CMsgClientToGCSubmitPlaytestUserResponse::CMsgClientToGCSubmitPlaytestUserResponse(const CMsgClientToGCSubmitPlaytestUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSubmitPlaytestUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.response_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.response_ = from._impl_.response_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSubmitPlaytestUserResponse)
}

inline void CMsgClientToGCSubmitPlaytestUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.response_){0}
  };
}

CMsgClientToGCSubmitPlaytestUserResponse::~CMsgClientToGCSubmitPlaytestUserResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSubmitPlaytestUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSubmitPlaytestUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCSubmitPlaytestUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSubmitPlaytestUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSubmitPlaytestUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.response_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSubmitPlaytestUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCSubmitPlaytestUserResponse.EResponse response = 1 [default = eResponse_Success];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCSubmitPlaytestUserResponse_EResponse_IsValid(val))) {
            _internal_set_response(static_cast<::CMsgClientToGCSubmitPlaytestUserResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSubmitPlaytestUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSubmitPlaytestUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCSubmitPlaytestUserResponse.EResponse response = 1 [default = eResponse_Success];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSubmitPlaytestUserResponse)
  return target;
}

size_t CMsgClientToGCSubmitPlaytestUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSubmitPlaytestUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCSubmitPlaytestUserResponse.EResponse response = 1 [default = eResponse_Success];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_response());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSubmitPlaytestUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSubmitPlaytestUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSubmitPlaytestUserResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSubmitPlaytestUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSubmitPlaytestUserResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSubmitPlaytestUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSubmitPlaytestUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_response()) {
    _this->_internal_set_response(from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSubmitPlaytestUserResponse::CopyFrom(const CMsgClientToGCSubmitPlaytestUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSubmitPlaytestUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSubmitPlaytestUserResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSubmitPlaytestUserResponse::InternalSwap(CMsgClientToGCSubmitPlaytestUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.response_, other->_impl_.response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSubmitPlaytestUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[95]);
}

// ===================================================================

class CMsgHeroBuild_BuildModEntry::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgHeroBuild_BuildModEntry>()._impl_._has_bits_);
  static void set_has_ability_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_annotation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgHeroBuild_BuildModEntry::CMsgHeroBuild_BuildModEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgHeroBuild.BuildModEntry)
}
CMsgHeroBuild_BuildModEntry::CMsgHeroBuild_BuildModEntry(const CMsgHeroBuild_BuildModEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgHeroBuild_BuildModEntry* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.annotation_){}
    , decltype(_impl_.ability_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.annotation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.annotation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_annotation()) {
    _this->_impl_.annotation_.Set(from._internal_annotation(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.ability_id_ = from._impl_.ability_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgHeroBuild.BuildModEntry)
}

inline void CMsgHeroBuild_BuildModEntry::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.annotation_){}
    , decltype(_impl_.ability_id_){0u}
  };
  _impl_.annotation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.annotation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgHeroBuild_BuildModEntry::~CMsgHeroBuild_BuildModEntry() {
  // @@protoc_insertion_point(destructor:CMsgHeroBuild.BuildModEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgHeroBuild_BuildModEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.annotation_.Destroy();
}

void CMsgHeroBuild_BuildModEntry::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgHeroBuild_BuildModEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHeroBuild.BuildModEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.annotation_.ClearNonDefaultToEmpty();
  }
  _impl_.ability_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgHeroBuild_BuildModEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 ability_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_ability_id(&has_bits);
          _impl_.ability_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string annotation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_annotation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgHeroBuild.BuildModEntry.annotation");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgHeroBuild_BuildModEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHeroBuild.BuildModEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 ability_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ability_id(), target);
  }

  // optional string annotation = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_annotation().data(), static_cast<int>(this->_internal_annotation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgHeroBuild.BuildModEntry.annotation");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_annotation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHeroBuild.BuildModEntry)
  return target;
}

size_t CMsgHeroBuild_BuildModEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHeroBuild.BuildModEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string annotation = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_annotation());
    }

    // optional uint32 ability_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_ability_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgHeroBuild_BuildModEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgHeroBuild_BuildModEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgHeroBuild_BuildModEntry::GetClassData() const { return &_class_data_; }


void CMsgHeroBuild_BuildModEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgHeroBuild_BuildModEntry*>(&to_msg);
  auto& from = static_cast<const CMsgHeroBuild_BuildModEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgHeroBuild.BuildModEntry)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_annotation(from._internal_annotation());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.ability_id_ = from._impl_.ability_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgHeroBuild_BuildModEntry::CopyFrom(const CMsgHeroBuild_BuildModEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHeroBuild.BuildModEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHeroBuild_BuildModEntry::IsInitialized() const {
  return true;
}

void CMsgHeroBuild_BuildModEntry::InternalSwap(CMsgHeroBuild_BuildModEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.annotation_, lhs_arena,
      &other->_impl_.annotation_, rhs_arena
  );
  swap(_impl_.ability_id_, other->_impl_.ability_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgHeroBuild_BuildModEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[96]);
}

// ===================================================================

class CMsgHeroBuild_BuildModCategory::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgHeroBuild_BuildModCategory>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_width(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgHeroBuild_BuildModCategory::CMsgHeroBuild_BuildModCategory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgHeroBuild.BuildModCategory)
}
CMsgHeroBuild_BuildModCategory::CMsgHeroBuild_BuildModCategory(const CMsgHeroBuild_BuildModCategory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgHeroBuild_BuildModCategory* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.mods_){from._impl_.mods_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.width_){}
    , decltype(_impl_.height_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_description()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.width_, &from._impl_.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.height_) -
    reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  // @@protoc_insertion_point(copy_constructor:CMsgHeroBuild.BuildModCategory)
}

inline void CMsgHeroBuild_BuildModCategory::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.mods_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.width_){0}
    , decltype(_impl_.height_){0}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgHeroBuild_BuildModCategory::~CMsgHeroBuild_BuildModCategory() {
  // @@protoc_insertion_point(destructor:CMsgHeroBuild.BuildModCategory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgHeroBuild_BuildModCategory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mods_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
}

void CMsgHeroBuild_BuildModCategory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgHeroBuild_BuildModCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHeroBuild.BuildModCategory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mods_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.width_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.height_) -
        reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgHeroBuild_BuildModCategory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CMsgHeroBuild.BuildModEntry mods = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_mods(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgHeroBuild.BuildModCategory.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgHeroBuild.BuildModCategory.description");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional float width = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _Internal::set_has_width(&has_bits);
          _impl_.width_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float height = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          _Internal::set_has_height(&has_bits);
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgHeroBuild_BuildModCategory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHeroBuild.BuildModCategory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgHeroBuild.BuildModEntry mods = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_mods_size()); i < n; i++) {
    const auto& repfield = this->_internal_mods(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgHeroBuild.BuildModCategory.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional string description = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgHeroBuild.BuildModCategory.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // optional float width = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_width(), target);
  }

  // optional float height = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(5, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHeroBuild.BuildModCategory)
  return target;
}

size_t CMsgHeroBuild_BuildModCategory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHeroBuild.BuildModCategory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgHeroBuild.BuildModEntry mods = 1;
  total_size += 1UL * this->_internal_mods_size();
  for (const auto& msg : this->_impl_.mods_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string description = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // optional float width = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional float height = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgHeroBuild_BuildModCategory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgHeroBuild_BuildModCategory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgHeroBuild_BuildModCategory::GetClassData() const { return &_class_data_; }


void CMsgHeroBuild_BuildModCategory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgHeroBuild_BuildModCategory*>(&to_msg);
  auto& from = static_cast<const CMsgHeroBuild_BuildModCategory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgHeroBuild.BuildModCategory)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.mods_.MergeFrom(from._impl_.mods_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.width_ = from._impl_.width_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgHeroBuild_BuildModCategory::CopyFrom(const CMsgHeroBuild_BuildModCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHeroBuild.BuildModCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHeroBuild_BuildModCategory::IsInitialized() const {
  return true;
}

void CMsgHeroBuild_BuildModCategory::InternalSwap(CMsgHeroBuild_BuildModCategory* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.mods_.InternalSwap(&other->_impl_.mods_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgHeroBuild_BuildModCategory, _impl_.height_)
      + sizeof(CMsgHeroBuild_BuildModCategory::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(CMsgHeroBuild_BuildModCategory, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgHeroBuild_BuildModCategory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[97]);
}

// ===================================================================

class CMsgHeroBuild_CurrencyChange::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgHeroBuild_CurrencyChange>()._impl_._has_bits_);
  static void set_has_ability_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_currency_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_delta(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_annotation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgHeroBuild_CurrencyChange::CMsgHeroBuild_CurrencyChange(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgHeroBuild.CurrencyChange)
}
CMsgHeroBuild_CurrencyChange::CMsgHeroBuild_CurrencyChange(const CMsgHeroBuild_CurrencyChange& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgHeroBuild_CurrencyChange* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.annotation_){}
    , decltype(_impl_.ability_id_){}
    , decltype(_impl_.currency_type_){}
    , decltype(_impl_.delta_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.annotation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.annotation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_annotation()) {
    _this->_impl_.annotation_.Set(from._internal_annotation(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.ability_id_, &from._impl_.ability_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.delta_) -
    reinterpret_cast<char*>(&_impl_.ability_id_)) + sizeof(_impl_.delta_));
  // @@protoc_insertion_point(copy_constructor:CMsgHeroBuild.CurrencyChange)
}

inline void CMsgHeroBuild_CurrencyChange::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.annotation_){}
    , decltype(_impl_.ability_id_){0u}
    , decltype(_impl_.currency_type_){0}
    , decltype(_impl_.delta_){0}
  };
  _impl_.annotation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.annotation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgHeroBuild_CurrencyChange::~CMsgHeroBuild_CurrencyChange() {
  // @@protoc_insertion_point(destructor:CMsgHeroBuild.CurrencyChange)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgHeroBuild_CurrencyChange::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.annotation_.Destroy();
}

void CMsgHeroBuild_CurrencyChange::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgHeroBuild_CurrencyChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHeroBuild.CurrencyChange)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.annotation_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.ability_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.delta_) -
        reinterpret_cast<char*>(&_impl_.ability_id_)) + sizeof(_impl_.delta_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgHeroBuild_CurrencyChange::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 ability_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_ability_id(&has_bits);
          _impl_.ability_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 currency_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_currency_type(&has_bits);
          _impl_.currency_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 delta = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_delta(&has_bits);
          _impl_.delta_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string annotation = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_annotation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgHeroBuild.CurrencyChange.annotation");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgHeroBuild_CurrencyChange::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHeroBuild.CurrencyChange)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 ability_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ability_id(), target);
  }

  // optional int32 currency_type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_currency_type(), target);
  }

  // optional int32 delta = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_delta(), target);
  }

  // optional string annotation = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_annotation().data(), static_cast<int>(this->_internal_annotation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgHeroBuild.CurrencyChange.annotation");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_annotation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHeroBuild.CurrencyChange)
  return target;
}

size_t CMsgHeroBuild_CurrencyChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHeroBuild.CurrencyChange)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string annotation = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_annotation());
    }

    // optional uint32 ability_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_ability_id());
    }

    // optional int32 currency_type = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_currency_type());
    }

    // optional int32 delta = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_delta());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgHeroBuild_CurrencyChange::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgHeroBuild_CurrencyChange::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgHeroBuild_CurrencyChange::GetClassData() const { return &_class_data_; }


void CMsgHeroBuild_CurrencyChange::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgHeroBuild_CurrencyChange*>(&to_msg);
  auto& from = static_cast<const CMsgHeroBuild_CurrencyChange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgHeroBuild.CurrencyChange)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_annotation(from._internal_annotation());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.ability_id_ = from._impl_.ability_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.currency_type_ = from._impl_.currency_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.delta_ = from._impl_.delta_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgHeroBuild_CurrencyChange::CopyFrom(const CMsgHeroBuild_CurrencyChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHeroBuild.CurrencyChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHeroBuild_CurrencyChange::IsInitialized() const {
  return true;
}

void CMsgHeroBuild_CurrencyChange::InternalSwap(CMsgHeroBuild_CurrencyChange* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.annotation_, lhs_arena,
      &other->_impl_.annotation_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgHeroBuild_CurrencyChange, _impl_.delta_)
      + sizeof(CMsgHeroBuild_CurrencyChange::_impl_.delta_)
      - PROTOBUF_FIELD_OFFSET(CMsgHeroBuild_CurrencyChange, _impl_.ability_id_)>(
          reinterpret_cast<char*>(&_impl_.ability_id_),
          reinterpret_cast<char*>(&other->_impl_.ability_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgHeroBuild_CurrencyChange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[98]);
}

// ===================================================================

class CMsgHeroBuild_AbilityOrder::_Internal {
 public:
};

CMsgHeroBuild_AbilityOrder::CMsgHeroBuild_AbilityOrder(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgHeroBuild.AbilityOrder)
}
CMsgHeroBuild_AbilityOrder::CMsgHeroBuild_AbilityOrder(const CMsgHeroBuild_AbilityOrder& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgHeroBuild_AbilityOrder* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.currency_changes_){from._impl_.currency_changes_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgHeroBuild.AbilityOrder)
}

inline void CMsgHeroBuild_AbilityOrder::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.currency_changes_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CMsgHeroBuild_AbilityOrder::~CMsgHeroBuild_AbilityOrder() {
  // @@protoc_insertion_point(destructor:CMsgHeroBuild.AbilityOrder)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgHeroBuild_AbilityOrder::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.currency_changes_.~RepeatedPtrField();
}

void CMsgHeroBuild_AbilityOrder::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgHeroBuild_AbilityOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHeroBuild.AbilityOrder)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.currency_changes_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgHeroBuild_AbilityOrder::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CMsgHeroBuild.CurrencyChange currency_changes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_currency_changes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgHeroBuild_AbilityOrder::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHeroBuild.AbilityOrder)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgHeroBuild.CurrencyChange currency_changes = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_currency_changes_size()); i < n; i++) {
    const auto& repfield = this->_internal_currency_changes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHeroBuild.AbilityOrder)
  return target;
}

size_t CMsgHeroBuild_AbilityOrder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHeroBuild.AbilityOrder)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgHeroBuild.CurrencyChange currency_changes = 1;
  total_size += 1UL * this->_internal_currency_changes_size();
  for (const auto& msg : this->_impl_.currency_changes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgHeroBuild_AbilityOrder::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgHeroBuild_AbilityOrder::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgHeroBuild_AbilityOrder::GetClassData() const { return &_class_data_; }


void CMsgHeroBuild_AbilityOrder::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgHeroBuild_AbilityOrder*>(&to_msg);
  auto& from = static_cast<const CMsgHeroBuild_AbilityOrder&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgHeroBuild.AbilityOrder)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.currency_changes_.MergeFrom(from._impl_.currency_changes_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgHeroBuild_AbilityOrder::CopyFrom(const CMsgHeroBuild_AbilityOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHeroBuild.AbilityOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHeroBuild_AbilityOrder::IsInitialized() const {
  return true;
}

void CMsgHeroBuild_AbilityOrder::InternalSwap(CMsgHeroBuild_AbilityOrder* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.currency_changes_.InternalSwap(&other->_impl_.currency_changes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgHeroBuild_AbilityOrder::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[99]);
}

// ===================================================================

class CMsgHeroBuild_Details_V0::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgHeroBuild_Details_V0>()._impl_._has_bits_);
  static const ::CMsgHeroBuild_AbilityOrder& ability_order(const CMsgHeroBuild_Details_V0* msg);
  static void set_has_ability_order(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgHeroBuild_AbilityOrder&
CMsgHeroBuild_Details_V0::_Internal::ability_order(const CMsgHeroBuild_Details_V0* msg) {
  return *msg->_impl_.ability_order_;
}
CMsgHeroBuild_Details_V0::CMsgHeroBuild_Details_V0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgHeroBuild.Details_V0)
}
CMsgHeroBuild_Details_V0::CMsgHeroBuild_Details_V0(const CMsgHeroBuild_Details_V0& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgHeroBuild_Details_V0* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.mod_categories_){from._impl_.mod_categories_}
    , decltype(_impl_.ability_order_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ability_order()) {
    _this->_impl_.ability_order_ = new ::CMsgHeroBuild_AbilityOrder(*from._impl_.ability_order_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgHeroBuild.Details_V0)
}

inline void CMsgHeroBuild_Details_V0::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.mod_categories_){arena}
    , decltype(_impl_.ability_order_){nullptr}
  };
}

CMsgHeroBuild_Details_V0::~CMsgHeroBuild_Details_V0() {
  // @@protoc_insertion_point(destructor:CMsgHeroBuild.Details_V0)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgHeroBuild_Details_V0::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mod_categories_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.ability_order_;
}

void CMsgHeroBuild_Details_V0::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgHeroBuild_Details_V0::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHeroBuild.Details_V0)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mod_categories_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.ability_order_ != nullptr);
    _impl_.ability_order_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgHeroBuild_Details_V0::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CMsgHeroBuild.BuildModCategory mod_categories = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_mod_categories(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgHeroBuild.AbilityOrder ability_order = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ability_order(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgHeroBuild_Details_V0::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHeroBuild.Details_V0)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgHeroBuild.BuildModCategory mod_categories = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_mod_categories_size()); i < n; i++) {
    const auto& repfield = this->_internal_mod_categories(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgHeroBuild.AbilityOrder ability_order = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::ability_order(this),
        _Internal::ability_order(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHeroBuild.Details_V0)
  return target;
}

size_t CMsgHeroBuild_Details_V0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHeroBuild.Details_V0)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgHeroBuild.BuildModCategory mod_categories = 1;
  total_size += 1UL * this->_internal_mod_categories_size();
  for (const auto& msg : this->_impl_.mod_categories_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .CMsgHeroBuild.AbilityOrder ability_order = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.ability_order_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgHeroBuild_Details_V0::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgHeroBuild_Details_V0::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgHeroBuild_Details_V0::GetClassData() const { return &_class_data_; }


void CMsgHeroBuild_Details_V0::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgHeroBuild_Details_V0*>(&to_msg);
  auto& from = static_cast<const CMsgHeroBuild_Details_V0&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgHeroBuild.Details_V0)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.mod_categories_.MergeFrom(from._impl_.mod_categories_);
  if (from._internal_has_ability_order()) {
    _this->_internal_mutable_ability_order()->::CMsgHeroBuild_AbilityOrder::MergeFrom(
        from._internal_ability_order());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgHeroBuild_Details_V0::CopyFrom(const CMsgHeroBuild_Details_V0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHeroBuild.Details_V0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHeroBuild_Details_V0::IsInitialized() const {
  return true;
}

void CMsgHeroBuild_Details_V0::InternalSwap(CMsgHeroBuild_Details_V0* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.mod_categories_.InternalSwap(&other->_impl_.mod_categories_);
  swap(_impl_.ability_order_, other->_impl_.ability_order_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgHeroBuild_Details_V0::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[100]);
}

// ===================================================================

class CMsgHeroBuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgHeroBuild>()._impl_._has_bits_);
  static void set_has_hero_build_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_author_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_last_updated_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_language(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_origin_build_id(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::CMsgHeroBuild_Details_V0& details(const CMsgHeroBuild* msg);
  static void set_has_details(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::CMsgHeroBuild_Details_V0&
CMsgHeroBuild::_Internal::details(const CMsgHeroBuild* msg) {
  return *msg->_impl_.details_;
}
CMsgHeroBuild::CMsgHeroBuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgHeroBuild)
}
CMsgHeroBuild::CMsgHeroBuild(const CMsgHeroBuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgHeroBuild* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.details_){nullptr}
    , decltype(_impl_.hero_build_id_){}
    , decltype(_impl_.hero_id_){}
    , decltype(_impl_.author_account_id_){}
    , decltype(_impl_.last_updated_timestamp_){}
    , decltype(_impl_.language_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.origin_build_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_description()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_details()) {
    _this->_impl_.details_ = new ::CMsgHeroBuild_Details_V0(*from._impl_.details_);
  }
  ::memcpy(&_impl_.hero_build_id_, &from._impl_.hero_build_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.origin_build_id_) -
    reinterpret_cast<char*>(&_impl_.hero_build_id_)) + sizeof(_impl_.origin_build_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgHeroBuild)
}

inline void CMsgHeroBuild::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.details_){nullptr}
    , decltype(_impl_.hero_build_id_){0u}
    , decltype(_impl_.hero_id_){0u}
    , decltype(_impl_.author_account_id_){0u}
    , decltype(_impl_.last_updated_timestamp_){0u}
    , decltype(_impl_.language_){0u}
    , decltype(_impl_.version_){0u}
    , decltype(_impl_.origin_build_id_){0u}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgHeroBuild::~CMsgHeroBuild() {
  // @@protoc_insertion_point(destructor:CMsgHeroBuild)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgHeroBuild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  if (this != internal_default_instance()) delete _impl_.details_;
}

void CMsgHeroBuild::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgHeroBuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHeroBuild)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.details_ != nullptr);
      _impl_.details_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&_impl_.hero_build_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.language_) -
        reinterpret_cast<char*>(&_impl_.hero_build_id_)) + sizeof(_impl_.language_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&_impl_.version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.origin_build_id_) -
        reinterpret_cast<char*>(&_impl_.version_)) + sizeof(_impl_.origin_build_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgHeroBuild::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 hero_build_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_hero_build_id(&has_bits);
          _impl_.hero_build_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_hero_id(&has_bits);
          _impl_.hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 author_account_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_author_account_id(&has_bits);
          _impl_.author_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 last_updated_timestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_last_updated_timestamp(&has_bits);
          _impl_.last_updated_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgHeroBuild.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string description = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgHeroBuild.description");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint32 language = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_language(&has_bits);
          _impl_.language_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 version = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_version(&has_bits);
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 origin_build_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_origin_build_id(&has_bits);
          _impl_.origin_build_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgHeroBuild.Details_V0 details = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_details(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgHeroBuild::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHeroBuild)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 hero_build_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hero_build_id(), target);
  }

  // optional uint32 hero_id = 2;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_hero_id(), target);
  }

  // optional uint32 author_account_id = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_author_account_id(), target);
  }

  // optional uint32 last_updated_timestamp = 4;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_last_updated_timestamp(), target);
  }

  // optional string name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgHeroBuild.name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_name(), target);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgHeroBuild.description");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_description(), target);
  }

  // optional uint32 language = 7;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_language(), target);
  }

  // optional uint32 version = 8;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(8, this->_internal_version(), target);
  }

  // optional uint32 origin_build_id = 9;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(9, this->_internal_origin_build_id(), target);
  }

  // optional .CMsgHeroBuild.Details_V0 details = 10;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::details(this),
        _Internal::details(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHeroBuild)
  return target;
}

size_t CMsgHeroBuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHeroBuild)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string name = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string description = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // optional .CMsgHeroBuild.Details_V0 details = 10;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.details_);
    }

    // optional uint32 hero_build_id = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_build_id());
    }

    // optional uint32 hero_id = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_id());
    }

    // optional uint32 author_account_id = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_author_account_id());
    }

    // optional uint32 last_updated_timestamp = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_last_updated_timestamp());
    }

    // optional uint32 language = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_language());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional uint32 version = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_version());
    }

    // optional uint32 origin_build_id = 9;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_origin_build_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgHeroBuild::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgHeroBuild::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgHeroBuild::GetClassData() const { return &_class_data_; }


void CMsgHeroBuild::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgHeroBuild*>(&to_msg);
  auto& from = static_cast<const CMsgHeroBuild&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgHeroBuild)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_details()->::CMsgHeroBuild_Details_V0::MergeFrom(
          from._internal_details());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.hero_build_id_ = from._impl_.hero_build_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.hero_id_ = from._impl_.hero_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.author_account_id_ = from._impl_.author_account_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.last_updated_timestamp_ = from._impl_.last_updated_timestamp_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.language_ = from._impl_.language_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.version_ = from._impl_.version_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.origin_build_id_ = from._impl_.origin_build_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgHeroBuild::CopyFrom(const CMsgHeroBuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHeroBuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHeroBuild::IsInitialized() const {
  return true;
}

void CMsgHeroBuild::InternalSwap(CMsgHeroBuild* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgHeroBuild, _impl_.origin_build_id_)
      + sizeof(CMsgHeroBuild::_impl_.origin_build_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgHeroBuild, _impl_.details_)>(
          reinterpret_cast<char*>(&_impl_.details_),
          reinterpret_cast<char*>(&other->_impl_.details_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgHeroBuild::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[101]);
}

// ===================================================================

class CMsgClientToGCUpdateHeroBuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCUpdateHeroBuild>()._impl_._has_bits_);
  static const ::CMsgHeroBuild& hero_build(const CMsgClientToGCUpdateHeroBuild* msg);
  static void set_has_hero_build(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgHeroBuild&
CMsgClientToGCUpdateHeroBuild::_Internal::hero_build(const CMsgClientToGCUpdateHeroBuild* msg) {
  return *msg->_impl_.hero_build_;
}
CMsgClientToGCUpdateHeroBuild::CMsgClientToGCUpdateHeroBuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCUpdateHeroBuild)
}
CMsgClientToGCUpdateHeroBuild::CMsgClientToGCUpdateHeroBuild(const CMsgClientToGCUpdateHeroBuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCUpdateHeroBuild* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_build_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_hero_build()) {
    _this->_impl_.hero_build_ = new ::CMsgHeroBuild(*from._impl_.hero_build_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUpdateHeroBuild)
}

inline void CMsgClientToGCUpdateHeroBuild::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_build_){nullptr}
  };
}

CMsgClientToGCUpdateHeroBuild::~CMsgClientToGCUpdateHeroBuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUpdateHeroBuild)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCUpdateHeroBuild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.hero_build_;
}

void CMsgClientToGCUpdateHeroBuild::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCUpdateHeroBuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCUpdateHeroBuild)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.hero_build_ != nullptr);
    _impl_.hero_build_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCUpdateHeroBuild::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgHeroBuild hero_build = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_hero_build(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCUpdateHeroBuild::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUpdateHeroBuild)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgHeroBuild hero_build = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::hero_build(this),
        _Internal::hero_build(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUpdateHeroBuild)
  return target;
}

size_t CMsgClientToGCUpdateHeroBuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCUpdateHeroBuild)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgHeroBuild hero_build = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.hero_build_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCUpdateHeroBuild::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCUpdateHeroBuild::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCUpdateHeroBuild::GetClassData() const { return &_class_data_; }


void CMsgClientToGCUpdateHeroBuild::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCUpdateHeroBuild*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCUpdateHeroBuild&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCUpdateHeroBuild)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_hero_build()) {
    _this->_internal_mutable_hero_build()->::CMsgHeroBuild::MergeFrom(
        from._internal_hero_build());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCUpdateHeroBuild::CopyFrom(const CMsgClientToGCUpdateHeroBuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCUpdateHeroBuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUpdateHeroBuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCUpdateHeroBuild::InternalSwap(CMsgClientToGCUpdateHeroBuild* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.hero_build_, other->_impl_.hero_build_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCUpdateHeroBuild::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[102]);
}

// ===================================================================

class CMsgClientToGCUpdateHeroBuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCUpdateHeroBuildResponse>()._impl_._has_bits_);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hero_build_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCUpdateHeroBuildResponse::CMsgClientToGCUpdateHeroBuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCUpdateHeroBuildResponse)
}
CMsgClientToGCUpdateHeroBuildResponse::CMsgClientToGCUpdateHeroBuildResponse(const CMsgClientToGCUpdateHeroBuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCUpdateHeroBuildResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.response_){}
    , decltype(_impl_.hero_build_id_){}
    , decltype(_impl_.version_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.response_, &from._impl_.response_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.version_) -
    reinterpret_cast<char*>(&_impl_.response_)) + sizeof(_impl_.version_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUpdateHeroBuildResponse)
}

inline void CMsgClientToGCUpdateHeroBuildResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.response_){0}
    , decltype(_impl_.hero_build_id_){0u}
    , decltype(_impl_.version_){0u}
  };
}

CMsgClientToGCUpdateHeroBuildResponse::~CMsgClientToGCUpdateHeroBuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUpdateHeroBuildResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCUpdateHeroBuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCUpdateHeroBuildResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCUpdateHeroBuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCUpdateHeroBuildResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.response_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.version_) -
        reinterpret_cast<char*>(&_impl_.response_)) + sizeof(_impl_.version_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCUpdateHeroBuildResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCUpdateHeroBuildResponse.EResponse response = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCUpdateHeroBuildResponse_EResponse_IsValid(val))) {
            _internal_set_response(static_cast<::CMsgClientToGCUpdateHeroBuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_build_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_hero_build_id(&has_bits);
          _impl_.hero_build_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_version(&has_bits);
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCUpdateHeroBuildResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUpdateHeroBuildResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCUpdateHeroBuildResponse.EResponse response = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_response(), target);
  }

  // optional uint32 hero_build_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_hero_build_id(), target);
  }

  // optional uint32 version = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUpdateHeroBuildResponse)
  return target;
}

size_t CMsgClientToGCUpdateHeroBuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCUpdateHeroBuildResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .CMsgClientToGCUpdateHeroBuildResponse.EResponse response = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_response());
    }

    // optional uint32 hero_build_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_build_id());
    }

    // optional uint32 version = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_version());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCUpdateHeroBuildResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCUpdateHeroBuildResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCUpdateHeroBuildResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCUpdateHeroBuildResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCUpdateHeroBuildResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCUpdateHeroBuildResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCUpdateHeroBuildResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.response_ = from._impl_.response_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.hero_build_id_ = from._impl_.hero_build_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.version_ = from._impl_.version_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCUpdateHeroBuildResponse::CopyFrom(const CMsgClientToGCUpdateHeroBuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCUpdateHeroBuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUpdateHeroBuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCUpdateHeroBuildResponse::InternalSwap(CMsgClientToGCUpdateHeroBuildResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCUpdateHeroBuildResponse, _impl_.version_)
      + sizeof(CMsgClientToGCUpdateHeroBuildResponse::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCUpdateHeroBuildResponse, _impl_.response_)>(
          reinterpret_cast<char*>(&_impl_.response_),
          reinterpret_cast<char*>(&other->_impl_.response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCUpdateHeroBuildResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[103]);
}

// ===================================================================

class CMsgClientToGCFindHeroBuilds::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCFindHeroBuilds>()._impl_._has_bits_);
  static void set_has_author_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_search_text(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hero_build_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgClientToGCFindHeroBuilds::CMsgClientToGCFindHeroBuilds(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCFindHeroBuilds)
}
CMsgClientToGCFindHeroBuilds::CMsgClientToGCFindHeroBuilds(const CMsgClientToGCFindHeroBuilds& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCFindHeroBuilds* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.language_){from._impl_.language_}
    , decltype(_impl_.search_text_){}
    , decltype(_impl_.author_account_id_){}
    , decltype(_impl_.hero_id_){}
    , decltype(_impl_.hero_build_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.search_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.search_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_search_text()) {
    _this->_impl_.search_text_.Set(from._internal_search_text(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.author_account_id_, &from._impl_.author_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.hero_build_id_) -
    reinterpret_cast<char*>(&_impl_.author_account_id_)) + sizeof(_impl_.hero_build_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCFindHeroBuilds)
}

inline void CMsgClientToGCFindHeroBuilds::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.language_){arena}
    , decltype(_impl_.search_text_){}
    , decltype(_impl_.author_account_id_){0u}
    , decltype(_impl_.hero_id_){0u}
    , decltype(_impl_.hero_build_id_){0u}
  };
  _impl_.search_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.search_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCFindHeroBuilds::~CMsgClientToGCFindHeroBuilds() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCFindHeroBuilds)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCFindHeroBuilds::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.language_.~RepeatedField();
  _impl_.search_text_.Destroy();
}

void CMsgClientToGCFindHeroBuilds::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCFindHeroBuilds::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCFindHeroBuilds)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.language_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.search_text_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.author_account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.hero_build_id_) -
        reinterpret_cast<char*>(&_impl_.author_account_id_)) + sizeof(_impl_.hero_build_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCFindHeroBuilds::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 author_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_author_account_id(&has_bits);
          _impl_.author_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_hero_id(&has_bits);
          _impl_.hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 language = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_language(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<uint8_t>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_language(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string search_text = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_search_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCFindHeroBuilds.search_text");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_build_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_hero_build_id(&has_bits);
          _impl_.hero_build_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCFindHeroBuilds::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCFindHeroBuilds)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 author_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_author_account_id(), target);
  }

  // optional uint32 hero_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_hero_id(), target);
  }

  // repeated int32 language = 3;
  for (int i = 0, n = this->_internal_language_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_language(i), target);
  }

  // optional string search_text = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_search_text().data(), static_cast<int>(this->_internal_search_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCFindHeroBuilds.search_text");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_search_text(), target);
  }

  // optional uint32 hero_build_id = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_hero_build_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCFindHeroBuilds)
  return target;
}

size_t CMsgClientToGCFindHeroBuilds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCFindHeroBuilds)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 language = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.language_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_language_size());
    total_size += data_size;
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string search_text = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_search_text());
    }

    // optional uint32 author_account_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_author_account_id());
    }

    // optional uint32 hero_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_id());
    }

    // optional uint32 hero_build_id = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_build_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCFindHeroBuilds::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCFindHeroBuilds::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCFindHeroBuilds::GetClassData() const { return &_class_data_; }


void CMsgClientToGCFindHeroBuilds::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCFindHeroBuilds*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCFindHeroBuilds&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCFindHeroBuilds)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.language_.MergeFrom(from._impl_.language_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_search_text(from._internal_search_text());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.author_account_id_ = from._impl_.author_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.hero_id_ = from._impl_.hero_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.hero_build_id_ = from._impl_.hero_build_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCFindHeroBuilds::CopyFrom(const CMsgClientToGCFindHeroBuilds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCFindHeroBuilds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCFindHeroBuilds::IsInitialized() const {
  return true;
}

void CMsgClientToGCFindHeroBuilds::InternalSwap(CMsgClientToGCFindHeroBuilds* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.language_.InternalSwap(&other->_impl_.language_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.search_text_, lhs_arena,
      &other->_impl_.search_text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCFindHeroBuilds, _impl_.hero_build_id_)
      + sizeof(CMsgClientToGCFindHeroBuilds::_impl_.hero_build_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCFindHeroBuilds, _impl_.author_account_id_)>(
          reinterpret_cast<char*>(&_impl_.author_account_id_),
          reinterpret_cast<char*>(&other->_impl_.author_account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCFindHeroBuilds::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[104]);
}

// ===================================================================

class CMsgHeroBuildPreference::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgHeroBuildPreference>()._impl_._has_bits_);
  static void set_has_favorited(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ignored(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_reported(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgHeroBuildPreference::CMsgHeroBuildPreference(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgHeroBuildPreference)
}
CMsgHeroBuildPreference::CMsgHeroBuildPreference(const CMsgHeroBuildPreference& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgHeroBuildPreference* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.favorited_){}
    , decltype(_impl_.ignored_){}
    , decltype(_impl_.reported_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.favorited_, &from._impl_.favorited_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.reported_) -
    reinterpret_cast<char*>(&_impl_.favorited_)) + sizeof(_impl_.reported_));
  // @@protoc_insertion_point(copy_constructor:CMsgHeroBuildPreference)
}

inline void CMsgHeroBuildPreference::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.favorited_){false}
    , decltype(_impl_.ignored_){false}
    , decltype(_impl_.reported_){false}
  };
}

CMsgHeroBuildPreference::~CMsgHeroBuildPreference() {
  // @@protoc_insertion_point(destructor:CMsgHeroBuildPreference)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgHeroBuildPreference::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgHeroBuildPreference::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgHeroBuildPreference::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHeroBuildPreference)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.favorited_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.reported_) -
      reinterpret_cast<char*>(&_impl_.favorited_)) + sizeof(_impl_.reported_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgHeroBuildPreference::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool favorited = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_favorited(&has_bits);
          _impl_.favorited_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool ignored = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_ignored(&has_bits);
          _impl_.ignored_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool reported = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_reported(&has_bits);
          _impl_.reported_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgHeroBuildPreference::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHeroBuildPreference)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool favorited = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_favorited(), target);
  }

  // optional bool ignored = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_ignored(), target);
  }

  // optional bool reported = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_reported(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHeroBuildPreference)
  return target;
}

size_t CMsgHeroBuildPreference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHeroBuildPreference)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bool favorited = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool ignored = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool reported = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgHeroBuildPreference::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgHeroBuildPreference::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgHeroBuildPreference::GetClassData() const { return &_class_data_; }


void CMsgHeroBuildPreference::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgHeroBuildPreference*>(&to_msg);
  auto& from = static_cast<const CMsgHeroBuildPreference&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgHeroBuildPreference)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.favorited_ = from._impl_.favorited_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.ignored_ = from._impl_.ignored_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.reported_ = from._impl_.reported_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgHeroBuildPreference::CopyFrom(const CMsgHeroBuildPreference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHeroBuildPreference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHeroBuildPreference::IsInitialized() const {
  return true;
}

void CMsgHeroBuildPreference::InternalSwap(CMsgHeroBuildPreference* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgHeroBuildPreference, _impl_.reported_)
      + sizeof(CMsgHeroBuildPreference::_impl_.reported_)
      - PROTOBUF_FIELD_OFFSET(CMsgHeroBuildPreference, _impl_.favorited_)>(
          reinterpret_cast<char*>(&_impl_.favorited_),
          reinterpret_cast<char*>(&other->_impl_.favorited_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgHeroBuildPreference::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[105]);
}

// ===================================================================

class CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult>()._impl_._has_bits_);
  static const ::CMsgHeroBuild& hero_build(const CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* msg);
  static void set_has_hero_build(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::CMsgHeroBuildPreference& preference(const CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* msg);
  static void set_has_preference(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_num_favorites(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_num_ignores(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_num_reports(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_num_weekly_favorites(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_num_daily_favorites(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_rollup_category(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

const ::CMsgHeroBuild&
CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_Internal::hero_build(const CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* msg) {
  return *msg->_impl_.hero_build_;
}
const ::CMsgHeroBuildPreference&
CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_Internal::preference(const CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* msg) {
  return *msg->_impl_.preference_;
}
CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult)
}
CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult(const CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_build_){nullptr}
    , decltype(_impl_.preference_){nullptr}
    , decltype(_impl_.num_favorites_){}
    , decltype(_impl_.num_ignores_){}
    , decltype(_impl_.num_reports_){}
    , decltype(_impl_.num_weekly_favorites_){}
    , decltype(_impl_.num_daily_favorites_){}
    , decltype(_impl_.rollup_category_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_hero_build()) {
    _this->_impl_.hero_build_ = new ::CMsgHeroBuild(*from._impl_.hero_build_);
  }
  if (from._internal_has_preference()) {
    _this->_impl_.preference_ = new ::CMsgHeroBuildPreference(*from._impl_.preference_);
  }
  ::memcpy(&_impl_.num_favorites_, &from._impl_.num_favorites_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.rollup_category_) -
    reinterpret_cast<char*>(&_impl_.num_favorites_)) + sizeof(_impl_.rollup_category_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult)
}

inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_build_){nullptr}
    , decltype(_impl_.preference_){nullptr}
    , decltype(_impl_.num_favorites_){0u}
    , decltype(_impl_.num_ignores_){0u}
    , decltype(_impl_.num_reports_){0u}
    , decltype(_impl_.num_weekly_favorites_){0u}
    , decltype(_impl_.num_daily_favorites_){0u}
    , decltype(_impl_.rollup_category_){0u}
  };
}

CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::~CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.hero_build_;
  if (this != internal_default_instance()) delete _impl_.preference_;
}

void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.hero_build_ != nullptr);
      _impl_.hero_build_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.preference_ != nullptr);
      _impl_.preference_->Clear();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.num_favorites_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.rollup_category_) -
        reinterpret_cast<char*>(&_impl_.num_favorites_)) + sizeof(_impl_.rollup_category_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgHeroBuild hero_build = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_hero_build(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgHeroBuildPreference preference = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_preference(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 num_favorites = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_num_favorites(&has_bits);
          _impl_.num_favorites_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 num_ignores = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_num_ignores(&has_bits);
          _impl_.num_ignores_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 num_reports = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_num_reports(&has_bits);
          _impl_.num_reports_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 num_weekly_favorites = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_num_weekly_favorites(&has_bits);
          _impl_.num_weekly_favorites_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 num_daily_favorites = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_num_daily_favorites(&has_bits);
          _impl_.num_daily_favorites_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 rollup_category = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_rollup_category(&has_bits);
          _impl_.rollup_category_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgHeroBuild hero_build = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::hero_build(this),
        _Internal::hero_build(this).GetCachedSize(), target, stream);
  }

  // optional .CMsgHeroBuildPreference preference = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::preference(this),
        _Internal::preference(this).GetCachedSize(), target, stream);
  }

  // optional uint32 num_favorites = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_num_favorites(), target);
  }

  // optional uint32 num_ignores = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_num_ignores(), target);
  }

  // optional uint32 num_reports = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_num_reports(), target);
  }

  // optional uint32 num_weekly_favorites = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_num_weekly_favorites(), target);
  }

  // optional uint32 num_daily_favorites = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_num_daily_favorites(), target);
  }

  // optional uint32 rollup_category = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(8, this->_internal_rollup_category(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult)
  return target;
}

size_t CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .CMsgHeroBuild hero_build = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.hero_build_);
    }

    // optional .CMsgHeroBuildPreference preference = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.preference_);
    }

    // optional uint32 num_favorites = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_num_favorites());
    }

    // optional uint32 num_ignores = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_num_ignores());
    }

    // optional uint32 num_reports = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_num_reports());
    }

    // optional uint32 num_weekly_favorites = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_num_weekly_favorites());
    }

    // optional uint32 num_daily_favorites = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_num_daily_favorites());
    }

    // optional uint32 rollup_category = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_rollup_category());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::GetClassData() const { return &_class_data_; }


void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_hero_build()->::CMsgHeroBuild::MergeFrom(
          from._internal_hero_build());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_preference()->::CMsgHeroBuildPreference::MergeFrom(
          from._internal_preference());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.num_favorites_ = from._impl_.num_favorites_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.num_ignores_ = from._impl_.num_ignores_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.num_reports_ = from._impl_.num_reports_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.num_weekly_favorites_ = from._impl_.num_weekly_favorites_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.num_daily_favorites_ = from._impl_.num_daily_favorites_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.rollup_category_ = from._impl_.rollup_category_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::CopyFrom(const CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::IsInitialized() const {
  return true;
}

void CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::InternalSwap(CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult, _impl_.rollup_category_)
      + sizeof(CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::_impl_.rollup_category_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult, _impl_.hero_build_)>(
          reinterpret_cast<char*>(&_impl_.hero_build_),
          reinterpret_cast<char*>(&other->_impl_.hero_build_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[106]);
}

// ===================================================================

class CMsgClientToGCFindHeroBuildsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCFindHeroBuildsResponse>()._impl_._has_bits_);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCFindHeroBuildsResponse::CMsgClientToGCFindHeroBuildsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCFindHeroBuildsResponse)
}
CMsgClientToGCFindHeroBuildsResponse::CMsgClientToGCFindHeroBuildsResponse(const CMsgClientToGCFindHeroBuildsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCFindHeroBuildsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.results_){from._impl_.results_}
    , decltype(_impl_.response_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.response_ = from._impl_.response_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCFindHeroBuildsResponse)
}

inline void CMsgClientToGCFindHeroBuildsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.results_){arena}
    , decltype(_impl_.response_){0}
  };
}

CMsgClientToGCFindHeroBuildsResponse::~CMsgClientToGCFindHeroBuildsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCFindHeroBuildsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCFindHeroBuildsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.results_.~RepeatedPtrField();
}

void CMsgClientToGCFindHeroBuildsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCFindHeroBuildsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCFindHeroBuildsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_.Clear();
  _impl_.response_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCFindHeroBuildsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCFindHeroBuildsResponse.EResponse response = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCFindHeroBuildsResponse_EResponse_IsValid(val))) {
            _internal_set_response(static_cast<::CMsgClientToGCFindHeroBuildsResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult results = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCFindHeroBuildsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCFindHeroBuildsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCFindHeroBuildsResponse.EResponse response = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_response(), target);
  }

  // repeated .CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult results = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_results_size()); i < n; i++) {
    const auto& repfield = this->_internal_results(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCFindHeroBuildsResponse)
  return target;
}

size_t CMsgClientToGCFindHeroBuildsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCFindHeroBuildsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult results = 2;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->_impl_.results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .CMsgClientToGCFindHeroBuildsResponse.EResponse response = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_response());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCFindHeroBuildsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCFindHeroBuildsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCFindHeroBuildsResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCFindHeroBuildsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCFindHeroBuildsResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCFindHeroBuildsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCFindHeroBuildsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.results_.MergeFrom(from._impl_.results_);
  if (from._internal_has_response()) {
    _this->_internal_set_response(from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCFindHeroBuildsResponse::CopyFrom(const CMsgClientToGCFindHeroBuildsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCFindHeroBuildsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCFindHeroBuildsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCFindHeroBuildsResponse::InternalSwap(CMsgClientToGCFindHeroBuildsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
  swap(_impl_.response_, other->_impl_.response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCFindHeroBuildsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[107]);
}

// ===================================================================

class CMsgClientToGCUpdateHeroBuildPreference::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCUpdateHeroBuildPreference>()._impl_._has_bits_);
  static void set_has_hero_build_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgHeroBuildPreference& preference(const CMsgClientToGCUpdateHeroBuildPreference* msg);
  static void set_has_preference(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgHeroBuildPreference&
CMsgClientToGCUpdateHeroBuildPreference::_Internal::preference(const CMsgClientToGCUpdateHeroBuildPreference* msg) {
  return *msg->_impl_.preference_;
}
CMsgClientToGCUpdateHeroBuildPreference::CMsgClientToGCUpdateHeroBuildPreference(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCUpdateHeroBuildPreference)
}
CMsgClientToGCUpdateHeroBuildPreference::CMsgClientToGCUpdateHeroBuildPreference(const CMsgClientToGCUpdateHeroBuildPreference& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCUpdateHeroBuildPreference* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.preference_){nullptr}
    , decltype(_impl_.hero_build_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_preference()) {
    _this->_impl_.preference_ = new ::CMsgHeroBuildPreference(*from._impl_.preference_);
  }
  _this->_impl_.hero_build_id_ = from._impl_.hero_build_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUpdateHeroBuildPreference)
}

inline void CMsgClientToGCUpdateHeroBuildPreference::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.preference_){nullptr}
    , decltype(_impl_.hero_build_id_){0u}
  };
}

CMsgClientToGCUpdateHeroBuildPreference::~CMsgClientToGCUpdateHeroBuildPreference() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUpdateHeroBuildPreference)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCUpdateHeroBuildPreference::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.preference_;
}

void CMsgClientToGCUpdateHeroBuildPreference::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCUpdateHeroBuildPreference::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCUpdateHeroBuildPreference)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.preference_ != nullptr);
    _impl_.preference_->Clear();
  }
  _impl_.hero_build_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCUpdateHeroBuildPreference::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 hero_build_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_hero_build_id(&has_bits);
          _impl_.hero_build_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgHeroBuildPreference preference = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_preference(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCUpdateHeroBuildPreference::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUpdateHeroBuildPreference)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 hero_build_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hero_build_id(), target);
  }

  // optional .CMsgHeroBuildPreference preference = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::preference(this),
        _Internal::preference(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUpdateHeroBuildPreference)
  return target;
}

size_t CMsgClientToGCUpdateHeroBuildPreference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCUpdateHeroBuildPreference)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgHeroBuildPreference preference = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.preference_);
    }

    // optional uint32 hero_build_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_build_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCUpdateHeroBuildPreference::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCUpdateHeroBuildPreference::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCUpdateHeroBuildPreference::GetClassData() const { return &_class_data_; }


void CMsgClientToGCUpdateHeroBuildPreference::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCUpdateHeroBuildPreference*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCUpdateHeroBuildPreference&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCUpdateHeroBuildPreference)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_preference()->::CMsgHeroBuildPreference::MergeFrom(
          from._internal_preference());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.hero_build_id_ = from._impl_.hero_build_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCUpdateHeroBuildPreference::CopyFrom(const CMsgClientToGCUpdateHeroBuildPreference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCUpdateHeroBuildPreference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUpdateHeroBuildPreference::IsInitialized() const {
  return true;
}

void CMsgClientToGCUpdateHeroBuildPreference::InternalSwap(CMsgClientToGCUpdateHeroBuildPreference* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCUpdateHeroBuildPreference, _impl_.hero_build_id_)
      + sizeof(CMsgClientToGCUpdateHeroBuildPreference::_impl_.hero_build_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCUpdateHeroBuildPreference, _impl_.preference_)>(
          reinterpret_cast<char*>(&_impl_.preference_),
          reinterpret_cast<char*>(&other->_impl_.preference_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCUpdateHeroBuildPreference::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[108]);
}

// ===================================================================

class CMsgClientToGCUpdateHeroBuildPreferenceResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCUpdateHeroBuildPreferenceResponse>()._impl_._has_bits_);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCUpdateHeroBuildPreferenceResponse::CMsgClientToGCUpdateHeroBuildPreferenceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCUpdateHeroBuildPreferenceResponse)
}
CMsgClientToGCUpdateHeroBuildPreferenceResponse::CMsgClientToGCUpdateHeroBuildPreferenceResponse(const CMsgClientToGCUpdateHeroBuildPreferenceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCUpdateHeroBuildPreferenceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.response_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.response_ = from._impl_.response_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUpdateHeroBuildPreferenceResponse)
}

inline void CMsgClientToGCUpdateHeroBuildPreferenceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.response_){0}
  };
}

CMsgClientToGCUpdateHeroBuildPreferenceResponse::~CMsgClientToGCUpdateHeroBuildPreferenceResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUpdateHeroBuildPreferenceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCUpdateHeroBuildPreferenceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCUpdateHeroBuildPreferenceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCUpdateHeroBuildPreferenceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCUpdateHeroBuildPreferenceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.response_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCUpdateHeroBuildPreferenceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCUpdateHeroBuildPreferenceResponse.EResponse response = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_IsValid(val))) {
            _internal_set_response(static_cast<::CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCUpdateHeroBuildPreferenceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUpdateHeroBuildPreferenceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCUpdateHeroBuildPreferenceResponse.EResponse response = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUpdateHeroBuildPreferenceResponse)
  return target;
}

size_t CMsgClientToGCUpdateHeroBuildPreferenceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCUpdateHeroBuildPreferenceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCUpdateHeroBuildPreferenceResponse.EResponse response = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_response());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCUpdateHeroBuildPreferenceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCUpdateHeroBuildPreferenceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCUpdateHeroBuildPreferenceResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCUpdateHeroBuildPreferenceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCUpdateHeroBuildPreferenceResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCUpdateHeroBuildPreferenceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCUpdateHeroBuildPreferenceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_response()) {
    _this->_internal_set_response(from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCUpdateHeroBuildPreferenceResponse::CopyFrom(const CMsgClientToGCUpdateHeroBuildPreferenceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCUpdateHeroBuildPreferenceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUpdateHeroBuildPreferenceResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCUpdateHeroBuildPreferenceResponse::InternalSwap(CMsgClientToGCUpdateHeroBuildPreferenceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.response_, other->_impl_.response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCUpdateHeroBuildPreferenceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[109]);
}

// ===================================================================

class CMsgClientToGCGetOldHeroBuildData::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetOldHeroBuildData>()._impl_._has_bits_);
  static void set_has_author_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetOldHeroBuildData::CMsgClientToGCGetOldHeroBuildData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetOldHeroBuildData)
}
CMsgClientToGCGetOldHeroBuildData::CMsgClientToGCGetOldHeroBuildData(const CMsgClientToGCGetOldHeroBuildData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetOldHeroBuildData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.author_account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.author_account_id_ = from._impl_.author_account_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetOldHeroBuildData)
}

inline void CMsgClientToGCGetOldHeroBuildData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.author_account_id_){0u}
  };
}

CMsgClientToGCGetOldHeroBuildData::~CMsgClientToGCGetOldHeroBuildData() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetOldHeroBuildData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetOldHeroBuildData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetOldHeroBuildData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetOldHeroBuildData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetOldHeroBuildData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.author_account_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetOldHeroBuildData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 author_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_author_account_id(&has_bits);
          _impl_.author_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetOldHeroBuildData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetOldHeroBuildData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 author_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_author_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetOldHeroBuildData)
  return target;
}

size_t CMsgClientToGCGetOldHeroBuildData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetOldHeroBuildData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 author_account_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_author_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetOldHeroBuildData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetOldHeroBuildData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetOldHeroBuildData::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetOldHeroBuildData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetOldHeroBuildData*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetOldHeroBuildData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetOldHeroBuildData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_author_account_id()) {
    _this->_internal_set_author_account_id(from._internal_author_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetOldHeroBuildData::CopyFrom(const CMsgClientToGCGetOldHeroBuildData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetOldHeroBuildData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetOldHeroBuildData::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetOldHeroBuildData::InternalSwap(CMsgClientToGCGetOldHeroBuildData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.author_account_id_, other->_impl_.author_account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetOldHeroBuildData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[110]);
}

// ===================================================================

class CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::_Internal {
 public:
};

CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0)
}
CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0(const CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.recommended_mod_ability_ids_){from._impl_.recommended_mod_ability_ids_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0)
}

inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.recommended_mod_ability_ids_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::~CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.recommended_mod_ability_ids_.~RepeatedField();
}

void CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.recommended_mod_ability_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 recommended_mod_ability_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_recommended_mod_ability_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_recommended_mod_ability_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 recommended_mod_ability_ids = 1;
  for (int i = 0, n = this->_internal_recommended_mod_ability_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_recommended_mod_ability_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0)
  return target;
}

size_t CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 recommended_mod_ability_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.recommended_mod_ability_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_recommended_mod_ability_ids_size());
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.recommended_mod_ability_ids_.MergeFrom(from._impl_.recommended_mod_ability_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::CopyFrom(const CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::InternalSwap(CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.recommended_mod_ability_ids_.InternalSwap(&other->_impl_.recommended_mod_ability_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[111]);
}

// ===================================================================

class CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0& details(const CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* msg);
  static void set_has_details(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0&
CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_Internal::details(const CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* msg) {
  return *msg->_impl_.details_;
}
CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild)
}
CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild(const CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.details_){nullptr}
    , decltype(_impl_.hero_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_description()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_details()) {
    _this->_impl_.details_ = new ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0(*from._impl_.details_);
  }
  _this->_impl_.hero_id_ = from._impl_.hero_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild)
}

inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.details_){nullptr}
    , decltype(_impl_.hero_id_){0u}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::~CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  if (this != internal_default_instance()) delete _impl_.details_;
}

void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.details_ != nullptr);
      _impl_.details_->Clear();
    }
  }
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_hero_id(&has_bits);
          _impl_.hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.description");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0 details = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_details(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional uint32 hero_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_hero_id(), target);
  }

  // optional string description = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // optional .CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0 details = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::details(this),
        _Internal::details(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild)
  return target;
}

size_t CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string description = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // optional .CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0 details = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.details_);
    }

    // optional uint32 hero_id = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_details()->::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0::MergeFrom(
          from._internal_details());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.hero_id_ = from._impl_.hero_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::CopyFrom(const CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::InternalSwap(CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild, _impl_.hero_id_)
      + sizeof(CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::_impl_.hero_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild, _impl_.details_)>(
          reinterpret_cast<char*>(&_impl_.details_),
          reinterpret_cast<char*>(&other->_impl_.details_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[112]);
}

// ===================================================================

class CMsgClientToGCGetOldHeroBuildDataResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetOldHeroBuildDataResponse>()._impl_._has_bits_);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_author_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCGetOldHeroBuildDataResponse::CMsgClientToGCGetOldHeroBuildDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetOldHeroBuildDataResponse)
}
CMsgClientToGCGetOldHeroBuildDataResponse::CMsgClientToGCGetOldHeroBuildDataResponse(const CMsgClientToGCGetOldHeroBuildDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetOldHeroBuildDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.results_){from._impl_.results_}
    , decltype(_impl_.response_){}
    , decltype(_impl_.author_account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.response_, &from._impl_.response_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.author_account_id_) -
    reinterpret_cast<char*>(&_impl_.response_)) + sizeof(_impl_.author_account_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetOldHeroBuildDataResponse)
}

inline void CMsgClientToGCGetOldHeroBuildDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.results_){arena}
    , decltype(_impl_.response_){0}
    , decltype(_impl_.author_account_id_){0u}
  };
}

CMsgClientToGCGetOldHeroBuildDataResponse::~CMsgClientToGCGetOldHeroBuildDataResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetOldHeroBuildDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetOldHeroBuildDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.results_.~RepeatedPtrField();
}

void CMsgClientToGCGetOldHeroBuildDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetOldHeroBuildDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetOldHeroBuildDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.response_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.author_account_id_) -
        reinterpret_cast<char*>(&_impl_.response_)) + sizeof(_impl_.author_account_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetOldHeroBuildDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetOldHeroBuildDataResponse.EResponse response = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_IsValid(val))) {
            _internal_set_response(static_cast<::CMsgClientToGCGetOldHeroBuildDataResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 author_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_author_account_id(&has_bits);
          _impl_.author_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild results = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetOldHeroBuildDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetOldHeroBuildDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetOldHeroBuildDataResponse.EResponse response = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_response(), target);
  }

  // optional uint32 author_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_author_account_id(), target);
  }

  // repeated .CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild results = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_results_size()); i < n; i++) {
    const auto& repfield = this->_internal_results(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetOldHeroBuildDataResponse)
  return target;
}

size_t CMsgClientToGCGetOldHeroBuildDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetOldHeroBuildDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild results = 3;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->_impl_.results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgClientToGCGetOldHeroBuildDataResponse.EResponse response = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_response());
    }

    // optional uint32 author_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_author_account_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetOldHeroBuildDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetOldHeroBuildDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetOldHeroBuildDataResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetOldHeroBuildDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetOldHeroBuildDataResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetOldHeroBuildDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetOldHeroBuildDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.results_.MergeFrom(from._impl_.results_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.response_ = from._impl_.response_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.author_account_id_ = from._impl_.author_account_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetOldHeroBuildDataResponse::CopyFrom(const CMsgClientToGCGetOldHeroBuildDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetOldHeroBuildDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetOldHeroBuildDataResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetOldHeroBuildDataResponse::InternalSwap(CMsgClientToGCGetOldHeroBuildDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetOldHeroBuildDataResponse, _impl_.author_account_id_)
      + sizeof(CMsgClientToGCGetOldHeroBuildDataResponse::_impl_.author_account_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetOldHeroBuildDataResponse, _impl_.response_)>(
          reinterpret_cast<char*>(&_impl_.response_),
          reinterpret_cast<char*>(&other->_impl_.response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetOldHeroBuildDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[113]);
}

// ===================================================================

class CMsgClientToGCReportPlayerFromMatch::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCReportPlayerFromMatch>()._impl_._has_bits_);
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_report_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_report_text(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCReportPlayerFromMatch::CMsgClientToGCReportPlayerFromMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCReportPlayerFromMatch)
}
CMsgClientToGCReportPlayerFromMatch::CMsgClientToGCReportPlayerFromMatch(const CMsgClientToGCReportPlayerFromMatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCReportPlayerFromMatch* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.report_text_){}
    , decltype(_impl_.match_id_){}
    , decltype(_impl_.target_account_id_){}
    , decltype(_impl_.report_type_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.report_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.report_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_report_text()) {
    _this->_impl_.report_text_.Set(from._internal_report_text(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.match_id_, &from._impl_.match_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.report_type_) -
    reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.report_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCReportPlayerFromMatch)
}

inline void CMsgClientToGCReportPlayerFromMatch::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.report_text_){}
    , decltype(_impl_.match_id_){uint64_t{0u}}
    , decltype(_impl_.target_account_id_){0u}
    , decltype(_impl_.report_type_){0}
  };
  _impl_.report_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.report_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCReportPlayerFromMatch::~CMsgClientToGCReportPlayerFromMatch() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCReportPlayerFromMatch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCReportPlayerFromMatch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.report_text_.Destroy();
}

void CMsgClientToGCReportPlayerFromMatch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCReportPlayerFromMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCReportPlayerFromMatch)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.report_text_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.match_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.report_type_) -
        reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.report_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCReportPlayerFromMatch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 match_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_match_id(&has_bits);
          _impl_.match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_target_account_id(&has_bits);
          _impl_.target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .CMsgClientToGCReportPlayerFromMatch.EReportType report_type = 3 [default = k_eReport_None];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCReportPlayerFromMatch_EReportType_IsValid(val))) {
            _internal_set_report_type(static_cast<::CMsgClientToGCReportPlayerFromMatch_EReportType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string report_text = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_report_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCReportPlayerFromMatch.report_text");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCReportPlayerFromMatch::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCReportPlayerFromMatch)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_match_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_account_id(), target);
  }

  // optional .CMsgClientToGCReportPlayerFromMatch.EReportType report_type = 3 [default = k_eReport_None];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_report_type(), target);
  }

  // optional string report_text = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_report_text().data(), static_cast<int>(this->_internal_report_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCReportPlayerFromMatch.report_text");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_report_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCReportPlayerFromMatch)
  return target;
}

size_t CMsgClientToGCReportPlayerFromMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCReportPlayerFromMatch)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string report_text = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_report_text());
    }

    // optional uint64 match_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_match_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_account_id());
    }

    // optional .CMsgClientToGCReportPlayerFromMatch.EReportType report_type = 3 [default = k_eReport_None];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_report_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCReportPlayerFromMatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCReportPlayerFromMatch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCReportPlayerFromMatch::GetClassData() const { return &_class_data_; }


void CMsgClientToGCReportPlayerFromMatch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCReportPlayerFromMatch*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCReportPlayerFromMatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCReportPlayerFromMatch)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_report_text(from._internal_report_text());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.target_account_id_ = from._impl_.target_account_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.report_type_ = from._impl_.report_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCReportPlayerFromMatch::CopyFrom(const CMsgClientToGCReportPlayerFromMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCReportPlayerFromMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCReportPlayerFromMatch::IsInitialized() const {
  return true;
}

void CMsgClientToGCReportPlayerFromMatch::InternalSwap(CMsgClientToGCReportPlayerFromMatch* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.report_text_, lhs_arena,
      &other->_impl_.report_text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCReportPlayerFromMatch, _impl_.report_type_)
      + sizeof(CMsgClientToGCReportPlayerFromMatch::_impl_.report_type_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCReportPlayerFromMatch, _impl_.match_id_)>(
          reinterpret_cast<char*>(&_impl_.match_id_),
          reinterpret_cast<char*>(&other->_impl_.match_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCReportPlayerFromMatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[114]);
}

// ===================================================================

class CMsgClientToGCReportPlayerFromMatchResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCReportPlayerFromMatchResponse>()._impl_._has_bits_);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCReportPlayerFromMatchResponse::CMsgClientToGCReportPlayerFromMatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCReportPlayerFromMatchResponse)
}
CMsgClientToGCReportPlayerFromMatchResponse::CMsgClientToGCReportPlayerFromMatchResponse(const CMsgClientToGCReportPlayerFromMatchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCReportPlayerFromMatchResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.response_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.response_ = from._impl_.response_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCReportPlayerFromMatchResponse)
}

inline void CMsgClientToGCReportPlayerFromMatchResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.response_){0}
  };
}

CMsgClientToGCReportPlayerFromMatchResponse::~CMsgClientToGCReportPlayerFromMatchResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCReportPlayerFromMatchResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCReportPlayerFromMatchResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCReportPlayerFromMatchResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCReportPlayerFromMatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCReportPlayerFromMatchResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.response_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCReportPlayerFromMatchResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCReportPlayerFromMatchResponse.EResponse response = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCReportPlayerFromMatchResponse_EResponse_IsValid(val))) {
            _internal_set_response(static_cast<::CMsgClientToGCReportPlayerFromMatchResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCReportPlayerFromMatchResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCReportPlayerFromMatchResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCReportPlayerFromMatchResponse.EResponse response = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCReportPlayerFromMatchResponse)
  return target;
}

size_t CMsgClientToGCReportPlayerFromMatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCReportPlayerFromMatchResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCReportPlayerFromMatchResponse.EResponse response = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_response());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCReportPlayerFromMatchResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCReportPlayerFromMatchResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCReportPlayerFromMatchResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCReportPlayerFromMatchResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCReportPlayerFromMatchResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCReportPlayerFromMatchResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCReportPlayerFromMatchResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_response()) {
    _this->_internal_set_response(from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCReportPlayerFromMatchResponse::CopyFrom(const CMsgClientToGCReportPlayerFromMatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCReportPlayerFromMatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCReportPlayerFromMatchResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCReportPlayerFromMatchResponse::InternalSwap(CMsgClientToGCReportPlayerFromMatchResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.response_, other->_impl_.response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCReportPlayerFromMatchResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[115]);
}

// ===================================================================

class CMsgClientToGCGetAccountMatchReports::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAccountMatchReports>()._impl_._has_bits_);
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetAccountMatchReports::CMsgClientToGCGetAccountMatchReports(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAccountMatchReports)
}
CMsgClientToGCGetAccountMatchReports::CMsgClientToGCGetAccountMatchReports(const CMsgClientToGCGetAccountMatchReports& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetAccountMatchReports* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.match_id_ = from._impl_.match_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAccountMatchReports)
}

inline void CMsgClientToGCGetAccountMatchReports::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_id_){uint64_t{0u}}
  };
}

CMsgClientToGCGetAccountMatchReports::~CMsgClientToGCGetAccountMatchReports() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAccountMatchReports)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetAccountMatchReports::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetAccountMatchReports::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetAccountMatchReports::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAccountMatchReports)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAccountMatchReports::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 match_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_match_id(&has_bits);
          _impl_.match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetAccountMatchReports::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAccountMatchReports)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_match_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAccountMatchReports)
  return target;
}

size_t CMsgClientToGCGetAccountMatchReports::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAccountMatchReports)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 match_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_match_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetAccountMatchReports::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetAccountMatchReports::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetAccountMatchReports::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetAccountMatchReports::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetAccountMatchReports*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetAccountMatchReports&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAccountMatchReports)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_match_id()) {
    _this->_internal_set_match_id(from._internal_match_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetAccountMatchReports::CopyFrom(const CMsgClientToGCGetAccountMatchReports& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAccountMatchReports)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAccountMatchReports::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAccountMatchReports::InternalSwap(CMsgClientToGCGetAccountMatchReports* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.match_id_, other->_impl_.match_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAccountMatchReports::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[116]);
}

// ===================================================================

class CMsgClientToGCGetAccountMatchReportsResponse_Report::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAccountMatchReportsResponse_Report>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetAccountMatchReportsResponse_Report::CMsgClientToGCGetAccountMatchReportsResponse_Report(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAccountMatchReportsResponse.Report)
}
CMsgClientToGCGetAccountMatchReportsResponse_Report::CMsgClientToGCGetAccountMatchReportsResponse_Report(const CMsgClientToGCGetAccountMatchReportsResponse_Report& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetAccountMatchReportsResponse_Report* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.account_id_ = from._impl_.account_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAccountMatchReportsResponse.Report)
}

inline void CMsgClientToGCGetAccountMatchReportsResponse_Report::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){0u}
  };
}

CMsgClientToGCGetAccountMatchReportsResponse_Report::~CMsgClientToGCGetAccountMatchReportsResponse_Report() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAccountMatchReportsResponse.Report)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetAccountMatchReportsResponse_Report::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetAccountMatchReportsResponse_Report::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetAccountMatchReportsResponse_Report::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAccountMatchReportsResponse.Report)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAccountMatchReportsResponse_Report::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetAccountMatchReportsResponse_Report::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAccountMatchReportsResponse.Report)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAccountMatchReportsResponse.Report)
  return target;
}

size_t CMsgClientToGCGetAccountMatchReportsResponse_Report::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAccountMatchReportsResponse.Report)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 account_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetAccountMatchReportsResponse_Report::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetAccountMatchReportsResponse_Report::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetAccountMatchReportsResponse_Report::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetAccountMatchReportsResponse_Report::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetAccountMatchReportsResponse_Report*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetAccountMatchReportsResponse_Report&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAccountMatchReportsResponse.Report)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_account_id()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetAccountMatchReportsResponse_Report::CopyFrom(const CMsgClientToGCGetAccountMatchReportsResponse_Report& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAccountMatchReportsResponse.Report)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAccountMatchReportsResponse_Report::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAccountMatchReportsResponse_Report::InternalSwap(CMsgClientToGCGetAccountMatchReportsResponse_Report* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.account_id_, other->_impl_.account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAccountMatchReportsResponse_Report::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[117]);
}

// ===================================================================

class CMsgClientToGCGetAccountMatchReportsResponse_Commend::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAccountMatchReportsResponse_Commend>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetAccountMatchReportsResponse_Commend::CMsgClientToGCGetAccountMatchReportsResponse_Commend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAccountMatchReportsResponse.Commend)
}
CMsgClientToGCGetAccountMatchReportsResponse_Commend::CMsgClientToGCGetAccountMatchReportsResponse_Commend(const CMsgClientToGCGetAccountMatchReportsResponse_Commend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetAccountMatchReportsResponse_Commend* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.account_id_ = from._impl_.account_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAccountMatchReportsResponse.Commend)
}

inline void CMsgClientToGCGetAccountMatchReportsResponse_Commend::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){0u}
  };
}

CMsgClientToGCGetAccountMatchReportsResponse_Commend::~CMsgClientToGCGetAccountMatchReportsResponse_Commend() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAccountMatchReportsResponse.Commend)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetAccountMatchReportsResponse_Commend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetAccountMatchReportsResponse_Commend::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetAccountMatchReportsResponse_Commend::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAccountMatchReportsResponse.Commend)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAccountMatchReportsResponse_Commend::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetAccountMatchReportsResponse_Commend::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAccountMatchReportsResponse.Commend)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAccountMatchReportsResponse.Commend)
  return target;
}

size_t CMsgClientToGCGetAccountMatchReportsResponse_Commend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAccountMatchReportsResponse.Commend)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 account_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetAccountMatchReportsResponse_Commend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetAccountMatchReportsResponse_Commend::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetAccountMatchReportsResponse_Commend::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetAccountMatchReportsResponse_Commend::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetAccountMatchReportsResponse_Commend*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetAccountMatchReportsResponse_Commend&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAccountMatchReportsResponse.Commend)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_account_id()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetAccountMatchReportsResponse_Commend::CopyFrom(const CMsgClientToGCGetAccountMatchReportsResponse_Commend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAccountMatchReportsResponse.Commend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAccountMatchReportsResponse_Commend::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAccountMatchReportsResponse_Commend::InternalSwap(CMsgClientToGCGetAccountMatchReportsResponse_Commend* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.account_id_, other->_impl_.account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAccountMatchReportsResponse_Commend::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[118]);
}

// ===================================================================

class CMsgClientToGCGetAccountMatchReportsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAccountMatchReportsResponse>()._impl_._has_bits_);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetAccountMatchReportsResponse::CMsgClientToGCGetAccountMatchReportsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAccountMatchReportsResponse)
}
CMsgClientToGCGetAccountMatchReportsResponse::CMsgClientToGCGetAccountMatchReportsResponse(const CMsgClientToGCGetAccountMatchReportsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetAccountMatchReportsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reports_){from._impl_.reports_}
    , decltype(_impl_.commends_){from._impl_.commends_}
    , decltype(_impl_.response_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.response_ = from._impl_.response_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAccountMatchReportsResponse)
}

inline void CMsgClientToGCGetAccountMatchReportsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reports_){arena}
    , decltype(_impl_.commends_){arena}
    , decltype(_impl_.response_){0}
  };
}

CMsgClientToGCGetAccountMatchReportsResponse::~CMsgClientToGCGetAccountMatchReportsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAccountMatchReportsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetAccountMatchReportsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reports_.~RepeatedPtrField();
  _impl_.commends_.~RepeatedPtrField();
}

void CMsgClientToGCGetAccountMatchReportsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetAccountMatchReportsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAccountMatchReportsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reports_.Clear();
  _impl_.commends_.Clear();
  _impl_.response_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAccountMatchReportsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetAccountMatchReportsResponse.EResponse response = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetAccountMatchReportsResponse_EResponse_IsValid(val))) {
            _internal_set_response(static_cast<::CMsgClientToGCGetAccountMatchReportsResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgClientToGCGetAccountMatchReportsResponse.Report reports = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reports(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgClientToGCGetAccountMatchReportsResponse.Commend commends = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_commends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetAccountMatchReportsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAccountMatchReportsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetAccountMatchReportsResponse.EResponse response = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_response(), target);
  }

  // repeated .CMsgClientToGCGetAccountMatchReportsResponse.Report reports = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_reports_size()); i < n; i++) {
    const auto& repfield = this->_internal_reports(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .CMsgClientToGCGetAccountMatchReportsResponse.Commend commends = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_commends_size()); i < n; i++) {
    const auto& repfield = this->_internal_commends(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAccountMatchReportsResponse)
  return target;
}

size_t CMsgClientToGCGetAccountMatchReportsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAccountMatchReportsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientToGCGetAccountMatchReportsResponse.Report reports = 2;
  total_size += 1UL * this->_internal_reports_size();
  for (const auto& msg : this->_impl_.reports_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .CMsgClientToGCGetAccountMatchReportsResponse.Commend commends = 3;
  total_size += 1UL * this->_internal_commends_size();
  for (const auto& msg : this->_impl_.commends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .CMsgClientToGCGetAccountMatchReportsResponse.EResponse response = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_response());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetAccountMatchReportsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetAccountMatchReportsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetAccountMatchReportsResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetAccountMatchReportsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetAccountMatchReportsResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetAccountMatchReportsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAccountMatchReportsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.reports_.MergeFrom(from._impl_.reports_);
  _this->_impl_.commends_.MergeFrom(from._impl_.commends_);
  if (from._internal_has_response()) {
    _this->_internal_set_response(from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetAccountMatchReportsResponse::CopyFrom(const CMsgClientToGCGetAccountMatchReportsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAccountMatchReportsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAccountMatchReportsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAccountMatchReportsResponse::InternalSwap(CMsgClientToGCGetAccountMatchReportsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.reports_.InternalSwap(&other->_impl_.reports_);
  _impl_.commends_.InternalSwap(&other->_impl_.commends_);
  swap(_impl_.response_, other->_impl_.response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAccountMatchReportsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[119]);
}

// ===================================================================

class CMsgClientToGCDeleteHeroBuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCDeleteHeroBuild>()._impl_._has_bits_);
  static void set_has_author_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hero_build_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCDeleteHeroBuild::CMsgClientToGCDeleteHeroBuild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCDeleteHeroBuild)
}
CMsgClientToGCDeleteHeroBuild::CMsgClientToGCDeleteHeroBuild(const CMsgClientToGCDeleteHeroBuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCDeleteHeroBuild* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.author_account_id_){}
    , decltype(_impl_.hero_build_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.author_account_id_, &from._impl_.author_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.hero_build_id_) -
    reinterpret_cast<char*>(&_impl_.author_account_id_)) + sizeof(_impl_.hero_build_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCDeleteHeroBuild)
}

inline void CMsgClientToGCDeleteHeroBuild::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.author_account_id_){0u}
    , decltype(_impl_.hero_build_id_){0u}
  };
}

CMsgClientToGCDeleteHeroBuild::~CMsgClientToGCDeleteHeroBuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCDeleteHeroBuild)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCDeleteHeroBuild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCDeleteHeroBuild::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCDeleteHeroBuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCDeleteHeroBuild)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.author_account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.hero_build_id_) -
        reinterpret_cast<char*>(&_impl_.author_account_id_)) + sizeof(_impl_.hero_build_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCDeleteHeroBuild::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 author_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_author_account_id(&has_bits);
          _impl_.author_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_build_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_hero_build_id(&has_bits);
          _impl_.hero_build_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCDeleteHeroBuild::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCDeleteHeroBuild)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 author_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_author_account_id(), target);
  }

  // optional uint32 hero_build_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_hero_build_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCDeleteHeroBuild)
  return target;
}

size_t CMsgClientToGCDeleteHeroBuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCDeleteHeroBuild)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 author_account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_author_account_id());
    }

    // optional uint32 hero_build_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_build_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCDeleteHeroBuild::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCDeleteHeroBuild::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCDeleteHeroBuild::GetClassData() const { return &_class_data_; }


void CMsgClientToGCDeleteHeroBuild::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCDeleteHeroBuild*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCDeleteHeroBuild&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCDeleteHeroBuild)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.author_account_id_ = from._impl_.author_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.hero_build_id_ = from._impl_.hero_build_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCDeleteHeroBuild::CopyFrom(const CMsgClientToGCDeleteHeroBuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCDeleteHeroBuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCDeleteHeroBuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCDeleteHeroBuild::InternalSwap(CMsgClientToGCDeleteHeroBuild* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCDeleteHeroBuild, _impl_.hero_build_id_)
      + sizeof(CMsgClientToGCDeleteHeroBuild::_impl_.hero_build_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCDeleteHeroBuild, _impl_.author_account_id_)>(
          reinterpret_cast<char*>(&_impl_.author_account_id_),
          reinterpret_cast<char*>(&other->_impl_.author_account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCDeleteHeroBuild::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[120]);
}

// ===================================================================

class CMsgClientToGCDeleteHeroBuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCDeleteHeroBuildResponse>()._impl_._has_bits_);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_builds_deleted(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCDeleteHeroBuildResponse::CMsgClientToGCDeleteHeroBuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCDeleteHeroBuildResponse)
}
CMsgClientToGCDeleteHeroBuildResponse::CMsgClientToGCDeleteHeroBuildResponse(const CMsgClientToGCDeleteHeroBuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCDeleteHeroBuildResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.response_){}
    , decltype(_impl_.builds_deleted_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.response_, &from._impl_.response_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.builds_deleted_) -
    reinterpret_cast<char*>(&_impl_.response_)) + sizeof(_impl_.builds_deleted_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCDeleteHeroBuildResponse)
}

inline void CMsgClientToGCDeleteHeroBuildResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.response_){0}
    , decltype(_impl_.builds_deleted_){0u}
  };
}

CMsgClientToGCDeleteHeroBuildResponse::~CMsgClientToGCDeleteHeroBuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCDeleteHeroBuildResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCDeleteHeroBuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCDeleteHeroBuildResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCDeleteHeroBuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCDeleteHeroBuildResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.response_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.builds_deleted_) -
        reinterpret_cast<char*>(&_impl_.response_)) + sizeof(_impl_.builds_deleted_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCDeleteHeroBuildResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCDeleteHeroBuildResponse.EResponse response = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCDeleteHeroBuildResponse_EResponse_IsValid(val))) {
            _internal_set_response(static_cast<::CMsgClientToGCDeleteHeroBuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 builds_deleted = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_builds_deleted(&has_bits);
          _impl_.builds_deleted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCDeleteHeroBuildResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCDeleteHeroBuildResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCDeleteHeroBuildResponse.EResponse response = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_response(), target);
  }

  // optional uint32 builds_deleted = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_builds_deleted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCDeleteHeroBuildResponse)
  return target;
}

size_t CMsgClientToGCDeleteHeroBuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCDeleteHeroBuildResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgClientToGCDeleteHeroBuildResponse.EResponse response = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_response());
    }

    // optional uint32 builds_deleted = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_builds_deleted());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCDeleteHeroBuildResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCDeleteHeroBuildResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCDeleteHeroBuildResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCDeleteHeroBuildResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCDeleteHeroBuildResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCDeleteHeroBuildResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCDeleteHeroBuildResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.response_ = from._impl_.response_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.builds_deleted_ = from._impl_.builds_deleted_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCDeleteHeroBuildResponse::CopyFrom(const CMsgClientToGCDeleteHeroBuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCDeleteHeroBuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCDeleteHeroBuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCDeleteHeroBuildResponse::InternalSwap(CMsgClientToGCDeleteHeroBuildResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCDeleteHeroBuildResponse, _impl_.builds_deleted_)
      + sizeof(CMsgClientToGCDeleteHeroBuildResponse::_impl_.builds_deleted_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCDeleteHeroBuildResponse, _impl_.response_)>(
          reinterpret_cast<char*>(&_impl_.response_),
          reinterpret_cast<char*>(&other->_impl_.response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCDeleteHeroBuildResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[121]);
}

// ===================================================================

class CMsgClientToGCGetActiveMatches::_Internal {
 public:
};

CMsgClientToGCGetActiveMatches::CMsgClientToGCGetActiveMatches(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetActiveMatches)
}
CMsgClientToGCGetActiveMatches::CMsgClientToGCGetActiveMatches(const CMsgClientToGCGetActiveMatches& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CMsgClientToGCGetActiveMatches* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetActiveMatches)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetActiveMatches::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetActiveMatches::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetActiveMatches::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[122]);
}

// ===================================================================

class CMsgClientToGCGetActiveMatchesResponse::_Internal {
 public:
};

CMsgClientToGCGetActiveMatchesResponse::CMsgClientToGCGetActiveMatchesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetActiveMatchesResponse)
}
CMsgClientToGCGetActiveMatchesResponse::CMsgClientToGCGetActiveMatchesResponse(const CMsgClientToGCGetActiveMatchesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetActiveMatchesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.active_matches_){from._impl_.active_matches_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetActiveMatchesResponse)
}

inline void CMsgClientToGCGetActiveMatchesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.active_matches_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CMsgClientToGCGetActiveMatchesResponse::~CMsgClientToGCGetActiveMatchesResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetActiveMatchesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetActiveMatchesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.active_matches_.~RepeatedPtrField();
}

void CMsgClientToGCGetActiveMatchesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetActiveMatchesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetActiveMatchesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.active_matches_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetActiveMatchesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CMsgDevMatchInfo active_matches = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_active_matches(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetActiveMatchesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetActiveMatchesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgDevMatchInfo active_matches = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_active_matches_size()); i < n; i++) {
    const auto& repfield = this->_internal_active_matches(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetActiveMatchesResponse)
  return target;
}

size_t CMsgClientToGCGetActiveMatchesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetActiveMatchesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgDevMatchInfo active_matches = 1;
  total_size += 1UL * this->_internal_active_matches_size();
  for (const auto& msg : this->_impl_.active_matches_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetActiveMatchesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetActiveMatchesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetActiveMatchesResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetActiveMatchesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetActiveMatchesResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetActiveMatchesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetActiveMatchesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.active_matches_.MergeFrom(from._impl_.active_matches_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetActiveMatchesResponse::CopyFrom(const CMsgClientToGCGetActiveMatchesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetActiveMatchesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetActiveMatchesResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetActiveMatchesResponse::InternalSwap(CMsgClientToGCGetActiveMatchesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.active_matches_.InternalSwap(&other->_impl_.active_matches_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetActiveMatchesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[123]);
}

// ===================================================================

class CMsgClientToGCGetDiscordLink::_Internal {
 public:
};

CMsgClientToGCGetDiscordLink::CMsgClientToGCGetDiscordLink(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetDiscordLink)
}
CMsgClientToGCGetDiscordLink::CMsgClientToGCGetDiscordLink(const CMsgClientToGCGetDiscordLink& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CMsgClientToGCGetDiscordLink* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetDiscordLink)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetDiscordLink::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetDiscordLink::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetDiscordLink::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[124]);
}

// ===================================================================

class CMsgClientToGCGetDiscordLinkResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetDiscordLinkResponse>()._impl_._has_bits_);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_discord_link(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_valid_hours(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCGetDiscordLinkResponse::CMsgClientToGCGetDiscordLinkResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetDiscordLinkResponse)
}
CMsgClientToGCGetDiscordLinkResponse::CMsgClientToGCGetDiscordLinkResponse(const CMsgClientToGCGetDiscordLinkResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetDiscordLinkResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.discord_link_){}
    , decltype(_impl_.response_){}
    , decltype(_impl_.valid_hours_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.discord_link_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.discord_link_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_discord_link()) {
    _this->_impl_.discord_link_.Set(from._internal_discord_link(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.response_, &from._impl_.response_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.valid_hours_) -
    reinterpret_cast<char*>(&_impl_.response_)) + sizeof(_impl_.valid_hours_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetDiscordLinkResponse)
}

inline void CMsgClientToGCGetDiscordLinkResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.discord_link_){}
    , decltype(_impl_.response_){0}
    , decltype(_impl_.valid_hours_){0u}
  };
  _impl_.discord_link_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.discord_link_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCGetDiscordLinkResponse::~CMsgClientToGCGetDiscordLinkResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetDiscordLinkResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetDiscordLinkResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.discord_link_.Destroy();
}

void CMsgClientToGCGetDiscordLinkResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetDiscordLinkResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetDiscordLinkResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.discord_link_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.response_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.valid_hours_) -
        reinterpret_cast<char*>(&_impl_.response_)) + sizeof(_impl_.valid_hours_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetDiscordLinkResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetDiscordLinkResponse.EResponse response = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetDiscordLinkResponse_EResponse_IsValid(val))) {
            _internal_set_response(static_cast<::CMsgClientToGCGetDiscordLinkResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string discord_link = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_discord_link();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCGetDiscordLinkResponse.discord_link");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint32 valid_hours = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_valid_hours(&has_bits);
          _impl_.valid_hours_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetDiscordLinkResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetDiscordLinkResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetDiscordLinkResponse.EResponse response = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_response(), target);
  }

  // optional string discord_link = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_discord_link().data(), static_cast<int>(this->_internal_discord_link().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCGetDiscordLinkResponse.discord_link");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_discord_link(), target);
  }

  // optional uint32 valid_hours = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_valid_hours(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetDiscordLinkResponse)
  return target;
}

size_t CMsgClientToGCGetDiscordLinkResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetDiscordLinkResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string discord_link = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_discord_link());
    }

    // optional .CMsgClientToGCGetDiscordLinkResponse.EResponse response = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_response());
    }

    // optional uint32 valid_hours = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_valid_hours());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetDiscordLinkResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetDiscordLinkResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetDiscordLinkResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetDiscordLinkResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetDiscordLinkResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetDiscordLinkResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetDiscordLinkResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_discord_link(from._internal_discord_link());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.response_ = from._impl_.response_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.valid_hours_ = from._impl_.valid_hours_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetDiscordLinkResponse::CopyFrom(const CMsgClientToGCGetDiscordLinkResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetDiscordLinkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetDiscordLinkResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetDiscordLinkResponse::InternalSwap(CMsgClientToGCGetDiscordLinkResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.discord_link_, lhs_arena,
      &other->_impl_.discord_link_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetDiscordLinkResponse, _impl_.valid_hours_)
      + sizeof(CMsgClientToGCGetDiscordLinkResponse::_impl_.valid_hours_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetDiscordLinkResponse, _impl_.response_)>(
          reinterpret_cast<char*>(&_impl_.response_),
          reinterpret_cast<char*>(&other->_impl_.response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetDiscordLinkResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[125]);
}

// ===================================================================

class CMsgClientToGCGrantForumAccess::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGrantForumAccess>()._impl_._has_bits_);
  static void set_has_email(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGrantForumAccess::CMsgClientToGCGrantForumAccess(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGrantForumAccess)
}
CMsgClientToGCGrantForumAccess::CMsgClientToGCGrantForumAccess(const CMsgClientToGCGrantForumAccess& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGrantForumAccess* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.email_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_email()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGrantForumAccess)
}

inline void CMsgClientToGCGrantForumAccess::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.email_){}
  };
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCGrantForumAccess::~CMsgClientToGCGrantForumAccess() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGrantForumAccess)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGrantForumAccess::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.email_.Destroy();
}

void CMsgClientToGCGrantForumAccess::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGrantForumAccess::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGrantForumAccess)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.email_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGrantForumAccess::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string email = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCGrantForumAccess.email");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGrantForumAccess::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGrantForumAccess)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string email = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCGrantForumAccess.email");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGrantForumAccess)
  return target;
}

size_t CMsgClientToGCGrantForumAccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGrantForumAccess)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string email = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGrantForumAccess::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGrantForumAccess::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGrantForumAccess::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGrantForumAccess::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGrantForumAccess*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGrantForumAccess&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGrantForumAccess)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_email()) {
    _this->_internal_set_email(from._internal_email());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGrantForumAccess::CopyFrom(const CMsgClientToGCGrantForumAccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGrantForumAccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGrantForumAccess::IsInitialized() const {
  return true;
}

void CMsgClientToGCGrantForumAccess::InternalSwap(CMsgClientToGCGrantForumAccess* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGrantForumAccess::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[126]);
}

// ===================================================================

class CMsgClientToGCGrantForumAccessResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGrantForumAccessResponse>()._impl_._has_bits_);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_email(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_username(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_forum_password(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCGrantForumAccessResponse::CMsgClientToGCGrantForumAccessResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGrantForumAccessResponse)
}
CMsgClientToGCGrantForumAccessResponse::CMsgClientToGCGrantForumAccessResponse(const CMsgClientToGCGrantForumAccessResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGrantForumAccessResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.email_){}
    , decltype(_impl_.username_){}
    , decltype(_impl_.forum_password_){}
    , decltype(_impl_.response_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_email()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_username()) {
    _this->_impl_.username_.Set(from._internal_username(), 
      _this->GetArenaForAllocation());
  }
  _impl_.forum_password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.forum_password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_forum_password()) {
    _this->_impl_.forum_password_.Set(from._internal_forum_password(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.response_ = from._impl_.response_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGrantForumAccessResponse)
}

inline void CMsgClientToGCGrantForumAccessResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.email_){}
    , decltype(_impl_.username_){}
    , decltype(_impl_.forum_password_){}
    , decltype(_impl_.response_){0}
  };
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.forum_password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.forum_password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCGrantForumAccessResponse::~CMsgClientToGCGrantForumAccessResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGrantForumAccessResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGrantForumAccessResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.email_.Destroy();
  _impl_.username_.Destroy();
  _impl_.forum_password_.Destroy();
}

void CMsgClientToGCGrantForumAccessResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGrantForumAccessResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGrantForumAccessResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.email_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.forum_password_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.response_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGrantForumAccessResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGrantForumAccessResponse.EResponse response = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGrantForumAccessResponse_EResponse_IsValid(val))) {
            _internal_set_response(static_cast<::CMsgClientToGCGrantForumAccessResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string email = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCGrantForumAccessResponse.email");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string username = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_username();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCGrantForumAccessResponse.username");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string forum_password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_forum_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCGrantForumAccessResponse.forum_password");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGrantForumAccessResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGrantForumAccessResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGrantForumAccessResponse.EResponse response = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_response(), target);
  }

  // optional string email = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCGrantForumAccessResponse.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  // optional string username = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCGrantForumAccessResponse.username");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_username(), target);
  }

  // optional string forum_password = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_forum_password().data(), static_cast<int>(this->_internal_forum_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCGrantForumAccessResponse.forum_password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_forum_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGrantForumAccessResponse)
  return target;
}

size_t CMsgClientToGCGrantForumAccessResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGrantForumAccessResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string email = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_email());
    }

    // optional string username = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_username());
    }

    // optional string forum_password = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_forum_password());
    }

    // optional .CMsgClientToGCGrantForumAccessResponse.EResponse response = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_response());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGrantForumAccessResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGrantForumAccessResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGrantForumAccessResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGrantForumAccessResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGrantForumAccessResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGrantForumAccessResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGrantForumAccessResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_email(from._internal_email());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_username(from._internal_username());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_forum_password(from._internal_forum_password());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.response_ = from._impl_.response_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGrantForumAccessResponse::CopyFrom(const CMsgClientToGCGrantForumAccessResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGrantForumAccessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGrantForumAccessResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGrantForumAccessResponse::InternalSwap(CMsgClientToGCGrantForumAccessResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.username_, lhs_arena,
      &other->_impl_.username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.forum_password_, lhs_arena,
      &other->_impl_.forum_password_, rhs_arena
  );
  swap(_impl_.response_, other->_impl_.response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGrantForumAccessResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[127]);
}

// ===================================================================

class CMsgClientToGCModeratorRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCModeratorRequest>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCModeratorRequest::CMsgClientToGCModeratorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCModeratorRequest)
}
CMsgClientToGCModeratorRequest::CMsgClientToGCModeratorRequest(const CMsgClientToGCModeratorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCModeratorRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.account_id_ = from._impl_.account_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCModeratorRequest)
}

inline void CMsgClientToGCModeratorRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){0u}
  };
}

CMsgClientToGCModeratorRequest::~CMsgClientToGCModeratorRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCModeratorRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCModeratorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCModeratorRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCModeratorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCModeratorRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCModeratorRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCModeratorRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCModeratorRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCModeratorRequest)
  return target;
}

size_t CMsgClientToGCModeratorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCModeratorRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 account_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCModeratorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCModeratorRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCModeratorRequest::GetClassData() const { return &_class_data_; }


void CMsgClientToGCModeratorRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCModeratorRequest*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCModeratorRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCModeratorRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_account_id()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCModeratorRequest::CopyFrom(const CMsgClientToGCModeratorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCModeratorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCModeratorRequest::IsInitialized() const {
  return true;
}

void CMsgClientToGCModeratorRequest::InternalSwap(CMsgClientToGCModeratorRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.account_id_, other->_impl_.account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCModeratorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[128]);
}

// ===================================================================

class CMsgClientToGCModeratorRequestResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCModeratorRequestResponse>()._impl_._has_bits_);
  static void set_has_success(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCModeratorRequestResponse::CMsgClientToGCModeratorRequestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCModeratorRequestResponse)
}
CMsgClientToGCModeratorRequestResponse::CMsgClientToGCModeratorRequestResponse(const CMsgClientToGCModeratorRequestResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCModeratorRequestResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.response_text_){from._impl_.response_text_}
    , decltype(_impl_.success_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCModeratorRequestResponse)
}

inline void CMsgClientToGCModeratorRequestResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.response_text_){arena}
    , decltype(_impl_.success_){false}
  };
}

CMsgClientToGCModeratorRequestResponse::~CMsgClientToGCModeratorRequestResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCModeratorRequestResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCModeratorRequestResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.response_text_.~RepeatedPtrField();
}

void CMsgClientToGCModeratorRequestResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCModeratorRequestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCModeratorRequestResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.response_text_.Clear();
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCModeratorRequestResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_success(&has_bits);
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string response_text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_response_text();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "CMsgClientToGCModeratorRequestResponse.response_text");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCModeratorRequestResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCModeratorRequestResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // repeated string response_text = 2;
  for (int i = 0, n = this->_internal_response_text_size(); i < n; i++) {
    const auto& s = this->_internal_response_text(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCModeratorRequestResponse.response_text");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCModeratorRequestResponse)
  return target;
}

size_t CMsgClientToGCModeratorRequestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCModeratorRequestResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string response_text = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.response_text_.size());
  for (int i = 0, n = _impl_.response_text_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.response_text_.Get(i));
  }

  // optional bool success = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCModeratorRequestResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCModeratorRequestResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCModeratorRequestResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCModeratorRequestResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCModeratorRequestResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCModeratorRequestResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCModeratorRequestResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.response_text_.MergeFrom(from._impl_.response_text_);
  if (from._internal_has_success()) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCModeratorRequestResponse::CopyFrom(const CMsgClientToGCModeratorRequestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCModeratorRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCModeratorRequestResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCModeratorRequestResponse::InternalSwap(CMsgClientToGCModeratorRequestResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.response_text_.InternalSwap(&other->_impl_.response_text_);
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCModeratorRequestResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[129]);
}

// ===================================================================

class CMsgClientToGCGetFriendGameStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetFriendGameStatus>()._impl_._has_bits_);
  static void set_has_include_invited(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetFriendGameStatus::CMsgClientToGCGetFriendGameStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetFriendGameStatus)
}
CMsgClientToGCGetFriendGameStatus::CMsgClientToGCGetFriendGameStatus(const CMsgClientToGCGetFriendGameStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetFriendGameStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.include_invited_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.include_invited_ = from._impl_.include_invited_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetFriendGameStatus)
}

inline void CMsgClientToGCGetFriendGameStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.include_invited_){false}
  };
}

CMsgClientToGCGetFriendGameStatus::~CMsgClientToGCGetFriendGameStatus() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetFriendGameStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetFriendGameStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetFriendGameStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetFriendGameStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetFriendGameStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.include_invited_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetFriendGameStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool include_invited = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_include_invited(&has_bits);
          _impl_.include_invited_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetFriendGameStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetFriendGameStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool include_invited = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_include_invited(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetFriendGameStatus)
  return target;
}

size_t CMsgClientToGCGetFriendGameStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetFriendGameStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool include_invited = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetFriendGameStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetFriendGameStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetFriendGameStatus::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetFriendGameStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetFriendGameStatus*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetFriendGameStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetFriendGameStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_include_invited()) {
    _this->_internal_set_include_invited(from._internal_include_invited());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetFriendGameStatus::CopyFrom(const CMsgClientToGCGetFriendGameStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetFriendGameStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetFriendGameStatus::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetFriendGameStatus::InternalSwap(CMsgClientToGCGetFriendGameStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.include_invited_, other->_impl_.include_invited_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetFriendGameStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[130]);
}

// ===================================================================

class CMsgClientToGCGetFriendGameStatusResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetFriendGameStatusResponse>()._impl_._has_bits_);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetFriendGameStatusResponse::CMsgClientToGCGetFriendGameStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetFriendGameStatusResponse)
}
CMsgClientToGCGetFriendGameStatusResponse::CMsgClientToGCGetFriendGameStatusResponse(const CMsgClientToGCGetFriendGameStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetFriendGameStatusResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.friends_played_game_){from._impl_.friends_played_game_}
    , /*decltype(_impl_._friends_played_game_cached_byte_size_)*/{0}
    , decltype(_impl_.friends_invited_){from._impl_.friends_invited_}
    , /*decltype(_impl_._friends_invited_cached_byte_size_)*/{0}
    , decltype(_impl_.friends_invites_sent_){from._impl_.friends_invites_sent_}
    , /*decltype(_impl_._friends_invites_sent_cached_byte_size_)*/{0}
    , decltype(_impl_.response_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.response_ = from._impl_.response_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetFriendGameStatusResponse)
}

inline void CMsgClientToGCGetFriendGameStatusResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.friends_played_game_){arena}
    , /*decltype(_impl_._friends_played_game_cached_byte_size_)*/{0}
    , decltype(_impl_.friends_invited_){arena}
    , /*decltype(_impl_._friends_invited_cached_byte_size_)*/{0}
    , decltype(_impl_.friends_invites_sent_){arena}
    , /*decltype(_impl_._friends_invites_sent_cached_byte_size_)*/{0}
    , decltype(_impl_.response_){0}
  };
}

CMsgClientToGCGetFriendGameStatusResponse::~CMsgClientToGCGetFriendGameStatusResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetFriendGameStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetFriendGameStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.friends_played_game_.~RepeatedField();
  _impl_.friends_invited_.~RepeatedField();
  _impl_.friends_invites_sent_.~RepeatedField();
}

void CMsgClientToGCGetFriendGameStatusResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetFriendGameStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetFriendGameStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.friends_played_game_.Clear();
  _impl_.friends_invited_.Clear();
  _impl_.friends_invites_sent_.Clear();
  _impl_.response_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetFriendGameStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetFriendGameStatusResponse.EResponse response = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetFriendGameStatusResponse_EResponse_IsValid(val))) {
            _internal_set_response(static_cast<::CMsgClientToGCGetFriendGameStatusResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 friends_played_game = 2 [packed = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_friends_played_game(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_friends_played_game(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 friends_invited = 3 [packed = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_friends_invited(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_friends_invited(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 friends_invites_sent = 4 [packed = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_friends_invites_sent(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_friends_invites_sent(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetFriendGameStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetFriendGameStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetFriendGameStatusResponse.EResponse response = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_response(), target);
  }

  // repeated uint32 friends_played_game = 2 [packed = true];
  {
    int byte_size = _impl_._friends_played_game_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_friends_played_game(), byte_size, target);
    }
  }

  // repeated uint32 friends_invited = 3 [packed = true];
  {
    int byte_size = _impl_._friends_invited_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, _internal_friends_invited(), byte_size, target);
    }
  }

  // repeated uint32 friends_invites_sent = 4 [packed = true];
  {
    int byte_size = _impl_._friends_invites_sent_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          4, _internal_friends_invites_sent(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetFriendGameStatusResponse)
  return target;
}

size_t CMsgClientToGCGetFriendGameStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetFriendGameStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 friends_played_game = 2 [packed = true];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.friends_played_game_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._friends_played_game_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 friends_invited = 3 [packed = true];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.friends_invited_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._friends_invited_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 friends_invites_sent = 4 [packed = true];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.friends_invites_sent_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._friends_invites_sent_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // optional .CMsgClientToGCGetFriendGameStatusResponse.EResponse response = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_response());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetFriendGameStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetFriendGameStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetFriendGameStatusResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetFriendGameStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetFriendGameStatusResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetFriendGameStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetFriendGameStatusResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.friends_played_game_.MergeFrom(from._impl_.friends_played_game_);
  _this->_impl_.friends_invited_.MergeFrom(from._impl_.friends_invited_);
  _this->_impl_.friends_invites_sent_.MergeFrom(from._impl_.friends_invites_sent_);
  if (from._internal_has_response()) {
    _this->_internal_set_response(from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetFriendGameStatusResponse::CopyFrom(const CMsgClientToGCGetFriendGameStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetFriendGameStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetFriendGameStatusResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetFriendGameStatusResponse::InternalSwap(CMsgClientToGCGetFriendGameStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.friends_played_game_.InternalSwap(&other->_impl_.friends_played_game_);
  _impl_.friends_invited_.InternalSwap(&other->_impl_.friends_invited_);
  _impl_.friends_invites_sent_.InternalSwap(&other->_impl_.friends_invites_sent_);
  swap(_impl_.response_, other->_impl_.response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetFriendGameStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[131]);
}

// ===================================================================

class CMsgClientToGCUpdateSpectatorStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCUpdateSpectatorStatus>()._impl_._has_bits_);
  static void set_has_spectating_lobby_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_stopped_spectating(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCUpdateSpectatorStatus::CMsgClientToGCUpdateSpectatorStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCUpdateSpectatorStatus)
}
CMsgClientToGCUpdateSpectatorStatus::CMsgClientToGCUpdateSpectatorStatus(const CMsgClientToGCUpdateSpectatorStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCUpdateSpectatorStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spectating_lobby_id_){}
    , decltype(_impl_.stopped_spectating_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.spectating_lobby_id_, &from._impl_.spectating_lobby_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.stopped_spectating_) -
    reinterpret_cast<char*>(&_impl_.spectating_lobby_id_)) + sizeof(_impl_.stopped_spectating_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCUpdateSpectatorStatus)
}

inline void CMsgClientToGCUpdateSpectatorStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spectating_lobby_id_){uint64_t{0u}}
    , decltype(_impl_.stopped_spectating_){false}
  };
}

CMsgClientToGCUpdateSpectatorStatus::~CMsgClientToGCUpdateSpectatorStatus() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCUpdateSpectatorStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCUpdateSpectatorStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCUpdateSpectatorStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCUpdateSpectatorStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCUpdateSpectatorStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.spectating_lobby_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.stopped_spectating_) -
        reinterpret_cast<char*>(&_impl_.spectating_lobby_id_)) + sizeof(_impl_.stopped_spectating_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCUpdateSpectatorStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional fixed64 spectating_lobby_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_spectating_lobby_id(&has_bits);
          _impl_.spectating_lobby_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      // optional bool stopped_spectating = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_stopped_spectating(&has_bits);
          _impl_.stopped_spectating_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCUpdateSpectatorStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCUpdateSpectatorStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 spectating_lobby_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(1, this->_internal_spectating_lobby_id(), target);
  }

  // optional bool stopped_spectating = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_stopped_spectating(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCUpdateSpectatorStatus)
  return target;
}

size_t CMsgClientToGCUpdateSpectatorStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCUpdateSpectatorStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 spectating_lobby_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional bool stopped_spectating = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCUpdateSpectatorStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCUpdateSpectatorStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCUpdateSpectatorStatus::GetClassData() const { return &_class_data_; }


void CMsgClientToGCUpdateSpectatorStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCUpdateSpectatorStatus*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCUpdateSpectatorStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCUpdateSpectatorStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.spectating_lobby_id_ = from._impl_.spectating_lobby_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.stopped_spectating_ = from._impl_.stopped_spectating_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCUpdateSpectatorStatus::CopyFrom(const CMsgClientToGCUpdateSpectatorStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCUpdateSpectatorStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUpdateSpectatorStatus::IsInitialized() const {
  return true;
}

void CMsgClientToGCUpdateSpectatorStatus::InternalSwap(CMsgClientToGCUpdateSpectatorStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCUpdateSpectatorStatus, _impl_.stopped_spectating_)
      + sizeof(CMsgClientToGCUpdateSpectatorStatus::_impl_.stopped_spectating_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCUpdateSpectatorStatus, _impl_.spectating_lobby_id_)>(
          reinterpret_cast<char*>(&_impl_.spectating_lobby_id_),
          reinterpret_cast<char*>(&other->_impl_.spectating_lobby_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCUpdateSpectatorStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[132]);
}

// ===================================================================

class CMsgClientToGCCommendPlayerFromMatch::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCCommendPlayerFromMatch>()._impl_._has_bits_);
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_commend_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_fake_commend_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgClientToGCCommendPlayerFromMatch::CMsgClientToGCCommendPlayerFromMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCCommendPlayerFromMatch)
}
CMsgClientToGCCommendPlayerFromMatch::CMsgClientToGCCommendPlayerFromMatch(const CMsgClientToGCCommendPlayerFromMatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCCommendPlayerFromMatch* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_id_){}
    , decltype(_impl_.target_account_id_){}
    , decltype(_impl_.commend_type_){}
    , decltype(_impl_.fake_commend_hero_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.match_id_, &from._impl_.match_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.fake_commend_hero_id_) -
    reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.fake_commend_hero_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCommendPlayerFromMatch)
}

inline void CMsgClientToGCCommendPlayerFromMatch::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_id_){uint64_t{0u}}
    , decltype(_impl_.target_account_id_){0u}
    , decltype(_impl_.commend_type_){0}
    , decltype(_impl_.fake_commend_hero_id_){0u}
  };
}

CMsgClientToGCCommendPlayerFromMatch::~CMsgClientToGCCommendPlayerFromMatch() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCommendPlayerFromMatch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCCommendPlayerFromMatch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCCommendPlayerFromMatch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCCommendPlayerFromMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCCommendPlayerFromMatch)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.match_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.fake_commend_hero_id_) -
        reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.fake_commend_hero_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCCommendPlayerFromMatch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 match_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_match_id(&has_bits);
          _impl_.match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_target_account_id(&has_bits);
          _impl_.target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECommendType commend_type = 3 [default = k_eInvalid];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECommendType_IsValid(val))) {
            _internal_set_commend_type(static_cast<::ECommendType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 fake_commend_hero_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_fake_commend_hero_id(&has_bits);
          _impl_.fake_commend_hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCCommendPlayerFromMatch::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCommendPlayerFromMatch)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_match_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_account_id(), target);
  }

  // optional .ECommendType commend_type = 3 [default = k_eInvalid];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_commend_type(), target);
  }

  // optional uint32 fake_commend_hero_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_fake_commend_hero_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCommendPlayerFromMatch)
  return target;
}

size_t CMsgClientToGCCommendPlayerFromMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCCommendPlayerFromMatch)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint64 match_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_match_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_account_id());
    }

    // optional .ECommendType commend_type = 3 [default = k_eInvalid];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_commend_type());
    }

    // optional uint32 fake_commend_hero_id = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_fake_commend_hero_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCCommendPlayerFromMatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCCommendPlayerFromMatch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCCommendPlayerFromMatch::GetClassData() const { return &_class_data_; }


void CMsgClientToGCCommendPlayerFromMatch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCCommendPlayerFromMatch*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCCommendPlayerFromMatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCCommendPlayerFromMatch)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.target_account_id_ = from._impl_.target_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.commend_type_ = from._impl_.commend_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.fake_commend_hero_id_ = from._impl_.fake_commend_hero_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCCommendPlayerFromMatch::CopyFrom(const CMsgClientToGCCommendPlayerFromMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCCommendPlayerFromMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCommendPlayerFromMatch::IsInitialized() const {
  return true;
}

void CMsgClientToGCCommendPlayerFromMatch::InternalSwap(CMsgClientToGCCommendPlayerFromMatch* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCCommendPlayerFromMatch, _impl_.fake_commend_hero_id_)
      + sizeof(CMsgClientToGCCommendPlayerFromMatch::_impl_.fake_commend_hero_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCCommendPlayerFromMatch, _impl_.match_id_)>(
          reinterpret_cast<char*>(&_impl_.match_id_),
          reinterpret_cast<char*>(&other->_impl_.match_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCCommendPlayerFromMatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[133]);
}

// ===================================================================

class CMsgClientToGCCommendPlayerFromMatchResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCCommendPlayerFromMatchResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCCommendPlayerFromMatchResponse::CMsgClientToGCCommendPlayerFromMatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCCommendPlayerFromMatchResponse)
}
CMsgClientToGCCommendPlayerFromMatchResponse::CMsgClientToGCCommendPlayerFromMatchResponse(const CMsgClientToGCCommendPlayerFromMatchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCCommendPlayerFromMatchResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCommendPlayerFromMatchResponse)
}

inline void CMsgClientToGCCommendPlayerFromMatchResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCCommendPlayerFromMatchResponse::~CMsgClientToGCCommendPlayerFromMatchResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCommendPlayerFromMatchResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCCommendPlayerFromMatchResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCCommendPlayerFromMatchResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCCommendPlayerFromMatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCCommendPlayerFromMatchResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCCommendPlayerFromMatchResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCCommendPlayerFromMatchResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCCommendPlayerFromMatchResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCCommendPlayerFromMatchResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCommendPlayerFromMatchResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCCommendPlayerFromMatchResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCommendPlayerFromMatchResponse)
  return target;
}

size_t CMsgClientToGCCommendPlayerFromMatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCCommendPlayerFromMatchResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCCommendPlayerFromMatchResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCCommendPlayerFromMatchResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCCommendPlayerFromMatchResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCCommendPlayerFromMatchResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCCommendPlayerFromMatchResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCCommendPlayerFromMatchResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCCommendPlayerFromMatchResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCCommendPlayerFromMatchResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCCommendPlayerFromMatchResponse::CopyFrom(const CMsgClientToGCCommendPlayerFromMatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCCommendPlayerFromMatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCommendPlayerFromMatchResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCCommendPlayerFromMatchResponse::InternalSwap(CMsgClientToGCCommendPlayerFromMatchResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCCommendPlayerFromMatchResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[134]);
}

// ===================================================================

class CMsgGCToClientCommendNotification::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientCommendNotification>()._impl_._has_bits_);
  static void set_has_commender_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_commender_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_commender_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_commend_type(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgGCToClientCommendNotification::CMsgGCToClientCommendNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientCommendNotification)
}
CMsgGCToClientCommendNotification::CMsgGCToClientCommendNotification(const CMsgGCToClientCommendNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgGCToClientCommendNotification* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.commender_name_){}
    , decltype(_impl_.commender_account_id_){}
    , decltype(_impl_.commender_hero_id_){}
    , decltype(_impl_.match_id_){}
    , decltype(_impl_.commend_type_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.commender_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.commender_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_commender_name()) {
    _this->_impl_.commender_name_.Set(from._internal_commender_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.commender_account_id_, &from._impl_.commender_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.commend_type_) -
    reinterpret_cast<char*>(&_impl_.commender_account_id_)) + sizeof(_impl_.commend_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientCommendNotification)
}

inline void CMsgGCToClientCommendNotification::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.commender_name_){}
    , decltype(_impl_.commender_account_id_){0u}
    , decltype(_impl_.commender_hero_id_){0u}
    , decltype(_impl_.match_id_){uint64_t{0u}}
    , decltype(_impl_.commend_type_){0}
  };
  _impl_.commender_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.commender_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgGCToClientCommendNotification::~CMsgGCToClientCommendNotification() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientCommendNotification)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgGCToClientCommendNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.commender_name_.Destroy();
}

void CMsgGCToClientCommendNotification::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgGCToClientCommendNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientCommendNotification)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.commender_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.commender_account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.commend_type_) -
        reinterpret_cast<char*>(&_impl_.commender_account_id_)) + sizeof(_impl_.commend_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientCommendNotification::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 commender_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_commender_account_id(&has_bits);
          _impl_.commender_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string commender_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_commender_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgGCToClientCommendNotification.commender_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint32 commender_hero_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_commender_hero_id(&has_bits);
          _impl_.commender_hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ECommendType commend_type = 5 [default = k_eInvalid];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECommendType_IsValid(val))) {
            _internal_set_commend_type(static_cast<::ECommendType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint64 match_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_match_id(&has_bits);
          _impl_.match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgGCToClientCommendNotification::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientCommendNotification)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 commender_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_commender_account_id(), target);
  }

  // optional string commender_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_commender_name().data(), static_cast<int>(this->_internal_commender_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGCToClientCommendNotification.commender_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_commender_name(), target);
  }

  // optional uint32 commender_hero_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_commender_hero_id(), target);
  }

  // optional .ECommendType commend_type = 5 [default = k_eInvalid];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_commend_type(), target);
  }

  // optional uint64 match_id = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(6, this->_internal_match_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientCommendNotification)
  return target;
}

size_t CMsgGCToClientCommendNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientCommendNotification)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string commender_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_commender_name());
    }

    // optional uint32 commender_account_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_commender_account_id());
    }

    // optional uint32 commender_hero_id = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_commender_hero_id());
    }

    // optional uint64 match_id = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_match_id());
    }

    // optional .ECommendType commend_type = 5 [default = k_eInvalid];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_commend_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgGCToClientCommendNotification::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgGCToClientCommendNotification::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgGCToClientCommendNotification::GetClassData() const { return &_class_data_; }


void CMsgGCToClientCommendNotification::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientCommendNotification*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientCommendNotification&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientCommendNotification)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_commender_name(from._internal_commender_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.commender_account_id_ = from._impl_.commender_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.commender_hero_id_ = from._impl_.commender_hero_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.commend_type_ = from._impl_.commend_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientCommendNotification::CopyFrom(const CMsgGCToClientCommendNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientCommendNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientCommendNotification::IsInitialized() const {
  return true;
}

void CMsgGCToClientCommendNotification::InternalSwap(CMsgGCToClientCommendNotification* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.commender_name_, lhs_arena,
      &other->_impl_.commender_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCToClientCommendNotification, _impl_.commend_type_)
      + sizeof(CMsgGCToClientCommendNotification::_impl_.commend_type_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCToClientCommendNotification, _impl_.commender_account_id_)>(
          reinterpret_cast<char*>(&_impl_.commender_account_id_),
          reinterpret_cast<char*>(&other->_impl_.commender_account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientCommendNotification::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[135]);
}

// ===================================================================

class CMsgClientToGCRequestCheatReports::_Internal {
 public:
};

CMsgClientToGCRequestCheatReports::CMsgClientToGCRequestCheatReports(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestCheatReports)
}
CMsgClientToGCRequestCheatReports::CMsgClientToGCRequestCheatReports(const CMsgClientToGCRequestCheatReports& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CMsgClientToGCRequestCheatReports* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestCheatReports)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestCheatReports::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestCheatReports::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestCheatReports::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[136]);
}

// ===================================================================

class CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport)
}
CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport(const CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_id_){}
    , decltype(_impl_.account_id_){}
    , decltype(_impl_.hero_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.match_id_, &from._impl_.match_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.hero_id_) -
    reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.hero_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport)
}

inline void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_id_){uint64_t{0u}}
    , decltype(_impl_.account_id_){0u}
    , decltype(_impl_.hero_id_){0u}
  };
}

CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::~CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.match_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.hero_id_) -
        reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.hero_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 match_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_match_id(&has_bits);
          _impl_.match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_hero_id(&has_bits);
          _impl_.hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  // optional uint64 match_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_match_id(), target);
  }

  // optional uint32 hero_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_hero_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport)
  return target;
}

size_t CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 match_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_match_id());
    }

    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
    }

    // optional uint32 hero_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.hero_id_ = from._impl_.hero_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::CopyFrom(const CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::InternalSwap(CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport, _impl_.hero_id_)
      + sizeof(CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::_impl_.hero_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport, _impl_.match_id_)>(
          reinterpret_cast<char*>(&_impl_.match_id_),
          reinterpret_cast<char*>(&other->_impl_.match_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[137]);
}

// ===================================================================

class CMsgClientToGCRequestCheatReportsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestCheatReportsResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRequestCheatReportsResponse::CMsgClientToGCRequestCheatReportsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestCheatReportsResponse)
}
CMsgClientToGCRequestCheatReportsResponse::CMsgClientToGCRequestCheatReportsResponse(const CMsgClientToGCRequestCheatReportsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCRequestCheatReportsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.cheat_reports_){from._impl_.cheat_reports_}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestCheatReportsResponse)
}

inline void CMsgClientToGCRequestCheatReportsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.cheat_reports_){arena}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCRequestCheatReportsResponse::~CMsgClientToGCRequestCheatReportsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestCheatReportsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCRequestCheatReportsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cheat_reports_.~RepeatedPtrField();
}

void CMsgClientToGCRequestCheatReportsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCRequestCheatReportsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestCheatReportsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cheat_reports_.Clear();
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestCheatReportsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestCheatReportsResponse.EResult result = 1 [default = k_eSuccess];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestCheatReportsResponse_EResult_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestCheatReportsResponse_EResult>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport cheat_reports = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_cheat_reports(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCRequestCheatReportsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestCheatReportsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCRequestCheatReportsResponse.EResult result = 1 [default = k_eSuccess];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // repeated .CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport cheat_reports = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_cheat_reports_size()); i < n; i++) {
    const auto& repfield = this->_internal_cheat_reports(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestCheatReportsResponse)
  return target;
}

size_t CMsgClientToGCRequestCheatReportsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestCheatReportsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientToGCRequestCheatReportsResponse.RecentCheatReport cheat_reports = 2;
  total_size += 1UL * this->_internal_cheat_reports_size();
  for (const auto& msg : this->_impl_.cheat_reports_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .CMsgClientToGCRequestCheatReportsResponse.EResult result = 1 [default = k_eSuccess];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCRequestCheatReportsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCRequestCheatReportsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCRequestCheatReportsResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCRequestCheatReportsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCRequestCheatReportsResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCRequestCheatReportsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestCheatReportsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.cheat_reports_.MergeFrom(from._impl_.cheat_reports_);
  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCRequestCheatReportsResponse::CopyFrom(const CMsgClientToGCRequestCheatReportsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestCheatReportsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestCheatReportsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestCheatReportsResponse::InternalSwap(CMsgClientToGCRequestCheatReportsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.cheat_reports_.InternalSwap(&other->_impl_.cheat_reports_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestCheatReportsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[138]);
}

// ===================================================================

class CMsgClientToGCGetHeroMMRRankings::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetHeroMMRRankings>()._impl_._has_bits_);
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetHeroMMRRankings::CMsgClientToGCGetHeroMMRRankings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetHeroMMRRankings)
}
CMsgClientToGCGetHeroMMRRankings::CMsgClientToGCGetHeroMMRRankings(const CMsgClientToGCGetHeroMMRRankings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetHeroMMRRankings* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.target_account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.target_account_id_ = from._impl_.target_account_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetHeroMMRRankings)
}

inline void CMsgClientToGCGetHeroMMRRankings::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.target_account_id_){0u}
  };
}

CMsgClientToGCGetHeroMMRRankings::~CMsgClientToGCGetHeroMMRRankings() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetHeroMMRRankings)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetHeroMMRRankings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetHeroMMRRankings::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetHeroMMRRankings::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetHeroMMRRankings)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_account_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetHeroMMRRankings::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 target_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_target_account_id(&has_bits);
          _impl_.target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetHeroMMRRankings::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetHeroMMRRankings)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 target_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_target_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetHeroMMRRankings)
  return target;
}

size_t CMsgClientToGCGetHeroMMRRankings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetHeroMMRRankings)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 target_account_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_target_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetHeroMMRRankings::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetHeroMMRRankings::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetHeroMMRRankings::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetHeroMMRRankings::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetHeroMMRRankings*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetHeroMMRRankings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetHeroMMRRankings)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_target_account_id()) {
    _this->_internal_set_target_account_id(from._internal_target_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetHeroMMRRankings::CopyFrom(const CMsgClientToGCGetHeroMMRRankings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetHeroMMRRankings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetHeroMMRRankings::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetHeroMMRRankings::InternalSwap(CMsgClientToGCGetHeroMMRRankings* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.target_account_id_, other->_impl_.target_account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetHeroMMRRankings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[139]);
}

// ===================================================================

class CMsgClientToGCGetHeroMMRRankingsResponse_Hero::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetHeroMMRRankingsResponse_Hero>()._impl_._has_bits_);
  static void set_has_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_relative_mmr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCGetHeroMMRRankingsResponse_Hero::CMsgClientToGCGetHeroMMRRankingsResponse_Hero(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetHeroMMRRankingsResponse.Hero)
}
CMsgClientToGCGetHeroMMRRankingsResponse_Hero::CMsgClientToGCGetHeroMMRRankingsResponse_Hero(const CMsgClientToGCGetHeroMMRRankingsResponse_Hero& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetHeroMMRRankingsResponse_Hero* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_id_){}
    , decltype(_impl_.relative_mmr_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.hero_id_, &from._impl_.hero_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.relative_mmr_) -
    reinterpret_cast<char*>(&_impl_.hero_id_)) + sizeof(_impl_.relative_mmr_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetHeroMMRRankingsResponse.Hero)
}

inline void CMsgClientToGCGetHeroMMRRankingsResponse_Hero::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hero_id_){0u}
    , decltype(_impl_.relative_mmr_){0}
  };
}

CMsgClientToGCGetHeroMMRRankingsResponse_Hero::~CMsgClientToGCGetHeroMMRRankingsResponse_Hero() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetHeroMMRRankingsResponse.Hero)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetHeroMMRRankingsResponse_Hero::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetHeroMMRRankingsResponse_Hero::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetHeroMMRRankingsResponse_Hero::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetHeroMMRRankingsResponse.Hero)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.hero_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.relative_mmr_) -
        reinterpret_cast<char*>(&_impl_.hero_id_)) + sizeof(_impl_.relative_mmr_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetHeroMMRRankingsResponse_Hero::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 hero_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_hero_id(&has_bits);
          _impl_.hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 relative_mmr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_relative_mmr(&has_bits);
          _impl_.relative_mmr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetHeroMMRRankingsResponse_Hero::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetHeroMMRRankingsResponse.Hero)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 hero_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hero_id(), target);
  }

  // optional int32 relative_mmr = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_relative_mmr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetHeroMMRRankingsResponse.Hero)
  return target;
}

size_t CMsgClientToGCGetHeroMMRRankingsResponse_Hero::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetHeroMMRRankingsResponse.Hero)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 hero_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_id());
    }

    // optional int32 relative_mmr = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_relative_mmr());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetHeroMMRRankingsResponse_Hero::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetHeroMMRRankingsResponse_Hero::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetHeroMMRRankingsResponse_Hero::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetHeroMMRRankingsResponse_Hero::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetHeroMMRRankingsResponse_Hero*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetHeroMMRRankingsResponse_Hero&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetHeroMMRRankingsResponse.Hero)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.hero_id_ = from._impl_.hero_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.relative_mmr_ = from._impl_.relative_mmr_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetHeroMMRRankingsResponse_Hero::CopyFrom(const CMsgClientToGCGetHeroMMRRankingsResponse_Hero& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetHeroMMRRankingsResponse.Hero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetHeroMMRRankingsResponse_Hero::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetHeroMMRRankingsResponse_Hero::InternalSwap(CMsgClientToGCGetHeroMMRRankingsResponse_Hero* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetHeroMMRRankingsResponse_Hero, _impl_.relative_mmr_)
      + sizeof(CMsgClientToGCGetHeroMMRRankingsResponse_Hero::_impl_.relative_mmr_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetHeroMMRRankingsResponse_Hero, _impl_.hero_id_)>(
          reinterpret_cast<char*>(&_impl_.hero_id_),
          reinterpret_cast<char*>(&other->_impl_.hero_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetHeroMMRRankingsResponse_Hero::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[140]);
}

// ===================================================================

class CMsgClientToGCGetHeroMMRRankingsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetHeroMMRRankingsResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetHeroMMRRankingsResponse::CMsgClientToGCGetHeroMMRRankingsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetHeroMMRRankingsResponse)
}
CMsgClientToGCGetHeroMMRRankingsResponse::CMsgClientToGCGetHeroMMRRankingsResponse(const CMsgClientToGCGetHeroMMRRankingsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetHeroMMRRankingsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.heroes_){from._impl_.heroes_}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetHeroMMRRankingsResponse)
}

inline void CMsgClientToGCGetHeroMMRRankingsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.heroes_){arena}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCGetHeroMMRRankingsResponse::~CMsgClientToGCGetHeroMMRRankingsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetHeroMMRRankingsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetHeroMMRRankingsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.heroes_.~RepeatedPtrField();
}

void CMsgClientToGCGetHeroMMRRankingsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetHeroMMRRankingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetHeroMMRRankingsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.heroes_.Clear();
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetHeroMMRRankingsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetHeroMMRRankingsResponse.EResult result = 1 [default = k_eSuccess];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetHeroMMRRankingsResponse_EResult_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCGetHeroMMRRankingsResponse_EResult>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgClientToGCGetHeroMMRRankingsResponse.Hero heroes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_heroes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetHeroMMRRankingsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetHeroMMRRankingsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetHeroMMRRankingsResponse.EResult result = 1 [default = k_eSuccess];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // repeated .CMsgClientToGCGetHeroMMRRankingsResponse.Hero heroes = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_heroes_size()); i < n; i++) {
    const auto& repfield = this->_internal_heroes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetHeroMMRRankingsResponse)
  return target;
}

size_t CMsgClientToGCGetHeroMMRRankingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetHeroMMRRankingsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientToGCGetHeroMMRRankingsResponse.Hero heroes = 2;
  total_size += 1UL * this->_internal_heroes_size();
  for (const auto& msg : this->_impl_.heroes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .CMsgClientToGCGetHeroMMRRankingsResponse.EResult result = 1 [default = k_eSuccess];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetHeroMMRRankingsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetHeroMMRRankingsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetHeroMMRRankingsResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetHeroMMRRankingsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetHeroMMRRankingsResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetHeroMMRRankingsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetHeroMMRRankingsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.heroes_.MergeFrom(from._impl_.heroes_);
  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetHeroMMRRankingsResponse::CopyFrom(const CMsgClientToGCGetHeroMMRRankingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetHeroMMRRankingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetHeroMMRRankingsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetHeroMMRRankingsResponse::InternalSwap(CMsgClientToGCGetHeroMMRRankingsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.heroes_.InternalSwap(&other->_impl_.heroes_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetHeroMMRRankingsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[141]);
}

// ===================================================================

class CMsgClientToGCGetLeaderboard::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetLeaderboard>()._impl_._has_bits_);
  static void set_has_leaderboard_region(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCGetLeaderboard::CMsgClientToGCGetLeaderboard(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetLeaderboard)
}
CMsgClientToGCGetLeaderboard::CMsgClientToGCGetLeaderboard(const CMsgClientToGCGetLeaderboard& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetLeaderboard* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.leaderboard_region_){}
    , decltype(_impl_.hero_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.leaderboard_region_, &from._impl_.leaderboard_region_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.hero_id_) -
    reinterpret_cast<char*>(&_impl_.leaderboard_region_)) + sizeof(_impl_.hero_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetLeaderboard)
}

inline void CMsgClientToGCGetLeaderboard::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.leaderboard_region_){0}
    , decltype(_impl_.hero_id_){0u}
  };
}

CMsgClientToGCGetLeaderboard::~CMsgClientToGCGetLeaderboard() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetLeaderboard)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetLeaderboard::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetLeaderboard::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetLeaderboard::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetLeaderboard)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.leaderboard_region_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.hero_id_) -
        reinterpret_cast<char*>(&_impl_.leaderboard_region_)) + sizeof(_impl_.hero_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetLeaderboard::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ECitadelLeaderboardRegion leaderboard_region = 1 [default = k_ECitadelLeaderboardRegion_None];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelLeaderboardRegion_IsValid(val))) {
            _internal_set_leaderboard_region(static_cast<::ECitadelLeaderboardRegion>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_hero_id(&has_bits);
          _impl_.hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetLeaderboard::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetLeaderboard)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ECitadelLeaderboardRegion leaderboard_region = 1 [default = k_ECitadelLeaderboardRegion_None];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_leaderboard_region(), target);
  }

  // optional uint32 hero_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_hero_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetLeaderboard)
  return target;
}

size_t CMsgClientToGCGetLeaderboard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetLeaderboard)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ECitadelLeaderboardRegion leaderboard_region = 1 [default = k_ECitadelLeaderboardRegion_None];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_leaderboard_region());
    }

    // optional uint32 hero_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetLeaderboard::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetLeaderboard::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetLeaderboard::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetLeaderboard::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetLeaderboard*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetLeaderboard&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetLeaderboard)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.leaderboard_region_ = from._impl_.leaderboard_region_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.hero_id_ = from._impl_.hero_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetLeaderboard::CopyFrom(const CMsgClientToGCGetLeaderboard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetLeaderboard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetLeaderboard::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetLeaderboard::InternalSwap(CMsgClientToGCGetLeaderboard* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetLeaderboard, _impl_.hero_id_)
      + sizeof(CMsgClientToGCGetLeaderboard::_impl_.hero_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetLeaderboard, _impl_.leaderboard_region_)>(
          reinterpret_cast<char*>(&_impl_.leaderboard_region_),
          reinterpret_cast<char*>(&other->_impl_.leaderboard_region_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetLeaderboard::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[142]);
}

// ===================================================================

class CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry>()._impl_._has_bits_);
  static void set_has_account_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_rank(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_badge_level(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry)
}
CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry(const CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.top_hero_ids_){from._impl_.top_hero_ids_}
    , decltype(_impl_.account_name_){}
    , decltype(_impl_.rank_){}
    , decltype(_impl_.badge_level_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.account_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.account_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_account_name()) {
    _this->_impl_.account_name_.Set(from._internal_account_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.rank_, &from._impl_.rank_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.badge_level_) -
    reinterpret_cast<char*>(&_impl_.rank_)) + sizeof(_impl_.badge_level_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry)
}

inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.top_hero_ids_){arena}
    , decltype(_impl_.account_name_){}
    , decltype(_impl_.rank_){0u}
    , decltype(_impl_.badge_level_){0u}
  };
  _impl_.account_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.account_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::~CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.top_hero_ids_.~RepeatedField();
  _impl_.account_name_.Destroy();
}

void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.top_hero_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.account_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.rank_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.badge_level_) -
        reinterpret_cast<char*>(&_impl_.rank_)) + sizeof(_impl_.badge_level_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string account_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_account_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.account_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint32 rank = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_rank(&has_bits);
          _impl_.rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 top_hero_ids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_top_hero_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<uint8_t>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_top_hero_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 badge_level = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_badge_level(&has_bits);
          _impl_.badge_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string account_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_account_name().data(), static_cast<int>(this->_internal_account_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry.account_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_account_name(), target);
  }

  // optional uint32 rank = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_rank(), target);
  }

  // repeated uint32 top_hero_ids = 3;
  for (int i = 0, n = this->_internal_top_hero_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_top_hero_ids(i), target);
  }

  // optional uint32 badge_level = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_badge_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry)
  return target;
}

size_t CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 top_hero_ids = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.top_hero_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_top_hero_ids_size());
    total_size += data_size;
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string account_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_account_name());
    }

    // optional uint32 rank = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_rank());
    }

    // optional uint32 badge_level = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_badge_level());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.top_hero_ids_.MergeFrom(from._impl_.top_hero_ids_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_account_name(from._internal_account_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.rank_ = from._impl_.rank_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.badge_level_ = from._impl_.badge_level_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::CopyFrom(const CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::InternalSwap(CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.top_hero_ids_.InternalSwap(&other->_impl_.top_hero_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.account_name_, lhs_arena,
      &other->_impl_.account_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry, _impl_.badge_level_)
      + sizeof(CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::_impl_.badge_level_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry, _impl_.rank_)>(
          reinterpret_cast<char*>(&_impl_.rank_),
          reinterpret_cast<char*>(&other->_impl_.rank_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[143]);
}

// ===================================================================

class CMsgClientToGCGetLeaderboardResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetLeaderboardResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetLeaderboardResponse::CMsgClientToGCGetLeaderboardResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetLeaderboardResponse)
}
CMsgClientToGCGetLeaderboardResponse::CMsgClientToGCGetLeaderboardResponse(const CMsgClientToGCGetLeaderboardResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetLeaderboardResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entries_){from._impl_.entries_}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetLeaderboardResponse)
}

inline void CMsgClientToGCGetLeaderboardResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entries_){arena}
    , decltype(_impl_.result_){0}
  };
}

CMsgClientToGCGetLeaderboardResponse::~CMsgClientToGCGetLeaderboardResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetLeaderboardResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetLeaderboardResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.entries_.~RepeatedPtrField();
}

void CMsgClientToGCGetLeaderboardResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetLeaderboardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetLeaderboardResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetLeaderboardResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetLeaderboardResponse.EResult result = 1 [default = k_eSuccess];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetLeaderboardResponse_EResult_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCGetLeaderboardResponse_EResult>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry entries = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetLeaderboardResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetLeaderboardResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetLeaderboardResponse.EResult result = 1 [default = k_eSuccess];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // repeated .CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry entries = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entries_size()); i < n; i++) {
    const auto& repfield = this->_internal_entries(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetLeaderboardResponse)
  return target;
}

size_t CMsgClientToGCGetLeaderboardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetLeaderboardResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientToGCGetLeaderboardResponse.LeaderboardEntry entries = 2;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->_impl_.entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .CMsgClientToGCGetLeaderboardResponse.EResult result = 1 [default = k_eSuccess];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetLeaderboardResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetLeaderboardResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetLeaderboardResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetLeaderboardResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetLeaderboardResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetLeaderboardResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetLeaderboardResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.entries_.MergeFrom(from._impl_.entries_);
  if (from._internal_has_result()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetLeaderboardResponse::CopyFrom(const CMsgClientToGCGetLeaderboardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetLeaderboardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetLeaderboardResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetLeaderboardResponse::InternalSwap(CMsgClientToGCGetLeaderboardResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetLeaderboardResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[144]);
}

// ===================================================================

class CMsgClientToGCGetAccountLeaderboards::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAccountLeaderboards>()._impl_._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetAccountLeaderboards::CMsgClientToGCGetAccountLeaderboards(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAccountLeaderboards)
}
CMsgClientToGCGetAccountLeaderboards::CMsgClientToGCGetAccountLeaderboards(const CMsgClientToGCGetAccountLeaderboards& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetAccountLeaderboards* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.account_id_ = from._impl_.account_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAccountLeaderboards)
}

inline void CMsgClientToGCGetAccountLeaderboards::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.account_id_){0u}
  };
}

CMsgClientToGCGetAccountLeaderboards::~CMsgClientToGCGetAccountLeaderboards() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAccountLeaderboards)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetAccountLeaderboards::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetAccountLeaderboards::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetAccountLeaderboards::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAccountLeaderboards)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAccountLeaderboards::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          _impl_.account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetAccountLeaderboards::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAccountLeaderboards)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAccountLeaderboards)
  return target;
}

size_t CMsgClientToGCGetAccountLeaderboards::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAccountLeaderboards)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 account_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetAccountLeaderboards::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetAccountLeaderboards::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetAccountLeaderboards::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetAccountLeaderboards::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetAccountLeaderboards*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetAccountLeaderboards&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAccountLeaderboards)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_account_id()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetAccountLeaderboards::CopyFrom(const CMsgClientToGCGetAccountLeaderboards& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAccountLeaderboards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAccountLeaderboards::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAccountLeaderboards::InternalSwap(CMsgClientToGCGetAccountLeaderboards* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.account_id_, other->_impl_.account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAccountLeaderboards::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[145]);
}

// ===================================================================

class CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry>()._impl_._has_bits_);
  static void set_has_region(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_rank(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry)
}
CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry(const CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.region_){}
    , decltype(_impl_.hero_id_){}
    , decltype(_impl_.rank_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.region_, &from._impl_.region_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.rank_) -
    reinterpret_cast<char*>(&_impl_.region_)) + sizeof(_impl_.rank_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry)
}

inline void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.region_){0}
    , decltype(_impl_.hero_id_){0u}
    , decltype(_impl_.rank_){0u}
  };
}

CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::~CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.region_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.rank_) -
        reinterpret_cast<char*>(&_impl_.region_)) + sizeof(_impl_.rank_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ECitadelLeaderboardRegion region = 1 [default = k_ECitadelLeaderboardRegion_None];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECitadelLeaderboardRegion_IsValid(val))) {
            _internal_set_region(static_cast<::ECitadelLeaderboardRegion>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 hero_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_hero_id(&has_bits);
          _impl_.hero_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 rank = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_rank(&has_bits);
          _impl_.rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ECitadelLeaderboardRegion region = 1 [default = k_ECitadelLeaderboardRegion_None];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_region(), target);
  }

  // optional uint32 hero_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_hero_id(), target);
  }

  // optional uint32 rank = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_rank(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry)
  return target;
}

size_t CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .ECitadelLeaderboardRegion region = 1 [default = k_ECitadelLeaderboardRegion_None];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_region());
    }

    // optional uint32 hero_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hero_id());
    }

    // optional uint32 rank = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_rank());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.region_ = from._impl_.region_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.hero_id_ = from._impl_.hero_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.rank_ = from._impl_.rank_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::CopyFrom(const CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::InternalSwap(CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry, _impl_.rank_)
      + sizeof(CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::_impl_.rank_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry, _impl_.region_)>(
          reinterpret_cast<char*>(&_impl_.region_),
          reinterpret_cast<char*>(&other->_impl_.region_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[146]);
}

// ===================================================================

class CMsgClientToGCGetAccountLeaderboardsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAccountLeaderboardsResponse>()._impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_account_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetAccountLeaderboardsResponse::CMsgClientToGCGetAccountLeaderboardsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAccountLeaderboardsResponse)
}
CMsgClientToGCGetAccountLeaderboardsResponse::CMsgClientToGCGetAccountLeaderboardsResponse(const CMsgClientToGCGetAccountLeaderboardsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCGetAccountLeaderboardsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entries_){from._impl_.entries_}
    , decltype(_impl_.account_name_){}
    , decltype(_impl_.result_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.account_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.account_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_account_name()) {
    _this->_impl_.account_name_.Set(from._internal_account_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAccountLeaderboardsResponse)
}

inline void CMsgClientToGCGetAccountLeaderboardsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entries_){arena}
    , decltype(_impl_.account_name_){}
    , decltype(_impl_.result_){0}
  };
  _impl_.account_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.account_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CMsgClientToGCGetAccountLeaderboardsResponse::~CMsgClientToGCGetAccountLeaderboardsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAccountLeaderboardsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCGetAccountLeaderboardsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.entries_.~RepeatedPtrField();
  _impl_.account_name_.Destroy();
}

void CMsgClientToGCGetAccountLeaderboardsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCGetAccountLeaderboardsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAccountLeaderboardsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.account_name_.ClearNonDefaultToEmpty();
  }
  _impl_.result_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAccountLeaderboardsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetAccountLeaderboardsResponse.EResult result = 1 [default = k_eSuccess];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetAccountLeaderboardsResponse_EResult_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCGetAccountLeaderboardsResponse_EResult>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string account_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_account_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "CMsgClientToGCGetAccountLeaderboardsResponse.account_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // repeated .CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry entries = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCGetAccountLeaderboardsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAccountLeaderboardsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgClientToGCGetAccountLeaderboardsResponse.EResult result = 1 [default = k_eSuccess];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional string account_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_account_name().data(), static_cast<int>(this->_internal_account_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCGetAccountLeaderboardsResponse.account_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_account_name(), target);
  }

  // repeated .CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry entries = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entries_size()); i < n; i++) {
    const auto& repfield = this->_internal_entries(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAccountLeaderboardsResponse)
  return target;
}

size_t CMsgClientToGCGetAccountLeaderboardsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAccountLeaderboardsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientToGCGetAccountLeaderboardsResponse.LeaderboardEntry entries = 3;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->_impl_.entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string account_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_account_name());
    }

    // optional .CMsgClientToGCGetAccountLeaderboardsResponse.EResult result = 1 [default = k_eSuccess];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCGetAccountLeaderboardsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCGetAccountLeaderboardsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCGetAccountLeaderboardsResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCGetAccountLeaderboardsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCGetAccountLeaderboardsResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCGetAccountLeaderboardsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAccountLeaderboardsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.entries_.MergeFrom(from._impl_.entries_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_account_name(from._internal_account_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCGetAccountLeaderboardsResponse::CopyFrom(const CMsgClientToGCGetAccountLeaderboardsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAccountLeaderboardsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAccountLeaderboardsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAccountLeaderboardsResponse::InternalSwap(CMsgClientToGCGetAccountLeaderboardsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.account_name_, lhs_arena,
      &other->_impl_.account_name_, rhs_arena
  );
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAccountLeaderboardsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[147]);
}

// ===================================================================

class CMsgClientToGCSetHideHolidayModels::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetHideHolidayModels>()._impl_._has_bits_);
  static void set_has_hide_holiday_models(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSetHideHolidayModels::CMsgClientToGCSetHideHolidayModels(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetHideHolidayModels)
}
CMsgClientToGCSetHideHolidayModels::CMsgClientToGCSetHideHolidayModels(const CMsgClientToGCSetHideHolidayModels& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSetHideHolidayModels* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hide_holiday_models_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.hide_holiday_models_ = from._impl_.hide_holiday_models_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetHideHolidayModels)
}

inline void CMsgClientToGCSetHideHolidayModels::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.hide_holiday_models_){false}
  };
}

CMsgClientToGCSetHideHolidayModels::~CMsgClientToGCSetHideHolidayModels() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetHideHolidayModels)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSetHideHolidayModels::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCSetHideHolidayModels::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSetHideHolidayModels::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetHideHolidayModels)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hide_holiday_models_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetHideHolidayModels::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool hide_holiday_models = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_hide_holiday_models(&has_bits);
          _impl_.hide_holiday_models_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSetHideHolidayModels::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetHideHolidayModels)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool hide_holiday_models = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_hide_holiday_models(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetHideHolidayModels)
  return target;
}

size_t CMsgClientToGCSetHideHolidayModels::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetHideHolidayModels)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool hide_holiday_models = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSetHideHolidayModels::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSetHideHolidayModels::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSetHideHolidayModels::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSetHideHolidayModels::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSetHideHolidayModels*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSetHideHolidayModels&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetHideHolidayModels)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_hide_holiday_models()) {
    _this->_internal_set_hide_holiday_models(from._internal_hide_holiday_models());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSetHideHolidayModels::CopyFrom(const CMsgClientToGCSetHideHolidayModels& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetHideHolidayModels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetHideHolidayModels::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetHideHolidayModels::InternalSwap(CMsgClientToGCSetHideHolidayModels* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.hide_holiday_models_, other->_impl_.hide_holiday_models_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetHideHolidayModels::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[148]);
}

// ===================================================================

class CMsgClientToGCSetHideHolidayModelsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetHideHolidayModelsResponse>()._impl_._has_bits_);
  static void set_has_success(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSetHideHolidayModelsResponse::CMsgClientToGCSetHideHolidayModelsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetHideHolidayModelsResponse)
}
CMsgClientToGCSetHideHolidayModelsResponse::CMsgClientToGCSetHideHolidayModelsResponse(const CMsgClientToGCSetHideHolidayModelsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CMsgClientToGCSetHideHolidayModelsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.success_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetHideHolidayModelsResponse)
}

inline void CMsgClientToGCSetHideHolidayModelsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.success_){false}
  };
}

CMsgClientToGCSetHideHolidayModelsResponse::~CMsgClientToGCSetHideHolidayModelsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetHideHolidayModelsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CMsgClientToGCSetHideHolidayModelsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CMsgClientToGCSetHideHolidayModelsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CMsgClientToGCSetHideHolidayModelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetHideHolidayModelsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetHideHolidayModelsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_success(&has_bits);
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CMsgClientToGCSetHideHolidayModelsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetHideHolidayModelsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetHideHolidayModelsResponse)
  return target;
}

size_t CMsgClientToGCSetHideHolidayModelsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetHideHolidayModelsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool success = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CMsgClientToGCSetHideHolidayModelsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CMsgClientToGCSetHideHolidayModelsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CMsgClientToGCSetHideHolidayModelsResponse::GetClassData() const { return &_class_data_; }


void CMsgClientToGCSetHideHolidayModelsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CMsgClientToGCSetHideHolidayModelsResponse*>(&to_msg);
  auto& from = static_cast<const CMsgClientToGCSetHideHolidayModelsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetHideHolidayModelsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_success()) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgClientToGCSetHideHolidayModelsResponse::CopyFrom(const CMsgClientToGCSetHideHolidayModelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetHideHolidayModelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetHideHolidayModelsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetHideHolidayModelsResponse::InternalSwap(CMsgClientToGCSetHideHolidayModelsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetHideHolidayModelsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_getter, &descriptor_table_citadel_5fgcmessages_5fclient_2eproto_once,
      file_level_metadata_citadel_5fgcmessages_5fclient_2eproto[149]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CSOGameAccountClient*
Arena::CreateMaybeMessage< ::CSOGameAccountClient >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CSOGameAccountClient >(arena);
}
template<> PROTOBUF_NOINLINE ::CSOAccountSyncStorage*
Arena::CreateMaybeMessage< ::CSOAccountSyncStorage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CSOAccountSyncStorage >(arena);
}
template<> PROTOBUF_NOINLINE ::CSOAccountHeroInfo*
Arena::CreateMaybeMessage< ::CSOAccountHeroInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CSOAccountHeroInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgCitadelClientHello*
Arena::CreateMaybeMessage< ::CMsgCitadelClientHello >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgCitadelClientHello >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCStartMatchmaking*
Arena::CreateMaybeMessage< ::CMsgClientToGCStartMatchmaking >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCStartMatchmaking >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCStartMatchmakingResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCStartMatchmakingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCStartMatchmakingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCStopMatchmaking*
Arena::CreateMaybeMessage< ::CMsgClientToGCStopMatchmaking >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCStopMatchmaking >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCStopMatchmakingResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCStopMatchmakingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCStopMatchmakingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientMatchmakingStopped*
Arena::CreateMaybeMessage< ::CMsgGCToClientMatchmakingStopped >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientMatchmakingStopped >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCLeaveLobby*
Arena::CreateMaybeMessage< ::CMsgClientToGCLeaveLobby >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCLeaveLobby >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCLeaveLobbyResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCLeaveLobbyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCLeaveLobbyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientWelcomeCitadel*
Arena::CreateMaybeMessage< ::CMsgClientWelcomeCitadel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientWelcomeCitadel >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCIsInMatchmaking*
Arena::CreateMaybeMessage< ::CMsgClientToGCIsInMatchmaking >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCIsInMatchmaking >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCIsInMatchmakingResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCIsInMatchmakingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCIsInMatchmakingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgDevMatchInfo_MatchPlayer*
Arena::CreateMaybeMessage< ::CMsgDevMatchInfo_MatchPlayer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgDevMatchInfo_MatchPlayer >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgDevMatchInfo*
Arena::CreateMaybeMessage< ::CMsgDevMatchInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgDevMatchInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientHeroLabsSchedule_TimeRange*
Arena::CreateMaybeMessage< ::CMsgGCToClientHeroLabsSchedule_TimeRange >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientHeroLabsSchedule_TimeRange >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientHeroLabsSchedule_Schedule*
Arena::CreateMaybeMessage< ::CMsgGCToClientHeroLabsSchedule_Schedule >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientHeroLabsSchedule_Schedule >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientHeroLabsSchedule*
Arena::CreateMaybeMessage< ::CMsgGCToClientHeroLabsSchedule >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientHeroLabsSchedule >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist*
Arena::CreateMaybeMessage< ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientDevPlaytestStatus_HeroWhitelist >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientDevPlaytestStatus_DevQueueSize*
Arena::CreateMaybeMessage< ::CMsgGCToClientDevPlaytestStatus_DevQueueSize >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientDevPlaytestStatus_DevQueueSize >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientDevPlaytestStatus*
Arena::CreateMaybeMessage< ::CMsgGCToClientDevPlaytestStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientDevPlaytestStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientSDRTicket*
Arena::CreateMaybeMessage< ::CMsgGCToClientSDRTicket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientSDRTicket >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCReplacementSDRTicket*
Arena::CreateMaybeMessage< ::CMsgClientToGCReplacementSDRTicket >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCReplacementSDRTicket >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCReplacementSDRTicketResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCReplacementSDRTicketResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCReplacementSDRTicketResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetServerConVar*
Arena::CreateMaybeMessage< ::CMsgClientToGCSetServerConVar >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetServerConVar >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetServerConVarResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCSetServerConVarResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetServerConVarResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey*
Arena::CreateMaybeMessage< ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPostMatchSurveyResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCPostMatchSurveyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPostMatchSurveyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgPartyMMInfo*
Arena::CreateMaybeMessage< ::CMsgPartyMMInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgPartyMMInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartyCreate*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartyCreate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartyCreate >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartyCreateResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartyCreateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartyCreateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartyLeave*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartyLeave >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartyLeave >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartyLeaveResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartyLeaveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartyLeaveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartyJoin*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartyJoin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartyJoin >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartyJoinResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartyJoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartyJoinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartyAction*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartyAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartyAction >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartyActionResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartyActionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartyActionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartySetMode*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartySetMode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartySetMode >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartySetModeResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartySetModeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartySetModeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartyStartMatch*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartyStartMatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartyStartMatch >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartyStartMatchResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartyStartMatchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartyStartMatchResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartyInviteUser*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartyInviteUser >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartyInviteUser >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartyInviteUserResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartyInviteUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartyInviteUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientPartyEvent*
Arena::CreateMaybeMessage< ::CMsgGCToClientPartyEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientPartyEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientCanRejoinParty*
Arena::CreateMaybeMessage< ::CMsgGCToClientCanRejoinParty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientCanRejoinParty >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartyJoinViaCode*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartyJoinViaCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartyJoinViaCode >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartyJoinViaCodeResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartyJoinViaCodeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartyJoinViaCodeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartySetReadyState*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartySetReadyState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartySetReadyState >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCPartySetReadyStateResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCPartySetReadyStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCPartySetReadyStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCDevSetMMBias*
Arena::CreateMaybeMessage< ::CMsgClientToGCDevSetMMBias >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCDevSetMMBias >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetMatchHistory*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetMatchHistory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetMatchHistory >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetMatchHistoryResponse_Match*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetMatchHistoryResponse_Match >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetMatchHistoryResponse_Match >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetMatchHistoryResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetMatchHistoryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetMatchHistoryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSpectateUser*
Arena::CreateMaybeMessage< ::CMsgClientToGCSpectateUser >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSpectateUser >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSpectateUserResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCSpectateUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSpectateUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSpectateLobby*
Arena::CreateMaybeMessage< ::CMsgClientToGCSpectateLobby >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSpectateLobby >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSpectateLobbyResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCSpectateLobbyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSpectateLobbyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetProfileCard*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetProfileCard >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetProfileCard >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgCitadelProfileCard_Slot_Stat*
Arena::CreateMaybeMessage< ::CMsgCitadelProfileCard_Slot_Stat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgCitadelProfileCard_Slot_Stat >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgCitadelProfileCard_Slot_Hero*
Arena::CreateMaybeMessage< ::CMsgCitadelProfileCard_Slot_Hero >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgCitadelProfileCard_Slot_Hero >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgCitadelProfileCard_Slot*
Arena::CreateMaybeMessage< ::CMsgCitadelProfileCard_Slot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgCitadelProfileCard_Slot >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgCitadelProfileCard*
Arena::CreateMaybeMessage< ::CMsgCitadelProfileCard >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgCitadelProfileCard >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCUpdateRoster*
Arena::CreateMaybeMessage< ::CMsgClientToGCUpdateRoster >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCUpdateRoster >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCUpdateRosterResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCUpdateRosterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCUpdateRosterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAccountStats*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetAccountStats >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAccountStats >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAccountStatsResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetAccountStatsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAccountStatsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetMatchMetaData*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetMatchMetaData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetMatchMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetMatchMetaDataResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetMatchMetaDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetMatchMetaDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientDevAnnouncements_Announcement*
Arena::CreateMaybeMessage< ::CMsgGCToClientDevAnnouncements_Announcement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientDevAnnouncements_Announcement >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientDevAnnouncements*
Arena::CreateMaybeMessage< ::CMsgGCToClientDevAnnouncements >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientDevAnnouncements >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCModifyDevAnnouncements*
Arena::CreateMaybeMessage< ::CMsgClientToGCModifyDevAnnouncements >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCModifyDevAnnouncements >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCModifyDevAnnouncementsResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCModifyDevAnnouncementsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCModifyDevAnnouncementsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCDevAction*
Arena::CreateMaybeMessage< ::CMsgClientToGCDevAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCDevAction >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCDevActionResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCDevActionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCDevActionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRecordClientEvents_Event*
Arena::CreateMaybeMessage< ::CMsgClientToGCRecordClientEvents_Event >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRecordClientEvents_Event >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRecordClientEvents*
Arena::CreateMaybeMessage< ::CMsgClientToGCRecordClientEvents >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRecordClientEvents >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRecordClientEventsResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCRecordClientEventsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRecordClientEventsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetNewPlayerProgress*
Arena::CreateMaybeMessage< ::CMsgClientToGCSetNewPlayerProgress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetNewPlayerProgress >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetNewPlayerProgressResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCSetNewPlayerProgressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetNewPlayerProgressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCUpdateAccountSync*
Arena::CreateMaybeMessage< ::CMsgClientToGCUpdateAccountSync >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCUpdateAccountSync >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCUpdateAccountSyncResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCUpdateAccountSyncResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCUpdateAccountSyncResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetHeroChoice*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetHeroChoice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetHeroChoice >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetHeroChoiceResponse_Hero*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetHeroChoiceResponse_Hero >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetHeroChoiceResponse_Hero >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetHeroChoiceResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetHeroChoiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetHeroChoiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCUnlockHero*
Arena::CreateMaybeMessage< ::CMsgClientToGCUnlockHero >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCUnlockHero >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCUnlockHeroResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCUnlockHeroResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCUnlockHeroResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgAccountBook_Unlock*
Arena::CreateMaybeMessage< ::CMsgAccountBook_Unlock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgAccountBook_Unlock >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgAccountBook*
Arena::CreateMaybeMessage< ::CMsgAccountBook >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgAccountBook >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCBookUnlock*
Arena::CreateMaybeMessage< ::CMsgClientToGCBookUnlock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCBookUnlock >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCBookUnlockResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCBookUnlockResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCBookUnlockResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetBook*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetBook >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetBook >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetBookResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetBookResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetBookResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientBookUpdated*
Arena::CreateMaybeMessage< ::CMsgGCToClientBookUpdated >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientBookUpdated >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSubmitPlaytestUser*
Arena::CreateMaybeMessage< ::CMsgClientToGCSubmitPlaytestUser >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSubmitPlaytestUser >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSubmitPlaytestUserResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCSubmitPlaytestUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSubmitPlaytestUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgHeroBuild_BuildModEntry*
Arena::CreateMaybeMessage< ::CMsgHeroBuild_BuildModEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgHeroBuild_BuildModEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgHeroBuild_BuildModCategory*
Arena::CreateMaybeMessage< ::CMsgHeroBuild_BuildModCategory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgHeroBuild_BuildModCategory >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgHeroBuild_CurrencyChange*
Arena::CreateMaybeMessage< ::CMsgHeroBuild_CurrencyChange >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgHeroBuild_CurrencyChange >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgHeroBuild_AbilityOrder*
Arena::CreateMaybeMessage< ::CMsgHeroBuild_AbilityOrder >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgHeroBuild_AbilityOrder >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgHeroBuild_Details_V0*
Arena::CreateMaybeMessage< ::CMsgHeroBuild_Details_V0 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgHeroBuild_Details_V0 >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgHeroBuild*
Arena::CreateMaybeMessage< ::CMsgHeroBuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgHeroBuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCUpdateHeroBuild*
Arena::CreateMaybeMessage< ::CMsgClientToGCUpdateHeroBuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCUpdateHeroBuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCUpdateHeroBuildResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCUpdateHeroBuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCUpdateHeroBuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCFindHeroBuilds*
Arena::CreateMaybeMessage< ::CMsgClientToGCFindHeroBuilds >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCFindHeroBuilds >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgHeroBuildPreference*
Arena::CreateMaybeMessage< ::CMsgHeroBuildPreference >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgHeroBuildPreference >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult*
Arena::CreateMaybeMessage< ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCFindHeroBuildsResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCFindHeroBuildsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCFindHeroBuildsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCUpdateHeroBuildPreference*
Arena::CreateMaybeMessage< ::CMsgClientToGCUpdateHeroBuildPreference >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCUpdateHeroBuildPreference >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCUpdateHeroBuildPreferenceResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCUpdateHeroBuildPreferenceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCUpdateHeroBuildPreferenceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetOldHeroBuildData*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetOldHeroBuildData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetOldHeroBuildData >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0 >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetOldHeroBuildDataResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetOldHeroBuildDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetOldHeroBuildDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCReportPlayerFromMatch*
Arena::CreateMaybeMessage< ::CMsgClientToGCReportPlayerFromMatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCReportPlayerFromMatch >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCReportPlayerFromMatchResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCReportPlayerFromMatchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCReportPlayerFromMatchResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAccountMatchReports*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetAccountMatchReports >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAccountMatchReports >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAccountMatchReportsResponse_Report*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetAccountMatchReportsResponse_Report >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAccountMatchReportsResponse_Report >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAccountMatchReportsResponse_Commend*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetAccountMatchReportsResponse_Commend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAccountMatchReportsResponse_Commend >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAccountMatchReportsResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetAccountMatchReportsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAccountMatchReportsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCDeleteHeroBuild*
Arena::CreateMaybeMessage< ::CMsgClientToGCDeleteHeroBuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCDeleteHeroBuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCDeleteHeroBuildResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCDeleteHeroBuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCDeleteHeroBuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetActiveMatches*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetActiveMatches >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetActiveMatches >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetActiveMatchesResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetActiveMatchesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetActiveMatchesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetDiscordLink*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetDiscordLink >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetDiscordLink >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetDiscordLinkResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetDiscordLinkResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetDiscordLinkResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGrantForumAccess*
Arena::CreateMaybeMessage< ::CMsgClientToGCGrantForumAccess >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGrantForumAccess >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGrantForumAccessResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGrantForumAccessResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGrantForumAccessResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCModeratorRequest*
Arena::CreateMaybeMessage< ::CMsgClientToGCModeratorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCModeratorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCModeratorRequestResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCModeratorRequestResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCModeratorRequestResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetFriendGameStatus*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetFriendGameStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetFriendGameStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetFriendGameStatusResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetFriendGameStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetFriendGameStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCUpdateSpectatorStatus*
Arena::CreateMaybeMessage< ::CMsgClientToGCUpdateSpectatorStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCUpdateSpectatorStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCCommendPlayerFromMatch*
Arena::CreateMaybeMessage< ::CMsgClientToGCCommendPlayerFromMatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCCommendPlayerFromMatch >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCCommendPlayerFromMatchResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCCommendPlayerFromMatchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCCommendPlayerFromMatchResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientCommendNotification*
Arena::CreateMaybeMessage< ::CMsgGCToClientCommendNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientCommendNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestCheatReports*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestCheatReports >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestCheatReports >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestCheatReportsResponse_RecentCheatReport >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestCheatReportsResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCRequestCheatReportsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestCheatReportsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetHeroMMRRankings*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetHeroMMRRankings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetHeroMMRRankings >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetHeroMMRRankingsResponse_Hero >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetHeroMMRRankingsResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetHeroMMRRankingsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetHeroMMRRankingsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetLeaderboard*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetLeaderboard >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetLeaderboard >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetLeaderboardResponse_LeaderboardEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetLeaderboardResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetLeaderboardResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetLeaderboardResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAccountLeaderboards*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetAccountLeaderboards >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAccountLeaderboards >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAccountLeaderboardsResponse_LeaderboardEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAccountLeaderboardsResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCGetAccountLeaderboardsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAccountLeaderboardsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetHideHolidayModels*
Arena::CreateMaybeMessage< ::CMsgClientToGCSetHideHolidayModels >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetHideHolidayModels >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetHideHolidayModelsResponse*
Arena::CreateMaybeMessage< ::CMsgClientToGCSetHideHolidayModelsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetHideHolidayModelsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
